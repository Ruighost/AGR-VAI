#define SystemAdminUser
#define gText1User
#define gText2User
#define gText3User
#define FGPSUser
#define LaserUser
#define NeonsUser
#define VControleUser
#define CapaceteUser
#define AnimLoopsUser
#define SAMsitesUser
#define CarInfosUser
#define DamageUser
#define CameraUser
#define EventTextUser
#define MissilesUser

#define PASTA_Emp "/Emp/Emp%d.ini"
#define PASTA_DJS "/DJS/%s.ini"
#define PASTA_CONTAS "/Contas/%s.ini"
#define PASTA_VIPS "/Vips/%s.ini"
#define PASTA_VIPTS "/VIPTS/%s.ini"
#define PASTA_VIPMTS "/VIPMTS/%s.ini"
#define PASTA_CASAS "/Casas/casa%d.ini"
#define PASTA_PROPS "/Props/prop%d.ini"
#define PASTA_CONCE "/Conce/carro%d.ini"
#define PASTA_Int "/Interiores/int%d.ini"
#define PASTA_PORTOES "/Portoes/p%d.ini"
#define PASTA_SAMUGAY "/Samugay/smg%d.ini" // SISTEMA DE CHAO
#define BanDir "/Bans/%s.ini"

// =================================================================================
// Configurações de Informação
#define GM_VERSAO

#define Linguagem Português - Brasil
#define MAPA_NOME Brasil BSL RPG

#define SERVER_NOME_1 "[BSL] Brasil Sem Limites [RPG][Ultra-h.com] #7DiasVip"


#define GAMEMOD_NOME "Brasil - BSL RPG"


#if defined FGPSUser
	#define UseTd
#endif

#define _CHANGE_NAME_BEFORE_KICK true

#define TimerFlood 1000
#define AlertFlood 3

// emp
#define MAX_Emp 150
//fim emp

#define MAX_CONNECTIONS_FROM_IP 3

#define MAX_PLAYER_LEVEL 100000
#define MAX_PLAYER_ESTUDO 500
#define MAX_PLAYER_EXP 5
#define MAX_PLAYER_CASH 1000000
#define MAX_PLAYER_CONCE 5
#define MAX_VIP_CONCE 6
#define MAX_DJ_CONCE 6
#define MAX_ADM_CONCE 15
#define MAX_VIPT_CONCE 8
#define MAX_VIPMT_CONCE 10
#define MAX_COMB 60
#define MAX_PLAYER_CX 20
#define TEMPO_EXP 5
#define TEMPO_PRESO 5
#define TEMPO_ESTUDO 5
#define TEMPO_CX 35
#define CX_POR_TEMPO 1
#define EXP_POR_TEMPO 1
#define LEVEL_POR_EXP 3
#define ESTUDO_POR_TEMPO 10

#define CASH_VENDE 15
#define CASH_VENDER 28
#define CASH_VENDERR 25
#define CASH_VENDERH 50
#define CASH_VIPSALARIO 6 //50
#define CASH_DJSALARIO 16 //50
#define CASH_VIPMSALARIO 26 //75
#define TEMPO_CASH 9
#define CASH_POR_TEMPO 3
#define COMPRA_LEVELS 50
#define COMPRA_ESTUDOS 50
#define COMPRA_VIP 3
#define COMPRA_VIP2 5
#define COMPRA_VIP3 7
#define COMPRA_VIP4 10
#define COMPRA_CAIXAA 1
#define COMPRA_CASHIER 1
#define VIPT_CAIXAA 3
#define VIP_CAIXAA 15
#define VIP_CAIXAB 3
#define VIP_CAIXABA 6

#define CHECK_RACER_DISTANCE 500.0
#define CHECK_RACER_SIZE 10.0

#define MAX_INT 20
#define MAX_PROPS 1000
#define MAX_CASAS 1000
#define MAX_PORTOES 1000
#define MAX_SAMUGAY 100 //SISTEMA DE CHAO
#define MAX_CONCES 2000

#define MAX_SENHA 16
#define MIN_SENHA 4

#define MAX_TAG 8
#define MIN_TAG 2

#define MAX_IDLE_TIME 3

#define MAX_LOAD_OBJECTS 150000
#define MAX_LOAD_VEHICLES 500

#define OrderTime 5000

#define SENHA_CONTA_NPC "d8sxs8b"

#include <a_samp>
#include <a_http>
#include <sscanf2> 
#include <streamer> 
#include <SVStream> 
#include <SInclude> 
#include <DOF2>
#include <mSelection>
#include <mapandreas>
#include <foreach>

#if defined SAMsitesUser
#include <SAMsites0.4.1>
#endif

#if defined MissilesUser
	#include <VM> // Missiles Include
#endif

// Nome do servidor
new SVNAMES[1][] =
{
	SERVER_NOME_1
};

#define PlayersFile "PlayersGang.sub"
#define GangsFile "Gangs.sub"

#define MAX_GANGS 256                 //Máxima quantidade de gangs
#define RESERVED_NAME "c_gangs"           //
#define GANG_MEMBERS 17                 //Máxima quantidade de membros em 1 gang
#define GANG_CONVIDADOS 5                   //Máxima quantidade de convidados em 1 gang
#define STRING_MEMBROS 2048

//VOCE POSSUI O TERRITORY WAR?
#define TERRITORY_WAR                     //Tire as '//' se você tem o TerritoryWar

//Defines TERRITORYWAR
#define MAX_TERRIS      200                 //Máxima quantidade de terris
#define RESERVED_NAME2   "c_terris"
#define TWarFile 		"Territorios.sub"

//Defines
#define MIN_MEMBROS_D   3                   //Mínimo de membros da gang para começar a dominar
#define TEMPO_CHECK     120                 //Tempo do check em segundos
#define TERRI_NO_GANG   "0xFFFFFF66"        //
#define PONTOS_DEFESA   200                 //Pontos de defesa padrão
#define TEMPO_GUERRA    90                  //Tempo de guerra
#define TEMPO_GRANA     1800000             //Tempo em milisegundos para dar o lucro dos terris
#define PONTO_POR_KILL  15                  //Pontos ao matar um inimigo na guerra de gangs

new Float:Terris[MAX_TERRIS][4];
new TerrisID[MAX_TERRIS]=-1;
new TerriOk[MAX_TERRIS];

new TerriGuerra[MAX_TERRIS]=0;
new TempoCheck[MAX_TERRIS][MAX_GANGS];

new Text:TxtTerri[MAX_PLAYERS];

new Text:TxtGuerra[MAX_TERRIS];
new Pontos[MAX_TERRIS][2];
new TempoR[MAX_TERRIS];


//GANGS DEFAULT
#define CUSTO_GANG -5000
#define MIN_ATK 1000
#define LEMA_DEFAULT "Gang sem lema... :("
#define GRANA_DEFAULT 0
#define SKIN_DEFAULT 0
#define BANCOL_DEFAULT 4
#define POS_NV5 "Líder"
#define POS_NV4	"Sub-Líder"
#define POS_NV3 "Comandante"
#define POS_NV2 "Membro"
#define POS_NV1 "Recruta"
#define POS_NV0 "Convidado"

// Espiar
#define ADMIN_SPEC_TYPE_NONE 0
#define ADMIN_SPEC_TYPE_PLAYER 1
#define ADMIN_SPEC_TYPE_VEHICLE 2

// Loop
#define Loop(%0,%1) for(new %0 = 0; %0 < %1; %0++)

#define nitro 1010
#define rodawire 1080
#define suspensao 1087

// Outros
#define player_x 1472.7699
#define player_y -1626.6316
#define player_z 14.0469
#define player_angle 27.3939
#define camera_x 1473.01
#define camera_y -1621.39
#define camera_z 15.60
#define lookat_x 1471.11
#define lookat_y -1625.93
#define lookat_z 14.72
#define moving_speed 100
#define dcmd(%1,%2,%3) if (!strcmp((%3)[1], #%1, true, (%2)) && ((((%3)[(%2) + 1] == '\0') && (dcmd_%1(playerid, ""))) || (((%3)[(%2) + 1] == ' ') && (dcmd_%1(playerid, (%3)[(%2) + 2]))))) return 1

/*cores*/
#define amarelo 0xFFFF00AA
#define verde 0x33FF33AA
#define vermelho 0xFF0000AA
#define vermelhoescuro 0xAA3333AA
#define branco 0xFFFFFFAA
#define rosa 0xCCFF00FFAA
#define azul 0x057ABDAA
#define cinza 0xC0C0C0AA
#define yellow 0xFFFF00AA
#define laranja 0xFFA500AA
// Cores
#define tcadm 0x33AAFFFF
#define Aviso 0xFF2F2FAA
#define cor33 0xBBBB00AA
#define cmdadm 0xBBDDFFAA
#define Blue 0x33AAFFFF
#define verdel 0x9ACD32AA
#define VERDE 0x33AA33AA
#define BRANCO 0xFFFFFFAA
#define AMARELO 0xFFFF00AA
#define LARANJA 0xFF6600AA
#define VERMELHO 0xFF0000AA
#define VERDECLARO 0x00FF0CAA
#define VERDEMEDIO 0xa5b1A3AA
#define VERDEFRACO 0x80cf80AA
#define RED 0xff0000ff
#define GRAY 0xC0C0C0AA
#define GREEN 0x16EB43FF
#define WHITE 0xFFFFFFAA
#define BLUEWHITE 0x99FFFFAA
#define msg2 0x93C9FFAA
#define msgdm 0x8AD9FFAA
#define msgdm2 0xFFFFB3AA
#define msgdm3 0xFFD1A4AA
#define COLOR_RED 0xFF0000AA
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x33AA33AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_AMARELO 0xFFFF00AA
#define roxo 0x9E3EFFAA
#define Azul 0x00FFFFAA
#define Verde 0x00D700AA
#define Cinza 0x660000AA
#define Preto 0x000000AA
#define Branco 0xFFFFFFAA
#define Amarelo	0xFFFF00FF
#define Violeta	0x9955DEEE
#define Vermelho 0xFF0000AA
#define COLOR_SEA 0x00808000
#define VERDEADM 0x97FF2FAA
#define KEY_HORN 2
#define CorErro 0xAFAFAFAA
#define CorBan 0xE11D36AA
#define COLOR_YELLOW 0xFFFF00AA
#define BlueColor 0x375FFFFF
#define RedColor 0xFF0000AA
#define COLOR_BLUE 0x2641FEAA
#define	COR_AZUL_ADMIN 0x4876FFFF
#define COR_AVISO 0x8B8B83FF
#define COR_SUCESSO 0x54FF9FFF
#define COR_ADM1 0x00FFFFFF

// Cores de Profições
#define C_MotoristaP 0xC0C0C0AA
#define C_JogadorF 0x660000AA
#define C_LSPD 0x33CCFFAA
#define C_YKZ 0xFF0000AA
#define C_MRN 0xF7B0F5AA
#define C_Empresario 0xFF80C0AA
#define C_Imobiliario 0x9ACD32AA
#define C_Gari 0xFF6600AA
#define C_Lixeiro 0x00D700AA
#define C_Bombeiro 0x33AAFFFF
#define C_Hotdog 0xFFFF00AA
#define C_Estudante 0xBBBB00AA
#define C_Correios 0xBBBB00AA
#define C_Cantor 0x8AD9FFAA
#define C_Poeta 0xFFFFB3AA
#define C_Guarda 0x00EAEAAA
#define C_PR 0x009F9FAA
#define C_PM 0x0000F2AA
#define C_PC 0x6A6A35AA
#define C_PF 0xFF8306AA
#define C_Delegado 0x510051AA
#define C_Bope 0x7777FFAA
#define C_Swat 0x33CCFFAA
#define C_Narcoticos 0x008000AA
#define C_Exercito 0x00D700AA
#define C_Traficante 0xA60000AA
#define C_Assasino 0x00FF00AA
#define C_Terrorista 0x9B4E00AA
#define C_AssasinoP 0x316262AA
#define C_Jornalista 0x480091AA
#define C_Fotografo 0x9595FFAA
#define C_Reporter 0xFFAC84AA
#define C_Ancora 0xFFFFB0AA
#define C_Meteoro 0x00D5D5AA
#define C_Mecanico 0xFF9191AA
#define C_Rapper 0xFAD605AA
#define C_Mcarroforte 0xFF97FFAA
#define C_Uber 0x7CB630AA
#define C_Frentista 0xBBBB00AA
#define C_Taxista 0xFFFF04AA
#define C_Paramedico 0xFFA6A6AA
#define C_FBI 0xB0B000AA
#define C_Interpol 0x934FF6F6
#define C_Aposentado 0x8080C0AA
#define C_Advogado 0x800080AA
#define C_GuardaCostas 0x909090AA
#define C_MOnibus 0xFF8000AA
#define C_Contrabando 0xFF80C0AA
#define C_Promotor 0xFF80C0AA
#define C_SegVila 0x79E1FFAA
#define C_Assaltante 0x0053A6AA
#define C_Bibliotecario 0x00E1E1AA
#define C_TraficanteD 0xFFAD5BAA
#define C_DonoM 0xFFAD5BAA
#define C_Deputado 0x790079AA
#define C_Vereador 0xAAAAAAAA
#define C_Ator 0xFFFFB9AA
#define C_Mafia 0x00FF00AA
#define C_Drifter 0xFF0000AA
#define C_Professor 0xBDBDBDAA
#define C_Ayrton 0xFF0000AA
#define C_Empregador 0x00FF00AA
#define C_AtiradorElite 0xFF8800AA
#define C_Ninja 0x000000AA
#define C_Desembargador 0xFFFFFFAA
#define C_Astronauta 0x808080AA
#define C_Cozinheiro 0xFFFF00AA
#define C_Eletricista 0xDDDD80AA
#define C_Piloto 0x808080AA
#define C_Maquinista 0x666264AA
#define C_Caminhoneiro 0x4A4444AA
#define C_Petroleiro 0xFFFF00AA
#define C_MOD 0x696969AA
#define C_ExercitoMilitar 0xFFFF00AA
#define C_ExercitoAero 0xFFFF00AA
#define C_FuzileiroMilitar 0xFFFF00AA
#define C_General 0xC0C0C0AA
#define C_Major 0xC0C0C0AA
#define C_Marechal 0xC0C0C0AA
#define C_Tenente 0xC0C0C0AA
#define C_Cientista 0x808080AA
#define C_Mercenario 0xFFFF00AA
#define C_GovernadorSA 0xFF7700AA
#define C_Motorista 0x2E8B57AA
#define C_MotoqueiroFantasma 0xFFFF00FF
#define C_ACG 0xFF0000AA
#define C_CAM 0xFFFFFFAA
#define C_CAP 0xB22222AA
#define C_AVA 0x1E90FFAA
#define C_BAH 0x1E90FFAA
#define C_BOT 0x000000AA
#define C_CHA 0x006400AA
#define C_COR 0xFFFFFFAA
#define C_CFC 0x98FB98AA
#define C_CRU 0x1E90FFAA
#define C_FLA 0xFF0000AA
#define C_FLU 0x228B22AA
#define C_GRE 0x1E90FFAA
#define C_INT 0xFF0000AA
#define C_PAL 0x228B22AA
#define C_PON 0xFFFFFFAA
#define C_SAN 0xAFAFAFAA
#define C_SAO 0xFF0000AA
#define C_SPO 0x8B4513AA
#define C_VIT 0xFF0000AA
#define C_Hacker 0xFF0000AA
#define C_Goku 0xFF0000AA
#define C_FTSA 0x1E90FFAA
#define C_Jardineiro 0x00B300FF
#define C_Coveiro 0x808040FF
#define C_AgenteDoPT 0xFDD53EAA
#define C_TTA 0xD43FD4AA
#define C_VagabundoBVL 0x000000AA
#define C_TécnicoInformática 0xFF7700AA
#define C_Administrador 0x696969AA
#define C_Obras 0x00FFFFAA
#define C_Cafetão 0x00D700AA
#define C_Governador 0x660000AA
#define C_Gringo 0x000000AA
#define C_Juiz 0xFFFFFFAA
#define C_JogadorSamp 0xFFFF00FF
#define C_JogadorMine 0xFF0000AA
#define C_CapitaoA 0x00FFFFAA
#define C_Robin 0xFF8800AA
#define C_LanternaV 0x00D700AA
#define C_Batman 0x000000AA
#define C_Flash 0xFF0000AA
#define C_Mascara 0x00D700AA
#define C_Thor 0x73D53EAA
#define C_Ben10 0xFFAD5BAA
#define C_Patata 0x007F00AA
#define C_Hulk 0x00D700AA
#define C_Wolverine 0xFFFF00FF
#define C_Marido 0xFF0000AA
#define C_FFR 0x696969AA
#define C_OP 0x00D700AA
#define C_Ministro 0xFF8800AA
#define C_Engenheiro 0x660000AA
#define C_Acessor 0x16EB43FF
#define C_Empresarial 0xC0C0C0AA
#define C_Recursos 0xFF6600AA
#define C_Analista 0x00FF0CAA
#define C_Atendimento  0xFFFFFFAA
#define C_Marketing 0x33AAFFFF
#define C_Comercial 0x00D700AA
#define C_Consultor  0x000000AA
#define C_Supervisor 0x9E3EFFAA
#define C_Bancario 0x99FFFFAA
#define C_Crackudo 0x00FF0CAA
#define C_Comandante 0xFF0000AA
#define C_Mente 0xAFAFAFAA
#define C_VigilanteS 0x9E3EFFAA
#define C_Medico 0x00FFFFAA
#define C_Corretor 0xFF6600AA
#define C_Noel 0xFFFF04AA
#define C_TEC 0x73D53EAA
#define C_GovernadorSergipe 0x808080AA
#define C_Vigilante 0x000000AA
#define C_Analfabeto 0xFF7700AA
#define C_PaiFamilia 0xBDBDBDAA
#define C_Macumbeiro 0xBDBDBDAA

// Profissões
#define Desempregado 0
#define MotoristaP 1
#define Guarda 2
#define Policial_R 3
#define Policial_M 4
#define Policial_C 5
#define Policial_F 6
#define Delegado 7
#define Bope 8
#define Swat 9
#define Narcoticos 10
#define Traficante 11
#define Assasino 12
#define Terrorista 13
#define AssasinoProfissional 15
#define Jornalista 16
#define Fotografo 17
#define Reporter 18
#define Ancora 19
#define Meteorologista 20
#define Mecanico 21
#define Rapper 22
#define Mcarroforte 23
#define Uber 24
#define Frentista 25
#define Taxista 26
#define Paramedico 27
#define FBI 28
#define Exercito 29
#define Interpol 31
#define Aposentado 33
#define Advogado 34
#define GuardaCostas 35
#define MOnibus 36
#define Contrabando 37
#define Promotor 38
#define SegVila 40
#define Assaltante 41
#define ExercitoMilitar 42
#define Bibliotecario 43
#define TraficanteD 44
#define ExercitoAero 45
#define DonoM 75
#define Deputado 46
#define Vereador 47
#define FuzileiroMilitar 48
#define Ator 49
#define JogadorF 50
#define Empresario 51
#define Imobiliario 52
#define Gari 53
#define Lixeiro 54
#define Bombeiro 55
#define Hotdog 56
#define Estudante 57
#define Correios 58
#define Cantor 59
#define Poeta 60
#define LSPD 61
#define YKZ 62
#define MRN 63
#define Mafia 64
#define Drifter 65
#define Ayrton 78
#define Professor 66
#define Empregador 67
#define AtiradorElite 68
#define Ninja 69
#define Maquinista 70
#define Caminhoneiro 71
#define Petroleiro 72
#define MOD 73
#define Desembargador 76
#define Astronauta 77
#define Piloto 90
#define Cozinheiro 91
#define Eletricista 92
#define MotoqueiroFantasma 96
#define ACG 97
#define CAM 98
#define CAP 99
#define AVA 100
#define BAH 101
#define BOT 102
#define CHA 103
#define COR 104
#define CFC 105
#define CRU 106
#define FLA 107
#define FLU 108
#define GRE 109
#define INT 110
#define PAL 111
#define PON 112
#define SAN 113
#define SAO 114
#define SPO 115
#define VIT 116
#define Hacker 118
#define General 121
#define Major 122
#define Marechal 123
#define Tenente 124
#define Cientista 125
#define Mercenario 127
#define GovernadorSA 128
#define FTSA 129
#define Goku 130
#define Jardineiro 131
#define Coveiro 132
#define AgenteDoPT 133
#define TTA 134
#define VagabundoBVL 135
#define TécnicoInformática 136
#define Administrador 137
#define PaiFamilia 138
#define Obras 139
#define Cafetão 140
#define Governador 141
#define Gringo 142
#define Juiz 143
#define JogadorSamp 144
#define TEC 145
#define JogadorMine 146
#define CapitaoA 147
#define Robin 148
#define LanternaV 149
#define Batman 150
#define Flash 151
#define Mascara 152
#define Thor 153
#define Ben10 154
#define Patata 155
#define Hulk 156
#define Wolverine 157
#define Marido 158
#define FFR 159
#define OP 160
#define Ministro 161
#define Engenheiro 162
#define Acessor 163
#define Empresarial 164
#define Recursos 165
#define Analista 166
#define Atendimento 167
#define Marketing 168
#define Comercial 169
#define Consultor 170
#define Supervisor 171
#define Bancario 172
#define Crackudo 173
#define Comandante 174
#define Mente 175
#define VigilanteS 176
#define Medico 177
#define Corretor 178
#define Noel 179
#define GovernadorSergipe 180
#define Vigilante 181
#define Analfabeto 182

// Salários
#define SalarioMinimo 768
#define SalarioMaximo 10000
#define Salariodj 10000
#define SalarioVipm 25000
#define SalarioMaximo2 3000
#define SalarioOrg 16000
#define Salario_MotoristaP 950
#define Salario_Guarda 980
#define Salario_Policial_R 2500
#define Salario_Policial_M 4000
#define Salario_Policial_C 5500
#define Salario_Policial_F 5800
#define Salario_Delegado 6000
#define Salario_Bope 6500
#define Salario_Swat 6700
#define Salario_Narcoticos 7250
#define Salario_Exercito 10000
#define Salario_Traficante 800
#define Salario_Assasino 750
#define Salario_Terrorista 880
#define Salario_AssasinoProfissional 890
#define Salario_Jornalista 1200
#define Salario_Fotografo 1250
#define Salario_Reporter 1300
#define Salario_Ancora 1250
#define Salario_Meteorologista 1300
#define Salario_Mecanico 680
#define Salario_Rapper 680
#define Salario_Mcarroforte 6000
#define Salario_Uber 950
#define Salario_Frentista 680
#define Salario_Taxista 950
#define Salario_Paramedico 3300
#define Salario_FBI 7500
#define Salario_Interpol 8000
#define Salario_Drifter 2500
#define Salario_Ayrton 5000
#define Salario_Professor 3500
#define Salario_Aposentado 10000
#define Salario_Advogado 3000
#define Salario_GuardaCostas 2000
#define Salario_MOnibus 950
#define Salario_Contrabando 690
#define Salario_Promotor 3000
#define Salario_SegVila 3000
#define Salario_Assaltante 700
#define Salario_Bibliotecario 2500
#define Salario_TraficanteD 1500
#define Salario_DonoM 5000
#define Salario_Ator 3000
#define Salario_Deputado 12000
#define Salario_Vereador 4000
#define Salario_JogadorF 8000
#define Salario_LSPD 2000
#define Salario_YKZ 6000
#define Salario_MRN 6000
#define Salario_Empresario 3200
#define Salario_Imobiliario 3750
#define Salario_Gari 680
#define Salario_Lixeiro 680
#define Salario_Bombeiro 1300
#define Salario_Hotdog 680
#define Salario_Estudante 700
#define Salario_Correios 500
#define Salario_Cantor 680
#define Salario_Poeta 950
#define Salario_Mafia 7000
#define Salario_Empregador 6800
#define Salario_AtiradorElite 8500
#define Salario_Ninja 8000
#define Salario_Maquinista 3000
#define Salario_Caminhoneiro 4000
#define Salario_Petroleiro 4500
#define Salario_MOD 12000
#define Salario_Desembargador 40000
#define Salario_Astronauta 14000
#define Salario_Cozinheiro 10000
#define Salario_Eletricista 4000
#define Salario_Piloto 10000
#define Salario_GovernadorSergipe 5000
#define Salario_MotoqueiroFantasma 8000
#define Salario_ACG 5000
#define Salario_CAM 5000
#define Salario_CAP 5000
#define Salario_AVA 5000
#define Salario_BAH 5000
#define Salario_BOT 5000
#define Salario_CHA 5000
#define Salario_COR 5000
#define Salario_CFC 5000
#define Salario_CRU 5000
#define Salario_FLA 5000
#define Salario_FLU 5000
#define Salario_GRE 5000
#define Salario_INT 5000
#define Salario_PAL 5000
#define Salario_PON 5000
#define Salario_SAN 5000
#define Salario_SAO 5000
#define Salario_SPO 5000
#define Salario_VIT 5000
#define Salario_Hacker 8000
#define Salario_Goku 8000
#define Salario_ExercitoMilitar 10000
#define Salario_ExercitoAero 11000
#define Salario_FuzileiroMilitar 11500
#define Salario_General 12000
#define Salario_Major 12250
#define Salario_Marechal 15000
#define Salario_Tenente 12500
#define Salario_Cientista 13000
#define Salario_Astronauta 14000
#define Salario_Mercenario 15000
#define Salario_FTSA 15000
#define Fianca 10000
#define Salario_Jardineiro 800
#define Salario_TEC 7000
#define Salario_AgenteDoPT 7000
#define Salario_TTA 7000
#define Salario_VagabundoBVL 6000
#define Salario_TécnicoInformática 2000
#define Salario_Administrador 10000
#define Salario_Obras 7000
#define Salario_Cafetão 7000
#define Salario_Governador 11000
#define Salario_Gringo 13000
#define Salario_Juiz 15000
#define Salario_JogadorSamp 13000
#define Salario_JogadorMine 13000
#define Salario_CapitaoA 5000
#define Salario_Robin 7000
#define Salario_LanternaV 15000
#define Salario_Batman 8000
#define Salario_Flash 14000
#define Salario_Mascara 12000
#define Salario_Thor 8000
#define Salario_Ben10 11000
#define Salario_Patata 6000
#define Salario_Hulk 14000
#define Salario_Wolverine 5000
#define Salario_Marido 5000
#define Salario_FFR 5000
#define Salario_OP 20000
#define Salario_Ministro 50000
#define Salario_Engenheiro 36000
#define Salario_Acessor 40000
#define Salario_Empresarial 45000
#define Salario_Recursos 44000
#define Salario_Analista 25000
#define Salario_Atendimento 45000
#define Salario_Marketing 45000
#define Salario_Comercial 29000
#define Salario_Consultor 50000
#define Salario_Supervisor 49000
#define Salario_Bancario 50000
#define Salario_Crackudo 27000
#define Salario_Comandante 30000
#define Salario_Mente 41000
#define Salario_VigilanteS 17000
#define Salario_Medico 42000
#define Salario_Corretor 40000
#define Salario_Noel 2000
#define Salario_Coveiro 1500

// -- dialog ID's INÍCIO --
#define menuarmas 1
#define pistolas 2
#define microsmg 3
#define shotguns 4
#define SMGs 5
#define rifle 6
#define assalto 7
#define outras 8
#define REGISTRO 9
#define LOGIN 10
#define AVISO 11
#define Regras 14
#define mudarsenha 15
#define organizadores 16
#define banco 18
#define depositar 19
#define sacar 20
#define tunar 21
#define tunarroda 22
#define tunarcor 23
#define tunarpaint 24
#define menuprof 26
#define Honestas 27
#define Honestas2 28
#define Desonestas 29
#define Governo 30
#define mp3	31
#define DP 32
#define lojautilidades 33
#define skins 34
#define pergunta1 35
#define pergunta2 36
#define acertouperguntas 37
#define erro 38
#define Lutas 39
#define Mudouluta 40
#define comidas 41
#define viagens 42
#define viagens2 43
#define cidades 44
#define Faculdade 45
#define Armas 46
#define Hotel 47
#define mudarnick 48
#define mudarnick2 49
#define skinnovato 50
#define Baixa 51
#define monsterdown 52
#define CARTORIO 53

#define vcontrole 54

#if defined SAMsitesUser
	#define samcontroleg 56
	#define samcontrolea 57
#endif
#define samugayeditor 62
#define samugaysalve 63
#define samugaydelet 65
#define deletcarconce 64
#define rmovinfo 66
#define sisadminfo 67
#define vehicleorder 69
#define casaorder 70
#define proporder 71
#define casaopt 72
#define propopt 73
#define cvdmorador 74
#define expmorador 75
#define propnome 76
#define playersimp 77

// Casamento
#define pedidocasamento 79
#define pedidoaceito 80
#define pedidorecusado 81
#define cerimonia 82
#define divorcio 83

#define industriais 84

#if defined FGPSUser
	#define GPSMenu 89
	#define GPSDelegacias 90
	#define GPSPrefeituras 91
	#define GPSLojas 92
	#define LojasLV 93
	#define LojasSF 94
	#define LojasLS 95
	#define Igrejas 96
	#define Hoteis 98
	#define HoteisLS 99
	#define Hospitais 100
	#define HospitaisLV 101
	#define HospitaisSF 102
	#define HospitaisLS 103
	#define Universidades 104
	#define UniversidadesLS 105
	#define GPSAutoEscola 131
#endif

#define menuadm 106
#define menukick 107
#define menupunir 108
#define menubanir 109
#define menudesbanir 110
#define menutrazer 111
#define menuir 112
#define radio 114
#define mp33 115
#define CConfirm 116
#define Vehtype 117
#define mp3todos 118
#define mp33todos 119
#define forcasarmadas 120
#define Avancada 122
#define STAFF 124
#define DETRAN 125
#define hacker 128
#define bandana 129
#define musicas 130
#define funk 132
#define rock 133
#define rap 134
#define eletro 135
#define musicast 136
#define funkt 137
#define rockt 138
#define rapt 139
#define eletrot 140
#define tutn 152
#define cortagg 153
#define SkinType 6840
#define beber 154
#define lote 155
#define carroaereo 156
#define carrocarreta 157
#define carroviaturas 158
#define lojabike 159
#define carrodiversos 160
#define concebarco 161
#define Emprestimo 162
#define Emprestimo1 163
#define Emprestimo2 164
#define Emprestimo3 165
#define compraestudo 166
#define tcompralevel 167
#define comprarcaixaa 168
#define comprarcaixab 169
#define tcompracash 170
#define tcompraestudo 171
#define sistcaixa 172
#define menubco 173
#define Creditos 174
#define ajudalist 175
#define concelist 176
#define compralevel 177
#define compravip 178
#define compracash 179
#define compracashh 180
#define somd 182
#define tagtopp 183
#define torcidas 184
#define torcidas2 185
#define multa 186
#define carg 187
#define petr 188
#define eventos 189
#if defined MissilesUser
	#define missiles 190
#endif
#define annuncios 191
#define herois 192
#define nova 193
#define extrema 194
#define extrema2 195
#define emplist 196
#define valorentrada 197
#define empcomp 198
#define musicaso 200
#define musicasot 201
#define CriarChecks 202
#define CriarCorrida 203
#define FinalizarCorrida 204
#define CorridaNome 205
#define IDVeiculo 206
#define CriarVeiculoC 207
#define AJUDACONCE 208
#define PRECOCARROS 209
#define CriarPortao 210
#define MenuPortao 	211
#define VelocidadePortao 212
#define DeletarAll 213
#define LiberarAll 214
#define AssociarPortao 215
#define AssociarCasa 216
#define AssociarEmpresa 217
#define sacarobagulho 219
#define GANGS 220
#define GANGSALL 221

#define ConvertTime(%0,%1,%2,%3,%4) \
new \
Float: %0 = floatdiv(%1, 60000) \
;\
%2 = floatround(%0, floatround_tozero); \
%3 = floatround(floatmul(%0 - %2, 60), floatround_tozero); \
%4 = floatround(floatmul(floatmul(%0 - %2, 60) - %3, 1000), floatround_tozero)

#define DIRETORIO_CORRIDAS          "/Corridas/%s.ini"

#define DEBUG_CORRIDA               1
#define TAMANHO_CHECKPOINTS         8
#define CONTAGEM_START              30
#define MAX_CHECKPOINTS             500
#define MAX_CORRIDAS                200
#define MAX_CORRIDA_TEMPO           1800
#define DIALOG_CONTA (1900)

#define IsOdd(%1) \
((%1) & 1)

#define function%0(%1) \
forward%0(%1); public%0(%1)
//Menus
#define STRD_DETRAN "{FFFFFF}Pagar Multas $1000"
#define STRD_TUNNING "{FFFFFF}Rodas\n{FFFFFF}Cores\n{FFFFFF}Paintjobs\n{FFFFFF}Neons\n{FFFFFF}Nitro\n{FFFFFF}Suspensão\n{FFFFFF}Subwoofer\n{FFFFFF}Míssil\n{FFFFFF}AutoTuning"
#define STRD_DP "{FFFFFF}Limpar ficha{00D700}R$: {FFFFFF}1000\n{FFFFFF}Porte de armas {00D700}R$: {FFFFFF}5000"
#define STRD_CART "{FFFFFF}Licença de casamento {00D700}R$: {FFFFFF}1000\n{FFFFFF}Divorcio {00D700}R$: {FFFFFF}500\n{FFFFFF}Carteira de trabalho {00D700}R$: {FFFFFF}550"
#define STRD_UTILIDADES "{FF6600}Celular ($350)\n{FF0000}Kit de Missil ($5000)\n{00FFFF}MP3 Player ($150)\n{FFFF00}Bloco de Lembretes ($5)\n{00FF00}Mira Laser ($500)\n{FF00FF}Capacete ($300)\n{FF00FF}Ferramentas ($1000)\n{FF00FF}Hamburger ($50)"
//otaco
#define STRD_OTACO "Durarara\nDragon Ball Super\nGintama\nNo Game No Life\nDeadmen Wonderaland\nAnother\nDragon Ball Z\nGintama 2\nPrincess Principal\nDeath Parade\nOverlod\nBlood Lad\nNanbaka\nCode Geass\nAkame Ga Kill\nFullmetal Alchemist Brotherhood\nKilling Bites\nSoul Eater"
// Primeira Parte do MP3 == \/
#define STRD_MP3 "Hero\nOne Day\nMonster\nMy Demons\nWolf In Sheeps Clothing\nCoutersy Call\nRemember We Die\nE for Extinction\nMarshmallow\nWar of Change\nAgain\nAwake and Alive\nNot Gonna Die\n{7CFC00}Próxima Parte"
// Segunda parte do MP3 == \/
#define STRD_MP33 "Clocks\nCashing\nSteal My Girl\nPsychosocial\nLean Back\nMonster2\nT.N.T\nSweet Child O'Mine\nHey Brother\nGlad you Came\nRight Now\nLonely\nSmack That\nKiss Kiss\nDrop It Like\nYOU AND I\nCollapse\nFast Lane\nMakeItBunDem\nDuality"
//////////////////////// MUSICAS
#define STRD_ROCK "Monster\nHero\nThe Bonnie Song\nFeel Invincible\nNot Gonna Die\nRebirthing\nSlender Man\nI Am Machine\nCourtesy Call\nLeave It All Behind\nCriminal\nGet me Out\nI Will Pick You Up\nMad Hatter\nAttention\nRumors\nIt's Over When It's Over\nHail to the King\nTill I Collapse\nX Gon Give To Ya"
#define STRD_FUNK "Amar Amei\nBum Bum Tam Tam\nFui Partiu\nRabetao\nGrave Faz BOM\nSua Amiga Vo Pegar\nVai Malandra\nSurubinha de leve\nTiro Foi Esse\nBrota na Base\nPararam Pam\nRabetania\nTransariano\nDeixa Ela Beijar\nRabiola\nAgora Vai Sentar\nAbusadamente\nToma Karen Toma\nTransei Com a Sua Filha\nRitmo Mexicano"
#define STRD_RAP "The Caverna Cypter 1\nEp.129 - 1Kilo\nPresidentes Mortos\nObama CJ\nEsfregasom\nFé\nEvoluçao\nPoetas no Topo\nEp 134\nCypherBox 10\nLazer de Chefe\nCaos Interior\nTony Stark\nEnvolvido no Problema\nSuper Saiyan\nLiricopatas\nKurt Cobain\nShakira\nEp 127\nPoetas no Topo 2"
#define STRD_ELETRO "Cartoon On & On\nIlari Kaptane Kaskee\nMeg Dia Monsters\nLisa Mithel\nMario Game Over Remix\nMarshmallow - Alone\nMario Overworld Remix\nAlan Walker Faded\nMarshMellow Summer\nMarshMallow Moving On\nDua Lipa New Rules\nBullseye\nPumped Up Kicks remix\nSkrilex Diplo\nRunaway\nNo Money\nSpooky Scary Skeletons Remix\nAronChupa Im Albatroz\nIn The Name Of Love\nAlan Walker Alone"
///////////////////////// MUSICAST
#define STRD_ROCKT "Monster\nHero\nThe Bonnie Song\nFeel Invincible\nNot Gonna Die\nRebirthing\nSlender Man\nI Am Machine\nCourtesy Call\nLeave It All Behind\nCriminal\nGet me Out\nI Will Pick You Up\nMad Hatter\nAttention\nRumors\nIt's Over When It's Over\nHail to the King\nTill I Collapse\nX Gon Give To Ya"
#define STRD_FUNKT "Amar Amei\nBum Bum Tam Tam\nFui Partiu\nRabetao\nGrave Faz BOM\nSua Amiga Vo Pegar\nVai Malandra\nSurubinha de leve\nTiro Foi Esse\nBrota na Base\nPararam Pam\nRabetania\nTransariano\nDeixa Ela Beijar\nRabiola\nAgora Vai Sentar\nAbusadamente\nToma Karen Toma\nTransei Com a Sua Filha\nRitmo Mexicano"
#define STRD_RAPT "The Caverna Cypter 1\nEp.129 - 1Kilo\nPresidentes Mortos\nObama CJ\nEsfregasom\nFé\nEvoluçao\nPoetas no Topo\nEp 134\nCypherBox 10\nLazer de Chefe\nCaos Interior\nTony Stark\nEnvolvido no Problema\nSuper Saiyan\nLiricopatas\nKurt Cobain\nShakira\nEp 127\nPoetas no Topo 2"
#define STRD_ELETROT "Cartoon On & On\nIlari Kaptane Kaskee\nMeg Dia Monsters\nLisa Mithel\nMario Game Over Remix\nMarshmallow - Alone\nMario Overworld Remix\nAlan Walker Faded\nMarshMellow Summer\nMarshMallow Moving On\nDua Lipa New Rules\nBullseye\nPumped Up Kicks remix\nSkrilex Diplo\nRunaway\nNo Money\nSpooky Scary Skeletons Remix\nAronChupa Im Albatroz\nIn The Name Of Love\nAlan Walker Alone"
///////////////////////// MP3
// Primeira Parte do MP3 == \/
#define STRD_MP3TODOS "Hero\nOne Day\nMonster\nMy Demons\nWolf In Sheeps Clothing\nCoutersy Call\nRemember We Die\nE for Extinction\nMarshmallow\nWar of Change\nAgain\nAwake and Alive\nNot Gonna Die\n{7CFC00}Próxima Parte"
// Segunda parte do MP3 == \/
#define STRD_MP33TODOS "Clocks\nCashing\nSteal My Girl\nPsychosocial\nLean Back\nMonster2\nT.N.T\nSweet Child O'Mine\nHey Brother\nGlad you Came\nRight Now\nLonely\nSmack That\nKiss Kiss\nDrop It Like\nYOU AND I\nCollapse\nFast Lane\nMakeItBunDem\nDuality"
#define STRD_RADIO "Radio Hunter\nRadio Super Mix\nRadio PureDJ\nRadio Nova Web\nRadio Electro Vibe\nRadio Team Expert\nRadio Relax\nRadio (C/N)\nRadio Reggae\nRadio Dubstep"
#define STRD_MENUADM "{00DDFF}Kickar\n{00FFDD}Punir\n{0000FF}Banir\n{FF0000}Desbanir\n{DDFF00}Trazer\n{00FF44}Ir"

#define STRTEXT3D_CONCE_VENDA "{00FFEE}Veículo: %s (a venda)\n{00FFEE}Dono: {FFFFFF}%s\n{00FFEE}Valor: {FFFFFF}$%d\n{00FFEE}Conce ID: {FFFFFF}%d\n{00FFEE}Último uso: {FFFFFF}%s"
#define STRTEXT3D_CONCE "{4EEE94}Dono: {FFFFFF}%s\n{4EEE94}Conce ID: {FFFFFF}%d\n{4EEE94}Último uso: {FFFFFF}%s"

// AttachedObject's Slots
#define SlotLaser 0
#define SlotAKeFUZIL 1
#define SlotEscopeta 2
#define SlotAlgema 3
#define SlotCapacete 4

#define tmp2

#if defined NeonsUser
	#define NEON 1337
#endif

#define Masculino 1
#define Feminino 2

stock HexToInt(string[])
{
    new i = 0;
    new cur = 1;
    new res = 0;
    for (i = strlen(string); i > 0; i--)
    {
        if (string[i-1] < 58) res = res + cur*(string[i-1] - 48); else res = res + cur*(string[i-1] - 65 + 10);
        cur = cur*16;
    }
    return res;
}

stock GetGang(playerid)
{
	return GetPVarInt(playerid,"GangID");
}

stock GetNewTerriID()
{
	new terrid=DOF2_GetInt(GangF(TWarFile),RESERVED_NAME2);
	if(terrid>=MAX_TERRIS)
	{
	    terrid=-1;
	    new t[9];
	    for(new i=1;i<MAX_TERRIS;i++)
	    {
	        format(t,9,"%d",i);
	        if(!DOF2_IsSet(GangF(TWarFile),t)) {terrid=i;break;}
	 	}
	}
	return terrid;
}

stock LoadTerris()
{
	for(new d=1;d<MAX_TERRIS;d++)
	    TerriOk[d]=0;
	new maxi=DOF2_GetInt(GangF(TWarFile),RESERVED_NAME);
	new TempCord[4][32],tempz[9];
	for(new i=1;i<maxi;i++)
	{
	    format(tempz,9,"%d",i);
	    if(DOF2_IsSet(GangF(TWarFile),tempz))
	    {
	        split(DOF2_GetString(GangF(TWarFile),tempz),TempCord,',');
			for(new e=0;e<4;e++)
				Terris[i][e]=floatstr(TempCord[e]);
            if(Terris[i][0]<Terris[i][1])
			{
   				if(Terris[i][2]<Terris[i][3])
       			{
	 				TerrisID[i] = GangZoneCreate(Terris[i][0],Terris[i][2],Terris[i][1],Terris[i][3]);
				}
	 			else
	 			{
	 				TerrisID[i] = GangZoneCreate(Terris[i][0],Terris[i][3],Terris[i][1],Terris[i][2]);
	 			}
			}
			else
			{
				if(Terris[i][2]<Terris[i][3])
     			{
	 				TerrisID[i] = GangZoneCreate(Terris[i][1],Terris[i][2],Terris[i][0],Terris[i][3]);
	 			}
	 			else
	 			{
	 				TerrisID[i] = GangZoneCreate(Terris[i][1],Terris[i][3],Terris[i][0],Terris[i][2]);
	 			}
			}
			TerriOk[i]=1;
	    }
	    else
	        TerriOk[i]=0;
	}
}

stock ShowTerris(playerid)
{
	for(new i=1;i<MAX_TERRIS;i++)
	{
	    if(TerriOk[i]!=0)
	    {
			if(DOF2_GetInt(FormatTerri(i),"Gang")!=0)
			{
			    new cor[11];
				format(cor,11,"%s",DOF2_GetString(FormatGang(DOF2_GetInt(FormatTerri(i),"Gang")),"Cor"));
				strdel(cor,strlen(cor)-2,strlen(cor));
				strcat(cor,"66");
				GangZoneShowForPlayer(playerid,TerrisID[i],HexToInt(cor));
				if(TerriGuerra[i]!=0)
					GangZoneFlashForPlayer(playerid,TerrisID[i],HexToInt(DOF2_GetString(FormatGang(TerriGuerra[i]),"Cor")));
			}
			else
				GangZoneShowForPlayer(playerid,TerrisID[i],HexToInt(TERRI_NO_GANG));
		}
	}
}

stock GetPlayerTerri(playerid)
{
	if(IsPlayerConnected(playerid))
	    for(new terrid=1;terrid<MAX_TERRIS;terrid++)
	    {
	        if(TerriOk[terrid]==1)
	        {
	            if(Terris[terrid][0]<Terris[terrid][1])
				{
	                if(Terris[terrid][2]<Terris[terrid][3])
	                {
	 					if(IsPlayerInArea(playerid,Terris[terrid][0],Terris[terrid][1],Terris[terrid][2],Terris[terrid][3])) return terrid;
	 				}
	 				else
	 				{
	 				    if(IsPlayerInArea(playerid,Terris[terrid][0],Terris[terrid][1],Terris[terrid][3],Terris[terrid][2])) return terrid;
	 				}
				}
				else
				{
					if(Terris[terrid][2]<Terris[terrid][3])
	                {
	 					if(IsPlayerInArea(playerid,Terris[terrid][1],Terris[terrid][0],Terris[terrid][2],Terris[terrid][3])) return terrid;
	 				}
	 				else
	 				{
	 				    if(IsPlayerInArea(playerid,Terris[terrid][1],Terris[terrid][0],Terris[terrid][3],Terris[terrid][2])) return terrid;
	 				}
				}
			}
		}
	return -1;
}

stock GuerraTerri(terrid,gangidcontra,comecou)
{
    if(comecou) GangZoneFlashForAll(playerid,TerrisID[terrid],HexToInt(DOF2_GetString(FormatGang(gangidcontra),"Cor")));
	else GangZoneStopFlashForAll(TerriID[terrid]);
}

stock UpdateGangs()
{
	for(new gangid=1;gangid<MAX_GANGS;gangid++)
	    if(fexist(FormatGang(gangid)))
	    {
	        new ter=DOF2_GetInt(FormatGang(gangid),"Territorios");
	        CallRemoteFunction("AtualizarTerris","dd",gangid,ter);
	    }
}


stock StopAudioStreamForAll()
{
    for(new i = 0, e = GetMaxPlayers(); i < e; i++)
	{
        if(IsPlayerConnected(i))
		{
            StopAudioStreamForPlayer(i);
        }
    }
    return 1;
}

stock PlayAudioStreamForAll(inputtext[])
{
    for(new i = 0, e = GetMaxPlayers(); i < e; i++)
	{
        if(IsPlayerConnected(i))
		{
            PlayAudioStreamForPlayer(i, inputtext);
        }
    }
    return 1;
}

stock JackpotTotal()
{
	new randnum = random(MAX_JACKPOT-MIN_JACKPOT);
	return randnum+MIN_JACKPOT;
}

native WP_Hash(buffer[], len, const str[]);

stock bool:bIllegalPlayer[MAX_PLAYERS] = false, szTmpKickName[MAX_PLAYER_NAME];

stock Float:PointAngle(playerid, Float:xa, Float:ya, Float:xb, Float:yb)
{
	new Float:carangle;
	new Float:xc, Float:yc;
	new Float:angle;
	xc = floatabs(floatsub(xa, xb));
	yc = floatabs(floatsub(ya, yb));
	if(yc == 0.0 || xc == 0.0)
	{
		if(yc == 0 && xc > 0) angle = 0.0;
		else if(yc == 0 && xc < 0) angle = 180.0;
		else if(yc > 0 && xc == 0) angle = 90.0;
		else if(yc < 0 && xc == 0) angle = 270.0;
		else if(yc == 0 && xc == 0) angle = 0.0;
	}
	else
	{
		angle = atan(xc/yc);
		if(xb > xa && yb <= ya) angle += 90.0;
		else if(xb <= xa && yb < ya) angle = floatsub(90.0, angle);
		else if(xb < xa && yb >= ya) angle -= 90.0;
		else if(xb >= xa && yb > ya) angle = floatsub(270.0, angle);
	}
	GetVehicleZAngle(GetPlayerVehicleID(playerid), carangle);
	return floatadd(angle, -carangle);
}

stock Float:GetDistanceBetweenPoints(Float:X, Float:Y, Float:Z, Float:PointX, Float:PointY, Float:PointZ)
{
	new Float:Distance; Distance = floatabs(floatsub(X, PointX))+floatabs(floatsub(Y, PointY))+floatabs(floatsub(Z, PointZ));
	return Distance;
}

new VIP[32], Vnewban[32], Vstring[128], NICKBAN[20];

new TimersX[9];
new cancelas[9];

new GangLevel[MAX_PLAYERS]=0;
new GangID[MAX_PLAYERS]=0;
new TempID[MAX_PLAYERS];
new Convite[MAX_PLAYERS]=0;
new BancoGG[MAX_GANGS];
#if defined TERRITORY_WAR
new TerrisGG[MAX_GANGS];
#endif

stock split(const strsrc[], strdest[][], delimiter)
{
    new i, li;
    new aNum;
    new len;
    while(i <= strlen(strsrc))
    {
        if(strsrc[i] == delimiter || i == strlen(strsrc))
        {
            len = strmid(strdest[aNum], strsrc, li, i, 128);
            strdest[aNum][len] = 0;
            li = i+1;
            aNum++;
        }
        i++;
    }
    return 1;
}

stock GangF(gang[])
{
	new file[128];
	format(file,128,"gangs/%s",gang);
	return file;
}

stock FormatGang(gang)
{
	new file[128];
	format(file,128,"gangs/%d.gang",gang);
	return file;
}

stock FormatTerri(gang)
{
	new file[128];
	format(file,128,"gangs/%d.terri",gang);
	return file;
}

stock CriarGang(playerid,gangid,inputtext[])
{
	new File:file = fopen(FormatGang(gangid),io_write);
	fclose(file);
	DOF2_SetString(FormatGang(gangid),"Nome",inputtext);
	new name[MAX_PLAYER_NAME];GetPlayerName(playerid,name,sizeof(name));
	DOF2_SetString(FormatGang(gangid),"Lider",name);
	DOF2_SetString(FormatGang(gangid),"Lema",LEMA_DEFAULT);
	DOF2_SetInt(FormatGang(gangid),"Banco",GRANA_DEFAULT);
	BancoGG[gangid]=GRANA_DEFAULT;
	DOF2_SetInt(FormatGang(gangid),"BancoL",BANCOL_DEFAULT);
	#if defined TERRITORY_WAR
	DOF2_SetInt(FormatGang(gangid),"Territorios",0);
	TerrisGG[gangid]=GRANA_DEFAULT;
	#endif
	DOF2_SetString(FormatGang(gangid),"Membros","");
	DOF2_SetInt(FormatGang(gangid),"NMembros",1);
	MudarGangPlayer(playerid,gangid);
	GangID[playerid]=gangid;
	SetPVarInt(playerid,"GangID",gangid);
	GangLevel[playerid]=5;
	DOF2_SaveFile();
	new num=DOF2_GetInt(GangF(GangsFile),RESERVED_NAME);
	if(gangid==num) DOF2_SetInt(GangF(GangsFile),RESERVED_NAME,(num+1));
	DOF2_SetInt(GangF(PlayersFile),name,gangid);
	DOF2_SaveFile();
	return 1;
}

forward AtualizarBanco(gangid,quantianova);
public AtualizarBanco(gangid,quantianova)
{
    DOF2_SetInt(FormatGang(gangid),"Banco",DOF2_GetInt(FormatGang(gangid),"Banco")+quantianova);
    BancoGG[gangid]+=quantianova;
}

stock AtualizarPlayerGang(playerid,ex=0)
{
	new gangid;
	new file[128];
	new name[MAX_PLAYER_NAME];
	if(ex==1)
	{
	    gangid=GangID[playerid];
		SetPlayerTeam(playerid,MIN_ATK+gangid);
	    return 1;
	}
	GetPlayerName(playerid, name, MAX_PLAYER_NAME);
	format(file, sizeof(file), PASTA_CONTAS, name);
	if(!DOF2_IsSet(GangF(PlayersFile),name))
	{
	    //foi kickado online
	    GangID[playerid]=0;
	    SetPVarInt(playerid,"GangID",0);
	    GangLevel[playerid]=0;
	    SetPlayerTeam(playerid,playerid);
	    return 1;
	}
	gangid = DOF2_GetInt(GangF(PlayersFile),name);
	if(!fexist(FormatGang(gangid)))
	{
	    //gang foi deletada
        GangID[playerid]=0;
        SetPVarInt(playerid,"GangID",0);
	    GangLevel[playerid]=0;
	    SetPlayerTeam(playerid,playerid);
	}
	//tudo Ok
	GangID[playerid]=gangid;
	SetPVarInt(playerid,"GangID",gangid);
	if(!strcmp(DOF2_GetString(FormatGang(gangid),"Lider"),name))
	{
		GangLevel[playerid]=5;
	}
	else
	{
	    //new skinl[6];
	    //format(skinl,6,"Skin%i",DOF2_GetInt(FormatGang(gangid),name));
		GangLevel[playerid]=DOF2_GetInt(FormatGang(gangid),name);
	    //SetPlayerSkin(playerid,DOF2_GetInt(FormatGang(gangid),skinl));
	}
	SetPlayerTeam(playerid,MIN_ATK+gangid);
	return 1;
}

stock CriarArqs()
{
	if(!fexist(GangF(PlayersFile)))
	{
		new File:pg = fopen(GangF(PlayersFile),io_write);
		fclose(pg);
	}
	if(!fexist(GangF(GangsFile)))
	{
		new File:pg = fopen(GangF(GangsFile),io_write);
		fclose(pg);
		DOF2_SetInt(GangF(GangsFile),RESERVED_NAME,1);
		DOF2_SaveFile();
	}
	if(!fexist(GangF(TWarFile)))
	{
		new File:pg = fopen(GangF(TWarFile),io_write);
		fclose(pg);
		DOF2_SetInt(GangF(TWarFile),RESERVED_NAME2,1);
		DOF2_SaveFile();
	}
	print(" Pasta e arquivos básicos: OK");
	return 1;
}

#if defined TERRITORY_WAR
forward AtualizarTerris(gangid,terris);
public AtualizarTerris(gangid,terris)
{
	TerrisGG[gangid]=terris;
}
#endif

stock MudarGangPlayer(playerid,gangid)
{
	GangID[playerid]=gangid;
	SetPVarInt(playerid,"GangID",gangid);
	new file[128];
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, MAX_PLAYER_NAME);
	format(file, sizeof(file), PASTA_CONTAS, name);
	if(gangid==0) DOF2_Unset(GangF(PlayersFile),name);
	else DOF2_SetInt(GangF(PlayersFile),name,gangid);
	AtualizarPlayerGang(playerid);
	DOF2_SaveFile();
	format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
	DOF2_SetInt(file, "SGang", 0);
	return 1;
}

stock TemGangF(id)
{
	new file[128];
	new name[MAX_PLAYER_NAME];
	GetPlayerName(id, name, MAX_PLAYER_NAME);
	format(file, sizeof(file), PASTA_CONTAS, name);
	if(GangID[id]!=0)
	{
	    return 4;
	}
	else
	{
		if(DOF2_IsSet(GangF(PlayersFile),name))//ele ta no arquivo?
		{
		    new gangid = DOF2_GetInt(GangF(PlayersFile),name);
		    if(!fexist(FormatGang(gangid))) return 3;//naõ existe mais essa gang
		    else
		    {
				if(DOF2_IsSet(FormatGang(gangid),name)||!strcmp(DOF2_GetString(FormatGang(gangid),"Lider"),name)) return 1;//esta tudo Ok
				else
				{
					DOF2_Unset(GangF(PlayersFile),name);
					DOF2_SaveFile();
					return 2;//ele foi kickado enquanto estava off
				}
			}
		}
	}
	return 0;
}

stock GetNewGangID()
{
    new i=DOF2_GetInt(GangF(GangsFile),RESERVED_NAME);
    if(i>=MAX_GANGS)
    {
        for(new f=1;f<MAX_GANGS;f++)
            if(!fexist(FormatGang(f))) {i=f;break;}
    }
    return i;
}

// MoveCamera
new Float:p_x,
	Float:p_y,
	Float:p_z;

// Radar
new UpdateSeconds = 1;
new maxradar = 16;

enum SaveDtenPlayerPosEnum
{
	Float:LastX,
	Float:LastY,
	Float:LastZ
};

new radarobject;
new SaveDtenPlayerPos[MAX_PLAYERS][SaveDtenPlayerPosEnum];
new distance1[MAX_PLAYERS];

new MLinks[6][] =
{
	"https://dl.dropboxusercontent.com/s/scaut2uxr5yd21f/1.mp3",
	"https://dl.dropboxusercontent.com/s/ed1d1c0182y8eh6/2.mp3",
	"https://dl.dropboxusercontent.com/s/nhd2iz1vzx04hkh/3.mp3",
	"https://dl.dropboxusercontent.com/s/8w8r6xykz9cmypv/4.mp3",
	"https://dl.dropboxusercontent.com/s/3avprgjai141yvr/5.mp3",
	"https://dl.dropboxusercontent.com/s/q5b7yv1v2nxhpao/6.mp3"
};

new Float:RandomSpawns[8][4] =
{
	{1755.4287,-1758.9742,13.2696},
	{1760.3342,-1759.2471,13.2691},
	{1765.4850,-1759.3441,13.2687},
	{1770.4329,-1759.5059,13.2700},
	{1775.9048,-1760.3361,13.2711},
	{1780.8867,-1760.3342,13.2723},
	{1785.7511,-1759.5979,13.2737},
	{1791.0706,-1758.4637,13.2748}
};

enum PrEnumSF
{
	Float:prX,
	Float:prY,
	Float:prZ
};

new SenhaAntiFake[50] = "8734";
new AntiFake;

new CadeiasSF[4][PrEnumSF] =
{
	{227.0059, 108.5802, 999.0156},
	{222.8550, 108.4233, 999.0156},
	{219.0326, 108.8183, 999.0156},
	{214.9467, 108.5256, 999.0156}
};
/////////////local pra eu por essas merda aki///////////
new grider[MAX_PLAYERS][3];
new Pauletti[MAX_PLAYERS][1];
new VRC[3];
new Text:Banco[9];

#if defined CarInfosUser
new PlayerText:CarInfos1[MAX_PLAYERS];
new PlayerText:CarInfos2[MAX_PLAYERS];
new PlayerText:CarInfos3[MAX_PLAYERS];
new PlayerText:CarInfos4[MAX_PLAYERS];
new PlayerText:CarInfos5[MAX_PLAYERS];
new PlayerText:CarInfos6[MAX_PLAYERS];
new PlayerText:CarInfos7[MAX_PLAYERS];
new PlayerText:CarInfos8[MAX_PLAYERS];
new PlayerText:CarInfos9[MAX_PLAYERS];
#endif
// =================================================================================
enum pInfo
{
	bool:SCON,
	Senha[MAX_SENHA+1],
	cSenha[MAX_SENHA+1],

	Logged,
	LoginsFalsos,

	bool:SpawnDance,
	Float:SpawnAngle,
	SpawnTimer,

	#if defined FGPSUser
	FGPSObject,
	FGPS_RCP,
		#if defined UseTd
	PlayerText:F_GPSTD,
		#endif
	#endif

	pPoloArea,
	Float:pPosX,
	Float:pPosY,
	Float:pPosZ,

	#if defined gText1User
	PlayerText:gText1,
	#endif

	#if defined gText2User
	PlayerText:gText2,
	#endif
	
	#if defined gText3User
	PlayerText:gText3,
	#endif

	_Faculdade,
	_Level,
	_EXP,
	_SaldoBancario,
	_Profissao,
	_CasouCom[MAX_PLAYER_NAME],
	_CartaoTelefonico,
	_Celular,
	_MP3,
	_Skin,
	_LaserP,
	_TCapacete,
	_AntiHS,
	_Porte,
	_HabTerrestre,
	_HabNautica,
	_HabAerea,
	_Tag,
	_Cashier,
	_cortag,
	_CxDiaria,
	_CxNovato,
	_musica,
	_youtuber,
	_CX,
	_Cash,
	_Concerto
};

// Votação
enum e_votacao
{
	bool:iniciada,
	sim,
	nao,
	total
};

new rconpass[20];
new weburl[128];
new Confirma[MAX_PLAYERS];
new emcasa[MAX_PLAYERS];
new votacao[e_votacao];
new votou[MAX_PLAYERS];
new convitede[MAX_PLAYERS];
new morar[MAX_PLAYERS];
new moradia[MAX_PLAYERS];
new MoradiaTime[MAX_PLAYERS];
new cCarro[MAX_PLAYERS];
new proximoint;
new proximocarro;
new proximacasa;
new proximaprop;
new proximosamugay;
new econgelar = 0;
new evida;
new ecolete;
new ereset;
new tvida;
new tcolete;


// Casamento
new pedidode[MAX_PLAYERS];
new casar[MAX_PLAYERS];

// Anti AFK
enum pPos
{
	Float:LastX,
	Float:LastY,
	Float:LastZ,
};

new	PlayerLastPos[MAX_PLAYERS][pPos],
	PlayerAfkTicks[MAX_PLAYERS],
	Float:PlayerCurrentPos[3];

new FloodAlert[MAX_PLAYERS],
	FloodTimer[MAX_PLAYERS];

new MSGs[][] =
{
    "{0000FF}Esta com  alguma duvida e nenhum adminstrador online então digite : {6666ff}/Ajuda",
	"{00FF00}|{6666ff}BSL{00FF00}| {FFFFFF}: Denúncie hackers ou abusers usando {6666ff}/Denunciar", // Não altere, esta é uma variável!
	"{00FF00}|{6666ff}BSL{00FF00}| {FFFFFF}: Veja as regras para não cometer burrices {6666ff}/Regras",
	"{00FF00}|{6666ff}BSL{00FF00}| {FFFFFF}: Está Com dúvidas? peça ajuda para algum administrador {6666ff}/Duvida",
	"{00FF00}|{6666ff}BSL{00FF00}| {FFFFFF}: Quer ouvir algo mas nao tem DJ online? {6666ff}/musicas",
	"{00FF00}|{6666ff}BSL{00FF00}| {FFFFFF}: Caso queira ir em algum local que não saiba use {6666ff}/Gps",
	"{FFFFFF}Visite nosso Site: {6666ff}Em Construção",
	"{00FF00}|{6666ff}BSL{00FF00}| {FFFFFF}: Veja os créditos do servidor usando {6666ff}/Creditos",
	"{FFFFFF}Visite nosso Facebook: {6666ff}Em Construção",
 	"{0000FF}Esta com  alguma duvida e nenhum adminstrador online então digite : {6666ff}/Ajuda",
	"{00FF00}|{6666ff}BSL{00FF00}| {FFFFFF}: Peça a um DJ para tocar sua musica Favorita Digite {6666ff}/pedirmusica",
	"{00FF00}|{6666ff}BSL{00FF00}| {FFFFFF}: Seja um VIP PREMIUM ou $Prestige$ veja as {6666ff}/vantagenspremium /vantagensprestige .",
	"{00FF00}|{6666ff}BSL{00FF00}| {FFFFFF}: Compre seu veículo nas concessionárias use {6666ff}/Conce",
	"{FFFFFF}Seja um VIP PREMIUM veja como digite : {6666ff}/vippremium",
	"{00FF00}|{6666ff}BSL{00FF00}| {FFFFFF}: Insatisfeito(a) com o casamento? use {6666ff}/Divorcio",
	"{0000FF}Você ganha uma caixa AVANÇADA automaticamente as 09:00- 18:00 - 22:00",
 	"{0000FF}Esta com  alguma duvida e nenhum adminstrador online então digite : {6666ff}/Ajuda",
	"{00FF00}|{6666ff}BSL{00FF00}| {FFFFFF}: Equipe BSL agradece a sua presença",
	"{0000FF}Acesse já: {6666ff}Em Construção (site) {FFFFFF}e compre VIPS etc!",
	"{00FF00}|{6666ff}BSL{00FF00}| {FFFFFF}: Para ver os administradores online use {6666ff}/Admins"
};


new peixes[10][] =
{
	"Branquinha",
	"Tucunaré",
	"Bicuda",
	"Piranha",
	"Traira",
	"Pacu",
	"Arraia",
	"Tucupá",
	"Piau",
	"Jaú"
};

new Presa[10][] =
{
	"Pau-Brasil",
	"Eucalipto",
	"Mangueira",
	"Coqueiro",
	"Jequitibá",
	"Figueira-da-terra",
	"Pimenteira",
	"Arnica",
	"Cerejeira",
	"Bromélia"
};

new COLORS[8] =
{
	0xFFFF00AA,
	0x80FF00AA,
	0xFFFFFFAA,
	0x0080FFAA,
	0xFF00FFAA,
	0x00FFFFAA,
	0x0080C0AA,
	0x8F20FFAA
};

new WeatherName[6][] =
{
	"{FFFFFF}Nublado{FFFFFF}, possibilidade de {ADD8E6}chuva{FFFFFF}, se for sair de casa, pegue seu guarda-chuva. máxima de {ADD8E6}25°C.",
	"{FFFFFF}Dia {ADD8E6}chuvoso{FFFFFF}, melhor ficar em casa e tomar um chocolate quente. máxima de {ADD8E6}22°C.",
	"{FFFFFF}Dia {ADD8E6}claro{FFFFFF}, ótimo para um passeio romântico! Máxima de {ADD8E6}27°C.",
	"{FFFFFF}Dia {ADD8E6}frio{FFFFFF}, vista seus casacos, máxima de {ADD8E6}15°C.",
	"{FFFFFF}Dia {ADD8E6}claro{FFFFFF}, ótimo para tomar uma no bar com os amigos! Máxima de {ADD8E6}30°C.",
	"{FFFFFF}Dia {ADD8E6}claro{FFFFFF}, ótimo para ir a piscina! Máxima de {ADD8E6}30°C."
};

//trabalho do pauletti em textdraws
new Text:Registro[20];
new Text:WE_GAMES1;
new Text:WE_GAMES2;
new Text:BoxCarregando;
////////////////////////////
// NPC's TextLabel
new Text3D:NPCLabel[MAX_PLAYERS];

// Prof Info TextLabel
new Text3D:ProfLabel[MAX_PLAYERS];

// Carros da Conce Label
new Text3D:ConceLabel[MAX_VEHICLES];

// Carros Temporários Label
new Text3D:CarTMPLabel[MAX_VEHICLES];

// Gang Info TextLabel
new Text3D:GangLabel[MAX_PLAYERS];
new Text3D:GangLabel2[MAX_PLAYERS];

// Casas Info Text
new Text3D:ctextoid[MAX_CASAS];

// Batercartao
new BaterCartao[MAX_PLAYERS];

//colissao
new Batida[MAX_PLAYERS];

new ssj[MAX_PLAYERS];

// emp
new Text3D:Etextoid[MAX_Emp];
new Float:EmpX[MAX_PLAYERS];
new Float:EmpY[MAX_PLAYERS];
new Float:EmpZ[MAX_PLAYERS];
// fim emp

// Props Info Text
new Text3D:ptextoid[MAX_PROPS];

new antifakekill[MAX_PLAYERS];

new testtime;
new incar[MAX_PLAYERS];
new intest[MAX_PLAYERS];


new Float:CasaX[MAX_PLAYERS];
new Float:CasaY[MAX_PLAYERS];
new Float:CasaZ[MAX_PLAYERS];

// Maquinista
new InRacePistaTrain[MAX_PLAYERS] = 0;
new RaceChecksPistaTrain[MAX_PLAYERS][6];

// Patrulha
new InRacePatrulha[MAX_PLAYERS] = 0;
new RaceChecksPistaPatrulha[MAX_PLAYERS][41];

new CageObjects[MAX_PLAYERS][8];

new Text3D:TextsFix[200];
new CheckpointsFix[130];
new GangZonesFix[10];
new MapIconsFix[100];
new PickupsFix[130];
new ObjectsFix[90];
new VehiclesFix[170];

new CountAllLoadedObjects = 0;
new ObjectsLoaded[MAX_LOAD_OBJECTS];

new CountAllLoadedVehicles = 0;
new VehiclesLoaded[MAX_LOAD_VEHICLES];

#if defined SAMsitesUser
new SAMFix[6];
new gTeam[MAX_PLAYERS];
new aTeam[MAX_PLAYERS];
#endif

new minutos[MAX_PLAYERS] = 0;
new NaFaculdade[MAX_PLAYERS] = 0;
new Conversa[MAX_PLAYERS] = 0;
new cercado[MAX_PLAYERS] = 0;
new permitido[MAX_PLAYERS];
new permitidodivorcio[MAX_PLAYERS];

// ================================ Anim Loops =====================================
#if defined AnimLoopsUser
new gPlayerUsingLoopingAnim[MAX_PLAYERS];
new gPlayerAnimLibsPreloaded[MAX_PLAYERS];
#endif
// =================================================================================

// Sistema do celular
new sender, id2, gc, docommand, str3[128], InCall[MAX_PLAYERS], GetCall[MAX_PLAYERS];

#if defined EventTextUser
new NewsLine[][] =
{
    "~w~evento ativado   ~n~ use /irevento",
	"~r~e~w~vento ativado   ~n~ use /irevento",
	"~r~ev~w~ento ativado   ~n~ use /irevento",
	"~r~eve~w~nto ativado   ~n~ use /irevento",
	"~r~even~w~to ativado   ~n~ use /irevento",
	"~r~event~w~o ativado   ~n~ use /irevento",
	"~r~evento~w~ ativado   ~n~ use /irevento",
	"~r~evento a~w~tivado   ~n~ use /irevento",
	"~r~evento at~w~ivado   ~n~ use /irevento",
	"~r~evento ati~w~vado   ~n~ use /irevento",
	"~r~evento ativ~w~ado   ~n~ use /irevento",
	"~w~evento ativa~w~do   ~n~ use /irevento",
	"~r~evento ativad~w~o   ~n~ use /irevento",
	"~r~evento ativado~w~   ~n~ use /irevento",
	"~r~evento ativado   ~n~ u~w~se /irevento",
	"~r~evento ativado   ~n~ us~w~e /irevento",
	"~r~evento ativado   ~n~ use~w~ /irevento",
	"~r~evento ativado   ~n~ use /~w~irevento",
   	"~r~evento ativado    ~n~ use /i~w~revento",
   	"~r~evento ativado    ~n~ use /ir~w~evento",
   	"~r~evento ativado    ~n~ use /ire~w~vento",
   	"~r~evento ativado    ~n~ use /irev~w~ento",
   	"~r~evento ativado    ~n~ use /ireve~w~nto",
   	"~r~evento ativado    ~n~ use /ireven~w~to",
   	"~r~evento ativado    ~n~ use /irevent~w~o",
   	"~r~evento ativado    ~n~ use /irevento"
};
#endif

new Staktimer;


new Text:drogas1, Text:drogas2;

// Relógio
new Text:Relogio;
//
new coveiro;


// Evento
#if defined EventTextUser
new Text:Stakline;
#endif

// P.
new _Portao[MAX_PORTOES];
new Text3D: _TextPortao[MAX_PORTOES];

// Sistema do AFK
new AFK[MAX_PLAYERS];
new Text:AfkText;
new Text:AfkBackText;

// Facebook
new Text:Facebook;
new Text:IPTXT;
// Login box
new PlayerInfo[MAX_PLAYERS][pInfo];

static const veehName[][] =
{
	"Landstalker",
	"Bravura",
	"Buffalo",
	"Linerunner",
	"Pereniel",
	"Sentinel",
	"Dumper",
	"Firetruck",
	"Trashmaster",
	"Stretch",
	"Manana",
	"Infernus",
	"Voodoo",
	"Pony",
	"Mule",
	"Cheetah",
	"Ambulance",
	"Leviathan",
	"Moonbeam",
	"Esperanto",
	"Taxi",
	"Washington",
	"Bobcat",
	"Whoopee",
	"BF Injection",
	"Hunter",
	"Premier",
	"Enforcer",
	"Securicar",
	"Banshee",
	"Predator",
	"Bus",
	"Rhino",
	"Barracks",
	"Hotknife",
	"Trailer",
	"Previon",
	"Coach",
	"Cabbie",
	"Stallion",
	"Rumpo",
	"RC Bandit",
	"Romero",
	"Packer",
	"Monster",
	"Admiral",
	"Squalo",
	"Seasparrow",
	"Pizzaboy",
	"Tram",
	"Trailer",
	"Turismo",
	"Speeder",
	"Reefer",
	"Tropic",
	"Flatbed",
	"Yankee",
	"Caddy",
	"Solair",
	"Van",
	"Skimmer",
	"PCJ-600",
	"Faggio",
	"Freeway",
	"RC Baron",
	"RC Raider",
	"Glendale",
	"Oceanic",
	"Sanchez",
	"Sparrow",
	"Patriot",
	"Quad",
	"Coastguard",
	"Dinghy",
	"Hermes",
	"Sabre",
	"Rustler",
	"ZR3-50",
	"Walton",
	"Regina",
	"Comet",
	"BMX",
	"Burrito",
	"Camper",
	"Marquis",
	"Baggage",
	"Dozer",
	"Maverick",
	"Chopper",
	"Rancher",
	"FBI Rancher",
	"Virgo",
	"Greenwood",
	"Jetmax",
	"Hotring",
	"Sandking",
	"Blista",
	"Maverick",
	"Boxville",
	"Benson",
	"Mesa",
	"RC Goblin",
	"Hotring",
	"Hotring",
	"Bloodring",
	"Rancher",
	"Super GT",
	"Elegant",
	"Journey",
	"Bike",
	"Mountain Bike",
	"Beagle",
	"Cropdust",
	"Stunt",
	"Tanker",
	"RoadTrain",
	"Nebula",
	"Majestic",
	"Buccaneer",
	"Shamal",
	"Hydra",
	"FCR-900",
	"NRG-500",
	"HPV1000",
	"Cement Truck",
	"Tow Truck",
	"Fortune",
	"Cadrona",
	"FBI Truck",
	"Willard",
	"Forklift",
	"Tractor",
	"Combine",
	"Feltzer",
	"Remington",
	"Slamvan",
	"Blade",
	"Freight",
	"Streak",
	"Vortex",
	"Vincent",
	"Bullet",
	"Clover",
	"Sadler",
	"Firetruck",
	"Hustler",
	"Intruder",
	"Primo",
	"Cargobob",
	"Tampa",
	"Sunrise",
	"Merit",
	"Utility",
	"Nevada",
	"Yosemite",
	"Windsor",
	"Monster A",
	"Monster B",
	"Uranus",
	"Jester",
	"Sultan",
	"Stratum",
	"Elegy",
	"Raindance",
	"RC Tiger",
	"Flash",
	"Tahoma",
	"Savanna",
	"Bandito",
	"Freight",
	"Trailer",
	"Kart",
	"Mower",
	"Duneride",
	"Sweeper",
	"Broadway",
	"Tornado",
	"AT-400",
	"DFT-30",
	"Huntley",
	"Stafford",
	"BF-400",
	"Newsvan",
	"Tug",
	"Trailer",
	"Emperor",
	"Wayfarer",
	"Euros",
	"Hotdog",
	"Club",
	"Trailer B",
	"Trailer C",
	"Andromada",
	"Dodo",
	"RC Cam",
	"Launch",
	"Police Car",
	"Police Car",
	"Police Car",
	"Police Ranger",
	"Picador","BPCHOQUE.",
	"Alpha",
	"Phoenix",
	"Glendale",
	"Sadler",
	"Luggage Trailer",
	"Luggage Trailer",
	"Stair Trailer",
	"Boxville",
	"Farm Plow",
	"Utility Trailer"
};

//-------------------------------------------------------



new vNames[212][] =
{
	{ "Landstalker"},
	{ "Bravura"},
	{ "Buffalo"},
	{ "Linerunner"},
	{ "Perrenial"},
	{ "Sentinel"},
	{
		"Dumper"},
	{
		"Firetruck"},
	{
		"Trashmaster"},
	{
		"Stretch"},
	{
		"Manana"},
	{
		"Infernus"},
	{
		"Voodoo"},
	{
		"Pony"},
	{
		"Mule"},
	{
		"Cheetah"},
	{
		"Ambulance"},
	{
		"Leviathan"},
	{
		"Moonbeam"},
	{
		"Esperanto"},
	{
		"Taxi"},
	{
		"Washington"},
	{
		"Bobcat"},
	{
		"Mr Whoopee"},
	{
		"BF Injection"},
	{
		"Hunter"},
	{
		"Premier"},
	{
		"Enforcer"},
	{
		"Securicar"},
	{
		"Banshee"},
	{
		"Predator"},
	{
		"Bus"},
	{
		"Rhino"},
	{
		"Barracks"},
	{
		"Hotknife"},
	{
		"Trailer 1"},
	{
		"Previon"},
	{
		"Coach"},
	{
		"Cabbie"},
	{
		"Stallion"},
	{
		"Rumpo"},
	{
		"RC Bandit"},
	{
		"Romero"},
	{
		"Packer"},
	{
		"Monster"},
	{
		"Admiral"},
	{
		"Squalo"},
	{
		"Seasparrow"},
	{
		"Pizzaboy"},
	{
		"Tram"},
	{
		"Trailer 2"},
	{
		"Turismo"},
	{
		"Speeder"},
	{
		"Reefer"},
	{
		"Tropic"},
	{
		"Flatbed"},
	{
		"Yankee"},
	{
		"Caddy"},
	{
		"Solair"},
	{
		"Berkley's RC Van"},
	{
		"Skimmer"},
	{
		"PCJ-600"},
	{
		"Faggio"},
	{
		"Freeway"},
	{
		"RC Baron"},
	{
		"RC Raider"},
	{
		"Glendale"},
	{
		"Oceanic"},
	{
		"Sanchez"},
	{
		"Sparrow"},
	{
		"Patriot"},
	{
		"Quad"},
	{
		"Coastguard"},
	{
		"Dinghy"},
	{
		"Hermes"},
	{
		"Sabre"},
	{
		"Rustler"},
	{
		"ZR-350"},
	{
		"Walton"},
	{
		"Regina"},
	{
		"Comet"},
	{
		"BMX"},
	{
		"Burrito"},
	{
		"Camper"},
	{
		"Marquis"},
	{
		"Baggage"},
	{
		"Dozer"},
	{
		"Maverick"},
	{
		"News Chopper"},
	{
		"Rancher"},
	{
		"FBI Rancher"},
	{
		"Virgo"},
	{
		"Greenwood"},
	{
		"Jetmax"},
	{
		"Hotring"},
	{
		"Sandking"},
	{
		"Blista Compact"},
	{
		"Police Maverick"},
	{
		"Boxville"},
	{
		"Benson"},
	{
		"Mesa"},
	{
		"RC Goblin"},
	{
		"Hotring Racer A"},
	{
		"Hotring Racer B"},
	{
		"Bloodring Banger"},
	{
		"Rancher"},
	{
		"Super GT"},
	{
		"Elegant"},
	{
		"Journey"},
	{
		"Bike"},
	{
		"Mountain Bike"},
	{
		"Beagle"},
	{
		"Cropdust"},
	{
		"Stunt"},
	{
		"Tanker"},
	{
		"Roadtrain"},
	{
		"Nebula"},
	{
		"Majestic"},
	{
		"Buccaneer"},
	{
		"Shamal"},
	{
		"Hydra"},
	{
		"FCR-900"},
	{
		"NRG-500"},
	{
		"HPV1000"},
	{
		"Cement Truck"},
	{
		"Tow Truck"},
	{
		"Fortune"},
	{
		"Cadrona"},
	{
		"FBI Truck"},
	{
		"Willard"},
	{
		"Forklift"},
	{
		"Tractor"},
	{
		"Combine"},
	{
		"Feltzer"},
	{
		"Remington"},
	{
		"Slamvan"},
	{
		"Blade"},
	{
		"Freight"},
	{
		"Streak"},
	{
		"Vortex"},
	{
		"Vincent"},
	{
		"Bullet"},
	{
		"Clover"},
	{
		"Sadler"},
	{
		"Firetruck LA"},
	{
		"Hustler"},
	{
		"Intruder"},
	{
		"Primo"},
	{
		"Cargobob"},
	{
		"Tampa"},
	{
		"Sunrise"},
	{
		"Merit"},
	{
		"Utility"},
	{
		"Nevada"},
	{
		"Yosemite"},
	{
		"Windsor"},
	{
		"Monster A"},
	{
		"Monster B"},
	{
		"Uranus"},
	{
		"Jester"},
	{
		"Sultan"},
	{
		"Stratum"},
	{
		"Elegy"},
	{
		"Raindance"},
	{
		"RC Tiger"},
	{
		"Flash"},
	{
		"Tahoma"},
	{
		"Savanna"},
	{
		"Bandito"},
	{
		"Freight Flat"},
	{
		"Streak Carriage"},
	{
		"Kart"},
	{
		"Mower"},
	{
		"Duneride"},
	{
		"Sweeper"},
	{
		"Broadway"},
	{
		"Tornado"},
	{
		"AT-400"},
	{
		"DFT-30"},
	{
		"Huntley"},
	{
		"Stafford"},
	{
		"BF-400"},
	{
		"Newsvan"},
	{
		"Tug"},
	{
		"Trailer 3"},
	{
		"Emperor"},
	{
		"Wayfarer"},
	{
		"Euros"},
	{
		"Hotdog"},
	{
		"Club"},
	{
		"Freight Carriage"},
	{
		"Trailer 3"},
	{
		"Andromada"},
	{
		"Dodo"},
	{
		"RC Cam"},
	{
		"Launch"},
	{
		"Police Car (LSPD)"},
	{
		"Police Car (SFPD)"},
	{
		"Police Car (LVPD)"},
	{
		"Police Ranger"},
	{
		"Picador"},
	{
		"S.W.A.T. Van"},
	{
		"Alpha"},
	{
		"Phoenix"},
	{
		"Glendale"},
	{
		"Sadler"},
	{
		"Luggage Trailer A"},
	{
		"Luggage Trailer B"},
	{
		"Stair Trailer"},
	{
		"Boxville"},
	{
		"Farm Plow"},
	{
		"Utility Trailer"}
},
ConstruindoCorrida,
ConstrucaoCorridaTipo,
ConstrucaoVeiculo,
ConstrucaoVeiculoCriado,
ConstrucaoModeloID,
NomeConstrucao[30],
bool: BuildTakeVehPos,
BuildVehPosCount,
bool: BuildTakeCheckpoints,
ConstruirCheckPointCount,
RaceBusy = 0x00,
NomeCorrida[30],
VeiculoCorrida,
CorridaTipo,
TotalCP,
Float: CoordVehCorrida[2][4],
Float: CPCoords[MAX_CHECKPOINTS][4],
CriarVehCorrida[MAX_PLAYERS],
Index,
PlayersCount[2],
CountTimer,
CountAmount,
bool: NaCorrida[MAX_PLAYERS],
CorridaTick,
CorridaIniciada,
CPProgesso[MAX_PLAYERS],
Posicao,
FinishCount,
JoinCount,
rCounter,
CorridaTempo,
InfoTimer[MAX_PLAYERS],
Colocacao[MAX_PLAYERS],
TempoProgresso;
new CarGod[MAX_VEHICLES];

new PlayerText: CorridaInfo[MAX_PLAYERS];
new PlayerText: CorridaAn[MAX_PLAYERS];

// emp
new naemp[MAX_PLAYERS];
new proximaemp;
// Variaveis
new DJ[MAX_PLAYERS];
new vehlist = mS_INVALID_LISTID;
new aerolist = mS_INVALID_LISTID;
new boatlist = mS_INVALID_LISTID;
new skinlist = mS_INVALID_LISTID;
new MyCars[MAX_PLAYERS][20];
new vip[MAX_PLAYERS];
new VIPT[MAX_PLAYERS];
new VIPMT[MAX_PLAYERS];
new filev[128];
new filev2[128];
new filevpt[128];
new filevpt2[128];
new filevmt[128];
new filevmt2[128];
new filedj[128];
new filedj2[128];
new bool:NeonALready[MAX_VEHICLES][6];
new Neon[MAX_VEHICLES][12];
new file2[128];
new STRX[256];
new PresoTempo[MAX_PLAYERS] = 0;
new preso[MAX_PLAYERS] = 0;
new ptemp[MAX_PLAYERS] = 0;
new algemado[MAX_PLAYERS] = 0;
new infratores[MAX_PLAYERS] = 0;
new Procurados[MAX_PLAYERS] = 0;
new presonadp[MAX_PLAYERS] = -1;
new PRAND[MAX_PLAYERS];
new xplayerDM[MAX_PLAYERS] = 0;
new xsequestrado[MAX_PLAYERS] = 0;
new pAdmin[MAX_PLAYERS];
new admin[MAX_PLAYERS];
new matou[MAX_PLAYERS];
new morreu[MAX_PLAYERS];
new tomouhs[MAX_PLAYERS] = 0;
new jasequestro[MAX_PLAYERS] = 0;
new Mute[MAX_PLAYERS] = 0;
new nautlls[MAX_PLAYERS] = 0;
new nautllv[MAX_PLAYERS] = 0;
new nobarlv[MAX_PLAYERS] = 0;
new nobarls[MAX_PLAYERS] = 0;
new nobarsf[MAX_PLAYERS] = 0;
new nobarfc[MAX_PLAYERS] = 0;
new AlgemaAttached[MAX_PLAYERS] = 0;
new sequestro[MAX_PLAYERS] = 0;
new aviso[MAX_PLAYERS] = 0;
new gmod[MAX_PLAYERS] = 0;
new vmod[MAX_PLAYERS] = 0;
new amod[MAX_PLAYERS] = 0;
new VehicleOldID[MAX_PLAYERS];
new crioucarro[MAX_PLAYERS];
new autoescola[MAX_PLAYERS];
//new blocktp[MAX_PLAYERS];
new PescaInProgress[MAX_PLAYERS] = 0;
new QtPescas[MAX_PLAYERS] = 0;
new Carregamento[MAX_PLAYERS] = 0;
new Passageiros[MAX_PLAYERS] = 0;
new DMBloqueado[MAX_PLAYERS];
new DMLiberado[MAX_PLAYERS][6];
new noevento[MAX_PLAYERS];
new evento[MAX_PLAYERS];
new cacando[MAX_PLAYERS] = 0;
new Qtcacas[MAX_PLAYERS] = 0;
new AreaPosto[MAX_PLAYERS];
new pbomba[MAX_PLAYERS] = 0;
new Taximetro[MAX_PLAYERS][2];
new multar[MAX_PLAYERS] = 0;
new prefsf[MAX_PLAYERS] = 0;
new preflv[MAX_PLAYERS] = 0;
new xprefls[MAX_PLAYERS] = 0;
new nobanco[MAX_PLAYERS] = 0;
new vercmds[MAX_PLAYERS] = 0;
new verpms[MAX_PLAYERS] = 0;
new blockpm[MAX_PLAYERS] = 0;
new trocandonick[MAX_PLAYERS] = 0;
new order[MAX_PLAYERS] = 0;
new autosave[MAX_PLAYERS] = 0;
new autotimer[MAX_PLAYERS];
new prepbyid[MAX_PLAYERS] = INVALID_PLAYER_ID;
new PrecoCorrida[MAX_PLAYERS];
new patrulhap[MAX_PLAYERS] = 0;
#if defined VControleUser
new Boot[MAX_PLAYERS];
#endif

#if defined VControleUser
new Lights[MAX_PLAYERS];
new Alarm[MAX_PLAYERS];
new Bonnet[MAX_PLAYERS];
new Engine[MAX_PLAYERS];
#endif

// Outros
new totalon;
new DMlb = 0;
new minu = 0;
new horas = 0;
new Chatlb = 1;
new PrepTimer;
new gSpectateID[MAX_PLAYERS];
new gSpectateType[MAX_PLAYERS];
new Faculdade2 = 0;
new PingCfg = 2;

// Evento
new interiore;
new Proibido = 1;
new EventoTextDraw = 0;
new EventoCriado = 0;
new VagasNoEvento = 0;
new PlayersNoEvento = 0;
new ExpulsoEvento[MAX_PLAYERS] = 0;
new Float:eventoX;
new Float:eventoY;
new Float:eventoZ;
new guerra;

// Sistema de viajem
new Aerols[MAX_PLAYERS];
new Aerosf[MAX_PLAYERS];
new Aerolv[MAX_PLAYERS];
new Aeroabd[MAX_PLAYERS]; // Aero abandonado
new bayside[MAX_PLAYERS];
new EQ[MAX_PLAYERS]; // El Quebrados
new LP[MAX_PLAYERS]; // Las Payasadas
new a51[MAX_PLAYERS]; // Area51
new LB[MAX_PLAYERS]; // Las Barrancas
new FC[MAX_PLAYERS]; // Fort Carson
new MG[MAX_PLAYERS]; // Monte Gomery
new PC[MAX_PLAYERS]; // Palomino Creek
new DME[MAX_PLAYERS]; // Dillimore
new MC[MAX_PLAYERS]; // Monte Chiliad
new AP[MAX_PLAYERS]; // Angel Pine

// Hospital
new bool:CuraRapida[MAX_PLAYERS] = true;
new bool:SpawnHospital[MAX_PLAYERS] = false;
new bool:SeMorreu[MAX_PLAYERS] = false;
new TimerExRecuperou[MAX_PLAYERS];
new TempoHospital[MAX_PLAYERS] = 0;

#if defined CameraUser
new ObjetoCarro[MAX_VEHICLES];
new VeiculoValido[MAX_VEHICLES];
new NovaCamera[MAX_PLAYERS];
#endif

forward GateClose1();
public GateClose1()
{
    MoveObject (cancelas[1],67.83, -1529.78, 4.79, 2.5, 0.00, 90.00, 90.00);//
    return 1;
}
forward GateClose2();
public GateClose2()
{
    MoveObject (cancelas[2],67.47, -1537.44, 4.79, 2.5, 0.00, 90.00, -90.00);//
	return 1;
}
forward GateClose3();
public GateClose3()
{
    MoveObject (cancelas[3],1731.04, 511.49, 28.48, 2.5, 0.00, -90.00, -20.00);//
	return 1;
}
forward GateClose4();
public GateClose4()
{
    MoveObject (cancelas[4],1738.09, 509.31, 28.57, 2.5, 0.00, 90.00, -20.00);//
	return 1;
}
forward GateClose5();
public GateClose5()
{
    MoveObject (cancelas[5],-1411.68, 818.56, 47.18, 2.5, 360.00, -90.00, -48.40);//
	return 1;
}
forward GateClose6();
public GateClose6()
{
    MoveObject (cancelas[6],-1404.05, 817.20, 47.18, 2.5, 360.00, 90.00, -48.40);//
	return 1;
}

static const NicksProibidos[][] =
{
	"nul", "aux",
	"prn", "con",
	"com1.aux.",
	"Ninguem"
};

new BadNameChars[][2] =
{
	"/","`","~","!","@","#","$","%","^","&","*","(",")","-",
	"=","+",".",",","<",">","{","}","|",":",";","'"," "
};

new BadClanNames[][2] =
{
	"_","[","]"
};

new Palavroes[][] =
{
	{"!vaisefoderdesu"},{"BVN"},{"BVI"},{"SV"}
};

new Float:OldHealth[MAX_PLAYERS];
new Float:OldDamage[MAX_PLAYERS];

// GPS
enum GPSInfo
{
	zone_name[30],
	Float:zone_minx,
	Float:zone_miny,
	Float:zone_minz,
	Float:zone_maxx,
	Float:zone_maxy,
	Float:zone_maxz
};

new Float:Zones[][GPSInfo] =
{
	{ "The Big Ear",                -410.00,  1403.30,    -3.00,  -137.90,  1681.20,   200.00},
	{ "Aldea Malvada",               -1372.10,  2498.50,     0.00, -1277.50,  2615.30,   200.00},
	{ "Angel Pine",                  -2324.90, -2584.20,    -6.10, -1964.20, -2212.10,   200.00},
	{ "Arco del Oeste",               -901.10,  2221.80,     0.00,  -592.00,  2571.90,   200.00},
	{ "Avispa Country Club",         -2646.40,  -355.40,     0.00, -2270.00,  -222.50,   200.00},
	{ "Avispa Country Club",         -2831.80,  -430.20,    -6.10, -2646.40,  -222.50,   200.00},
	{ "Avispa Country Club",         -2361.50,  -417.10,     0.00, -2270.00,  -355.40,   200.00},
	{ "Avispa Country Club",         -2667.80,  -302.10,   -28.80, -2646.40,  -262.30,    71.10},
	{ "Avispa Country Club",         -2470.00,  -355.40,     0.00, -2270.00,  -318.40,    46.10},
	{ "Avispa Country Club",         -2550.00,  -355.40,     0.00, -2470.00,  -318.40,    39.70},
	{ "Back o Beyond",               -1166.90, -2641.10,     0.00,  -321.70, -1856.00,   200.00},
	{ "Battery Point",               -2741.00,  1268.40,    -4.50, -2533.00,  1490.40,   200.00},
	{ "Bayside",                     -2741.00,  2175.10,     0.00, -2353.10,  2722.70,   200.00},
	{ "Bayside Marina",              -2353.10,  2275.70,     0.00, -2153.10,  2475.70,   200.00},
	{ "Beacon Hill",                  -399.60, -1075.50,    -1.40,  -319.00,  -977.50,   198.50},
	{ "Blackfield",                    964.30,  1203.20,   -89.00,  1197.30,  1403.20,   110.90},
	{ "Blackfield",                    964.30,  1403.20,   -89.00,  1197.30,  1726.20,   110.90},
	{ "Blackfield Chapel",            1375.60,   596.30,   -89.00,  1558.00,   823.20,   110.90},
	{ "Blackfield Chapel",            1325.60,   596.30,   -89.00,  1375.60,   795.00,   110.90},
	{ "Blackfield Intersection",      1197.30,  1044.60,   -89.00,  1277.00,  1163.30,   110.90},
	{ "Blackfield Intersection",      1166.50,   795.00,   -89.00,  1375.60,  1044.60,   110.90},
	{ "Blackfield Intersection",      1277.00,  1044.60,   -89.00,  1315.30,  1087.60,   110.90},
	{ "Blackfield Intersection",      1375.60,   823.20,   -89.00,  1457.30,   919.40,   110.90},
	{ "Blueberry",                     104.50,  -220.10,     2.30,   349.60,   152.20,   200.00},
	{ "Blueberry",                      19.60,  -404.10,     3.80,   349.60,  -220.10,   200.00},
	{ "Blueberry Acres",              -319.60,  -220.10,     0.00,   104.50,   293.30,   200.00},
	{ "Caligula's Palace",            2087.30,  1543.20,   -89.00,  2437.30,  1703.20,   110.90},
	{ "Caligula's Palace",            2137.40,  1703.20,   -89.00,  2437.30,  1783.20,   110.90},
	{ "Calton Heights",              -2274.10,   744.10,    -6.10, -1982.30,  1358.90,   200.00},
	{ "Chinatown",                   -2274.10,   578.30,    -7.60, -2078.60,   744.10,   200.00},
	{ "City Hall",                   -2867.80,   277.40,    -9.10, -2593.40,   458.40,   200.00},
	{ "Come-A-Lot",                   2087.30,   943.20,   -89.00,  2623.10,  1203.20,   110.90},
	{ "Commerce",                     1323.90, -1842.20,   -89.00,  1701.90, -1722.20,   110.90},
	{ "Commerce",                     1323.90, -1722.20,   -89.00,  1440.90, -1577.50,   110.90},
	{ "Commerce",                     1370.80, -1577.50,   -89.00,  1463.90, -1384.90,   110.90},
	{ "Commerce",                     1463.90, -1577.50,   -89.00,  1667.90, -1430.80,   110.90},
	{ "Commerce",                     1583.50, -1722.20,   -89.00,  1758.90, -1577.50,   110.90},
	{ "Commerce",                     1667.90, -1577.50,   -89.00,  1812.60, -1430.80,   110.90},
	{ "Conference Center",            1046.10, -1804.20,   -89.00,  1323.90, -1722.20,   110.90},
	{ "Conference Center",            1073.20, -1842.20,   -89.00,  1323.90, -1804.20,   110.90},
	{ "Cranberry Station",           -2007.80,    56.30,     0.00, -1922.00,   224.70,   100.00},
	{ "Creek",                        2749.90,  1937.20,   -89.00,  2921.60,  2669.70,   110.90},
	{ "Dillimore",                     580.70,  -674.80,    -9.50,   861.00,  -404.70,   200.00},
	{ "Doherty",                     -2270.00,  -324.10,    -0.00, -1794.90,  -222.50,   200.00},
	{ "Doherty",                     -2173.00,  -222.50,    -0.00, -1794.90,   265.20,   200.00},
	{ "Downtown",                    -1982.30,   744.10,    -6.10, -1871.70,  1274.20,   200.00},
	{ "Downtown",                    -1871.70,  1176.40,    -4.50, -1620.30,  1274.20,   200.00},
	{ "Downtown",                    -1700.00,   744.20,    -6.10, -1580.00,  1176.50,   200.00},
	{ "Downtown",                    -1580.00,   744.20,    -6.10, -1499.80,  1025.90,   200.00},
	{ "Downtown",                    -2078.60,   578.30,    -7.60, -1499.80,   744.20,   200.00},
	{ "Downtown",                    -1993.20,   265.20,    -9.10, -1794.90,   578.30,   200.00},
	{ "Downtown Los Santos",          1463.90, -1430.80,   -89.00,  1724.70, -1290.80,   110.90},
	{ "Downtown Los Santos",          1724.70, -1430.80,   -89.00,  1812.60, -1250.90,   110.90},
	{ "Downtown Los Santos",          1463.90, -1290.80,   -89.00,  1724.70, -1150.80,   110.90},
	{ "Downtown Los Santos",          1370.80, -1384.90,   -89.00,  1463.90, -1170.80,   110.90},
	{ "Downtown Los Santos",          1724.70, -1250.90,   -89.00,  1812.60, -1150.80,   110.90},
	{ "Downtown Los Santos",          1370.80, -1170.80,   -89.00,  1463.90, -1130.80,   110.90},
	{ "Downtown Los Santos",          1378.30, -1130.80,   -89.00,  1463.90, -1026.30,   110.90},
	{ "Downtown Los Santos",          1391.00, -1026.30,   -89.00,  1463.90,  -926.90,   110.90},
	{ "Downtown Los Santos",          1507.50, -1385.20,   110.90,  1582.50, -1325.30,   335.90},
	{ "East Beach",                   2632.80, -1852.80,   -89.00,  2959.30, -1668.10,   110.90},
	{ "East Beach",                   2632.80, -1668.10,   -89.00,  2747.70, -1393.40,   110.90},
	{ "East Beach",                   2747.70, -1668.10,   -89.00,  2959.30, -1498.60,   110.90},
	{ "East Beach",                   2747.70, -1498.60,   -89.00,  2959.30, -1120.00,   110.90},
	{ "East Los Santos",              2421.00, -1628.50,   -89.00,  2632.80, -1454.30,   110.90},
	{ "East Los Santos",              2222.50, -1628.50,   -89.00,  2421.00, -1494.00,   110.90},
	{ "East Los Santos",              2266.20, -1494.00,   -89.00,  2381.60, -1372.00,   110.90},
	{ "East Los Santos",              2381.60, -1494.00,   -89.00,  2421.00, -1454.30,   110.90},
	{ "East Los Santos",              2281.40, -1372.00,   -89.00,  2381.60, -1135.00,   110.90},
	{ "East Los Santos",              2381.60, -1454.30,   -89.00,  2462.10, -1135.00,   110.90},
	{ "East Los Santos",              2462.10, -1454.30,   -89.00,  2581.70, -1135.00,   110.90},
	{ "Easter Basin",                -1794.90,   249.90,    -9.10, -1242.90,   578.30,   200.00},
	{ "Easter Basin",                -1794.90,   -50.00,    -0.00, -1499.80,   249.90,   200.00},
	{ "Aeroporto de Easter Bay",          -1499.80,   -50.00,    -0.00, -1242.90,   249.90,   200.00},
	{ "Aeroporto de Easter Bay",          -1794.90,  -730.10,    -3.00, -1213.90,   -50.00,   200.00},
	{ "Aeroporto de Easter Bay",          -1213.90,  -730.10,     0.00, -1132.80,   -50.00,   200.00},
	{ "Aeroporto de Easter Bay",          -1242.90,   -50.00,     0.00, -1213.90,   578.30,   200.00},
	{ "Aeroporto de Easter Bay",          -1213.90,   -50.00,    -4.50,  -947.90,   578.30,   200.00},
	{ "Aeroporto de Easter Bay",          -1315.40,  -405.30,    15.40, -1264.40,  -209.50,    25.40},
	{ "Aeroporto de Easter Bay",          -1354.30,  -287.30,    15.40, -1315.40,  -209.50,    25.40},
	{ "Aeroporto de Easter Bay",          -1490.30,  -209.50,    15.40, -1264.40,  -148.30,    25.40},
	{ "Easter Bay Chemicals",        -1132.80,  -768.00,     0.00,  -956.40,  -578.10,   200.00},
	{ "Easter Bay Chemicals",        -1132.80,  -787.30,     0.00,  -956.40,  -768.00,   200.00},
	{ "El Castillo del Diablo",       -464.50,  2217.60,     0.00,  -208.50,  2580.30,   200.00},
	{ "El Castillo del Diablo",       -208.50,  2123.00,    -7.60,   114.00,  2337.10,   200.00},
	{ "El Castillo del Diablo",       -208.50,  2337.10,     0.00,     8.40,  2487.10,   200.00},
	{ "El Corona",                    1812.60, -2179.20,   -89.00,  1970.60, -1852.80,   110.90},
	{ "El Corona",                    1692.60, -2179.20,   -89.00,  1812.60, -1842.20,   110.90},
	{ "El Quebrados",                -1645.20,  2498.50,     0.00, -1372.10,  2777.80,   200.00},
	{ "Esplanade East",              -1620.30,  1176.50,    -4.50, -1580.00,  1274.20,   200.00},
	{ "Esplanade East",              -1580.00,  1025.90,    -6.10, -1499.80,  1274.20,   200.00},
	{ "Esplanade East",              -1499.80,   578.30,   -79.60, -1339.80,  1274.20,    20.30},
	{ "Esplanade North",             -2533.00,  1358.90,    -4.50, -1996.60,  1501.20,   200.00},
	{ "Esplanade North",             -1996.60,  1358.90,    -4.50, -1524.20,  1592.50,   200.00},
	{ "Esplanade North",             -1982.30,  1274.20,    -4.50, -1524.20,  1358.90,   200.00},
	{ "Fallen Tree",                  -792.20,  -698.50,    -5.30,  -452.40,  -380.00,   200.00},
	{ "Fallow Bridge",                 434.30,   366.50,     0.00,   603.00,   555.60,   200.00},
	{ "Fern Ridge",                    508.10,  -139.20,     0.00,  1306.60,   119.50,   200.00},
	{ "Financial",                   -1871.70,   744.10,    -6.10, -1701.30,  1176.40,   300.00},
	{ "Fisher's Lagoon",              1916.90,  -233.30,  -100.00,  2131.70,    13.80,   200.00},
	{ "Flint Intersection",           -187.70, -1596.70,   -89.00,    17.00, -1276.60,   110.90},
	{ "Flint Range",                  -594.10, -1648.50,     0.00,  -187.70, -1276.60,   200.00},
	{ "Fort Carson",                  -376.20,   826.30,    -3.00,   123.70,  1220.40,   200.00},
	{ "Foster Valley",               -2270.00,  -430.20,    -0.00, -2178.60,  -324.10,   200.00},
	{ "Foster Valley",               -2178.60,  -599.80,    -0.00, -1794.90,  -324.10,   200.00},
	{ "Foster Valley",               -2178.60, -1115.50,     0.00, -1794.90,  -599.80,   200.00},
	{ "Foster Valley",               -2178.60, -1250.90,     0.00, -1794.90, -1115.50,   200.00},
	{ "Frederick Bridge",             2759.20,   296.50,     0.00,  2774.20,   594.70,   200.00},
	{ "Gant Bridge",                 -2741.40,  1659.60,    -6.10, -2616.40,  2175.10,   200.00},
	{ "Gant Bridge",                 -2741.00,  1490.40,    -6.10, -2616.40,  1659.60,   200.00},
	{ "Ganton",                       2222.50, -1852.80,   -89.00,  2632.80, -1722.30,   110.90},
	{ "Ganton",                       2222.50, -1722.30,   -89.00,  2632.80, -1628.50,   110.90},
	{ "Garcia",                      -2411.20,  -222.50,    -0.00, -2173.00,   265.20,   200.00},
	{ "Garcia",                      -2395.10,  -222.50,    -5.30, -2354.00,  -204.70,   200.00},
	{ "Garver Bridge",               -1339.80,   828.10,   -89.00, -1213.90,  1057.00,   110.90},
	{ "~yGarver Bridge",               -1213.90,   950.00,   -89.00, -1087.90,  1178.90,   110.90},
	{ "Garver Bridge",               -1499.80,   696.40,  -179.60, -1339.80,   925.30,    20.30},
	{ "Parque Glen",                    1812.60, -1449.60,   -89.00,  1996.90, -1350.70,   110.90},
	{ "Parque Glen",                    1812.60, -1100.80,   -89.00,  1994.30,  -973.30,   110.90},
	{ "Parque Glen",                    1812.60, -1350.70,   -89.00,  2056.80, -1100.80,   110.90},
	{ "Green Palms",                   176.50,  1305.40,    -3.00,   338.60,  1520.70,   200.00},
	{ "Greenglass College",            964.30,  1044.60,   -89.00,  1197.30,  1203.20,   110.90},
	{ "Greenglass College",            964.30,   930.80,   -89.00,  1166.50,  1044.60,   110.90},
	{ "Hampton Barns",                 603.00,   264.30,     0.00,   761.90,   366.50,   200.00},
	{ "Hankypanky Point",             2576.90,    62.10,     0.00,  2759.20,   385.50,   200.00},
	{ "Harry Gold Parkway",           1777.30,   863.20,   -89.00,  1817.30,  2342.80,   110.90},
	{ "Hashbury",                    -2593.40,  -222.50,    -0.00, -2411.20,    54.70,   200.00},
	{ "Hilltop Farm",                  967.30,  -450.30,    -3.00,  1176.70,  -217.90,   200.00},
	{ "Hunter Quarry",                 337.20,   710.80,  -115.20,   860.50,  1031.70,   203.70},
	{ "Idlewood",                     1812.60, -1852.80,   -89.00,  1971.60, -1742.30,   110.90},
	{ "Idlewood",                     1812.60, -1742.30,   -89.00,  1951.60, -1602.30,   110.90},
	{ "Idlewood",                     1951.60, -1742.30,   -89.00,  2124.60, -1602.30,   110.90},
	{ "Idlewood",                     1812.60, -1602.30,   -89.00,  2124.60, -1449.60,   110.90},
	{ "Idlewood",                     2124.60, -1742.30,   -89.00,  2222.50, -1494.00,   110.90},
	{ "Idlewood",                     1971.60, -1852.80,   -89.00,  2222.50, -1742.30,   110.90},
	{ "Jefferson",                    1996.90, -1449.60,   -89.00,  2056.80, -1350.70,   110.90},
	{ "Jefferson",                    2124.60, -1494.00,   -89.00,  2266.20, -1449.60,   110.90},
	{ "Jefferson",                    2056.80, -1372.00,   -89.00,  2281.40, -1210.70,   110.90},
	{ "Jefferson",                    2056.80, -1210.70,   -89.00,  2185.30, -1126.30,   110.90},
	{ "Jefferson",                    2185.30, -1210.70,   -89.00,  2281.40, -1154.50,   110.90},
	{ "Jefferson",                    2056.80, -1449.60,   -89.00,  2266.20, -1372.00,   110.90},
	{ "Julius Thruway East",          2623.10,   943.20,   -89.00,  2749.90,  1055.90,   110.90},
	{ "Julius Thruway East",          2685.10,  1055.90,   -89.00,  2749.90,  2626.50,   110.90},
	{ "Julius Thruway East",          2536.40,  2442.50,   -89.00,  2685.10,  2542.50,   110.90},
	{ "Julius Thruway East",          2625.10,  2202.70,   -89.00,  2685.10,  2442.50,   110.90},
	{ "Julius Thruway North",         2498.20,  2542.50,   -89.00,  2685.10,  2626.50,   110.90},
	{ "Julius Thruway North",         2237.40,  2542.50,   -89.00,  2498.20,  2663.10,   110.90},
	{ "Julius Thruway North",         2121.40,  2508.20,   -89.00,  2237.40,  2663.10,   110.90},
	{ "Julius Thruway North",         1938.80,  2508.20,   -89.00,  2121.40,  2624.20,   110.90},
	{ "Julius Thruway North",         1534.50,  2433.20,   -89.00,  1848.40,  2583.20,   110.90},
	{ "Julius Thruway North",         1848.40,  2478.40,   -89.00,  1938.80,  2553.40,   110.90},
	{ "Julius Thruway North",         1704.50,  2342.80,   -89.00,  1848.40,  2433.20,   110.90},
	{ "Julius Thruway North",         1377.30,  2433.20,   -89.00,  1534.50,  2507.20,   110.90},
	{ "Julius Thruway South",         1457.30,   823.20,   -89.00,  2377.30,   863.20,   110.90},
	{ "Julius Thruway South",         2377.30,   788.80,   -89.00,  2537.30,   897.90,   110.90},
	{ "Julius Thruway West",          1197.30,  1163.30,   -89.00,  1236.60,  2243.20,   110.90},
	{ "Julius Thruway West",          1236.60,  2142.80,   -89.00,  1297.40,  2243.20,   110.90},
	{ "Juniper Hill",                -2533.00,   578.30,    -7.60, -2274.10,   968.30,   200.00},
	{ "Juniper Hollow",              -2533.00,   968.30,    -6.10, -2274.10,  1358.90,   200.00},
	{ "K.A.C.C. Military Fuels",      2498.20,  2626.50,   -89.00,  2749.90,  2861.50,   110.90},
	{ "Kincaid Bridge",              -1339.80,   599.20,   -89.00, -1213.90,   828.10,   110.90},
	{ "Kincaid Bridge",              -1213.90,   721.10,   -89.00, -1087.90,   950.00,   110.90},
	{ "Kincaid Bridge",              -1087.90,   855.30,   -89.00,  -961.90,   986.20,   110.90},
	{ "King's",                      -2329.30,   458.40,    -7.60, -1993.20,   578.30,   200.00},
	{ "King's",                      -2411.20,   265.20,    -9.10, -1993.20,   373.50,   200.00},
	{ "King's",                      -2253.50,   373.50,    -9.10, -1993.20,   458.40,   200.00},
	{ "LVA Freight Depot",            1457.30,   863.20,   -89.00,  1777.40,  1143.20,   110.90},
	{ "LVA Freight Depot",            1375.60,   919.40,   -89.00,  1457.30,  1203.20,   110.90},
	{ "LVA Freight Depot",            1277.00,  1087.60,   -89.00,  1375.60,  1203.20,   110.90},
	{ "LVA Freight Depot",            1315.30,  1044.60,   -89.00,  1375.60,  1087.60,   110.90},
	{ "LVA Freight Depot",            1236.60,  1163.40,   -89.00,  1277.00,  1203.20,   110.90},
	{ "Las Barrancas",                -926.10,  1398.70,    -3.00,  -719.20,  1634.60,   200.00},
	{ "Las Brujas",                   -365.10,  2123.00,    -3.00,  -208.50,  2217.60,   200.00},
	{ "Las Colinas",                  1994.30, -1100.80,   -89.00,  2056.80,  -920.80,   110.90},
	{ "Las Colinas",                  2056.80, -1126.30,   -89.00,  2126.80,  -920.80,   110.90},
	{ "Las Colinas",                  2185.30, -1154.50,   -89.00,  2281.40,  -934.40,   110.90},
	{ "Las Colinas",                  2126.80, -1126.30,   -89.00,  2185.30,  -934.40,   110.90},
	{ "Las Colinas",                  2747.70, -1120.00,   -89.00,  2959.30,  -945.00,   110.90},
	{ "Las Colinas",                  2632.70, -1135.00,   -89.00,  2747.70,  -945.00,   110.90},
	{ "Las Colinas",                  2281.40, -1135.00,   -89.00,  2632.70,  -945.00,   110.90},
	{ "Las Payasadas",                -354.30,  2580.30,     2.00,  -133.60,  2816.80,   200.00},
	{ "Aeroporto de Las Venturas",         1236.60,  1203.20,   -89.00,  1457.30,  1883.10,   110.90},
	{ "Aeroporto de Las Venturas",         1457.30,  1203.20,   -89.00,  1777.30,  1883.10,   110.90},
	{ "Aeroporto de Las Venturas",         1457.30,  1143.20,   -89.00,  1777.40,  1203.20,   110.90},
	{ "Aeroporto de Las Venturas",         1515.80,  1586.40,   -12.50,  1729.90,  1714.50,    87.50},
	{ "Last Dime Motel",              1823.00,   596.30,   -89.00,  1997.20,   823.20,   110.90},
	{ "Leafy Hollow",                -1166.90, -1856.00,     0.00,  -815.60, -1602.00,   200.00},
	{ "Lil' Probe Inn",                -90.20,  1286.80,    -3.00,   153.80,  1554.10,   200.00},
	{ "Linden Side",                  2749.90,   943.20,   -89.00,  2923.30,  1198.90,   110.90},
	{ "Linden Station",               2749.90,  1198.90,   -89.00,  2923.30,  1548.90,   110.90},
	{ "Linden Station",               2811.20,  1229.50,   -39.50,  2861.20,  1407.50,    60.40},
	{ "Little Mexico",                1701.90, -1842.20,   -89.00,  1812.60, -1722.20,   110.90},
	{ "Little Mexico",                1758.90, -1722.20,   -89.00,  1812.60, -1577.50,   110.90},
	{ "Los Flores",                   2581.70, -1454.30,   -89.00,  2632.80, -1393.40,   110.90},
	{ "Los Flores",                   2581.70, -1393.40,   -89.00,  2747.70, -1135.00,   110.90},
	{ "Aeroporto de Los Santos",     1249.60, -2394.30,   -89.00,  1852.00, -2179.20,   110.90},
	{ "Aeroporto de Los Santos",     1852.00, -2394.30,   -89.00,  2089.00, -2179.20,   110.90},
	{ "Aeroporto de Los Santos",     1382.70, -2730.80,   -89.00,  2201.80, -2394.30,   110.90},
	{ "Aeroporto de Los Santos",     1974.60, -2394.30,   -39.00,  2089.00, -2256.50,    60.90},
	{ "Aeroporto de Los Santos",     1400.90, -2669.20,   -39.00,  2189.80, -2597.20,    60.90},
	{ "Aeroporto de Los Santos",     2051.60, -2597.20,   -39.00,  2152.40, -2394.30,    60.90},
	{ "Marina",                        647.70, -1804.20,   -89.00,   851.40, -1577.50,   110.90},
	{ "Marina",                        647.70, -1577.50,   -89.00,   807.90, -1416.20,   110.90},
	{ "Marina",                        807.90, -1577.50,   -89.00,   926.90, -1416.20,   110.90},
	{ "Market",                        787.40, -1416.20,   -89.00,  1072.60, -1310.20,   110.90},
	{ "Market",                        952.60, -1310.20,   -89.00,  1072.60, -1130.80,   110.90},
	{ "Market",                       1072.60, -1416.20,   -89.00,  1370.80, -1130.80,   110.90},
	{ "Market",                        926.90, -1577.50,   -89.00,  1370.80, -1416.20,   110.90},
	{ "Market Station",                787.40, -1410.90,   -34.10,   866.00, -1310.20,    65.80},
	{ "Martin Bridge",                -222.10,   293.30,     0.00,  -122.10,   476.40,   200.00},
	{ "Missionary Hill",             -2994.40,  -811.20,     0.00, -2178.60,  -430.20,   200.00},
	{ "Montgomery",                   1119.50,   119.50,    -3.00,  1451.40,   493.30,   200.00},
	{ "Montgomery",                   1451.40,   347.40,    -6.10,  1582.40,   420.80,   200.00},
	{ "Montgomery Intersection",      1546.60,   208.10,     0.00,  1745.80,   347.40,   200.00},
	{ "Montgomery Intersection",      1582.40,   347.40,     0.00,  1664.60,   401.70,   200.00},
	{ "Mulholland",                   1414.00,  -768.00,   -89.00,  1667.60,  -452.40,   110.90},
	{ "Mulholland",                   1281.10,  -452.40,   -89.00,  1641.10,  -290.90,   110.90},
	{ "Mulholland",                   1269.10,  -768.00,   -89.00,  1414.00,  -452.40,   110.90},
	{ "Mulholland",                   1357.00,  -926.90,   -89.00,  1463.90,  -768.00,   110.90},
	{ "Mulholland",                   1318.10,  -910.10,   -89.00,  1357.00,  -768.00,   110.90},
	{ "Mulholland",                   1169.10,  -910.10,   -89.00,  1318.10,  -768.00,   110.90},
	{ "Mulholland",                    768.60,  -954.60,   -89.00,   952.60,  -860.60,   110.90},
	{ "Mulholland",                    687.80,  -860.60,   -89.00,   911.80,  -768.00,   110.90},
	{ "Mulholland",                    737.50,  -768.00,   -89.00,  1142.20,  -674.80,   110.90},
	{ "Mulholland",                   1096.40,  -910.10,   -89.00,  1169.10,  -768.00,   110.90},
	{ "Mulholland",                    952.60,  -937.10,   -89.00,  1096.40,  -860.60,   110.90},
	{ "Mulholland",                    911.80,  -860.60,   -89.00,  1096.40,  -768.00,   110.90},
	{ "Mulholland",                    861.00,  -674.80,   -89.00,  1156.50,  -600.80,   110.90},
	{ "Mulholland Intersection",      1463.90, -1150.80,   -89.00,  1812.60,  -768.00,   110.90},
	{ "North Rock",                   2285.30,  -768.00,     0.00,  2770.50,  -269.70,   200.00},
	{ "Ocean Docks",                  2373.70, -2697.00,   -89.00,  2809.20, -2330.40,   110.90},
	{ "Ocean Docks",                  2201.80, -2418.30,   -89.00,  2324.00, -2095.00,   110.90},
	{ "Ocean Docks",                  2324.00, -2302.30,   -89.00,  2703.50, -2145.10,   110.90},
	{ "Ocean Docks",                  2089.00, -2394.30,   -89.00,  2201.80, -2235.80,   110.90},
	{ "Ocean Docks",                  2201.80, -2730.80,   -89.00,  2324.00, -2418.30,   110.90},
	{ "Ocean Docks",                  2703.50, -2302.30,   -89.00,  2959.30, -2126.90,   110.90},
	{ "Ocean Docks",                  2324.00, -2145.10,   -89.00,  2703.50, -2059.20,   110.90},
	{ "Ocean Flats",                 -2994.40,   277.40,    -9.10, -2867.80,   458.40,   200.00},
	{ "Ocean Flats",                 -2994.40,  -222.50,    -0.00, -2593.40,   277.40,   200.00},
	{ "Ocean Flats",                 -2994.40,  -430.20,    -0.00, -2831.80,  -222.50,   200.00},
	{ "Octane Springs",                338.60,  1228.50,     0.00,   664.30,  1655.00,   200.00},
	{ "Old Venturas Strip",           2162.30,  2012.10,   -89.00,  2685.10,  2202.70,   110.90},
	{ "Palisades",                   -2994.40,   458.40,    -6.10, -2741.00,  1339.60,   200.00},
	{ "Palomino Creek",               2160.20,  -149.00,     0.00,  2576.90,   228.30,   200.00},
	{ "Paradiso",                    -2741.00,   793.40,    -6.10, -2533.00,  1268.40,   200.00},
	{ "Pershing Square",              1440.90, -1722.20,   -89.00,  1583.50, -1577.50,   110.90},
	{ "Pilgrim",                      2437.30,  1383.20,   -89.00,  2624.40,  1783.20,   110.90},
	{ "Pilgrim",                      2624.40,  1383.20,   -89.00,  2685.10,  1783.20,   110.90},
	{ "Pilson Intersection",          1098.30,  2243.20,   -89.00,  1377.30,  2507.20,   110.90},
	{ "Pirates in Men's Pants",       1817.30,  1469.20,   -89.00,  2027.40,  1703.20,   110.90},
	{ "Playa del Seville",            2703.50, -2126.90,   -89.00,  2959.30, -1852.80,   110.90},
	{ "Prickle Pine",                 1534.50,  2583.20,   -89.00,  1848.40,  2863.20,   110.90},
	{ "Prickle Pine",                 1117.40,  2507.20,   -89.00,  1534.50,  2723.20,   110.90},
	{ "Prickle Pine",                 1848.40,  2553.40,   -89.00,  1938.80,  2863.20,   110.90},
	{ "Prickle Pine",                 1938.80,  2624.20,   -89.00,  2121.40,  2861.50,   110.90},
	{ "Queens",                      -2533.00,   458.40,     0.00, -2329.30,   578.30,   200.00},
	{ "Queens",                      -2593.40,    54.70,     0.00, -2411.20,   458.40,   200.00},
	{ "Queens",                      -2411.20,   373.50,     0.00, -2253.50,   458.40,   200.00},
	{ "Randolph Industrial Estate",   1558.00,   596.30,   -89.00,  1823.00,   823.20,   110.90},
	{ "Redsands East",                1817.30,  2011.80,   -89.00,  2106.70,  2202.70,   110.90},
	{ "Redsands East",                1817.30,  2202.70,   -89.00,  2011.90,  2342.80,   110.90},
	{ "Redsands East",                1848.40,  2342.80,   -89.00,  2011.90,  2478.40,   110.90},
	{ "Redsands West",                1236.60,  1883.10,   -89.00,  1777.30,  2142.80,   110.90},
	{ "Redsands West",                1297.40,  2142.80,   -89.00,  1777.30,  2243.20,   110.90},
	{ "Redsands West",                1377.30,  2243.20,   -89.00,  1704.50,  2433.20,   110.90},
	{ "Redsands West",                1704.50,  2243.20,   -89.00,  1777.30,  2342.80,   110.90},
	{ "Regular Tom",                  -405.70,  1712.80,    -3.00,  -276.70,  1892.70,   200.00},
	{ "Richman",                       647.50, -1118.20,   -89.00,   787.40,  -954.60,   110.90},
	{ "Richman",                       647.50,  -954.60,   -89.00,   768.60,  -860.60,   110.90},
	{ "Richman",                       225.10, -1369.60,   -89.00,   334.50, -1292.00,   110.90},
	{ "Richman",                       225.10, -1292.00,   -89.00,   466.20, -1235.00,   110.90},
	{ "Richman",                        72.60, -1404.90,   -89.00,   225.10, -1235.00,   110.90},
	{ "Richman",                        72.60, -1235.00,   -89.00,   321.30, -1008.10,   110.90},
	{ "Richman",                       321.30, -1235.00,   -89.00,   647.50, -1044.00,   110.90},
	{ "Richman",                       321.30, -1044.00,   -89.00,   647.50,  -860.60,   110.90},
	{ "Richman",                       321.30,  -860.60,   -89.00,   687.80,  -768.00,   110.90},
	{ "Richman",                       321.30,  -768.00,   -89.00,   700.70,  -674.80,   110.90},
	{ "Robada Intersection",         -1119.00,  1178.90,   -89.00,  -862.00,  1351.40,   110.90},
	{ "Roca Escalante",               2237.40,  2202.70,   -89.00,  2536.40,  2542.50,   110.90},
	{ "Roca Escalante",               2536.40,  2202.70,   -89.00,  2625.10,  2442.50,   110.90},
	{ "Rockshore East",               2537.30,   676.50,   -89.00,  2902.30,   943.20,   110.90},
	{ "Rockshore West",               1997.20,   596.30,   -89.00,  2377.30,   823.20,   110.90},
	{ "Rockshore West",               2377.30,   596.30,   -89.00,  2537.30,   788.80,   110.90},
	{ "Rodeo",                          72.60, -1684.60,   -89.00,   225.10, -1544.10,   110.90},
	{ "Rodeo",                          72.60, -1544.10,   -89.00,   225.10, -1404.90,   110.90},
	{ "Rodeo",                         225.10, -1684.60,   -89.00,   312.80, -1501.90,   110.90},
	{ "Rodeo",                         225.10, -1501.90,   -89.00,   334.50, -1369.60,   110.90},
	{ "Rodeo",                         334.50, -1501.90,   -89.00,   422.60, -1406.00,   110.90},
	{ "Rodeo",                         312.80, -1684.60,   -89.00,   422.60, -1501.90,   110.90},
	{ "Rodeo",                         422.60, -1684.60,   -89.00,   558.00, -1570.20,   110.90},
	{ "Rodeo",                         558.00, -1684.60,   -89.00,   647.50, -1384.90,   110.90},
	{ "Rodeo",                         466.20, -1570.20,   -89.00,   558.00, -1385.00,   110.90},
	{ "Rodeo",                         422.60, -1570.20,   -89.00,   466.20, -1406.00,   110.90},
	{ "Rodeo",                         466.20, -1385.00,   -89.00,   647.50, -1235.00,   110.90},
	{ "Rodeo",                         334.50, -1406.00,   -89.00,   466.20, -1292.00,   110.90},
	{ "Royal Cassino",                 2087.30,  1383.20,   -89.00,  2437.30,  1543.20,   110.90},
	{ "San Andreas Sound",            2450.30,   385.50,  -100.00,  2759.20,   562.30,   200.00},
	{ "Santa Flora",                 -2741.00,   458.40,    -7.60, -2533.00,   793.40,   200.00},
	{ "Praia de Santa Maria",             342.60, -2173.20,   -89.00,   647.70, -1684.60,   110.90},
	{ "Praia de Santa Maria",              72.60, -2173.20,   -89.00,   342.60, -1684.60,   110.90},
	{ "Shady Cabin",                 -1632.80, -2263.40,    -3.00, -1601.30, -2231.70,   200.00},
	{ "Shady Creeks",                -1820.60, -2643.60,    -8.00, -1226.70, -1771.60,   200.00},
	{ "Shady Creeks",                -2030.10, -2174.80,    -6.10, -1820.60, -1771.60,   200.00},
	{ "Sobell Rail Yards",            2749.90,  1548.90,   -89.00,  2923.30,  1937.20,   110.90},
	{ "Spinybed",                     2121.40,  2663.10,   -89.00,  2498.20,  2861.50,   110.90},
	{ "Starfish Cassino",              2437.30,  1783.20,   -89.00,  2685.10,  2012.10,   110.90},
	{ "Starfish Cassino",              2437.30,  1858.10,   -39.00,  2495.00,  1970.80,    60.90},
	{ "Starfish Cassino",              2162.30,  1883.20,   -89.00,  2437.30,  2012.10,   110.90},
	{ "Temple",                       1252.30, -1130.80,   -89.00,  1378.30, -1026.30,   110.90},
	{ "Temple",                       1252.30, -1026.30,   -89.00,  1391.00,  -926.90,   110.90},
	{ "Temple",                       1252.30,  -926.90,   -89.00,  1357.00,  -910.10,   110.90},
	{ "Temple",                        952.60, -1130.80,   -89.00,  1096.40,  -937.10,   110.90},
	{ "Temple",                       1096.40, -1130.80,   -89.00,  1252.30, -1026.30,   110.90},
	{ "Temple",                       1096.40, -1026.30,   -89.00,  1252.30,  -910.10,   110.90},
	{ "The Camel's Toe",              2087.30,  1203.20,   -89.00,  2640.40,  1383.20,   110.90},
	{ "The Clown's Pocket",           2162.30,  1783.20,   -89.00,  2437.30,  1883.20,   110.90},
	{ "The Emerald Isle",             2011.90,  2202.70,   -89.00,  2237.40,  2508.20,   110.90},
	{ "Fazenda do Dyow e da Kynha",      -1209.60, -1317.10,   114.90,  -908.10,  -787.30,   251.90},
	{ "The Four Dragons Casino",      1817.30,   863.20,   -89.00,  2027.30,  1083.20,   110.90},
	{ "The High Roller",              1817.30,  1283.20,   -89.00,  2027.30,  1469.20,   110.90},
	{ "The Mako Span",                1664.60,   401.70,     0.00,  1785.10,   567.20,   200.00},
	{ "The Panopticon",               -947.90,  -304.30,    -1.10,  -319.60,   327.00,   200.00},
	{ "The Pink Swan",                1817.30,  1083.20,   -89.00,  2027.30,  1283.20,   110.90},
	{ "The Sherman Dam",              -968.70,  1929.40,    -3.00,  -481.10,  2155.20,   200.00},
	{ "The Strip",                    2027.40,   863.20,   -89.00,  2087.30,  1703.20,   110.90},
	{ "The Strip",                    2106.70,  1863.20,   -89.00,  2162.30,  2202.70,   110.90},
	{ "The Strip",                    2027.40,  1783.20,   -89.00,  2162.30,  1863.20,   110.90},
	{ "The Strip",                    2027.40,  1703.20,   -89.00,  2137.40,  1783.20,   110.90},
	{ "The Visage",                   1817.30,  1863.20,   -89.00,  2106.70,  2011.80,   110.90},
	{ "The Visage",                   1817.30,  1703.20,   -89.00,  2027.40,  1863.20,   110.90},
	{ "Unity Station",                1692.60, -1971.80,   -20.40,  1812.60, -1932.80,    79.50},
	{ "Valle Ocultado",               -936.60,  2611.40,     2.00,  -715.90,  2847.90,   200.00},
	{ "Verdant Bluffs",                930.20, -2488.40,   -89.00,  1249.60, -2006.70,   110.90},
	{ "Verdant Bluffs",               1073.20, -2006.70,   -89.00,  1249.60, -1842.20,   110.90},
	{ "Verdant Bluffs",               1249.60, -2179.20,   -89.00,  1692.60, -1842.20,   110.90},
	{ "Verdant Meadows",                37.00,  2337.10,    -3.00,   435.90,  2677.90,   200.00},
	{ "Praia de Verona",                  647.70, -2173.20,   -89.00,   930.20, -1804.20,   110.90},
	{ "Praia de Verona",                  930.20, -2006.70,   -89.00,  1073.20, -1804.20,   110.90},
	{ "Praia de Verona",                  851.40, -1804.20,   -89.00,  1046.10, -1577.50,   110.90},
	{ "Praia de Verona",                 1161.50, -1722.20,   -89.00,  1323.90, -1577.50,   110.90},
	{ "Praia de Verona",                 1046.10, -1722.20,   -89.00,  1161.50, -1577.50,   110.90},
	{ "Vinewood",                      787.40, -1310.20,   -89.00,   952.60, -1130.80,   110.90},
	{ "Vinewood",                      787.40, -1130.80,   -89.00,   952.60,  -954.60,   110.90},
	{ "Vinewood",                      647.50, -1227.20,   -89.00,   787.40, -1118.20,   110.90},
	{ "Vinewood",                      647.70, -1416.20,   -89.00,   787.40, -1227.20,   110.90},
	{ "Whitewood Estates",             883.30,  1726.20,   -89.00,  1098.30,  2507.20,   110.90},
	{ "Whitewood Estates",            1098.30,  1726.20,   -89.00,  1197.30,  2243.20,   110.90},
	{ "Willowfield",                  1970.60, -2179.20,   -89.00,  2089.00, -1852.80,   110.90},
	{ "Willowfield",                  2089.00, -2235.80,   -89.00,  2201.80, -1989.90,   110.90},
	{ "Willowfield",                  2089.00, -1989.90,   -89.00,  2324.00, -1852.80,   110.90},
	{ "Willowfield",                  2201.80, -2095.00,   -89.00,  2324.00, -1989.90,   110.90},
	{ "Willowfield",                  2541.70, -1941.40,   -89.00,  2703.50, -1852.80,   110.90},
	{ "Willowfield",                  2324.00, -2059.20,   -89.00,  2541.70, -1852.80,   110.90},
	{ "Willowfield",                  2541.70, -2059.20,   -89.00,  2703.50, -1941.40,   110.90},
	{ "Yellow Bell Station",          1377.40,  2600.40,   -21.90,  1492.40,  2687.30,    78.00},
	// Main Zones
	{ "Los Santos",                     44.60, -2892.90,  -242.90,  2997.00,  -768.00,   900.00},
	{ "Las Venturas",                  869.40,   596.30,  -242.90,  2997.00,  2993.80,   900.00},
	{ "Bone County",                  -480.50,   596.30,  -242.90,   869.40,  2993.80,   900.00},
	{ "Tierra Robada",               -2997.40,  1659.60,  -242.90,  -480.50,  2993.80,   900.00},
	{ "Tierra Robada",               -1213.90,   596.30,  -242.90,  -480.50,  1659.60,   900.00},
	{ "San Fierro",                  -2997.40, -1115.50,  -242.90, -1213.90,  1659.60,   900.00},
	{ "Red County",                  -1213.90,  -768.00,  -242.90,  2997.00,   596.30,   900.00},
	{ "Flint County",                -1213.90, -2892.90,  -242.90,    44.60,  -768.00,   900.00},
	{ "Whetstone",                   -2997.40, -2892.90,  -242.90, -1213.90, -1115.50,   900.00}
};

// Forwards
forward lottery();
forward hora(playerid);
forward InOrder(playerid);
forward JumpDesbug(playerid);
forward IsNumeric(const string[]);
forward JumpDesbug2(playerid);
forward ShowEditDialog(playerid);
forward CriarVeiculo(m, Float:x, Float:y, Float:z, Float:r, c, d);
forward CriarVeiculo2(m, Float:x, Float:y, Float:z, Float:r, c, d);
forward CriarVeiculo3(conceid, m, Float:x, Float:y, Float:z, Float:r, c, d);
forward TestDrive(playerid);
forward DesligarAlarmeCar(vehicleid);
forward MoveCamera(playerid);
forward Nupdate(playerid);
forward Up();
forward RandomMSGs();
forward Pesca();
forward cacas();
forward DestogglePlayerControllable(playerid);
forward DestogglePlayerDynamicRaceCP(playerid, checkpointid);
forward DynTutorialStart(playerid);
forward Combustivel();
forward MoverObjeto(id, Float:X, Float:Y, Float:Z, Float:speed);
forward DestruirObjeto(objid);
forward CriarExplosao(Float:X, Float:Y, Float:Z, tipo, Float:diam);
forward PlantouBomba(playerid);
forward semporte(playerid);
forward liberar(playerid);
forward Logarprof(playerid);
forward destinoviagen(playerid);
forward ABroadCast(COLOR, const string[], level);
forward ABroadCastPM(COLOR, const string[]);
forward ABroadCastVIP(COLOR, const string[]);
forward Chatp(COLOR, const string[], level, playerid);
forward Relatorio(COLOR, const string[], level);
forward Taxi(playerid);
forward CasaLog(string[]);
forward PropLog(string[]);
forward PortaoLog(string[]);
forward SamuGayLog(string[]);
forward KickLog(string[]);
forward GetClosestHospital(playerid);
forward GetClosestDelegacia(playerid);
forward GetClosestCargas(playerid);
forward GetClosestPassageiros(playerid);
forward Moradia(playerid);
forward Clima();

// Hospital
forward BlockCurarMe(playerid);
forward RecuperouSe(playerid);

forward LevelUP();
forward ClearChatbox(playerid, lines);

forward RespawnSystem(playerid);
forward CronServe();
forward locais();
forward SalvePlayerPos(playerid);
forward AutoRestart();

// Anti Rcon Hack
forward AfterPlayerConnect(playerid);
forward ChangeRCONPassword();
forward Chatc(COLOR,const string[],level, playerid);

#if defined CameraUser
forward AttachObject();
#endif

public IsNumeric(const string[])
{
	new length=strlen(string);
	if (length==0) return false;
	for (new i = 0; i < length; i++)
	{
		if ((string[i] > '9' || string[i] < '0' && string[i]!='-' && string[i]!='+')
		|| (string[i]=='-' && i!=0)
		|| (string[i]=='+' && i!=0)
		) return false;
	}
 	if (length==1 && (string[0]=='-' || string[0]=='+')) return false;
	return 1;
}


public InOrder(playerid)
{
	if(order[playerid] == 1)
	{
		order[playerid] = 0;
	}
	if(tomouhs[playerid] == 1)
	{
		tomouhs[playerid] = 0;
	}
	return 1;
}

// =================================================================================
#if defined SAMsitesUser
public OnSamSiteUpdate(samid, playerid)
{
	if(samid == SAMFix[0] || samid == SAMFix[1])
	{
		if(gTeam[playerid] == 1)
		{
			return 0;
		}
	}
	if(samid == SAMFix[2] || samid == SAMFix[3] || samid == SAMFix[4] || samid == SAMFix[5])
	{
		if(aTeam[playerid] == 1)
		{
			return 0;
		}
	}
	return 1;
}
#endif

forward LiberarItens();
public LiberarItens()
{
	new file[128], Arq[90], data[20], ano, mes, dia;
	getdate(ano, mes, dia);
 	format(data, 20, "%d/%d/%d", dia, mes, ano);
	for(new c; c < MAX_CASAS; c++)
	{
		format(Arq, sizeof(Arq), PASTA_CASAS, c);
		if(!DOF2_FileExists(Arq)) continue;
		if(DOF2_GetInt(Arq, "TDono") != 1) continue;
		if(strcmp(DOF2_GetString(Arq, "LiberacaoSet"), data))
		{
			DOF2_SetString(Arq, "LiberacaoSet", data);
			DOF2_SetInt(Arq, "DiasInativo", DOF2_GetInt(Arq, "DiasInativo") + 1);
			if(DOF2_GetInt(Arq, "DiasInativo") >= 7)
			{
			  	format(file, sizeof(file), PASTA_CONTAS, DOF2_GetString(Arq, "Dono"));
				DOF2_SetFloat(file, "CasaX", Float:1410.5046);
				DOF2_SetFloat(file, "CasaY", Float:-1789.7197);
				DOF2_SetFloat(file, "CasaZ", Float:13.8285);
				DOF2_SetInt(file, "Casa", 0);
				DOF2_SetInt(Arq, "DiasInativo", 0);

				DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario") + DOF2_GetInt(Arq, "Preco"));
				LiberarCasa(c);
			}
		}
	}

	for(new e; e < MAX_PROPS; e++)
	{
		format(Arq, sizeof(Arq), PASTA_PROPS, e);
		if(!DOF2_FileExists(Arq)) continue;
		if(DOF2_GetInt(Arq, "TDono") != 1) continue;
		if(strcmp(DOF2_GetString(Arq, "LiberacaoSet"), data))
		{
		    DOF2_SetString(Arq, "LiberacaoSet", data);
			DOF2_SetInt(Arq, "DiasInativo", DOF2_GetInt(Arq, "DiasInativo") + 1);
			if(DOF2_GetInt(Arq, "DiasInativo") >= 7)
			{
				LiberarProp(e);
				DOF2_SetInt(Arq, "DiasInativo", 0);
			}
		}
	}

	for(new c; c < MAX_CONCES; c++) {
		format(Arq, sizeof(Arq), PASTA_CONCE, c);
		if(!DOF2_FileExists(Arq)) continue;
		if(DOF2_GetInt(Arq, "TDono") != 1) continue;
		if(strcmp(DOF2_GetString(Arq, "LiberacaoSet"), data))
		{
		    DOF2_SetString(Arq, "LiberacaoSet", data);
			DOF2_SetInt(Arq, "DiasInativo", DOF2_GetInt(Arq, "DiasInativo") + 1);
			if(DOF2_GetInt(Arq, "DiasInativo") >= 7)
			{
				LiberarVeiculo(c);
				DOF2_SetInt(Arq, "DiasInativo", 0);
  			}
		}
	}
	return 1;
}

public JumpDesbug(playerid)
{
	SetPlayerInterior(playerid, 0);
	SetPlayerPos(playerid, 1824.0267, 26.0382, 125.9824);
	SetTimerEx("JumpDesbug2", 3000, 0, "d", playerid);
	return 1;
}

public JumpDesbug2(playerid)
{
	SetPlayerInterior(playerid, 0);
	SetPlayerPos(playerid, 2432.8222, -14.8528, 480.8711);
	SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);
	return 1;
}

public ShowEditDialog(playerid)
{
	ShowPlayerDialog(playerid, samugayeditor, DIALOG_STYLE_LIST, "Editando Portão", "Editar X Posição\nEditar Y Posição\nEditar Z Posição\nEditar RX Posição\nEditar RY Posição\nEditar RZ Posição\nDeletar Edição\nSalvar Edição", "OK", "Voltar");
	return 1;
}

public CriarVeiculo(m, Float:x, Float:y, Float:z, Float:r, c, d)
{
	AddStaticVehicleEx(m, x, y, z, r, c, d, 30);
	CountAllLoadedVehicles++;
	return 1;
}

public CriarVeiculo2(m, Float:x, Float:y, Float:z, Float:r, c, d)
{
	new fileconce[256], carroid, string[256];

	format(fileconce, sizeof(fileconce), PASTA_CONCE, proximocarro);
	carroid = AddStaticVehicle(m, x, y, z, r, c, d);
	DOF2_SetInt(fileconce, "Id", carroid);

	if(DOF2_GetInt(fileconce, "TRoda") == 1)
	{
		AddVehicleComponent(carroid, DOF2_GetInt(fileconce, "Roda"));
	}
	if(DOF2_GetInt(fileconce, "TPaintjob") == 1)
	{
		ChangeVehiclePaintjob(carroid, DOF2_GetInt(fileconce, "Paintjob"));
	}
	if(DOF2_GetInt(fileconce, "TNitro") == 1)
	{
		AddVehicleComponent(carroid, DOF2_GetInt(fileconce, "Nitro"));
	}
	if(DOF2_GetInt(fileconce, "TSuspensao") == 1)
	{
		AddVehicleComponent(carroid, DOF2_GetInt(fileconce, "Suspensao"));
	}
	if(DOF2_GetInt(fileconce, "TNeon") == 1)
	{
		ChangeVehicleNeon(carroid, DOF2_GetInt(fileconce, "Neon"));
	}
	if(DOF2_GetInt(fileconce, "TAutoTunning") == 1)
	{
		AutoTunningRun(carroid);
	}
	if(DOF2_GetInt(fileconce, "TDono") == 1)
	{
		format(string, sizeof(string), STRTEXT3D_CONCE, DOF2_GetString(fileconce, "Dono"), proximocarro, DOF2_GetString(fileconce, "DataSet"));
	}
	else
	{
		format(string, sizeof(string), STRTEXT3D_CONCE_VENDA, GetVehicleName(carroid), DOF2_GetString(fileconce, "Dono"), DOF2_GetInt(fileconce, "Preco"), proximocarro, DOF2_GetString(fileconce, "DataSet"));
	}
	ConceLabel[proximocarro] = CreateDynamic3DTextLabel(string, -1, 0.0, 0.0, 0.15, 10.0, INVALID_PLAYER_ID, carroid, 1, -1, -1, -1, 50.0);
	proximocarro++;
	return 1;
}

public CriarVeiculo3(conceid, m, Float:x, Float:y, Float:z, Float:r, c, d)
{
	new fileconce[256], carroid, string[256];

	format(fileconce, sizeof(fileconce), PASTA_CONCE, conceid);
	carroid = AddStaticVehicle(m, x, y, z, r, c, d);
	DOF2_SetInt(fileconce, "Id", carroid);

	if(DOF2_GetInt(fileconce, "TRoda") == 1)
	{
		AddVehicleComponent(carroid, DOF2_GetInt(fileconce, "Roda"));
	}
	if(DOF2_GetInt(fileconce, "TPaintjob") == 1)
	{
		ChangeVehiclePaintjob(carroid, DOF2_GetInt(fileconce, "Paintjob"));
	}
	if(DOF2_GetInt(fileconce, "TNitro") == 1)
	{
		AddVehicleComponent(carroid, DOF2_GetInt(fileconce, "Nitro"));
	}
	if(DOF2_GetInt(fileconce, "TSuspensao") == 1)
	{
		AddVehicleComponent(carroid, DOF2_GetInt(fileconce, "Suspensao"));
	}
	if(DOF2_GetInt(fileconce, "TNeon") == 1)
	{
		ChangeVehicleNeon(carroid, DOF2_GetInt(fileconce, "Neon"));
	}
	if(DOF2_GetInt(fileconce, "TAutoTunning") == 1)
	{
		AutoTunningRun(carroid);
	}
	if(DOF2_GetInt(fileconce, "TDono") == 1)
	{
		format(string, sizeof(string), STRTEXT3D_CONCE, DOF2_GetString(fileconce, "Dono"), conceid, DOF2_GetString(fileconce, "DataSet"));
	}
	else
	{
		format(string, sizeof(string), STRTEXT3D_CONCE_VENDA, GetVehicleName(carroid), DOF2_GetString(fileconce, "Dono"), DOF2_GetInt(fileconce, "Preco"), conceid, DOF2_GetString(fileconce, "DataSet"));
	}
	ConceLabel[conceid] = CreateDynamic3DTextLabel(string, -1, 0.0, 0.0, 0.15, 10.0, INVALID_PLAYER_ID, carroid, 1, -1, -1, -1, 50.0);
	return 1;
}

public TestDrive(playerid)
{
	if(intest[playerid] == 1)
	{
		intest[playerid] = 0;
		incar[playerid] = 1;

		TogglePlayerControllable(playerid, 0);
		SendClientMessage(playerid, 0x6495EDAA, "Seu tempo de Test-Drive terminou, aperte F.");
	}
	return 1;
}

public DesligarAlarmeCar(vehicleid)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, lights, VEHICLE_PARAMS_OFF, doors, bonnet, boot, objective);
	return 1;
}

main()
{
    printf("Total de Objetos: %d", CountDynamicObjects());
	printf("Total de Pickups: %d", CountDynamicPickups());
	printf("Total de Checkpoints: %d", CountDynamicCPs());
	printf("Total de Race Checkpoints: %d", CountDynamicRaceCPs());
	printf("Total de MapIcons: %d", CountDynamicMapIcons());
	printf("Total de TextLabels: %d", CountDynamic3DTextLabels());
	printf("Total de Areas: %d", CountDynamicAreas());

	print("\n\n* Nicks proibidos!");
	print("* os seguintes nicks estão proibidos de entrar no servidor:");
	print("\tcom[1-9], lpt[1-9], ipt[1-9], clock$, nul, aux, prn, con,\n\t\tcom1.aux.[a-zA-Z0-9]\n\n");
	
	print("\n=========================================");
	print("                  [BSL]                    ");
	print("=========================================\n");

}
public OnGameModeInit()
{
	CarregarPortoes();
	CriarArqs();
	LoadTerris();
	UpdateGangs();
	for(new i=1;i<MAX_TERRIS;i++)
	    for(new e=1;e<MAX_GANGS;e++)
	        TempoCheck[i][e]=TEMPO_CHECK;
	SetTimer("CheckGuerra",1000,true);
	SetTimer("Textdraw",1000,true);
	SetTimer("DinheiroTerris",TEMPO_GRANA,true);
	
	CreateActor(217,1288.0577,-1867.9619,13.6020,272.2852);//Ajuda
    CreateActor(101,820.1870,1.8508,1004.1797,274.1393); // Caixa Banco
	CreateActor(65,207.5690,-98.7048,1005.2578,172.5948); // Vendedor Roupas
	CreateActor(55,501.8452,-20.1659,1000.6797,89.8192); // Vendedor Bebidas
	CreateActor(217,1807.3605,-1772.5485,13.5469,99.7600); // Vendedor Carros
	CreateActor(217,152.2111,-1602.8928,13.8311,42.0928); // Vendedor Barcos
	CreateActor(217,1116.7048,-1769.6554,14.6385,90.1822); // Vendedor Bikes
	CreateActor(217,134.9372,1715.5566,1000.0667,179.7698); // Multas
	CreateActor(29,1287.9343,-1875.4918,13.6020,270.1955); // Creditos
	
 	for(new gangid=1;gangid<MAX_GANGS;gangid++)
	    if(fexist(FormatGang(gangid)))
	        BancoGG[gangid]=DOF2_GetInt(FormatGang(gangid),"Banco");
	        
	MapAndreas_Init(MAP_ANDREAS_MODE_FULL);
	
		    //Pedágio Rodeo
    cancelas[1] = CreateObject(968, 67.83, -1529.78, 4.79,   0.00, 90.00, 90.00);//da direita
    cancelas[2] = CreateObject(968, 67.47, -1537.44, 4.79,   0.00, 90.00, -90.00);//da esquerda
	//Pedágio Los Santos
    cancelas[3] = CreateObject(968, 1731.04, 511.49, 28.48,   0.00, -90.00, -20.00);//da esquerda
    cancelas[4] = CreateObject(968, 1738.09, 509.31, 28.57,   0.00, 90.00, -20.00);//da direita
    //Pedágio San Fierro
    cancelas[5] = CreateObject(968, -1411.68, 818.56, 47.18,   360.00, -90.00, -48.40);//da esquerda
    cancelas[6] = CreateObject(968, -1404.05, 817.20, 47.18,   360.00, 90.00, -48.40);//da direitave

 /*   //deposito
    CreateObject(6189, -2987.37793, -116.56050, -4.57750,   0.00000, 0.00000, -90.00000);
    CreateObject(6189, -3117.90967, -116.84130, -4.57750,   0.00000, 0.00000, -90.00000);
    CreateObject(19531, -3244.75073, -117.24610, 10.01770,   0.00000, 0.00000, 0.00000);
    CreateObject(19531, -3244.68970, 7.21150, 10.01770,   0.00000, 0.00000, 0.00000);
    CreateObject(19531, -3244.74487, -240.48169, 10.01770,   0.00000, 0.00000, 0.00000);
    CreateObject(19913, -3306.97729, -278.05438, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3307.00806, -228.05278, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3307.02686, -178.09338, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3306.98853, -128.10635, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3306.76831, -78.14607, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3306.73462, 21.90682, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3306.76074, -28.11524, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3306.83252, 44.73951, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3231.89600, 69.65356, 15.36980,   0.00000, 0.00000, 0.00000);
    CreateObject(19913, -3281.90234, 69.61137, 15.36980,   0.00000, 0.00000, 0.00000);
    CreateObject(19913, -3207.26563, 69.66763, 15.36980,   0.00000, 0.00000, 0.00000);
    CreateObject(19913, -3182.28687, 44.49428, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3182.28809, -5.47082, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3182.15674, -55.63885, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3181.97290, -75.16230, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3182.33545, -158.46060, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3182.27051, -208.59244, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3182.23242, -258.57434, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3182.64380, -277.93115, 15.36980,   0.00000, 0.00000, 90.00000);
    CreateObject(19913, -3207.75757, -303.04669, 15.36980,   0.00000, 0.00000, 0.00000);
    CreateObject(19913, -3257.49390, -303.07904, 15.36980,   0.00000, 0.00000, 0.00000);
    CreateObject(19913, -3281.75439, -302.80469, 15.36980,   0.00000, 0.00000, 0.00000);
    CreateObject(6189, -2860.79663, -116.66390, -16.65420,   -10.92000, 0.00000, -90.00000);
    //fim deposito
	CreateObject(3578, 1805.39600, -1857.28979, 11.64510,   0.00000, 0.00000, 0.20100);
	CreateObject(3578, 1795.11218, -1857.31030, 11.64510,   0.00000, 0.00000, 0.20100);
	CreateObject(3578, 1784.81787, -1857.32544, 11.64510,   0.00000, 0.00000, 0.20100);
	CreateObject(3578, 1779.94531, -1862.42810, 11.64510,   0.00000, 0.00000, 90.00000);
	CreateObject(970, 1782.84326, -1857.43250, 12.10440,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 1787.94739, -1857.43140, 12.12329,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 1793.03882, -1857.41101, 12.10750,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 1798.16675, -1857.37305, 12.11680,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 1803.23291, -1857.34888, 12.10590,   0.00000, 0.00000, 359.91241);
	CreateObject(970, 1808.35681, -1857.36609, 12.10000,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 1779.97656, -1859.54590, 12.01440,   0.00000, 0.00000, 89.17570);
	CreateObject(1256, 1804.45715, -1862.15161, 13.16400,   0.00000, 0.00000, -90.00000);
	CreateObject(1256, 1797.64209, -1862.23633, 13.16400,   0.00000, 0.00000, -90.00000);
	CreateObject(1256, 1791.17932, -1862.20569, 13.16400,   0.00000, 0.00000, -90.00000);
	CreateObject(19973, 1795.65161, -1857.31750, 12.42610,   0.00000, 0.00000, 91.00000);
	CreateObject(19973, 1806.01807, -1857.27490, 12.42610,   0.00000, 0.00000, 91.00000);
	CreateObject(19966, 1810.38562, -1857.21204, 12.56960,   0.00000, 0.00000, 113.00000);
	CreateObject(7033, 65.92757, -1533.64270, 8.35522,   0.85940, 0.00000, 83.36540);
	CreateObject(3877, 67.97687, -1531.78381, 5.55103,   0.00000, 0.00000, 353.98389);
	CreateObject(3877, 68.43063, -1522.03809, 5.57869,   0.00000, 0.00000, 356.56229);
	CreateObject(3877, 67.37960, -1545.60303, 5.69800,   0.00000, 0.00000, 356.56229);
	CreateObject(3877, 67.56000, -1536.32275, 5.70630,   0.00000, 0.00000, 354.84341);
	CreateObject(3877, 28.48203, -1527.64014, 5.68099,   0.00000, 0.00000, 351.40561);
	CreateObject(3877, 19.85800, -1525.82043, 5.01831,   0.00000, 0.00000, 348.82730);
	CreateObject(3877, 13.39585, -1524.42896, 4.61453,   0.00000, 0.00000, 348.82730);
	CreateObject(966, 67.82000, -1530.08997, 3.97000,   0.00000, 0.00000, -90.00000);
	CreateObject(3877, 68.02000, -1530.89001, 5.58000,   0.00000, 0.00000, 356.56000);
	CreateObject(3877, 67.40000, -1544.82996, 5.70000,   0.00000, 0.00000, 356.56000);
	CreateObject(966, 67.46000, -1537.25000, 3.97000,   0.00000, 0.00000, 90.00000);
	CreateObject(1237, 1723.80872, 514.22821, 27.67107,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, 1745.03760, 506.91006, 27.66953,   0.00000, 0.00000, 0.00000);
	CreateObject(966, 1737.81006, 509.45999, 27.72000,   0.00000, 0.00000, -200.00000);
	CreateObject(1237, 1737.02002, 509.85999, 27.67000,   0.00000, 0.00000, 0.00000);
	CreateObject(966, 1731.37000, 511.35999, 27.72000,   0.00000, 0.00000, -20.00000);
	CreateObject(1237, 1732.18994, 511.12000, 27.67000,   0.00000, 0.00000, 0.00000);
	CreateObject(7033, -1407.84851, 817.63965, 50.38372,   0.00000, 0.00000, 316.00000);
	CreateObject(987, -1420.95288, 821.13605, 45.69007,   0.00000, 0.00000, 48.00000);
	CreateObject(987, -1395.76294, 813.71851, 46.30769,   0.00000, 0.00000, 227.99878);
	CreateObject(1237, -1399.08997, 811.53998, 46.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1402.26001, 802.60999, 46.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1403.02002, 803.23999, 46.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1401.47998, 801.88000, 46.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1401.18994, 800.46997, 46.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1400.38000, 799.64001, 46.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1399.56006, 798.87000, 46.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1393.13000, 813.65002, 46.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1392.59998, 812.81000, 46.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1391.95996, 811.98999, 46.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1391.34998, 811.14001, 46.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1390.64001, 810.44000, 46.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1389.93005, 809.78998, 46.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1389.39001, 809.00000, 46.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1416.71997, 824.44000, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1410.90002, 817.78003, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1422.30005, 822.09003, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1423.13000, 822.63000, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1423.85999, 823.42999, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1424.65002, 823.98999, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1425.37000, 824.54999, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1426.14001, 825.08002, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1426.93994, 825.66998, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1412.89001, 831.84003, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1413.88000, 832.34998, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1414.71997, 833.13000, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1415.56006, 833.77002, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1416.22998, 834.44000, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1416.93994, 835.09003, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(1237, -1417.77002, 835.57001, 46.26000,   0.00000, 0.00000, 0.00000);
	CreateObject(966, -1404.27002, 817.42999, 46.37000,   0.00000, 0.00000, -228.75000);
	CreateObject(966, -1411.50000, 818.28003, 46.37000,   0.00000, 0.00000, 311.39999);
	CreateObject(7033, 1735.15161, 514.39111, 31.84170,   -3.86000, 0.00000, 343.00000);
	CreateObject(3475, 1724.43591, 520.33234, 29.40053,   0.00000, 0.00000, 350.71533);
	CreateObject(3475, 1723.08813, 514.68781, 29.40053,   0.00000, 0.00000, 343.67068);
	CreateObject(3475, 1746.08533, 507.66214, 29.74887,   0.00000, 0.00000, 161.67606);
	CreateObject(3475, 1747.68469, 513.44836, 29.74887,   0.00000, 0.00000, 164.62865);
	CreateObject(18766, 1747.38599, 503.83975, 27.94210,   0.00000, 88.00000, 342.00000);
	CreateObject(18766, 1750.53796, 502.81531, 28.04310,   0.00000, 88.00000, 342.00000);
	CreateObject(18766, 1747.38599, 503.83975, 27.94210,   0.00000, 88.00000, 342.00000);
	CreateObject(18766, 1718.60303, 512.67798, 27.94210,   0.00000, 88.00000, 342.00000);
	CreateObject(18766, 1716.76147, 513.27301, 27.85210,   0.00000, 88.00000, 342.00000);  */
	
	coveiro = CreateObject(19381, 889.15906, -1077.77966, 23.19150,   0.00000, 90.00000, 0.84880);
	
    SetTimer("hora", 1000, 1);
    
    ShowPlayerMarkers(PLAYER_MARKERS_MODE_GLOBAL);

    vehlist = LoadModelSelectionMenu("vehicles.txt");
    aerolist = LoadModelSelectionMenu("planes.txt");
    boatlist = LoadModelSelectionMenu("boats.txt");
    skinlist = LoadModelSelectionMenu("skins.txt");
    
	if(!fexist("Conce/setados.txt"))
	{
		new File:fhnd = fopen("Conce/setados.txt", io_append);
		fclose(fhnd);
	}

	if(!DOF2_FileExists("/Interiores/int0.ini"))
	{
		DOF2_CreateFile("/Interiores/int0.ini");
		DOF2_SetInt("/Interiores/int0.ini", "Int", 1);
		DOF2_SetFloat("/Interiores/int0.ini", "EX", 222.9534);
		DOF2_SetFloat("/Interiores/int0.ini", "EY", 1287.7649);
		DOF2_SetFloat("/Interiores/int0.ini", "EZ", 1082.1406);
	}
	if(!DOF2_FileExists("/Interiores/int1.ini"))
	{
		DOF2_CreateFile("/Interiores/int1.ini");
		DOF2_SetInt("/Interiores/int1.ini", "Int", 4);
		DOF2_SetFloat("/Interiores/int1.ini", "EX", 261.0827);
		DOF2_SetFloat("/Interiores/int1.ini", "EY", 1284.6899);
		DOF2_SetFloat("/Interiores/int1.ini", "EZ", 1080.2578);
	}
	if(!DOF2_FileExists("/Interior/int2.ini"))
	{
		DOF2_CreateFile("/Interiores/int2.ini");
		DOF2_SetInt("/Interiores/int2.ini", "Int", 9);
		DOF2_SetFloat("/Interiores/int2.ini", "EX", 260.6734);
		DOF2_SetFloat("/Interiores/int2.ini", "EY", 1237.7909);
		DOF2_SetFloat("/Interiores/int2.ini", "EZ", 1084.2578);
	}
	if(!DOF2_FileExists("/Interior/int3.ini"))
	{
		DOF2_CreateFile("/Interiores/int3.ini");
		DOF2_SetInt("/Interiores/int3.ini", "Int", 15);
		DOF2_SetFloat("/Interiores/int3.ini", "EX", 376.8426);
		DOF2_SetFloat("/Interiores/int3.ini", "EY", 1417.3226);
		DOF2_SetFloat("/Interiores/int3.ini", "EZ", 1081.3281);
	}
	if(!DOF2_FileExists("/Interiores/int4.ini"))
	{
		DOF2_CreateFile("/Interiores/int4.ini");
		DOF2_SetInt("/Interiores/int4.ini", "Int", 15);
		DOF2_SetFloat("/Interiores/int4.ini", "EX", 295.2874);
		DOF2_SetFloat("/Interiores/int4.ini", "EY", 1473.2769);
		DOF2_SetFloat("/Interiores/int4.ini", "EZ", 1080.2578);
	}
	if(!DOF2_FileExists("/Interiores/int5.ini"))
	{
		DOF2_CreateFile("/Interiores/int5.ini");
		DOF2_SetInt("/Interiores/int5.ini", "Int", 15);
		DOF2_SetFloat("/Interiores/int5.ini", "EX", 327.9431);
		DOF2_SetFloat("/Interiores/int5.ini", "EY", 1478.3801);
		DOF2_SetFloat("/Interiores/int5.ini", "EZ", 1084.4375);
	}
	if(!DOF2_FileExists("/Interiores/int6.ini"))
	{
		DOF2_CreateFile("/Interiores/int6.ini");
		DOF2_SetInt("/Interiores/int6.ini", "Int", 10);
		DOF2_SetFloat("/Interiores/int6.ini", "EX", 2270.1050);
		DOF2_SetFloat("/Interiores/int6.ini", "EY", -1210.3917);
		DOF2_SetFloat("/Interiores/int6.ini", "EZ", 1047.5625);
	}
	if(!DOF2_FileExists("/Interiores/int7.ini"))
	{
		DOF2_CreateFile("/Interiores/int7.ini");
		DOF2_SetInt("/Interiores/int7.ini", "Int", 2);
		DOF2_SetFloat("/Interiores/int7.ini", "EX", 447.1211);
		DOF2_SetFloat("/Interiores/int7.ini", "EY", 1397.8444);
		DOF2_SetFloat("/Interiores/int7.ini", "EZ", 1084.3047);
	}
	if(!DOF2_FileExists("/Interiores/int8.ini"))
	{
		DOF2_CreateFile("/Interiores/int8.ini");
		DOF2_SetInt("/Interiores/int8.ini", "Int", 6);
		DOF2_SetFloat("/Interiores/int8.ini", "EX", 2196.0063);
		DOF2_SetFloat("/Interiores/int8.ini", "EY", -1204.6326);
		DOF2_SetFloat("/Interiores/int8.ini", "EZ", 1049.0234);
	}
	if(!DOF2_FileExists("/Interiores/int9.ini"))
	{
		DOF2_CreateFile("/Interiores/int9.ini");
		DOF2_SetInt("/Interiores/int9.ini", "Int", 3);
		DOF2_SetFloat("/Interiores/int9.ini", "EX", 235.3416);
		DOF2_SetFloat("/Interiores/int9.ini", "EY", 1187.2882);
		DOF2_SetFloat("/Interiores/int9.ini", "EZ", 1080.2578);
	}
	if(!DOF2_FileExists("/Interiores/int10.ini"))
	{
		DOF2_CreateFile("/Interiores/int10.ini");
		DOF2_SetInt("/Interiores/int10.ini", "Int", 2);
		DOF2_SetFloat("/Interiores/int10.ini", "EX", 490.9987);
		DOF2_SetFloat("/Interiores/int10.ini", "EY", 1399.4164);
		DOF2_SetFloat("/Interiores/int10.ini", "EZ", 1080.2578);
	}
	if(!DOF2_FileExists("/Interiores/int11.ini"))
	{
		DOF2_CreateFile("/Interiores/int11.ini");
		DOF2_SetInt("/Interiores/int11.ini", "Int", 5);
		DOF2_SetFloat("/Interiores/int11.ini", "EX", 227.1212);
		DOF2_SetFloat("/Interiores/int11.ini", "EY", 1114.1840);
		DOF2_SetFloat("/Interiores/int11.ini", "EZ", 1080.9972);
	}
	if(!DOF2_FileExists("/Interiores/int12.ini"))
	{
		DOF2_CreateFile("/Interiores/int12.ini");
		DOF2_SetInt("/Interiores/int12.ini", "Int", 7);
		DOF2_SetFloat("/Interiores/int12.ini", "EX", 225.6624);
		DOF2_SetFloat("/Interiores/int12.ini", "EY", 1022.5345);
		DOF2_SetFloat("/Interiores/int12.ini", "EZ", 1084.0145);
	}
	if(!DOF2_FileExists("/Interiores/int13.ini"))
	{
		DOF2_CreateFile("/Interiores/int13.ini");
		DOF2_SetInt("/Interiores/int13.ini", "Int", 5);
		DOF2_SetFloat("/Interiores/int13.ini", "EX", 1299.1400);
		DOF2_SetFloat("/Interiores/int13.ini", "EY", -794.7700);
		DOF2_SetFloat("/Interiores/int13.ini", "EZ", 1084.0078);
	}
	if(!DOF2_FileExists("/Interiores/int14.ini"))
	{
		DOF2_CreateFile("/Interiores/int14.ini");
		DOF2_SetInt("/Interiores/int14.ini", "Int", 2);
		DOF2_SetFloat("/Interiores/int14.ini", "EX", 2575.7492);
		DOF2_SetFloat("/Interiores/int14.ini", "EY", -1300.5104);
		DOF2_SetFloat("/Interiores/int14.ini", "EZ", 1060.9843);
	}
	if(!DOF2_FileExists("/Interiores/int15.ini"))
	{
		DOF2_CreateFile("/Interiores/int15.ini");
		DOF2_SetInt("/Interiores/int15.ini", "Int", 1);
		DOF2_SetFloat("/Interiores/int15.ini", "EX", -2042.4200);
		DOF2_SetFloat("/Interiores/int15.ini", "EY", 178.5899);
		DOF2_SetFloat("/Interiores/int15.ini", "EZ", 28.8444);
	}
	if(!DOF2_FileExists("/Interiores/int16.ini"))
	{
		DOF2_CreateFile("/Interiores/int16.ini");
		DOF2_SetInt("/Interiores/int16.ini", "Int", 5);
		DOF2_SetFloat("/Interiores/int16.ini", "EX", 1263.8595);
		DOF2_SetFloat("/Interiores/int16.ini", "EY", -783.7839);
		DOF2_SetFloat("/Interiores/int16.ini", "EZ", 1091.9063);
	}
	if(!DOF2_FileExists("/Interiores/int17.ini"))
	{
		DOF2_CreateFile("/Interiores/int17.ini");
		DOF2_SetInt("/Interiores/int17.ini", "Int", 10);
		DOF2_SetFloat("/Interiores/int17.ini", "EX", 2016.2699);
		DOF2_SetFloat("/Interiores/int17.ini", "EY", 1017.7790);
		DOF2_SetFloat("/Interiores/int17.ini", "EZ", 996.8750);
	}
	if(!DOF2_FileExists("/Interiores/int18.ini"))
	{
		DOF2_CreateFile("/Interiores/int18.ini");
		DOF2_SetInt("/Interiores/int18.ini", "Int", 2);
		DOF2_SetFloat("/Interiores/int18.ini", "EX", 271.8849);
		DOF2_SetFloat("/Interiores/int18.ini", "EY", 306.6319);
		DOF2_SetFloat("/Interiores/int18.ini", "EZ", 999.1484);
	}

	#if _CHANGE_NAME_BEFORE_KICK == true
	for(new i = 0; i < MAX_PLAYER_NAME; i++)
	{
		szTmpKickName[i] = '_';
		szTmpKickName[MAX_PLAYER_NAME-1] = '\0';
	}
	print("* O nick esta sendo temporarimente usado para kickar crashers:");
	printf("\t%s\n\n", szTmpKickName);
	#endif
	
	// GetRcon
	GetServerVarAsString("rcon_password", rconpass, sizeof(rconpass));

 	// GetWeburl
	GetServerVarAsString("weburl", weburl, sizeof(weburl));

	#if defined SAMsitesUser
	SAM_start();
	#endif
	
	LoadTextDraws();
	LoadCheckpointsFix();
	LoadGangZonesFix();
	LoadMapIconsFix();
	Load3DTextsFix();
	LoadPickupsFix();
	LoadObjectsFix();
	LoadVehiclesFix();
	LoadFilesIniItens();
	
	LoadDynamicObjectsFromFile("Objetos/Casas.txt");

	LoadStaticVehiclesFromFile("Conce/setados.txt");
	LoadStaticVehiclesFromFile("vehicles/trains.txt");
	LoadStaticVehiclesFromFile("vehicles/lv_law.txt");
	LoadStaticVehiclesFromFile("vehicles/sf_law.txt");
	LoadStaticVehiclesFromFile("vehicles/ls_law.txt");
	

	#if defined SAMsitesUser
	// Pier 69
	SAMFix[0] = AddStaticSAM(-1394.8973, 494.7229, 19.5001);
	CreateSamLabel(SAMFix[0], "Lança Míssil ", Verde, 30.0, 0);

	SAMFix[1] = AddStaticSAM(-1324.3402, 495.1183, 22.5079);
	CreateSamLabel(SAMFix[1], "Lança Míssil ", Verde, 30.0, 0);

	// Área 51
	SAMFix[2] = AddStaticSAM(237.5797, 1698.6908, 23.8673);
	CreateSamLabel(SAMFix[2], "Lança Míssil ", Verde, 30.0, 0);

	SAMFix[3] = AddStaticSAM(15.3281, 1720.9646, 23.8673);
	CreateSamLabel(SAMFix[3], "Lança Míssil ", Verde, 30.0, 0);

	SAMFix[4] = AddStaticSAM(188.2694, 2083.4644, 23.9063);
	CreateSamLabel(SAMFix[4], "Lança Míssil ", Verde, 30.0, 0);

	SAMFix[5] = AddStaticSAM(354.5453, 2030.3062, 23.8750);
	CreateSamLabel(SAMFix[5], "Lança Míssil ", Verde, 30.0, 0);
	#endif

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		#if defined LaserUser
		SetPVarInt(i, "laser", 0);
		SetPVarInt(i, "color", 18643);
		#endif
	}
	
	TimersX[0] = SetTimer("Combustivel", 40000, 1);
	TimersX[1] = SetTimer("Taxi", 5000, 1);
	TimersX[2] = SetTimer("CronServe", 1000, 1);
	TimersX[3] = SetTimer("LevelUP", 60000, 1);
	TimersX[4] = SetTimer("Clima", 500000, true);
	TimersX[5] = SetTimer("ChangeRCONPassword", 2000, 1);
	TimersX[6] = SetTimer("RandomMSGs", 200000, true);
	TimersX[7] = SetTimer("UpdateCarInfos", 200, true);
	TimersX[8] = SetTimer("locais", 5000, true);

	
	#if defined CameraUser
	TimersX[6] = SetTimer("AttachObject", 5000, 0);
	#endif
	
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);

	#if defined AnimLoopsUser
	UsePlayerPedAnims();
	#endif
	
    SetGameModeText(GAMEMOD_NOME);
	SendRconCommand("language "#Linguagem"");
	SendRconCommand("mapname "#MAPA_NOME"");

	print("Servidor iniciado com sucesso!");
	return 1;
}

public OnGameModeExit()
{
	for(new playerid = 0; playerid < MAX_PLAYERS; playerid++)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, Vermelho, "O servidor foi reiniciado. Aguarde...");
		}
	}
	
	ConstrucaoVeiculoCriado = (ConstrucaoVeiculoCriado == 0x01) ? (DestroyVehicle(ConstrucaoVeiculo), ConstrucaoVeiculoCriado = 0x00) : (DestroyVehicle(ConstrucaoVeiculo), ConstrucaoVeiculoCriado = 0x00);
	KillTimer(rCounter);
	KillTimer(CountTimer);
	Loop(i, MAX_PLAYERS)
	{
		DisablePlayerRaceCheckpoint(i);
		DestroyVehicle(CriarVehCorrida[i]);
		NaCorrida[i] = false;
		KillTimer(InfoTimer[i]);
	}
	JoinCount = 0;
	FinishCount = 0;
	TempoProgresso = 0;

	if(EventoCriado == 1)
	{
		EventoCriado = 0;
		GangZoneHideForAll(guerra);
		GangZoneDestroy(guerra);
	}
	
	// Anti Rcon Hack
	format(STRX, sizeof(STRX), "rcon_password %s", rconpass);
	SendRconCommand(STRX);

 	if(EventoCriado == 1)
	{
		EventoCriado = 0;
		GangZoneHideForAll(guerra);
		GangZoneDestroy(guerra);
	}
	
	for(new i=0; i < MAX_PLAYERS+1; i++)
	{
		if(grider[i][0])
		{
	    	DestroyObject(grider[i][0]);
	    	DestroyObject(grider[i][1]);
	    	DestroyObject(grider[i][2]);
	    	grider[i][0] = 0;
		}
	}

	DeleteTextDraws();
	Destroy3DTextsFix();
	DestroyCheckpointsFix();
	DestroyGangZonesFix();
	DestroyMapIconsFix();
	DestroyPickupsFix();
	DestroyObjectsFix();
	DestroyVehiclesFix();
	UnloadFilesIniItens();
	UnloadAllDynamicObjects();
	UnloadAllStaticVehicles();

	Loop(o, sizeof(TimersX))
	{
		KillTimer(TimersX[o]);
	}

	#if defined CameraUser
	for(new _@x = 1; _@x < MAX_VEHICLES; _@x++)
	{
		if(VeiculoValido[_@x] == 1)
		{
			DestroyDynamicObject(ObjetoCarro[_@x]);
		}
	}
	#endif
	
	DOF2_Exit();

	print("\n\n\n\nServidor desligado com sucesso!\n\n");
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	if(PlayerInfo[playerid][Logged] == 0)
	{
	    ClearChatbox(playerid, 20);
	    ShowTerris(playerid);
  		InterpolateCameraPos(playerid, 1438.223999, -878.593322, 182.337188, 1362.060913, -855.190246, 91.901931, 9000);
  		InterpolateCameraLookAt(playerid, 1438.356079, -879.008605, 177.356216, 1365.680053, -851.821289, 91.158912, 9000);
  		SetPlayerPos(playerid, 1429.7990,-807.6647,86.4713);
  		SetTimerEx("ShowBVL", 8000, 0, "d", playerid);
  		SendClientMessage(playerid, 0x6495EDAA, "[BSL]{FFFFFF} O servidor está sendo carregado aguarde alguns segundos!");
    }
	return 1;
}

forward ShowBVL(playerid);
public ShowBVL(playerid)
{
    TextDrawHideForPlayer(playerid, WE_GAMES1);
	TextDrawHideForPlayer(playerid, WE_GAMES2);
	TextDrawHideForPlayer(playerid, BoxCarregando);
	SelectTextDraw(playerid, 0x00EEEEFF);
	TextDrawShowForPlayer(playerid, Registro[0]);
	TextDrawShowForPlayer(playerid, Registro[1]);
	TextDrawShowForPlayer(playerid, Registro[2]);
	TextDrawShowForPlayer(playerid, Registro[3]);
	TextDrawShowForPlayer(playerid, Registro[4]);
	TextDrawShowForPlayer(playerid, Registro[5]);
	TextDrawShowForPlayer(playerid, Registro[6]);
	TextDrawShowForPlayer(playerid, Registro[7]);
	TextDrawShowForPlayer(playerid, Registro[8]);
	TextDrawShowForPlayer(playerid, Registro[9]);
	TextDrawShowForPlayer(playerid, Registro[10]);
	TextDrawShowForPlayer(playerid, Registro[11]);
	TextDrawShowForPlayer(playerid, Registro[12]);
	//TextDrawShowForPlayer(playerid, Registro[13]);
	TextDrawShowForPlayer(playerid, Registro[14]);
	TextDrawShowForPlayer(playerid, Registro[15]);
	TextDrawShowForPlayer(playerid, Registro[16]);
    TextDrawShowForPlayer(playerid, Registro[17]);
    TextDrawShowForPlayer(playerid, Registro[18]);
    TextDrawShowForPlayer(playerid, Registro[19]);
    ClearChatbox(playerid, 20);
    SendClientMessage(playerid, 0xFFFFFFFF, "-  {6495ED}INFORMAÇÕES DO SERVIDOR");
  	SendClientMessage(playerid, 0xFFFFFFFF, "-  {FFFFFF}Brasil Sem Limites RPG 5.6 {FF1E1E}[3.7]");
	SendClientMessage(playerid, 0xFFFFFFFF, "-  {6495ED}Seja bem-vindo(a) novamente, caso tenha dúvidas, use: /Ajuda ou /Comandos");
    SendClientMessage(playerid, 0xFFFFFFFF, "-  IP do Servidor: {6495ED}Em construção!");
    SendClientMessage(playerid, 0xFFFFFFFF, "-  Site do Servidor: {6495ED}Em construcao");
	return 1;
}

public OnPlayerConnect(playerid)
{
	DeletePVar(playerid, "TempoNoLogin");
	TxtTerri[playerid]=TextDrawCreate(140.0,365.0," ");
	TextDrawLetterSize(TxtTerri[playerid],0.25,1.0);
	TextDrawSetShadow(TxtTerri[playerid],1);
	TextDrawSetOutline(TxtTerri[playerid],1);
	TextDrawFont(TxtTerri[playerid],1);
	
    new file[128];
	new szPlayerName[MAX_PLAYER_NAME], connecting_ip[24];
	GetPlayerName(playerid, szPlayerName, MAX_PLAYER_NAME);
	format(file2, sizeof(file2), PASTA_CONTAS, encrypt(szPlayerName)); // Criptografado
	format(file, sizeof(file), PASTA_CONTAS, szPlayerName);
	format(Vnewban, 32, BanDir, VBPlayer(playerid));
	
    grider[playerid][0] = 0;
	grider[playerid][1] = 0;
	grider[playerid][2] = 0;
	BaterCartao[playerid] = 0;
	Batida[playerid] = 0;
	TextDrawShowForPlayer(playerid, WE_GAMES1);
	TextDrawShowForPlayer(playerid, WE_GAMES2);
	TextDrawShowForPlayer(playerid, BoxCarregando);
	
    GangID[playerid]=0;
    SetPVarInt(playerid,"GangID",0);
	GangLevel[playerid]=0;

    if(DOF2_FileExists(file2))
	{
		RenameFileAccount(file2, file);
		bIllegalPlayer[playerid] = true;
		SendClientMessage(playerid, Vermelho, "Foi feita uma atualização de segurança em sua conta, relogue por favor.");
		return Kick(playerid);
	}

	if(DOF2_FileExists(Vnewban))
	{
		bIllegalPlayer[playerid] = true;
		return VBanCheck(playerid);
	}

	GetPlayerIp(playerid, connecting_ip, 24);
	new num_players_on_ip = GetNumberOfPlayersOnThisIP(connecting_ip);

	if(strcmp("127.0.0.1", connecting_ip, true) != 0)
	{
		if(num_players_on_ip > MAX_CONNECTIONS_FROM_IP)
		{
			printf("AntiBot: %s (%d) excedeu o limite de %d conexões por IP: %s", szPlayerName, playerid, MAX_CONNECTIONS_FROM_IP, connecting_ip);
			bIllegalPlayer[playerid] = true;
			return Ban(playerid);
		}
	}

	for(new i = 0; i < sizeof(NicksProibidos); i++)
	{
		if(!strcmp(szPlayerName, NicksProibidos[i], true, 3))
		{
			if(DOF2_FileExists(file))
			{
				trocandonick[playerid] = 1;
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Este nick está extremamente proibido no servidor.");
				return aKick(playerid, szPlayerName);
			}
		}
	}

	if(!strcmp(szPlayerName, "com", true, 3) || !strcmp(szPlayerName, "lpt", true, 3) || !strcmp(szPlayerName, "ipt", true, 3))
	{
		if(DOF2_FileExists(file))
		{
			trocandonick[playerid] = 1;
		}
		else if(szPlayerName[3] >= '0' && szPlayerName[3] <= '9' && szPlayerName[4] == '\0')
		{
			return aKick(playerid, szPlayerName);
		}
	}
	else if(!strcmp(szPlayerName, "clock$", true, 6))
	{
		if(DOF2_FileExists(file))
		{
			trocandonick[playerid] = 1;
		}
		else
		{
			return aKick(playerid, szPlayerName);
		}
	}
	else
	{
		#if _CHANGE_NAME_BEFORE_KICK == true
		if(!strcmp(szPlayerName, szTmpKickName, true, MAX_PLAYER_NAME))
		{
			return aKick(playerid, szPlayerName);
		}
		#endif
	}

	for(new i = 0; i < sizeof(BadNameChars); i++)
	{
		if(strfind(szPlayerName, BadNameChars[i], true) != -1 || strlen(szPlayerName) > MAX_PLAYERS)
		{
			if(DOF2_FileExists(file))
			{
				trocandonick[playerid] = 1;
			}
			else
			{
				return aKick(playerid, szPlayerName);
			}
		}
	}

	LoadPlayerTextDraws(playerid);

	bIllegalPlayer[playerid] = false;

    PlayerInfo[playerid][Logged] = 0;
	PlayerInfo[playerid][SCON] = false;
	PlayerInfo[playerid][SpawnDance] = true;
	PlayerInfo[playerid][LoginsFalsos] = 0;
	
	SetTimerEx("AfterPlayerConnect", 1000, 0, "i", playerid);

	ResetVarsEditSamuGay(playerid);
	ResetVarsEditPortao(playerid);
	SetTimerEx("semporte", 1000, 1, "e", playerid);
	
	SetTimerEx("CheckHacks", 1000, true, "i", playerid);

	#if defined LaserUser
	SetPVarInt(playerid, "laser", 0);
	SetPVarInt(playerid, "color", 18643);
	#endif
	
	if(Mute[playerid] == 1)
	{
	   SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você está calado e não pode falar!");
	   return 1;
	}

	xplayerDM[playerid] = 0;
	xsequestrado[playerid] = 0;

	if(DOF2_FileExists(file))
	{
		if(DOF2_GetInt(file, "Admin") > 0)
		{
			admin[playerid] = 1;
			pAdmin[playerid] = DOF2_GetInt(file, "Admin");
			DOF2_SetInt(file, "aAdmin", 1);
		}
		else
		{
			admin[playerid] = 0;
			pAdmin[playerid] = 0;
			DOF2_SetInt(file, "aAdmin", 0);
		}
		if(DOF2_GetInt(file, "Preso") == 0)
		{
			preso[playerid] = 0;
			algemado[playerid] = 0;
		}
		if(DOF2_GetInt(file, "Lutas") == 1)
		{
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
		}
		if(DOF2_GetInt(file, "Lutas") == 2)
		{
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
		}
		if(DOF2_GetInt(file, "Lutas") == 3)
		{
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
		}
		if(DOF2_GetInt(file, "Lutas") == 4)
		{
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
		}
		if(DOF2_GetInt(file, "Lutas") == 5)
		{
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
		}
		if(DOF2_GetInt(file, "Lutas") == 6)
		{
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
		}
		DOF2_SetInt(file, "DM", 0);
		matou[playerid] = DOF2_GetInt(file, "Matou");
		morreu[playerid] = DOF2_GetInt(file, "Morreu");
	}
	else
	{
		admin[playerid] = 0;
		pAdmin[playerid] = 0;
	}

	order[playerid] = 0;
	blockpm[playerid] = 0;
	morar[playerid] = 0;
	moradia[playerid] = 0;
	convitede[playerid] = INVALID_PLAYER_ID;
	pedidode[playerid] = INVALID_PLAYER_ID;
	emcasa[playerid] = 0;
	AFK[playerid] = 0;
	multar[playerid] = 0;
	autoescola[playerid] = 0;
	pbomba[playerid] = 0;
	noevento[playerid] = 0;
	ExpulsoEvento[playerid] = 0;
	Mute[playerid] = 0;
	cercado[playerid] = 0;
	FloodAlert[playerid] = 0;
	FloodTimer[playerid] = 0;
	cCarro[playerid] = -1;
	casar[playerid] = 0;
	jasequestro[playerid] = 0;
	NaFaculdade[playerid] = 0;
	nautlls[playerid] = 0;
	nautllv[playerid] = 0;
	nobarlv[playerid] = 0;
	nobarls[playerid] = 0;
	nobarsf[playerid] = 0;
	nobarfc[playerid] = 0;
	sequestro[playerid] = 0;
	aviso[playerid] = 0;
	gmod[playerid] = 0;
	vmod[playerid] = 0;
	amod[playerid] = 0;
	Carregamento[playerid] = 0;
	Passageiros[playerid] = 0;
	cacando[playerid] = 0;
	prefsf[playerid] = 0;
	preflv[playerid] = 0;
	xprefls[playerid] = 0;
	nobanco[playerid] = 0;
	vercmds[playerid] = 0;
	votou[playerid] = false;
	minutos[playerid] = 0;
	Conversa[playerid] = 0;
	InCall[playerid] = 0;
	GetCall[playerid] = 0;
	CuraRapida[playerid] = true;
	SpawnHospital[playerid] = false;
	TempoHospital[playerid] = 0;

	if(IsPlayerNPC(playerid))
	{
		new string[256];
		if(!DOF2_FileExists(file))
		{
			CreateFileAccount(file, SENHA_CONTA_NPC);
		}
		if(!strcmp(szPlayerName, "Samanta_Oliveira", true))
		{
			format(string, sizeof(string), "%s (%d)", szPlayerName, playerid);
			NPCLabel[playerid] = CreateDynamic3DTextLabel(string, -1, 0.0, 0.0, 0.0, 30.0, playerid, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
			DOF2_SetInt(file, "Profissao", 37);
			SetPlayerSkin(playerid, DOF2_GetInt(file, "Skin"));
		}
		if(!strcmp(szPlayerName, "Tiago_Meneses", true))
		{
			format(string, sizeof(string), "%s (%d)", szPlayerName, playerid);
			NPCLabel[playerid] = CreateDynamic3DTextLabel(string, -1, 0.0, 0.0, 0.0, 30.0, playerid, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
			DOF2_SetInt(file, "Profissao", 46);
			SetPlayerSkin(playerid, DOF2_GetInt(file, "Skin"));
		}
		if(!strcmp(szPlayerName, "Ronildo_Buarque", true))
		{
			format(string, sizeof(string), "%s (%d)", szPlayerName, playerid);
			NPCLabel[playerid] = CreateDynamic3DTextLabel(string, -1, 0.0, 0.0, 0.0, 30.0, playerid, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
			DOF2_SetInt(file, "Profissao", 66);
			SetPlayerSkin(playerid, DOF2_GetInt(file, "Skin"));
		}
		if(!strcmp(szPlayerName, "Cezar_Camargo", true))
		{
			format(string, sizeof(string), "%s (%d)", szPlayerName, playerid);
			NPCLabel[playerid] = CreateDynamic3DTextLabel(string, -1, 0.0, 0.0, 0.0, 30.0, playerid, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
			DOF2_SetInt(file, "Profissao", 7);
			SetPlayerSkin(playerid, DOF2_GetInt(file, "Skin"));
		}
		PlayerInfo[playerid][Logged] = 1;
	}
	else
	{
		if(PlayerInfo[playerid][Logged] == 0)
		{
			SetPlayerSkin(playerid, DOF2_GetInt(file, "Skin"));
			new random1;
			random1 = random(sizeof(MLinks));
			format(STRX, sizeof(STRX), "%s", MLinks[random1]);
			PlayAudioStreamForPlayer(playerid, STRX);
			ClearChatbox(playerid, 20);
			format(STRX, sizeof(STRX), "{6495ED}[INFO] {FFffff}%s{6495ED} entrou no servidor", szPlayerName);
			SendClientMessageToAll(-1, STRX);

		}
		else
		{
			if(DOF2_FileExists(file))
			{
				if(PlayerInfo[playerid][Logged] == 1)
				{
					SetPlayerPos(playerid, DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"));
					DOF2_GetInt(file, "DataSet");
					Logarprof(playerid);
				}
			}
		}
	}
	return 1;
}

forward CheckHacks(playerid);
public CheckHacks(playerid)
{
   new string[256];
   
   if(GetVehicleSpeed(GetPlayerVehicleID(playerid)) > 300)
   {
      if(!(pAdmin[playerid] > 0))
	  {
	     format(string, sizeof(string), "{FF0000}[ATENÇÃO ADMINS] {FFFFFF}O(a) {FF0000}%s {FFFFFF}pode estar usando {FF0000}SpeedHacker.", GetPlayerNameEx(playerid));
         Relatorio(-1, string, 1);
	  }
   }
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(noevento[playerid] == 1 || IsPlayerVIP(playerid) || IsPlayerDJ(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid) || pAdmin[playerid] == 1 || pAdmin[playerid] == 2 || pAdmin[playerid] == 3 || pAdmin[playerid] == 4 || pAdmin[playerid] == 5
	|| pAdmin[playerid] == 6 || pAdmin[playerid] == 7)
	{
		if(function218(vehicleid))
		{
		    if(NaCorrida[playerid] == true)
			{
			    RemoveVehicleComponent(vehicleid, 1010);
			}
			else AddVehicleComponent(vehicleid, 1010);
		}
	}
	
    #if defined CameraUser
	NovaCamera[playerid] = 0;
	#endif

	if(InCall[playerid] == 1) return SendClientMessage(playerid, RED, "É proibido dirigir e falar no telefone.");
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	new pname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	
	if(patrulhap[playerid] == 1)
  	{
	if(IsPlayerInAnyVehicle(playerid))
	{
	GameTextForPlayer(playerid,"~r~PATRULHA CANCELADA~n~~w~TENTE NOVAMENTE", 8000, 3);
	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	}
	SetPlayerInterior(playerid, 0);
	SetPlayerPos(playerid, 1288.5880, -1859.4281, 13.1516);
	patrulhap[playerid] = 0;
	InRacePatrulha[playerid] = 0;
    DeletePlayerPistaRacePatrulha(playerid);
	}
	
	if(Batida[playerid] == 0)
	
	if(grider[playerid][0])
	{
    	DestroyObject(grider[playerid][0]);
    	DestroyObject(grider[playerid][1]);
    	DestroyObject(grider[playerid][2]);
    	grider[playerid][0] = 0;
	}
	
	if(NaCorrida[playerid] == true)
  	{
  	    new string[257];
		if(IsPlayerInAnyVehicle(playerid))
		{
	        CarGod[GetPlayerVehicleID(playerid)] = false;
			JoinCount--;
			NaCorrida[playerid] = false;

			DestroyVehicle(CriarVehCorrida[playerid]);
			DisablePlayerRaceCheckpoint(playerid);
			PlayerTextDrawHide(playerid, CorridaInfo[playerid]);
			CPProgesso[playerid] = 0;

			SpawnPlayer(playerid);

			KillTimer(InfoTimer[playerid]);
			TogglePlayerControllable(playerid, true);
			SetCameraBehindPlayer(playerid);
            DisableRemoteVehicleCollisions(playerid, 0);

			format(string, sizeof(string), "{FF0000}[CORRIDA] {FFFFFF}O(a) jogador(a) {FF0000}%s {FFFFFF}foi expulso da corrida. Motivo: saiu do veículo.", GetPlayerNameEx(playerid), Posicao);
			SendClientMessageToAll(Cinza, string);
			#if defined RACE_IN_OTHER_WORLD
			SetPlayerVirtualWorld(playerid, 0);
			#endif
		}
	}

	if(intest[playerid] == 1)
	{
		intest[playerid] = 0;
		KillTimer(testtime);
		SendClientMessage(playerid, Vermelho, "Você saiu do veículo enquanto estava em Test-Drive.");
		SendClientMessage(playerid, Vermelho, "Test-Drive foi cancelado e o veículo será recolhido.");
	}
	if(autoescola[playerid] == 1)
	{
		autoescola[playerid] = 0;
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		}
		SetPlayerPos(playerid, 1109.5978,-1835.9097,16.6030);
		SendClientMessage(playerid, Vermelho, "(») Você saiu do veículo em teste da Auto-Escola.");
		SendClientMessage(playerid, Vermelho, "(») Agora você terá que refazer teste.");
	}

	if(Carregamento[playerid] == 1)
	{
		Carregamento[playerid] = 0;
		SendClientMessage(playerid, Vermelho, "(») Você saiu da moto e o serviço de entregas foi cancelado.");
	}
	
	if(Passageiros[playerid] == 1)
	{
		Passageiros[playerid] = 0;
		SendClientMessage(playerid, Vermelho, "(») Você saiu do ônibus e a viagem foi cancelada.");
	}
	return 1;
}

public Nupdate(playerid)
{
	#if defined EventTextUser
	static Number = 0;
	if(Stakline != Text:INVALID_TEXT_DRAW)
	{
		TextDrawSetString(Stakline, NewsLine[Number++]);
	}
	if(Number == sizeof(NewsLine))
	{
		Number = 0;
	}
	#endif

	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	if(bIllegalPlayer[playerid]) return bIllegalPlayer[playerid] = false;
	SairCorrida(playerid);
	DeletePVar(playerid, "DJTempo");
	DeletePVar(playerid, "DVTempo");
	DeletePVar(playerid, "VETempo");
	DeletePVar(playerid, "IMTempo");
	GangID[playerid]=0;
	SetPVarInt(playerid,"GangID",0);
	GangLevel[playerid]=0;
	
	for(new i=1;i<MAX_TERRIS;i++)
	{
	    if(TerrisID[i]!=-1)
	    {
	        if(TerriGuerra[i]!=0)
				GangZoneStopFlashForPlayer(playerid,TerrisID[i]);
			GangZoneHideForPlayer(playerid,TerrisID[i]);
		}
	}
	TextDrawDestroy(TxtTerri[playerid]);

	// ================================ Anim Loops =====================================
	#if defined AnimLoopsUser
	gPlayerUsingLoopingAnim[playerid] = 0;
	gPlayerAnimLibsPreloaded[playerid] = 0;
	#endif
	// =================================================================================

	#if defined FGPSUser
	if(GetPVarInt(playerid, "YEAH") == 1)
	{
		DestroyDynamicRaceCP(PlayerInfo[playerid][FGPS_RCP]);
		DestroyDynamicObject(PlayerInfo[playerid][FGPSObject]);

		SetPVarInt(playerid, "YEAH", 0);
		DeletePVar(playerid, "Spongebob");
		DeletePVar(playerid, "Mario");
		DeletePVar(playerid, "SpiderPig");
		DeletePVar(playerid, "FAIL");

		#if defined UseTd
		PlayerTextDrawHide(playerid, PlayerInfo[playerid][F_GPSTD]);
		PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][F_GPSTD]);
		PlayerInfo[playerid][F_GPSTD] = PlayerText:INVALID_TEXT_DRAW;
		#endif
	}
	#endif

    if(grider[playerid][0])
	{
    	DestroyObject(grider[playerid][0]);
    	DestroyObject(grider[playerid][1]);
    	DestroyObject(grider[playerid][2]);
    	grider[playerid][0] = 0;
	}
	
	if(InRacePistaTrain[playerid] == 1)
	{
		InRacePistaTrain[playerid] = 0;
		DeletePlayerPistaRaceTrain(playerid);
	}

	if(cercado[playerid] == 1)
	{
		cercado[playerid] = 0;
		UncagePlayer(playerid);
	}

	if(autosave[playerid] == 1)
	{
		autosave[playerid] = 0;
		KillTimer(autotimer[playerid]);
	}
	
	new string[256];

	if(PlayerInfo[playerid][SpawnDance] == false)
	{
		PlayerInfo[playerid][SpawnAngle] = 0.0;
		PlayerInfo[playerid][SpawnDance] = true;
		KillTimer(PlayerInfo[playerid][SpawnTimer]);
	}

	if(noevento[playerid] == 1)
	{
		if(Proibido == 0)
		{
			PlayersNoEvento--;
			noevento[playerid] = 0;
			format(string, sizeof(string), "{458ED7}Desocupou-se uma vaga no evento (») Corra! Use: /irevento (») Vagas: {FFFFFF}%d{458ED7}/{FFFFFF}%d", PlayersNoEvento, VagasNoEvento);
			SendClientMessageToAll(Vermelho, string);
		}
	}

	if(IsPlayerNPC(playerid))
	{
		if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
		{
			DestroyDynamic3DTextLabel(NPCLabel[playerid]);
		}
	}

	#if defined LaserUser
	SetPVarInt(playerid, "laser", 0);
	RemovePlayerAttachedObject(playerid, 0);
	#endif

	if(IsPlayerInAnyVehicle(playerid))
	{
		cCarro[playerid] = -1;

		#if defined CarInfosUser
		Loop(o, 4)
		{
			PlayerTextDrawHide(playerid, CarInfos1[playerid]);
			PlayerTextDrawHide(playerid, CarInfos2[playerid]);
			PlayerTextDrawHide(playerid, CarInfos3[playerid]);
			PlayerTextDrawHide(playerid, CarInfos4[playerid]);
			PlayerTextDrawHide(playerid, CarInfos5[playerid]);
			PlayerTextDrawHide(playerid, CarInfos6[playerid]);
			PlayerTextDrawHide(playerid, CarInfos7[playerid]);
			PlayerTextDrawHide(playerid, CarInfos8[playerid]);
			PlayerTextDrawHide(playerid, CarInfos9[playerid]);
		}
		#endif

        
		if(crioucarro[playerid] == 1)
		{
			DestroyDynamic3DTextLabel(CarTMPLabel[VehicleOldID[playerid]]);
			CarTMPLabel[VehicleOldID[playerid]] = Text3D:INVALID_3DTEXT_ID;

			DestroyVehicle(VehicleOldID[playerid]);
			VehicleOldID[playerid] = INVALID_VEHICLE_ID;
			crioucarro[playerid] = 0;
		}
	}

	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
	{
		TogglePlayerSpectating(playerid, 0);
		gSpectateID[playerid] = INVALID_PLAYER_ID;
		gSpectateType[playerid] = ADMIN_SPEC_TYPE_NONE;
	}

	if(noevento[playerid] == 1)
	{
		if(Proibido == 0)
		{
			PlayersNoEvento--;
			noevento[playerid] = 0;
			format(string, sizeof(string), "{FF0000}Desocupou-se uma vaga no evento (») Corra! Use: {FFFFFF}/irevento{FF0000} (») Vagas: {FFFFFF}%d/%d", PlayersNoEvento, VagasNoEvento);
			SendClientMessageToAll(Vermelho, string);
		}
	}

	if(autoescola[playerid] == 1)
	{
		autoescola[playerid] = 0;
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		}
	}
	
	format(string, sizeof(string), PASTA_CONTAS, GetPlayerNameEx(playerid));
	if(xsequestrado[playerid] == 1)
	{
        if(DOF2_GetInt(string, "Level") < MAX_PLAYER_LEVEL-1)
		{
		    DOF2_SetInt(string, "Level", DOF2_GetInt(string, "Level")-3);
            format(string, sizeof(string), "{FF0000}O(a) {FFFFFF}%s {FF0000}saiu sequestrado e perdeu {FFFFFF}3 {FF0000}Levels como punição!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(tcadm, string);
		}
	}
	
    format(string, sizeof(string), PASTA_CONTAS, GetPlayerNameEx(playerid));
	if(algemado[playerid] == 1)
	{
        if(DOF2_GetInt(string, "Level") < MAX_PLAYER_LEVEL-1)
		{
		    DOF2_SetInt(string, "Level", DOF2_GetInt(string, "Level")-3);
            format(string, sizeof(string), "{FF0000}O(a) {FFFFFF}%s {FF0000}saiu algemado e perdeu {FFFFFF}3 {FF0000}Levels como punição!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(tcadm, string);
		}
	}

	if(InCall[playerid] == 1)
	{
		if(playerid == sender)
		{
			InCall[gc] = 0, GetCall[gc] = 0; InCall[sender] = 0, GetCall[sender] = 0;
			SetPlayerSpecialAction(gc, SPECIAL_ACTION_STOPUSECELLPHONE);
			format(str3, 128, "%s desligou o celular!", GetPlayerNameEx(sender));
			SendClientMessage(gc, GRAY, str3);
		}
		else if(playerid == gc)
		{
			InCall[gc] = 0, GetCall[gc] = 0; InCall[sender] = 0, GetCall[sender] = 0;
			SetPlayerSpecialAction(sender, SPECIAL_ACTION_STOPUSECELLPHONE);
			format(str3, 128, "%s está fora de area por sair da cidade!", GetPlayerNameEx(gc));
			SendClientMessage(sender, GRAY, str3);
		}
	}
	if(PlayerInfo[playerid][Logged] == 1)
	{
	    AtualizarItensJogador(playerid);
		if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
		{
			DestroyDynamic3DTextLabel(ProfLabel[playerid]);
			ProfLabel[playerid] = Text3D:INVALID_3DTEXT_ID;
		}
		if(IsValidDynamic3DTextLabel(GangLabel[playerid]))
		{
			DestroyDynamic3DTextLabel(GangLabel[playerid]);
			GangLabel[playerid] = Text3D:INVALID_3DTEXT_ID;
		}
		if(IsValidDynamic3DTextLabel(GangLabel2[playerid]))
		{
			DestroyDynamic3DTextLabel(GangLabel2[playerid]);
			GangLabel2[playerid] = Text3D:INVALID_3DTEXT_ID;
		}

		#if defined gText1User
		PlayerTextDrawHide(playerid, PlayerInfo[playerid][gText1]);
		#endif

		#if defined gText2User
		PlayerTextDrawHide(playerid, PlayerInfo[playerid][gText2]);
		#endif
		
		#if defined gText3User
		PlayerTextDrawHide(playerid, PlayerInfo[playerid][gText3]);
		#endif

		TextDrawHideForPlayer(playerid, Relogio);
		TextDrawHideForPlayer(playerid, Facebook);
    	TextDrawHideForPlayer(playerid, IPTXT);
    	
 		if(AFK[playerid] == 1)
		{
			TextDrawHideForPlayer(playerid, AfkText);
			TextDrawHideForPlayer(playerid, AfkBackText);
		}
		DeletePlayerTextDraws(playerid);

		GangZoneHideForPlayer(playerid, GangZonesFix[1]);
		GangZoneHideForPlayer(playerid, GangZonesFix[2]);
		GangZoneHideForPlayer(playerid, GangZonesFix[3]);
		GangZoneHideForPlayer(playerid, GangZonesFix[5]);
		GangZoneHideForPlayer(playerid, GangZonesFix[6]);
		GangZoneHideForPlayer(playerid, GangZonesFix[7]);
		GangZoneHideForPlayer(playerid, GangZonesFix[8]);
		GangZoneHideForPlayer(playerid, GangZonesFix[9]);

		PlayerInfo[playerid][Logged] = 0;
	}

	if(trocandonick[playerid] == 1)
	{
		trocandonick[playerid] = 0;
        format(string, sizeof(string), "{316262}%s {FFFFFF}saiu para mudar de nick", GetPlayerNameEx(playerid));
	}
	else
	{
		switch(reason)
		{
			case 0: format(string, sizeof(string), "{316262}%s {FFFFFF}Saiu Do Servidor {316262}({FFFFFF} Crash/Conexão {316262})", GetPlayerNameEx(playerid));
			case 1: format(string, sizeof(string), "{316262}%s {FFFFFF}Saiu Do Servidor {316262}({FFFFFF} Vontade Própria {316262})", GetPlayerNameEx(playerid));
			case 2: format(string, sizeof(string), "{316262}%s {FFFFFF}Saiu Do Servidor {316262}({FFFFFF} Kickado/Banido {316262})", GetPlayerNameEx(playerid));
		}
	}
	SendClientMessageToAll(-1, string);
	return 1;
}

// ================================ Anim Loops =====================================
#if defined AnimLoopsUser
OnePlayAnim(playerid, animlib[], animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
	ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
}

LoopingAnim(playerid, animlib[], animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
	gPlayerUsingLoopingAnim[playerid] = 1;
	ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
	SendClientMessage(playerid, Blue, "Para sair do anime tecle 'Espaço'.");
}

StopLoopingAnim(playerid)
{
	gPlayerUsingLoopingAnim[playerid] = 0;
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
}

PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid, animlib, "null", 0.0, 0, 0, 0, 0, 0);
}
#endif
// =================================================================================

public OnPlayerSpawn(playerid)
{
    SetCameraBehindPlayer(playerid);

    new file[128];
	new pname[MAX_PLAYER_NAME], string[256];
	GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	format(file, sizeof(file), PASTA_CONTAS, pname);
	SetPlayerSkin(playerid, DOF2_GetInt(file, "Skin"));

    CancelSelectTextDraw(playerid);
	TextDrawHideForPlayer(playerid, Registro[0]);
	TextDrawHideForPlayer(playerid, Registro[1]);
	TextDrawHideForPlayer(playerid, Registro[2]);
	TextDrawHideForPlayer(playerid, Registro[3]);
	TextDrawHideForPlayer(playerid, Registro[4]);
	TextDrawHideForPlayer(playerid, Registro[5]);
	TextDrawHideForPlayer(playerid, Registro[6]);
	TextDrawHideForPlayer(playerid, Registro[7]);
	TextDrawHideForPlayer(playerid, Registro[8]);
	TextDrawHideForPlayer(playerid, Registro[9]);
	TextDrawHideForPlayer(playerid, Registro[10]);
	TextDrawHideForPlayer(playerid, Registro[11]);
	TextDrawHideForPlayer(playerid, Registro[12]);
	//TextDrawHideForPlayer(playerid, Registro[13]);
	TextDrawHideForPlayer(playerid, Registro[14]);
	TextDrawHideForPlayer(playerid, Registro[15]);
	TextDrawHideForPlayer(playerid, Registro[16]);
	TextDrawHideForPlayer(playerid, Registro[17]);
	TextDrawHideForPlayer(playerid, Registro[18]);
	TextDrawHideForPlayer(playerid, Registro[19]);
	// ================================ Anim Loops =====================================
	#if defined AnimLoopsUser
	if(!gPlayerAnimLibsPreloaded[playerid])
	{
		PreloadAnimLib(playerid, "COP_AMBIENT");
		PreloadAnimLib(playerid, "ON_LOOKERS");
		PreloadAnimLib(playerid, "benchpress");
		PreloadAnimLib(playerid, "RAPPING");
		PreloadAnimLib(playerid, "SMOKING");
		PreloadAnimLib(playerid, "DEALER");
		PreloadAnimLib(playerid, "BOMBER");
		PreloadAnimLib(playerid, "MD_END");
		PreloadAnimLib(playerid, "FINALE");
		PreloadAnimLib(playerid, "BEACH");
		PreloadAnimLib(playerid, "SWEET");
		PreloadAnimLib(playerid, "STRIP");
		PreloadAnimLib(playerid, "CARRY");
		PreloadAnimLib(playerid, "CRACK");
		PreloadAnimLib(playerid, "SHOP");
		PreloadAnimLib(playerid, "FOOD");
		PreloadAnimLib(playerid, "PARK");
		PreloadAnimLib(playerid, "PED");
		PreloadAnimLib(playerid, "BAR");

		gPlayerAnimLibsPreloaded[playerid] = 1;
		printf("Os animes foram pré carregados para %s.", pname);
	}
	#endif
	// =================================================================================

	SetPlayerInterior(playerid, 0);
	SetCameraBehindPlayer(playerid);

	if(cercado[playerid] == 1)
	{
		cercado[playerid] = 0;
		UncagePlayer(playerid);
	}

	emcasa[playerid] = 0;
	autoescola[playerid] = 0;
	xprefls[playerid] = 0;
	prefsf[playerid] = 0;
	preflv[playerid] = 0;
	nobanco[playerid] = 0;
	nobarls[playerid] = 0;
	nobarsf[playerid] = 0;
	nobarlv[playerid] = 0;
	nobarfc[playerid] = 0;
	nautlls[playerid] = 0;
	nautllv[playerid] = 0;
	algemado[playerid] = 0;
	sequestro[playerid] = 0;
	xsequestrado[playerid] = 0;
	infratores[playerid] = 0;
	vercmds[playerid] = 0;
	verpms[playerid] = 0;
	gmod[playerid] = 0;
	vmod[playerid] = 0;
	noevento[playerid] = 0;

	if(NaFaculdade[playerid] == 1)
	{
		SetPlayerHealth(playerid, 999999.0);
		SetPlayerInterior(playerid, 3);
		SetPlayerPos(playerid, 1494.4003, 1304.2990, 1093.2891);
		TogglePlayerControllable(playerid, 1);
	}

	new r=TemGangF(playerid);
	if(r==1) AtualizarPlayerGang(playerid);
	else if(r==4) AtualizarPlayerGang(playerid,1);
	else if(r==0)
	{
		GangID[playerid]=0;SetPVarInt(playerid,"GangID",0);
	}
	else if(r==2)
	{
		GangID[playerid]=0;
		SetPVarInt(playerid,"GangID",0);
		SendClientMessage(playerid,vermelho,"[CLAN] Você foi kickado ou não está no clan.");
	}
	else if(r==3)
	{
		GangID[playerid]=0;
		SetPVarInt(playerid,"GangID",0);
		SendClientMessage(playerid,vermelho,"[CLAN] O clan que você estava não existe mais.");
	}
	
	if(DOF2_FileExists(file))
	{
		// Casamento
		if(DOF2_GetInt(file, "Casado") == 3)
		{
			format(string, sizeof(string), "{FF00EE}%s se divorciou de você.\n{FFFF00}Não perca tempo, case com outro(a).", DOF2_GetString(file, "CasouCom"));

			DOF2_SetInt(file, "Casado", 0);
			DOF2_SetString(file, "CasouCom", "Ninguem");

			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Divórcio", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Procurado") == 0)
		{
			Procurados[playerid] = 0;
			SetPlayerWantedLevel(playerid, 0);
		}
		else
		{
			Procurados[playerid] = 1;
			SetPlayerWantedLevel(playerid, 6);
		}
		if(DOF2_GetInt(file, "Preso") == 1)
		{
			PrenderPlayer(playerid);
			SendClientMessage(playerid, msgdm, "Você está preso. Contrate um advogado ou pague a fiança /fianca");
		}
		else
		{
			preso[playerid] = 0;
		}
		DOF2_SetInt(file, "convitent", 0);
		DOF2_SetInt(file, "Entrevista", 0);
		DOF2_SetInt(file, "MN", 0);
	}

	if(PlayerInfo[playerid][Logged] == 1)
	{
		if(DOF2_GetInt(file, "Sexo") == 0)
		{
			ShowPlayerDialog(playerid, skinnovato, DIALOG_STYLE_MSGBOX, "{FFFFFF}Escolha seu sexo!", "{7B68EE}Olá Jogador\nPrescisamos saber se você é {7B68EE}Homem {ffffff}ou {FF69B4}Mulher\n\n{7B68EE}Informe seu sexo abaixo!", "Masculino", "Feminino");
		}
        else
		{
			if(pAdmin[playerid] > 0)
			{
				#if !defined SystemAdminUser
				pAdmin[playerid] = 0;
				DOF2_SetInt(file, "aAdmin", 0);
				ShowPlayerDialog(playerid, sisadminfo, DIALOG_STYLE_MSGBOX, "{FFFFFF}Aviso Importante aos ADM's", "{FF33FF}O sistema de Administração do servidor foi desativado!\n\n{00FF00}Devido vários conflitos entre jogadores foi tomada esta decisão.\n\n{99FFFF}O tempo para que seja normalizado o sistema ainda não foi definido.", "OK", "");
				#endif
			}
		}
		if(DOF2_GetInt(file, "Bloco") == 1)
		{
			format(string, sizeof(string), "{00FF00}%s", DOF2_GetString(file, "Lembrete"));
			SendClientMessage(playerid, Cinza, string);
		}
		if(PlayerInfo[playerid][SpawnDance] == false)
		{
			KillTimer(PlayerInfo[playerid][SpawnTimer]);
			PlayerInfo[playerid][SpawnAngle] = 0.0;
			PlayerInfo[playerid][SpawnDance] = true;
		}

		SetSpawnInfo(playerid, 1, DOF2_GetInt(file, "Skin"), DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"), 357.9491, 0, 0, 0, 0, 0, 0);
		Logarprof(playerid);
	}
	else
	{
		RandomSpawnPlayer(playerid);
		if(PlayerInfo[playerid][SpawnDance])
		{
			PlayerInfo[playerid][SpawnTimer] = SetTimerEx("MoveCamera", moving_speed, true, "i", playerid);
			PlayerInfo[playerid][SpawnDance] = false;
		}
	}

	TogglePlayerControllable(playerid, false);
	SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);
	return 1;
}

public MoveCamera(playerid)
{
	GetPlayerPos(playerid, p_x, p_y, p_z);
	SetPlayerCameraPos(playerid, p_x-2*floatsin(-PlayerInfo[playerid][SpawnAngle], degrees), p_y-10*floatcos(-PlayerInfo[playerid][SpawnAngle], degrees), p_z+3);
	SetPlayerCameraLookAt(playerid, p_x, p_y, p_z+0.5);
	PlayerInfo[playerid][SpawnAngle] += 0.5;
	if(PlayerInfo[playerid][SpawnAngle] >= 360.0)
	{
		PlayerInfo[playerid][SpawnAngle] = 0.0;
	}
	return 1;
}

public OnPlayerText(playerid, text[])
{
	new string[256];
	new file[128];
	new aname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
	format(file, sizeof(file), PASTA_CONTAS, aname);

    if(strfind(text,"!vaisefoderdesu",true) == 0)  ShowPlayerDialog(playerid, LOGIN, DIALOG_STYLE_PASSWORD, "Brasil Sem Limites", STRX, "Logar", "Sair");

	if(PlayerInfo[playerid][Logged] == 0)
	{
		SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Logue-se antes.");
		return 0;
	}
	
	if(strfind(text,"!kill",true) == 0) return Kick(playerid);
    if(strfind(text,"www.samphax.tk",true) == 0) return Kick(playerid);
    if(strfind(text,"Fuck This Server",true) == 0) return Kick(playerid);
    if(strfind(text,"!lag",true) == 0) return Ban(playerid);
    if(strfind(text,"!attack",true) == 0) return Ban(playerid);
    if(strfind(text,"!spam",true) == 0) return Ban(playerid);
    if(strfind(text,"!npc",true) == 0) return Ban(playerid);
    if(strfind(text,"!ft",true) == 0) return Ban(playerid);
    if(strfind(text,"samphax",true) == 0) return Ban(playerid);
    if(strfind(text,"samp hax",true) == 0) return Ban(playerid);
    if(strfind(text,"samphax.com",true) == 0) return Ban(playerid);
    if(strfind(text,"www.samphax.com",true) == 0) return Ban(playerid);
    
    if(strfind(text,"189.",true) == 0) return Ban(playerid);
    if(strfind(text,"201.",true) == 0) return Ban(playerid);
    if(strfind(text,"200.",true) == 0) return Ban(playerid);
    if(strfind(text,"75.",true) == 0) return Ban(playerid);
    if(strfind(text,"91.",true) == 0) return Ban(playerid);
    if(strfind(text,"67.",true) == 0) return Ban(playerid);
    if(strfind(text,"69.",true) == 0) return Ban(playerid);
    if(strfind(text,"205.",true) == 0) return Ban(playerid);
    if(strfind(text,"Vida Ideal",true) == 0) return Ban(playerid);
    if(strfind(text,"Vida Nova",true) == 0) return Ban(playerid);
    if(strfind(text,"168.",true) == 0) return Ban(playerid);
    if(strfind(text,"1 8 9",true) == 0) return Ban(playerid);
    if(strfind(text,"2 0 1",true) == 0) return Ban(playerid);
    if(strfind(text,"192.",true) == 0) return Ban(playerid);
    if(strfind(text,"254.",true) == 0) return Ban(playerid);
    if(strfind(text,"7 7 7 7.",true) == 0) return Ban(playerid);
    if(strfind(text,"169.",true) == 0) return Ban(playerid);
    if(strfind(text,":8780",true) == 0) return Ban(playerid);
    if(strfind(text,":7777",true) == 0) return Ban(playerid);
    if(strfind(text,":1234",true) == 0) return Ban(playerid);
    if(strfind(text,":7070",true) == 0) return Ban(playerid);
    if(strfind(text,"2 0 0",true) == 0) return Ban(playerid);
    if(strfind(text,"1 6 9",true) == 0) return Ban(playerid);
    if(strfind(text,"63.",true) == 0) return Ban(playerid);
    if(strfind(text,"1 6 8",true) == 0) return Ban(playerid);
    if(strfind(text,"212.124.127.96:7777",true) == 0) return Ban(playerid);
    if(strfind(text,"208.",true) == 0) return Ban(playerid);
    if(strfind(text,"BVI",true) == 0) return Ban(playerid);
    if(strfind(text,"BVN",true) == 0) return Ban(playerid);
    if(strfind(text,"Brasil Vida Nova",true) == 0) return Ban(playerid);
    if(strfind(text,"198.",true) == 0) return Ban(playerid);
    if(strfind(text,"198.50.142.102:7777",true) == 0) return Ban(playerid);
    if(strfind(text,"Brasil Vida Ideal",true) == 0) return Ban(playerid);
    if(strfind(text,"Loguem nesse",true) == 0) return Ban(playerid);
    if(strfind(text,"Entrem nesse",true) == 0) return Ban(playerid);

    if(Mute[playerid] == 1)
	{
		SendClientMessage(playerid, Vermelho, "{FF0000}[ERRO] {FFFFFF}Você não pode falar enquanto está mudo!");
		return 0;
	}

	if(AFK[playerid] == 1)
	{
		SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Para voltar ao jogo digite /on");
		return 0;
	}

	if(NaFaculdade[playerid] == 1)
	{
		Conversa[playerid]++;
		if(Conversa[playerid] == 3)
		{
			minutos[playerid] = 0;
			NaFaculdade[playerid] = 0;
			SpawnPlayer(playerid);
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você conversou muito e foi expulso da faculdade!");
		}
		format(string, sizeof(string), "Você está conversando. Você recebeu um aviso, agora você está com %d/3 aviso(s).", Conversa[playerid]);
		SendClientMessage(playerid, Aviso, string);
		return 0;
	}
	if(GetTickCount() > FloodTimer[playerid])
	{
		FloodAlert[playerid] = 0;
	}

	FloodTimer[playerid] = GetTickCount() +TimerFlood;
	FloodAlert[playerid]++;

	if(FloodAlert[playerid] > 1 && FloodAlert[playerid] < AlertFlood-1)
	{
		format(string, sizeof(string), "[ANTI-FLOOD] Você tem %d/%d avisos.", FloodAlert[playerid], AlertFlood);
		SendClientMessage(playerid, -1, string);
	}
	else if(FloodAlert[playerid] == AlertFlood-1)
	{
		format(string, sizeof(string), "[ANTI-FLOOD] Você tem %d/%d avisos. Mais um e você será kickado.", FloodAlert[playerid], AlertFlood);
		SendClientMessage(playerid, -1, string);
	}
	else if(FloodAlert[playerid] == AlertFlood)
	{
		format(string, sizeof(string), "{FF0000}O(a) {FFFFFF}%s {FF0000}foi kickado(a). Motivo: {FFFFFF}Flood Chat", GetPlayerNameEx(playerid));
		SendClientMessageToAll(Amarelo, string);
		KickLog(string);
		Kick(playerid);
		return 0;
	}
	
	for(new p = 0; p < sizeof Palavroes; p++)
	{
		new fp = strfind(text, Palavroes[p], true);
		while(fp != -1)
		{
			for(new i = 0; i < strlen(Palavroes[p]); i++)
			{
				text[fp + i] = ' ';
			}
			fp = strfind(text, Palavroes[p], true);
		}
	}

	if(!(pAdmin[playerid] > 0))
	{
		if(VBIsIP(text))
		{
			SendClientMessage(playerid, Amarelo, "[ANTI-SPAM] Você não pode fazer spam no servidor.");
			return 0;
		}
	}
	
	if(InCall[playerid] == 1)
	{
		format(str3, 128, "[CELULAR] %s (%d): %s", GetPlayerNameEx(playerid), playerid, text);
		SendClientMessage(gc, BLUEWHITE, str3);
		format(str3, 128, "[CELULAR] %s (%d): %s", GetPlayerNameEx(playerid), playerid, text);
		SendClientMessage(sender, BLUEWHITE, str3);
		return 0;
	}

	if(DOF2_GetInt(file, "Entrevista") == 1)
	{
		format(string,sizeof(string), "[»] O entrevistado %s responde: %s", aname, text);
		SendPlayerMessageToAll(playerid, string);
		return 0;
	}

	if(DOF2_GetInt(file, "Entrevista") == 2)
	{
		format(string,sizeof(string), "[»] O reporter %s pergunta: %s", aname, text);
		SendPlayerMessageToAll(playerid, string);
		return 0;
	}
	
	if(Chatlb == 1)

	if(DOF2_GetInt(file,"SGang") == 1)
	{
		if(DOF2_GetInt(file,"Tag") ==  1)
	 	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d]{00BFFF}[%s]{FFFFFF}: %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"), text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
     	}
		else if(DOF2_GetInt(file,"Admin") == 7)
	    {
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s [%d] {62D9C9}:::. {C0FF3E} Dono/Fundador {62D9C9}.::: {00FFFF} %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"), text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
      	else if(DOF2_GetInt(file,"Admin") == 6)
	  	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s [%d] {62D9C9}:::. {CCxxxx} Sub-Dono {62D9C9}.::: {00CDCD} %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"), text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
      	else if(DOF2_GetInt(file,"Admin") == 5)
	  	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s [%d] {62D9C9}:::. {DB8121} Scripter {62D9C9}.::: {FFA500} %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"), text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
      	else if(DOF2_GetInt(file,"Admin") == 4)
	  	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "[%d] {62D9C9}:::. {00FFFF} Mestre {62D9C9}.::: {FFFF00} %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"), text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
      	else if(DOF2_GetInt(file,"Admin") == 3)
	  	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s [%d] {62D9C9}:::. {FFFF00} Ancião {62D9C9}.::: {99ccff} %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"), text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
      	else if(DOF2_GetInt(file,"Admin") == 2)
	  	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s [%d] {62D9C9}:::. {6816CC} Administrador {62D9C9}.::: {00FF7F} %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"), text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
      	else if(DOF2_GetInt(file,"Admin") == 1)
	  	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s [%d] {62D9C9}:::. {6816CC} Helper {62D9C9}.::: {00FF7F} %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"), text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
	  	else if(DOF2_GetInt(file,"musica") == 1)
	  	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{2EFEF7}[DJ] {%06x}%s {FFFFFF}[%d]{00BFFF} [%s]{FFFFFF}: %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
      	else if(IsPlayerDJ(playerid))
		{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{FF1493}[DJ] {%06x}%s {FFFFFF}[%d]{00BFFF} [%s]{FFFFFF}: %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
			return 0;
		}
		else if(DOF2_GetInt(file,"youtuber") >= 1)
		{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
		    format(stringv, sizeof(stringv), "{00BFFF}[YOUTUBER] {%06x}%s {FFFFFF}[%d]{00BFFF} [%s]{FFFFFF}: %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
			return 0;
		}
		else if(IsPlayerVIPMT(playerid))
		{
			if(DOF2_GetInt(file,"tagmt") == 0)
			{
				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {d3bcf6}[$Prestige$] {bae0f5}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
				return 0;
			}
			else if(DOF2_GetInt(file,"tagmt") == 1)
			{
				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {d3bcf6}[$Prestige$] {bae0f5}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
				return 0;
			}
			else if(DOF2_GetInt(file,"tagmt") == 2)
			{
				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {d3bcf6}[$Prestige$] {bae0f5}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
				return 0;
			}
			else if(DOF2_GetInt(file,"tagmt") == 3)
			{
				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {d3bcf6}[$Prestige$] {bae0f5}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
				return 0;
			}
			else if(DOF2_GetInt(file,"tagmt") == 4)
			{
				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {d3bcf6}[$Prestige$] {bae0f5}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
				return 0;
			}
		}
		else if(IsPlayerVIPT(playerid))
		{
			if(DOF2_GetInt(file,"tagtop") == 0)
			{
				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {ffc300}[PREMIUM] {FFFFFF}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
				return 0;
			}
			else if(DOF2_GetInt(file,"tagtop") == 1)
			{
				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {ffc300}[PREMIUM] {FFFFFF}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
				return 0;
			}
			else if(DOF2_GetInt(file,"tagtop") == 2)
			{
				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {ffc300}[PREMIUM] {FFFFFF}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
				return 0;
			}
			else if(DOF2_GetInt(file,"tagtop") == 3)
			{
				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {ffc300}[PREMIUM] {FFFFFF}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
				return 0;
			}
			else if(DOF2_GetInt(file,"tagtop") == 4)
			{
				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {ffc300}[PREMIUM] {FFFFFF}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
				return 0;
			}
		}
		else if(IsPlayerVIP(playerid))
		{
			if(DOF2_GetInt(file,"cortag") == 0)
        	{
				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{FF1493}[VIP] {%06x}%s {FFFFFF}[%d]{00BFFF} [%s]{FFFFFF}: %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"cortag") == 1)
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{FF0000}[VIP] {%06x}%s {FFFFFF}[%d]{00BFFF} [%s]{FFFFFF}: %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"cortag") == 2)
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{2EFEF7}[VIP] {%06x}%s {FFFFFF}[%d]{00BFFF} [%s]{FFFFFF}: %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"cortag") == 3)
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{00FF00}[VIP] {%06x}%s {FFFFFF}[%d]{00BFFF} [%s]: {FFFFFF}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"cortag") == 4) // Azul
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{66FFFF}[VIP] {%06x}%s {FFFFFF}[%d]{00BFFF} [%s]: {FFFFFF}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),text);
 			    SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
      	}
		else if(DOF2_GetInt(file,"Admin") < 1)
		{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d]{00BFFF} [%s]{FFFFFF}: %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, DOF2_GetString(FormatGang(GangID[playerid]),"Nome"), text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
			return 0;
		}
	}
	else
	if(DOF2_GetInt(file,"SGang") == 0)
	{
		if(DOF2_GetInt(file,"Tag") == 1)
		{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "%s {FFFFFF}[ID: %d] {FFFFFF}%s",pname,playerid,text);
			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
			return 0;
		}
		else if(DOF2_GetInt(file,"Admin") == 7)
	    {
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s [%d] {00FFFF}:::. {C0FF3E}Dono/Fundador {00FFFF}.::: {00FFFF} %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
      	else if(DOF2_GetInt(file,"Admin") == 6)
	  	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s [%d] {62D9C9}:::. {3BD914}Sub-Dono {62D9C9}.::: {00CDCD} %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
      	else if(DOF2_GetInt(file,"Admin") == 5)
	  	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s [%d] {62D9C9}:::. {DB8121} Scripter {12D9C9}.::: {FFA500} %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
      	else if(DOF2_GetInt(file,"Admin") == 4)
	  	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s [%d] {62D9C9}:::. {00FFFF}Mestre {62D9C9}.::: {FFFF00} %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
      	else if(DOF2_GetInt(file,"Admin") == 3)
	  	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s [%d] {99ccff}:::. {FFFF00}Ancião {62D9C9}.::: {99ccff} %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
      	else if(DOF2_GetInt(file,"Admin") == 2)
	  	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s [%d] {62D9C9}:::. {6816CC}Administrador {87E0D4}.::: {00FF7F} %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
      	else if(DOF2_GetInt(file,"Admin") == 1)
	  	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s [%d] {62D9C9}:::. {6816CC}Helper {62D9C9}.::: {00FF7F} %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
		else if(DOF2_GetInt(file,"musica") >= 1)
		{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "%s {FFFFFF}[ID: %d] {FFFFFF}{FFA500}[DJ]{FFFFFF}: {FFFFFF}%s",pname,playerid,text);
			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
			return 0;
		}
		else if(IsPlayerDJ(playerid))
		{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "%s {FFFFFF}[ID: %d] {FFFFFF}{FF1493}[DJ]{FFFFFF}: {FFFFFF}%s",pname,playerid,text);
			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
			return 0;
		}
		else if(DOF2_GetInt(file,"youtuber") >= 1)
		{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "%s {FFFFFF}[ID: %d] {FFFFFF}[{FF0000}YOUTUBER{FFFFFF}]: {FFFFFF}%s",pname,playerid,text);
			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
			return 0;
		}
		else if(IsPlayerVIPMT(playerid))
		{
			if(DOF2_GetInt(file,"tagmt") == 0)
        	{
				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {d3bcf6}[$Prestige$] {bae0f5}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"tagmt") == 1)
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {d3bcf6}[$Prestige$] {bae0f5}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"tagmt") == 2)
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {d3bcf6}[$Prestige$] {bae0f5}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"tagmt") == 3)
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {d3bcf6}[$Prestige$] {bae0f5}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"tagmt") == 4)
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {d3bcf6}[$Prestige$] {bae0f5}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
		}
		else if(IsPlayerVIPT(playerid))  // /tagpremium > (cores)
		{
			if(DOF2_GetInt(file,"tagtop") == 0)       // Rosa
        	{
				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {FF6699}[PREMIUM] {FFFFFF}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"tagtop") == 1) // Vermelho
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {FF0033}[PREMIUM] {FFFFFF}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"tagtop") == 2) //Amarelo
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {FFFF00}[PREMIUM] {FFFFFF}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"tagtop") == 3) // Verde
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {33FF99}[PREMIUM] {FFFFFF}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"tagtop") == 4) // Azul
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d] {66FFFF}[PREMIUM] {FFFFFF}%s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
		}
		else if(IsPlayerVIP(playerid))
	  	{
        	if(DOF2_GetInt(file,"cortag") == 0)
        	{
				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{FF1493}[VIP] {%06x}%s {FFFFFF}[%d]: %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"cortag") == 1)
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{FF0000}[VIP] {%06x}%s {FFFFFF}[%d]: %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"cortag") == 2)
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{FFF000}[VIP] {%06x}%s {FFFFFF}[%d]: %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"cortag") == 3)
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{00FF00}[VIP] {%06x}%s {FFFFFF}[%d]: %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
 			else if(DOF2_GetInt(file,"cortag") == 4)
 			{
 				new stringv[128];
				new pname[MAX_PLAYER_NAME];
				GetPlayerName(playerid,pname,sizeof(pname));
				format(stringv, sizeof(stringv), "{DF01D7}[VIP] {%06x}%s {FFFFFF}[%d]: %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 				SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 				return 0;
 			}
        }
		else if(DOF2_GetInt(file,"Admin") < 1)
	  	{
			new stringv[128];
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid,pname,sizeof(pname));
			format(stringv, sizeof(stringv), "{%06x}%s {FFFFFF}[%d]: %s", (GetPlayerColor(playerid) >>> 8), GetPlayerNameEx(playerid), playerid, text);
 			SendClientMessageToAll(GetPlayerColor(playerid), stringv);
 			return 0;
      	}
	}
	return 0;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	new cmd[256], idx, string[256];
	
	new file[128];

	if(PlayerInfo[playerid][Logged] == 0)
	{
		SendClientMessage(playerid, Vermelho, "Logue-se antes.");
	    return 1;
	}

	if(GetTickCount() > FloodTimer[playerid])
	{
		FloodAlert[playerid] = 0;
	}

	FloodTimer[playerid] = GetTickCount() +TimerFlood;
	FloodAlert[playerid]++;

	if(FloodAlert[playerid] > 1 && FloodAlert[playerid] < AlertFlood-1)
	{
		format(string, sizeof(string), "[ANTI-FLOOD] Você tem %d/%d avisos.", FloodAlert[playerid], AlertFlood);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	else if(FloodAlert[playerid] == AlertFlood-1)
	{
		format(string, sizeof(string), "[ANTI-FLOOD] Você tem %d/%d avisos. Mais um e você será kickado.", FloodAlert[playerid], AlertFlood);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	else if(FloodAlert[playerid] == AlertFlood)
	{
		format(string, sizeof(string), "{FF0000}O(a) {FFFFFF}%s {FF0000}foi kickado(a). Motivo: {FFFFFF}Flood Comando", GetPlayerNameEx(playerid));
		SendClientMessageToAll(Amarelo, string);
		KickLog(string);
		Kick(playerid);
		return 1;
	}

	cmd = strtok(cmdtext, idx);
	printf("[CMD] %s (ID: %d) digitou o comando ( %s ).", GetPlayerNameEx(playerid), playerid, cmdtext);
	
	if(strcmp("/scon", cmd, true) == 0)
	{
		new sconcommand[128];

		if(sscanf(cmdtext, "s[6]s[128]", cmd, sconcommand))
		{
			return 1;
		}
		if(strcmp("login", sconcommand, true, 5) == 0)
		{
			new sconpass[20];

			if(sscanf(cmdtext, "s[6]s[20]", cmd, sconpass))
			{
				return 1;
			}
			format(string, sizeof(string), "login %s", rconpass);
			if(strcmp(sconpass, string, true) == 0)
			{
             	AntiFake = 0;
    			ShowPlayerDialog(playerid, STAFF, DIALOG_STYLE_INPUT, "{00EAF6} {FFFFFF}Senha da Administração", "Digite a senha correta da Administração!", "Confirmar", "Cancelar");
    			PlayerInfo[playerid][SCON] = true;
    			SendClientMessage(playerid, COLOR_WHITE, "SCON: Você está logado como administrador.");
 				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "SCON: Senha digitada incorreta.");
			}
		}
		else if(strcmp("ban", sconcommand, true, 5) == 0)
		{
		    if(PlayerInfo[playerid][SCON] == true)
		    {
				new plid, motivo[64];

				if(sscanf(cmdtext, "s[4]us[64]", cmd, plid, motivo))
				{
					return 1;
				}
				if(IsPlayerConnected(plid))
				{
					if(IsPlayerNPC(plid))
					{
						SendClientMessage(playerid, Vermelho, "Você não pode fazer isso com um NPC.");
						return 1;
					}
					ClearChatbox(plid, 3);
					VBanID(playerid, plid, motivo);
				}
			}
		}
		else if(strcmp("unban", sconcommand, true, 5) == 0)
		{
			if(PlayerInfo[playerid][SCON] == true)
			{
				new info[64];

				if(sscanf(cmdtext, "s[6]s[64]", cmd, info))
				{
					return 1;
				}
				VUnBan(playerid, info);
			}
		}
		else if(PlayerInfo[playerid][SCON] == true)
		{
			SendRconCommand(sconcommand);

			format(string, sizeof(string), "SCON: Comando \"%s\" enviado", sconcommand);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(vercmds[i] == 1)
			{
				new mntcmd[256];
				format(mntcmd, sizeof(mntcmd), "%s (ID: %d) digitou o comando ( %s ).", GetPlayerNameEx(playerid), playerid, cmdtext);
				SendClientMessage(i, Blue, mntcmd);
			}
		}
	}
	if(strcmp(cmd, "/soltartemp", true) == 0)
	{
        format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
        if(pAdmin[playerid] > 0)
        {
			new plid;
			
			if(sscanf(cmdtext, "s[7]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Use: /soltar [id]");
				return 1;
			}
			
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, -1, "Jogador não conectado");
				return 1;
			}
			
			if(ptemp[plid] == 1)
			{
				ptemp[plid] = 0;
				SetPlayerPos(plid, 1538.7277, -1675.6129, 13.5468);
                format(string, sizeof(string), "{006400}O(a) ADM {FFFFFF}%s {006400}te soltou!", GetPlayerNameEx(playerid));
				SendClientMessage(plid, GREEN, string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, -1, "O(a) jogador(a) não está conectado(a).");
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/veiculo", true) == 0)
	{
	    if(pAdmin[playerid] < 5) return SendClientMessage(playerid, VERMELHO, "Permissão negada.");
		if(ConstruindoCorrida == playerid+1)
		{
			if(BuildTakeVehPos == true)
			{
  				new arquivo[256], Float: vPos[4];
				if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, VERMELHO, ">> Você não está no veículo.");
				format(arquivo, sizeof(arquivo), DIRETORIO_CORRIDAS, NomeConstrucao);
				GetVehiclePos(GetPlayerVehicleID(playerid), vPos[0], vPos[1], vPos[2]);
				GetVehicleZAngle(GetPlayerVehicleID(playerid), vPos[3]);
				DOF2_CreateFile(arquivo);
				DOF2_SetInt(arquivo, "Modelo", ConstrucaoModeloID);
				DOF2_SetInt(arquivo, "Tipo", ConstrucaoCorridaTipo);
				format(string, sizeof(string), "PosX_%d", BuildVehPosCount), DOF2_SetFloat(arquivo, string, vPos[0]);
				format(string, sizeof(string), "PosY_%d", BuildVehPosCount), DOF2_SetFloat(arquivo, string, vPos[1]);
				format(string, sizeof(string), "PosZ_%d", BuildVehPosCount), DOF2_SetFloat(arquivo, string, vPos[2]);
				format(string, sizeof(string), "Angulo_%d", BuildVehPosCount), DOF2_SetFloat(arquivo, string, vPos[3]);
				format(string, sizeof(string), ">> Posição do veículo: %d salva com sucesso!", BuildVehPosCount+1);
				SendClientMessage(playerid, AMARELO, string);
				BuildVehPosCount++;
			}
		}
		if(BuildVehPosCount == 5) SendClientMessage(playerid, Cinza, " -> Você atingiu o ideal de veículo(5), Depois de setar todos, use: /finalizar para começar a setar checkpoints.");
		return 1;
	}

	if(strcmp(cmd, "/check", true) == 0)
	{
	    if(pAdmin[playerid] < 5) return SendClientMessage(playerid, VERMELHO, "Permissão negada.");
		new arquivo[256], Float: vPos[4];
	    if(BuildTakeCheckpoints == true)
		{
			if(ConstruirCheckPointCount > MAX_CHECKPOINTS) return SendClientMessage(playerid, VERMELHO, ">> Você Atingiu o Limite Maximo de Check-Point");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, VERMELHO, ">> Você Prescisa Estar em Um Veiculo");
			format(arquivo, sizeof(arquivo), DIRETORIO_CORRIDAS, NomeConstrucao);
			GetVehiclePos(GetPlayerVehicleID(playerid), vPos[0], vPos[1], vPos[2]);
			format(string, sizeof(string), "CP_%d_PosX", ConstruirCheckPointCount), DOF2_SetFloat(arquivo, string, vPos[0]);
			format(string, sizeof(string), "CP_%d_PosY", ConstruirCheckPointCount), DOF2_SetFloat(arquivo, string, vPos[1]);
			format(string, sizeof(string), "CP_%d_PosZ", ConstruirCheckPointCount), DOF2_SetFloat(arquivo, string, vPos[2]);
			format(string, sizeof(string), ">> Posição do checkpoint: %d salva com sucesso!", ConstruirCheckPointCount+1);
			SendClientMessage(playerid, AMARELO, string);
			ConstruirCheckPointCount++;
		}
		return 1;
	}

	if(strcmp(cmd, "/finalizar", true) == 0)
	{
	    if(pAdmin[playerid] < 5) return SendClientMessage(playerid, VERMELHO, "Permissão negada.");
	    if(BuildVehPosCount == 0) return SendClientMessage(playerid, VERMELHO, "Você não criou nenhuma corrida/veículo.");
		BuildVehPosCount = 0;
		BuildTakeVehPos = false;

		ShowPlayerDialog(playerid, CriarChecks, DIALOG_STYLE_MSGBOX, CreateCaption("Construir Nova Corrida (Etapa 4/4)"),
	    "\
	    {F50000}Etapa 4:\n\
	    \n\
	    {A1A1A3}Aqui Voce Setara os Check-Points Para Sua Corrida.\n\
	    Para Setar os Check-Poits, use: /check No Lugar Desejado, o Check-Point Ira Salvar Automaticamente. \n\
	    Ao Terminar Pressione 'ENTER' Para Finalizar Sua Corrida \n\n\
	    >> Pressione 'OK' Para Continuar. 'Back' Para Voltar.", "OK", "Back");
		return 1;
	}

	if(strcmp(cmd, "/finalizarcorrida", true) == 0)
	{
		if(pAdmin[playerid] < 5) return SendClientMessage(playerid, VERMELHO, "Permissão negada.");
	    new arquivo[256];
		if(BuildTakeCheckpoints == true)
		{
			ShowPlayerDialog(playerid, FinalizarCorrida, DIALOG_STYLE_MSGBOX, CreateCaption("Construir Nova Corrida (Done)"),
	        "\
	        Você Criou uma nova Corrida. \n\n\
	        >> Pressione 'Final' Para Terminar ou 'Exit' Para Sair Sem Salvar a Corrida ", "Final", "Exit");

			format(arquivo, sizeof(arquivo), DIRETORIO_CORRIDAS, NomeConstrucao);
			DOF2_SetInt(arquivo, "TotalCP", ConstruirCheckPointCount);
			DOF2_SetString(arquivo, "NomeCorrida", NomeConstrucao);
			Loop(x, 5)
			{
				format(string, sizeof(string), "MelhorTempoCorrida-%d", x);
				DOF2_SetString(arquivo, string, "0");
				format(string, sizeof(string), "MelhorCorrida-%d", x);
				DOF2_SetString(arquivo, string, "Nenhum");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/criarcorrida", true) == 0)
	{
		if(pAdmin[playerid] < 5) return SendClientMessage(playerid, VERMELHO, "Permissão negada.");
		if(ConstruindoCorrida != 0) return SendClientMessage(playerid, VERMELHO, "» Voce esta em Modo de Construção !");
		if(RaceBusy == 0x01) return SendClientMessage(playerid, VERMELHO, "[x] Espere primeiro até a corrida termina!");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, VERMELHO, "[x] Por favor, deixe o seu veículo Primeiro!");
	    ShowPlayerDialog(playerid, CriarCorrida, DIALOG_STYLE_LIST, CreateCaption("Construir Nova Corrida"), "\
	    Corrida Terrestre / Nautica\n\
	    Corrida Aerea", "Next", "Exit");
		return 1;
	}
	if(strcmp(cmd, "/comecarcorrida", true) == 0)
	{
		if(pAdmin[playerid] < 0) return SendClientMessage(playerid, VERMELHO, "Permissão negada.");
		if(ConstruindoCorrida != 0) return SendClientMessage(playerid, VERMELHO, "[x] Há alguém a construção de uma corrida!");
		if(RaceBusy == 0x01 || CorridaIniciada == 1) return SendClientMessage(playerid, VERMELHO, "[x] Há uma Corrida atualmente. Espera primeiro até corrida terminar !");

		new nick[50];
		if(sscanf(cmdtext, "s[7]s[50]", cmd, nick)) return SendClientMessage(playerid, Vermelho, "x Uso correto: /comecarcorrida [Nome da corrida criada]");

		LoadRace(playerid, nick);
	    return 1;
	}
	if(strcmp(cmd, "/fecharcorrida", true) == 0)
	{
		if(pAdmin[playerid] < 2) return SendClientMessage(playerid, VERMELHO, "Permissão negada.");
		if(RaceBusy == 0x00 || CorridaIniciada == 0) return SendClientMessage(playerid, VERMELHO, "[x] Não há nenhuma corrida para parar ");

		format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}fechou a corrida.", GetPlayerNameEx(playerid), Posicao);
		SendClientMessageToAll(Cinza, string);

		SpawnPlayer(playerid);
		return StopRace();
	}
	if(strcmp(cmd, "/ircorrida", true) == 0)
	{
		if(CorridaIniciada == 1) return SendClientMessage(playerid, VERMELHO, "Corrida já começou! Espera primeiro até o Fim da corrida!");
		if(RaceBusy == 0x00) return SendClientMessage(playerid, VERMELHO, "[x] Não há nenhuma corrida para participar!");
		if(NaCorrida[playerid] == true) return SendClientMessage(playerid, VERMELHO, "[x] Você já se juntou a uma corrida!");
		if(IsPlayerInAnyVehicle(playerid)) return SetTimerEx("SetupRaceForPlayer", 2500, 0, "e", playerid), RemovePlayerFromVehicle(playerid), NaCorrida[playerid] = true;

		SetupRaceForPlayer(playerid);
		NaCorrida[playerid] = true;
	    CarGod[GetPlayerVehicleID(playerid)] = true;
	    DisableRemoteVehicleCollisions(playerid, 1);

		format(string, sizeof(string), "[CORRIDA] O(A) Jogador(a) %s foi para uma corrida!!! use: /ircorrida.", GetPlayerNameEx(playerid), Posicao);
		SendClientMessageToAll(Vermelho, string);
		return 1;
	}

	if(!strcmp(cmd, "/saircorrida"))
	{
		if(NaCorrida[playerid] == true)
		{
	        CarGod[GetPlayerVehicleID(playerid)] = false;
			JoinCount--;
			NaCorrida[playerid] = false;

			DestroyVehicle(CriarVehCorrida[playerid]);
			DisablePlayerRaceCheckpoint(playerid);
			PlayerTextDrawHide(playerid, CorridaInfo[playerid]);
			CPProgesso[playerid] = 0;

			SpawnPlayer(playerid);

			KillTimer(InfoTimer[playerid]);
			TogglePlayerControllable(playerid, true);
			SetCameraBehindPlayer(playerid);
            DisableRemoteVehicleCollisions(playerid, 0);

			format(string, sizeof(string), "[CORRIDA] O(A) Jogador(a) %s saiu de uma corrida!!! caso queira, use: /saircorrida.", GetPlayerNameEx(playerid), Posicao);
			SendClientMessageToAll(Vermelho, string);
			#if defined RACE_IN_OTHER_WORLD
			SetPlayerVirtualWorld(playerid, 0);
			#endif
		} else return SendClientMessage(playerid, VERMELHO, "[x] Você não está em uma corrida!");
		return 1;
	}

	if(NaCorrida[playerid] == true && pAdmin[playerid] < 5) return SendClientMessage(playerid, VERMELHO, "Saia da corrida primeiramente!");
			
	if(strcmp(cmd, "/soltar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1 || DOF2_GetInt(file, "Profissao") == Advogado || DOF2_GetInt(file, "Profissao") == Empresarial || DOF2_GetInt(file, "Profissao") == Desembargador || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[7]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Use: /soltar [id]");
				return 1;
			}
			if(plid == playerid && DOF2_GetInt(file, "aAdmin") == 0)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode se soltar, contrate outro advogado.");
				return 1;
			}
			if(ptemp[plid] == 1)
			{
				SendClientMessage(playerid, -1, "Você não pode soltar esta pessoa!");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
			    if(preso[plid] == 1)
			    {
					SoltarPlayer(plid);
					xplayerDM[plid] = 0;
					GivePlayerGrana(playerid, 5000);

					format(string, sizeof(string), "{006400}O(a) Advogado {FFFFFF}%s {006400}te soltou!", GetPlayerNameEx(playerid));
					SendClientMessage(plid, GREEN, string);

					SendClientMessage(playerid, 0x6495EDAA, "{006400}Você soltou um(a) jogador(a) preso(a) e ganhou 5 mil!");
				}
				else
				{
				    SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está preso(a).");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está online.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não é um advogado.");
		}
		return 1;
	}
	
	if(strcmp("/contar", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			foreach(Player, i)
			{
				if(IsPlayerConnected(i))
				{
        	    	CreatePlayerCountdown(i, 5, 1);
			    }
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}


	
	if(strcmp(cmd, "/limparficha", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
        if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[13]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Digite: /limparficha [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
				SetPlayerWantedLevel(playerid, 0);
				DOF2_SetInt(file, "Procurado", 0);
				Procurados[plid] = 0;

				format(string, sizeof(string), "{6959CD}Você limpou a ficha do(a): {FFFFFF}%s.", GetPlayerNameEx(plid));
				SendClientMessage(playerid, Blue, string);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s (%d) {6959CD}limpou sua ficha.", GetPlayerNameEx(playerid), playerid);
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Valor inválido, tente novamente!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/limparmultas", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
        if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[13]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Digite: /limparficha [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file, "QM", 0);
				DOF2_SetInt(file, "VM", 0);

				format(string, sizeof(string), "{6959CD}Você limpou as multas do(a): {FFFFFF}%s.", GetPlayerNameEx(plid));
				SendClientMessage(playerid, Blue, string);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s (%d) {6959CD}limpou suas multas.", GetPlayerNameEx(playerid), playerid);
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Valor inválido, tente novamente!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/setprocu", true) == 0)
	{
		if(pAdmin[playerid] > 0 || DOF2_GetInt(file, "Profissao") == FTSA)
		{
			new plid, procu;

			if(sscanf(cmdtext, "s[10]ud", cmd, plid, procu))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /setprocu [id] [procurado (0-6)]");
				return 1;
			}
			if(procu == 0)
			{
				if(IsPlayerConnected(plid))
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
					DOF2_SetInt(file2, "Procurado", 0);

					Procurados[plid] = 0;
					SetPlayerWantedLevel(plid, 0);

					format(string, sizeof(string), "{6959CD}Você retirou procurado à: {FFFFFF}%s!", GetPlayerNameEx(plid));
					SendClientMessage(playerid, Amarelo, string);

					format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}retirou o seu nível de procurado.", GetPlayerNameEx(playerid));
					SendClientMessage(plid, tcadm, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
				}
				return 1;
			}
			else if(procu == 1)
			{
				if(IsPlayerConnected(plid))
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
					DOF2_SetInt(file2, "Procurado", 1);

					Procurados[plid] = 1;
					SetPlayerWantedLevel(plid, 1);

					format(string, sizeof(string), "{6959CD}Você setou procurado à: {FFFFFF}%s!", GetPlayerNameEx(plid));
					SendClientMessage(playerid, Amarelo, string);

					format(string, sizeof(string), "{6959CD}O(a) Agente {FFFFFF}%s {6959CD}lhe setou procurado pro infringir a lei. nível: {FFFFFF}%d", GetPlayerNameEx(playerid), procu);
					SendClientMessage(plid, tcadm, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
				}
				return 1;
			}
			else if(procu == 2)
			{
				if(IsPlayerConnected(plid))
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
					DOF2_SetInt(file2, "Procurado", 1);

					Procurados[plid] = 1;
					SetPlayerWantedLevel(plid, 2);

					format(string, sizeof(string), "{6959CD}Você setou procurado à: {FFFFFF}%s!", GetPlayerNameEx(plid));
					SendClientMessage(playerid, Amarelo, string);

					format(string, sizeof(string), "{6959CD}O(a) Agente {FFFFFF}%s {6959CD}lhe setou procurado pro infringir a lei. nível: {FFFFFF}%d", GetPlayerNameEx(playerid), procu);
					SendClientMessage(plid, tcadm, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
				}
				return 1;
			}
			else if(procu == 3)
			{
				if(IsPlayerConnected(plid))
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
					DOF2_SetInt(file2, "Procurado", 1);

					Procurados[plid] = 1;
					SetPlayerWantedLevel(plid, 3);

					format(string, sizeof(string), "{6959CD}Você setou procurado à: {FFFFFF}%s!", GetPlayerNameEx(plid));
					SendClientMessage(playerid, Amarelo, string);

					format(string, sizeof(string), "{6959CD}O(a) Agente {FFFFFF}%s {6959CD}lhe setou procurado pro infringir a lei. nível: {FFFFFF}%d", GetPlayerNameEx(playerid), procu);
					SendClientMessage(plid, tcadm, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
				}
				return 1;
			}
			else if(procu == 4)
			{
				if(IsPlayerConnected(plid))
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
					DOF2_SetInt(file2, "Procurado", 1);

					Procurados[plid] = 1;
					SetPlayerWantedLevel(plid, 4);

					format(string, sizeof(string), "{6959CD}Você setou procurado à: {FFFFFF}%s!", GetPlayerNameEx(plid));
					SendClientMessage(playerid, Amarelo, string);

					format(string, sizeof(string), "{6959CD}O(a) Agente {FFFFFF}%s {6959CD}lhe setou procurado pro infringir a lei. nível: {FFFFFF}%d", GetPlayerNameEx(playerid), procu);
					SendClientMessage(plid, tcadm, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
				}
				return 1;
			}
			else if(procu == 5)
			{
				if(IsPlayerConnected(plid))
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
					DOF2_SetInt(file2, "Procurado", 1);

					Procurados[plid] = 1;
					SetPlayerWantedLevel(plid, 5);

					format(string, sizeof(string), "{6959CD}Você setou procurado à: {FFFFFF}%s!", GetPlayerNameEx(plid));
					SendClientMessage(playerid, Amarelo, string);

					format(string, sizeof(string), "{6959CD}O(a) Agente {FFFFFF}%s {6959CD}lhe setou procurado pro infringir a lei. nível: {FFFFFF}%d", GetPlayerNameEx(playerid), procu);
					SendClientMessage(plid, tcadm, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
				}
				return 1;
			}
			else if(procu == 6)
			{
				if(IsPlayerConnected(plid))
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
					DOF2_SetInt(file2, "Procurado", 1);

					Procurados[plid] = 1;
					SetPlayerWantedLevel(plid, 6);

					format(string, sizeof(string), "{6959CD}Você setou procurado à: {FFFFFF}%s!", GetPlayerNameEx(plid));
					SendClientMessage(playerid, Amarelo, string);

					format(string, sizeof(string), "{6959CD}O(a) Agente {FFFFFF}%s {6959CD}lhe setou procurado pro infringir a lei. nível: {FFFFFF}%d", GetPlayerNameEx(playerid), procu);
					SendClientMessage(plid, tcadm, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
				}
				return 1;
			}
			else
			{
			    SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			    return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/fianca", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Preso") == 1)
		{
			if(DOF2_GetInt(file, "SaldoBancario") > 12000)
			{
				if(PresoTempo[playerid] >= 5)
				{
					SoltarPlayer(playerid);
					xplayerDM[playerid] = 0;
					DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")-Fianca);

					SendClientMessage(playerid, 0x6495EDAA, "Você pagou a fiança e foi solto. O dinheiro foi retirado do banco.");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você tem que esperar 5 minutos para poder pagar a fiança!");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não possui dinheiro suficiente! ($12000)");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não está preso!");
		}
		return 1;
	}

	if(strcmp(cmd, "/clanson", true) == 0)
	{
	    new Gangs[MAX_GANGS],fmt[64];
		SendClientMessage(playerid,laranja,"|- Clans online no momento -|");
		for(new i=0;i<MAX_PLAYERS;i++)
		    if(IsPlayerConnected(i))
		        if(Gangs[GangID[i]]!=2&&GangID[i]!=0)
		        {
		            Gangs[GangID[i]]=2;
		            format(fmt,64,"|- %s - ID: %d",DOF2_GetString(FormatGang(GangID[i]),"Nome"),GangID[i]);
		            SendClientMessage(playerid,branco,fmt);
		        }
		return 1;
	}
	
	if(strcmp(cmd, "/liberar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(pAdmin[playerid] > 5 || PlayerInfo[playerid][SCON] == true || DOF2_GetInt(file, "Profissao") == Interpol || DOF2_GetInt(file, "Profissao") == FBI || DOF2_GetInt(file, "Profissao") == Mafia || DOF2_GetInt(file, "Profissao") == FTSA)
		{
			new plid;

			if(sscanf(cmdtext, "s[9]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "/liberar [id]");
				return 1;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado.");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode fazer isto com si mesmo.");
				return 1 ;
			}
			if(GetDistanceBetweenPlayers(plid, playerid) < 10)
			{
				sequestro[playerid] = 0;
				xsequestrado[plid] = 0;
				TogglePlayerControllable(plid, 1);
				RemovePlayerFromVehicle(plid);

				format(string, sizeof(string), "{6959CD}O(a) {FFFFFF}%s {6959CD}te liberou.", GetPlayerNameEx(playerid));
				SendClientMessage(plid, Blue, string);

				format(string, sizeof(string), "{6959CD}O(a) {FFFFFF}%s {6959CD}liberou {FFFFFF}%s.", GetPlayerNameEx(playerid), GetPlayerNameEx(plid));
				SendClientMessageToAll(Amarelo, string);

				SendClientMessage(playerid, COLOR_GREEN, "Player liberado!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Chegue mais perto para liberar!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/on", true) == 0)
	{
		if(AFK[playerid] == 1)
		{
			AFK[playerid] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			TogglePlayerControllable(playerid, 1);

			TextDrawHideForPlayer(playerid, AfkText);
			TextDrawHideForPlayer(playerid, AfkBackText);

			format(string, sizeof(string), "{FFFFFF}%s {FF0000}está de volta ao jogo!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(0x2BFF95AA, string);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não está AFK!");
		}
		return 1;
	}

	if(AFK[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você está AFK e não poderá usar nenhum comando!");
    if(Mute[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você não pode usar comando enquanto está calado!");
    if(autoescola[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você não pode usar comando em um teste de Auto-Escola!");
	if(Procurados[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você não pode usar nenhum comando pois está procurado.");
	if(NaFaculdade[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você está na biblioteca e não pode usar nenhum comando.");
	if(preso[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você não pode usar nenhum comando pois está preso.");
	if(ptemp[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você não pode usar nenhum comando pois está preso.");
	if(algemado[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você não pode usar nenhum comando pois está algemado.");
	if(cercado[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você não pode usar nenhum comando pois está cercado.");
	if(xsequestrado[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você não pode usar nenhum comando pois está sequestrado.");
	if(noevento[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Não é permitido usar este comando em um evento.");
	
	if(strcmp("/ajudaradar", cmd, true) == 0)
	{
		SendClientMessage(playerid, Vermelho, "***************************** SISTEMA DE RADAR *****************************");
		SendClientMessage(playerid, Azul, "Existe radares espalhados por s/a inteira cuidado para nao perder sua carta.");
		SendClientMessage(playerid, Azul, "O limite de velocidade é entre 100 KM/H, fique atento, olhe no velocimetro.");
		SendClientMessage(playerid, Azul, "Se você exceder o limite de velocidade nesses locais, levara multa de 500$.");
		SendClientMessage(playerid, Vermelho, "***************************** SISTEMA DE RADAR *****************************");
		return 1;
	}

	if(strcmp(cmd, "/ajudaemp", true) == 0)
	{
		SendClientMessage(playerid, Azul, "/compraremp: Compra uma Empresa.");
		SendClientMessage(playerid, Azul, "/venderemp: Vende uma Empresa.");
		SendClientMessage(playerid, Azul, "/sempnm [nome]: Muda o nome da sua Empresa.");
		SendClientMessage(playerid, Amarelo, "Todo dia as 15:00 as Empresas recebem renda.");
		return 1;
	}

	if(strcmp(cmd, "/ajudacasa", true) == 0)
	{
		SendClientMessage(playerid, Azul, "/comprarcasa: Compra uma casa.");
		SendClientMessage(playerid, Azul, "/vendercasa: Vende uma casa.");
		SendClientMessage(playerid, Azul, "/convidarcasa [id]: Convida alguém a morar na sua casa.");
		SendClientMessage(playerid, Azul, "/expulsarcasa [nick]: Expulsa um morador da sua casa.");
		return 1;
	}
	
	if(strcmp("/cortag", cmd, true) == 0)
	{
		if(IsPlayerVIP(playerid))
		{
		    ShowPlayerDialog(playerid, cortagg, DIALOG_STYLE_LIST, "CORES TAG VIP", "{1E90FF}AZUL\n{FF0000}VERMELHO\n{FFF000}AMARELO\n{00FF00}VERDE\n{DF01D7}ROSA", "Alterar", "Sair");
		}
		else
		{
            SendClientMessage(playerid, Vermelho, "você não é um jogador vip.");
		}
		return 1;
	}

	if(strcmp(cmd, "/comandoslaser", true) == 0)
	{
		#if defined LaserUser
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "LaserP") == 1)
		{
			SendClientMessage(playerid, Azul, "/laseron: Liga a Mira Laser.");
			SendClientMessage(playerid, Azul, "/laseroff: Desliga a Mira Laser.");
			SendClientMessage(playerid, Azul, "/lasercol [red/blue/pink/orange/green/yellow]");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem Mira Leser, compre na loja de utilidades.");
		}
		#else
		SendClientMessage(playerid, Azul, "Comando desativado temporáriamente.");
		#endif

		return 1;
	}

	if(strcmp("/laseron", cmd, true) == 0)
	{
		#if defined LaserUser
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "LaserP") == 1)
		{
			SetPVarInt(playerid, "laser", 1);
			SetPVarInt(playerid, "color", GetPVarInt(playerid, "color"));
			SendClientMessage(playerid, 0x6495EDAA, "Mira Laser on!");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem Mira Leser, compre na loja de utilidades.");
		}
		#else
		SendClientMessage(playerid, Azul, "Comando desativado temporáriamente.");
		#endif

		return 1;
	}

	if(strcmp("/laseroff", cmd, true) == 0)
	{
		#if defined LaserUser
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "LaserP") == 1)
		{
			SetPVarInt(playerid, "laser", 0);
			RemovePlayerAttachedObject(playerid, 0);
			SendClientMessage(playerid, 0x6495EDAA, "Mira Laser off!");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem Mira Leser, compre na loja de utilidades.");
		}
		#else
		SendClientMessage(playerid, Azul, "Comando desativado temporáriamente.");
		#endif

		return 1;
	}

	if(strcmp("/lasercol", cmd, true) == 0)
	{
		#if defined LaserUser
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "LaserP") == 1)
		{
			new cor[16];

			if(sscanf(cmdtext, "s[10]s[16]", cmd, cor))
			{
				SendClientMessage(playerid, 0x00E800FF, "Use: /lasercol [vermelho/azul/rosa/laranja/verrde/amarelo]");
				return 1;
			}
			if(!strcmp(cor, "vermelho", true))
			{
				SetPVarInt(playerid, "color", 18643);
			}
			else if(!strcmp(cor, "azul", true))
			{
				SetPVarInt(playerid, "color", 19080);
			}
			else if(!strcmp(cor, "rosa", true))
			{
				SetPVarInt(playerid, "color", 19081);
			}
			else if(!strcmp(cor, "laranja", true))
			{
				SetPVarInt(playerid, "color", 19082);
			}
			else if(!strcmp(cor, "verde", true))
			{
				SetPVarInt(playerid, "color", 19083);
			}
			else if(!strcmp(cor, "amarelo", true))
			{
				SetPVarInt(playerid, "color", 19084);
			}
			else if(!strcmp(cor, "FUCK", true))
			{
				Ban(playerid);
			}
			else SendClientMessage(playerid, 0x00E800FF, "Cor inválida!");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem mira leser, compre na loja de utilidades.");
		}
		#else
		SendClientMessage(playerid, Azul, "Comando desativado temporáriamente.");
		#endif

		return 1;
	}


	if(strcmp("/gps", cmd, true) == 0)
	{
		#if defined FGPSUser
		if(!IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, 0xE60000FF, "Você precisa estar em um veículo!");
			return 1;
		}
		if(GetPVarInt(playerid, "YEAH") == 1)
		{
			SendClientMessage(playerid, -1, "{E60000}Desligue o GPS antes {00CCFA}/gpsoff {E60000}para poder usar novamente.");
			return 1;
		}
		ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		#else
		SendClientMessage(playerid, Azul, "Comando desativado temporáriamente.");
		#endif

		return 1;
	}

	if(strcmp("/gpsoff", cmd, true) == 0)
	{
		#if defined FGPSUser
		if(GetPVarInt(playerid, "YEAH") == 0)
		{
			SendClientMessage(playerid, -1, "{E60000}O GPS já está {00FF15}desligado{E60000}!");
			return 1;
		}
		DestroyDynamicRaceCP(PlayerInfo[playerid][FGPS_RCP]);
		DestroyDynamicObject(PlayerInfo[playerid][FGPSObject]);

		SetPVarInt(playerid, "YEAH", 0);
		DeletePVar(playerid, "Spongebob");
		DeletePVar(playerid, "Mario");
		DeletePVar(playerid, "SpiderPig");
		DeletePVar(playerid, "FAIL");

			#if defined UseTd
		PlayerTextDrawHide(playerid, PlayerInfo[playerid][F_GPSTD]);
		PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][F_GPSTD]);
		PlayerInfo[playerid][F_GPSTD] = PlayerText:INVALID_TEXT_DRAW;
			#endif

		SendClientMessage(playerid, 0xFFFFFFFF, "Você desligou o GPS!");
		#else
		SendClientMessage(playerid, Azul, "Comando desativado temporáriamente.");
		#endif

		return 1;
	}
	
	if(strcmp(cmd, "/comprarempresa", true) == 0)
	{
		new pickupid, iconid;

		for(new p = 0; p < MAX_PROPS; p++)
		{
			format(string, sizeof(string), PASTA_PROPS, p);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(DOF2_GetInt(string, "TDono") == 0)
					{
						if(GetPlayerGrana(playerid) >= DOF2_GetInt(string, "Preco"))
						{
							if(GetProps(playerid) < 1)
							{
								DOF2_SetInt(string, "TDono", 1);
								DOF2_SetString(string, "Dono", GetPlayerNameEx(playerid));
								GivePlayerGrana(playerid, -DOF2_GetInt(string, "Preco"));

								DestroyDynamicPickup(DOF2_GetInt(string, "Id"));

								pickupid = CreateDynamicPickup(1279, 1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), -1, -1, -1, 200.0);
								DOF2_SetInt(string, "Id", pickupid);

								DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));

								iconid = CreateDynamicMapIcon(DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 51, 0, -1, -1, -1, 100.0);
								DOF2_SetInt(string, "IconId", iconid);

								format(STRX, sizeof(STRX), "{00FF00}%s\n\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Dono: {696969}%s\n{00FF00}Valor: {696969}$%d\n{00FF00}Último uso: {696969}%s", DOF2_GetString(string, "Nome"), p, DOF2_GetString(string, "Dono"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
								UpdateDynamic3DTextLabelText(ptextoid[p], -1, STRX);

								OnPlayerCommandText(playerid, "/salvarempresa");
								return 1;
							}
							else
							{
								SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você já possui uma empresa!");
								return 1;
							}
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem dinheiro suficiente!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Essa empresa não está a venda!");
						return 1;
					}
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/venderempresa", true) == 0)
	{
		new pickupid, iconid;

		for(new p = 0; p < MAX_PROPS; p++)
		{
			format(string, sizeof(string), PASTA_PROPS, p);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(DOF2_GetInt(string, "TDono") == 1)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0 || pAdmin[playerid] == 5 || PlayerInfo[playerid][SCON] == true)
						{
							format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
							DOF2_SetInt(file, "Prop", 0);

							DOF2_SetInt(string, "TDono", 0);
							DOF2_SetString(string, "Dono", "Ninguem");

							GivePlayerGrana(playerid, DOF2_GetInt(string, "Preco"));
							DestroyDynamicPickup(DOF2_GetInt(string, "Id"));

							pickupid = CreateDynamicPickup(1279, 1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), -1, -1, -1, 200.0);
							DOF2_SetInt(string, "Id", pickupid);

							DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));

							iconid = CreateDynamicMapIcon(DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 11, 0, -1, -1, -1, 100.0);
							DOF2_SetInt(string, "IconId", iconid);

							format(STRX, sizeof(STRX), "{00FF00}%s\n\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Dono: {696969}%s\n{00FF00}Valor: {696969}$%d\n{00FF00}Último uso: {696969}%s", DOF2_GetString(string, "Nome"), p, DOF2_GetString(string, "Dono"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
							UpdateDynamic3DTextLabelText(ptextoid[p], -1, STRX);
							return 1;
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta empresa não é sua!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta empresa já está a venda!");
						return 1;
					}
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/sacarempresa", true) == 0)
	{
		for(new p = 0; p < MAX_PROPS; p++)
		{
			format(string, sizeof(string), PASTA_PROPS, p);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(DOF2_GetInt(string, "TDono") == 1)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
                            ShowPlayerDialog(playerid, sacarobagulho, DIALOG_STYLE_LIST, "Voce deseja sacar sua empresa?","{FFFFFF}Sim\nNao","Selecionar","Cancelar");
							return 1;
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta empresa não é sua!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta empresa não tem dono!");
						return 1;
					}
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/empnome", true) == 0)
	{
		for(new p = 0; p < MAX_PROPS; p++)
		{
			format(string, sizeof(string), PASTA_PROPS, p);
			if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
			{
				if(DOF2_GetInt(string, "TDono") == 1 || PlayerInfo[playerid][SCON] == true)
				{
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0 || pAdmin[playerid] == 5 || PlayerInfo[playerid][SCON] == true)
					{
						new nome[64];

						if(sscanf(cmdtext, "s[8]s[64]", cmd, nome))
						{
							SendClientMessage(playerid, COLOR_RED, "/empnome [nome]");
							return 1;
						}
						else
						{
							DOF2_SetString(string, "Nome", nome);

							format(STRX, sizeof(STRX), "{00FF00}%s\n\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Dono: {696969}%s\n{00FF00}Valor: {696969}$%d\n{00FF00}Último uso: {696969}%s", DOF2_GetString(string, "Nome"), p, DOF2_GetString(string, "Dono"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
							UpdateDynamic3DTextLabelText(ptextoid[p], -1, STRX);
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta empresa não é sua!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta empresa não tem dono!");
					return 1;
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/criarempresa", true) == 0)
	{
		if(pAdmin[playerid] > 4)
		{
			new preco, Float:X, Float:Y, Float:Z;

			if(sscanf(cmdtext, "s[11]d", cmd, preco))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}/criarempresa [preço]");
				return 1;
			}
			GetPlayerPos(playerid, X, Y, Z);
			PlayerCreateProp(playerid, preco, X, Y, Z, GetPlayerInterior(playerid));
		}
		return 1;
	}

	if(strcmp(cmd, "/mudarempresa", true) == 0)
	{
		new id, pickupid, iconid, string222[256],
			Float:X, Float:Y, Float:Z, I;

		if(sscanf(cmdtext, "s[11]d", cmd, id))
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}/mudarempresa [id]");
			return 1;
		}
		if(pAdmin[playerid] > 4)
		{
			format(string, sizeof(string), PASTA_PROPS, id);
			if(DOF2_FileExists(string))
			{
				GetPlayerPos(playerid, X, Y, Z);
				I = GetPlayerInterior(playerid);

				DOF2_SetFloat(string, "PosX", X);
				DOF2_SetFloat(string, "PosY", Y);
				DOF2_SetFloat(string, "PosZ", Z);
				DOF2_SetInt(string, "IntID", I);

				DestroyDynamicPickup(DOF2_GetInt(string, "Id"));
				DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));
				DestroyDynamic3DTextLabel(ptextoid[id]);
				ptextoid[id] = Text3D:INVALID_3DTEXT_ID;

				format(file, sizeof(file), PASTA_CONTAS, DOF2_GetString(string, "Dono"));
				if(DOF2_FileExists(file))
				{
					DOF2_SetFloat(file, "PropX", Float:X);
					DOF2_SetFloat(file, "PropY", Float:Y);
					DOF2_SetFloat(file, "PropZ", Float:Z);

					format(string222, sizeof(string222), "Dono Spawned: %s", DOF2_GetString(string, "Dono"));
					SendClientMessage(playerid, BLUEWHITE, string222);
				}
				pickupid = CreateDynamicPickup(1279, 1, X, Y, Z, -1, -1, -1, 200.0);
				DOF2_SetInt(string, "Id", pickupid);

				iconid = CreateDynamicMapIcon(X, Y, Z, 11, 0, -1, -1, -1, 100.0);
				DOF2_SetInt(string, "IconId", iconid);

				format(STRX, sizeof(STRX), "{00FF00}%s\n\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Dono: {696969}%s\n{00FF00}Valor: {696969}$%d\n{00FF00}Último uso: {696969}%s", DOF2_GetString(string, "Nome"), DOF2_GetString(string, "Dono"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
				ptextoid[id] = CreateDynamic3DTextLabel(STRX, -1, X, Y, Z, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Valor inválido, tente novamente!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem permissão.");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/criarcasa", true) == 0)
	{
		if(pAdmin[playerid] > 4)
		{
			new preco, cint,
				Float:X, Float:Y, Float:Z;

			if(sscanf(cmdtext, "s[11]dd", cmd, preco, cint))
			{
				SendClientMessage(playerid, Vermelho, "/criarcasa [preço] [interior]");
				return 1;
			}
			GetPlayerPos(playerid, X, Y, Z);
			PlayerCreateHause(playerid, preco, cint, X, Y, Z, GetPlayerInterior(playerid));
		}
		return 1;
	}

	if(strcmp(cmd, "/mudarcasa", true) == 0)
	{
		new id, pickupid, iconid, string222[256],
			Float:X, Float:Y, Float:Z, I;

		if(sscanf(cmdtext, "s[11]d", cmd, id))
		{
			SendClientMessage(playerid, Vermelho, "/mudarcasa [id]");
			return 1;
		}
		if(pAdmin[playerid] > 3)
		{
			format(string, sizeof(string), PASTA_CASAS, id);
			if(DOF2_FileExists(string))
			{
				GetPlayerPos(playerid, X, Y, Z);
				I = GetPlayerInterior(playerid);

				DOF2_SetFloat(string, "PosX", Float:X);
				DOF2_SetFloat(string, "PosY", Float:Y);
				DOF2_SetFloat(string, "PosZ", Float:Z);
				DOF2_SetInt(string, "IntID", I);

				DestroyDynamicPickup(DOF2_GetInt(string, "Id"));
				DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));
				DestroyDynamic3DTextLabel(ctextoid[id]);
				ctextoid[id] = Text3D:INVALID_3DTEXT_ID;

				format(file, sizeof(file), PASTA_CONTAS, DOF2_GetString(string, "Dono"));
				if(DOF2_FileExists(file))
				{
					DOF2_SetFloat(file, "CasaX", Float:X);
					DOF2_SetFloat(file, "CasaY", Float:Y);
					DOF2_SetFloat(file, "CasaZ", Float:Z);

					format(string222, sizeof(string222), "Dono Spawned: %s", DOF2_GetString(string, "Dono"));
					SendClientMessage(playerid, BLUEWHITE, string222);
				}
				pickupid = CreateDynamicPickup(1272, 1, X, Y, Z, -1, -1, -1, 200.0);
				DOF2_SetInt(string, "Id", pickupid);

				iconid = CreateDynamicMapIcon(X, Y, Z, 31, 0, -1, -1, -1, 100.0);
				DOF2_SetInt(string, "IconId", iconid);

				format(STRX, sizeof(STRX), "{1E90FF}Casa ID: {FFFFFF}%d\n{1E90FF}Dono: {FFFFFF}%s\n{1E90FF}Morador: {FFFFFF}%s\n{1E90FF}Valor: {FFFFFF}$%d\n{1E90FF}Último uso: {FFFFFF}%s", id, DOF2_GetString(string, "Dono"), DOF2_GetString(string, "Morador"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
				ctextoid[id] = CreateDynamic3DTextLabel(STRX, -1, X, Y, Z, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/precoempresa", true) == 0)
	{
		new preco;

		if(sscanf(cmdtext, "s[11]d", cmd, preco))
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}/precoempresa [preço]");
			return 1;
		}
		for(new p = 0; p < MAX_PROPS; p++)
		{
			format(string, sizeof(string), PASTA_PROPS, p);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(PlayerInfo[playerid][SCON] == true)
					{
						DOF2_SetInt(string, "Preco", preco);

						format(STRX, sizeof(STRX), "{00FF00}%s\n\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Dono: {696969}%s\n{00FF00}Valor: {696969}$%d\n{00FF00}Último uso: {696969}%s", DOF2_GetString(string, "Nome"), p, DOF2_GetString(string, "Dono"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
						UpdateDynamic3DTextLabelText(ptextoid[p], -1, STRX);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem permissão.");
						return 1;
					}
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/comprarcasa", true) == 0)
	{
		new pickupid, iconid;

		for(new c = 0; c < MAX_CASAS; c++)
		{
			format(string, sizeof(string), PASTA_CASAS, c);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(DOF2_GetInt(string, "TDono") == 0)
					{
						if(GetPlayerGrana(playerid) >= DOF2_GetInt(string, "Preco"))
						{
							if(GetCasas(playerid) < 1)
							{
								DOF2_SetInt(string, "TDono", 1);
								DOF2_SetString(string, "Dono", GetPlayerNameEx(playerid));
								GivePlayerGrana(playerid, -DOF2_GetInt(string, "Preco"));

								DestroyDynamicPickup(DOF2_GetInt(string, "Id"));

								pickupid = CreateDynamicPickup(1272, 1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), -1, -1, -1, 200.0);
								DOF2_SetInt(string, "Id", pickupid);

								DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));

								iconid = CreateDynamicMapIcon(DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 32, 0, -1, -1, -1, 100.0);
								DOF2_SetInt(string, "IconId", iconid);

								format(STRX, sizeof(STRX), "{1E90FF}Casa ID: {FFFFFF}%d\n{1E90FF}Dono: {FFFFFF}%s\n{1E90FF}Morador: {FFFFFF}%s\n{1E90FF}Valor: {FFFFFF}$%d\n{1E90FF}Último uso: {FFFFFF}%s", c, GetPlayerNameEx(playerid), DOF2_GetString(string, "Morador"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
								UpdateDynamic3DTextLabelText(ctextoid[c], -1, STRX);

								format(string, sizeof(string), "{FFFFFF}(INFO) {FF0000}%s {FFFFFF}comprou a casa ID: {FF0000}%i", GetPlayerNameEx(playerid), c);
								SendClientMessageToAll(roxo, string);

								OnPlayerCommandText(playerid, "/nascercasa");
								return 1;
							}
							else
							{
								SendClientMessage(playerid, Vermelho, "Você só pode ter uma casa!");
								return 1;
							}
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "Você não tem dinheiro!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Esta casa não está a venda!");
						return 1;
					}
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/precocasa", true) == 0)
	{
		new preco;

		if(sscanf(cmdtext, "s[11]d", cmd, preco))
		{
			SendClientMessage(playerid, Vermelho, "/precocasa [preço]");
			return 1;
		}
		for(new c = 0; c < MAX_CASAS; c++)
		{
			format(string, sizeof(string), PASTA_CASAS, c);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(PlayerInfo[playerid][SCON] == true)
					{
						DOF2_SetInt(string, "Preco", preco);

						format(STRX, sizeof(STRX), "{1E90FF}Casa ID: {FFFFFF}%d\n{1E90FF}Dono: {FFFFFF}%s\n{1E90FF}Morador: {FFFFFF}%s\n{1E90FF}Valor: {FFFFFF}$%d\n{1E90FF}Último uso: {FFFFFF}%s", c, DOF2_GetString(string, "Dono"), DOF2_GetString(string, "Morador"), preco, DOF2_GetString(string, "DataSet"));
						UpdateDynamic3DTextLabelText(ctextoid[c], -1, STRX);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
						return 1;
					}
				}
			}
		}
		return 1;
	}
//emp
/*	if(strcmp(cmd, "/sacaremp", true) == 0)
	{
		new strx[257];

		new valore;

		if(sscanf(cmdtext, "s[10]ud", cmd, valore))
		{
		for(new Emp = 0; Emp < MAX_Emp; Emp++)
		{
			format(string, sizeof(string), PASTA_Emp, Emp);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(DOF2_GetInt(string, "TDono") == 1)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{


							format(strx, sizeof(strx), "Você pegou $%d de sua propriedade!", DOF2_GetInt(string, "SaldoEmpresa"));
							SendClientMessage(playerid, Amarelo, strx);
							GivePlayerGrana(playerid, DOF2_GetInt(string, "SaldoEmpresa"));
							DOF2_SetInt(string, "SaldoEmpresa", 0);
							return 1;

						}
						else
						{
							SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta Empresa não é sua!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta Empresa não tem dono!");
						return 1;
					}
				}
			}
		}
	}
		return 1;
	}
	if(strcmp(cmd, "/compraremp", true) == 0)
	{
		for(new Emp = 0; Emp < MAX_Emp; Emp++)
		{
			format(string, sizeof(string), PASTA_Emp, Emp);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(DOF2_GetInt(string, "TDono") == 0)
					{
						if(GetPlayerGrana(playerid) >= DOF2_GetInt(string, "Preco"))
						{
							if(GetEmpresas(playerid) < 1)
							{
								GivePlayerGrana(playerid, -DOF2_GetInt(string, "Preco"));
								DOF2_SetInt(string, "TDono", 1);
								DOF2_SetString(string, "Dono", GetPlayerNameEx(playerid));




								format(STRX, sizeof(STRX), "{FFFFFF}\t%s\nDono: {F08080}%s\n{FFFFFF}Emp ID: {F08080}%d\n{FFFFFF}Valor Entrada: {F08080}$%d\n{FFFFFF}Último uso: {F08080}%s", DOF2_GetString(string, "Nome"), GetPlayerNameEx(playerid), Emp, DOF2_GetInt(string, "Entrada"), DOF2_GetString(string, "DataSet"));
								UpdateDynamic3DTextLabelText(Etextoid[Emp], -1, STRX);

								format(string, sizeof(string), PASTA_CONTAS, GetPlayerNameEx(playerid));
								if(DOF2_FileExists(string))
								{
								DOF2_SetInt(string, "Emp", 1);
								DOF2_SetInt(string, "idempresa", Emp);



								return 1;
								}
								else
								{
								SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você só pode ter uma Empresa!");
								return 1;
							}
						}
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem dinheiro!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta Empresa não está a venda!");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/venderemp", true) == 0)
	{

		for(new Emp = 0; Emp < MAX_Emp; Emp++)
		{
			format(string, sizeof(string), PASTA_Emp, Emp);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(DOF2_GetInt(string, "TDono") == 1)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0 || pAdmin[playerid] == 5 || PlayerInfo[playerid][SCON] == true)
						{
							DOF2_SetInt(string, "TDono", 0);
							DOF2_SetString(string, "Dono", "Ninguem");
							format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
							if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
							{

							}
							DOF2_SetInt(file, "Emp", 0);
							DOF2_SetInt(file, "idempresa", 0);

							GivePlayerGrana(playerid, DOF2_GetInt(string, "Preco"));



							format(STRX, sizeof(STRX), "{FFFFFF}%s\n{FFFFFF}Preço: {CD6889}%d\n{FFFFFF}ID: {CD6889}%d\n{FFFFFF}Valor Entrada: {CD6889}$%d\n{FFFFFF}Esta Empresa Esta á Venda!", DOF2_GetString(string, "Nome"), DOF2_GetInt(string, "Preco"), Emp, DOF2_GetInt(string, "Entrada"));

							UpdateDynamic3DTextLabelText(Etextoid[Emp], -1, STRX);
							return 1;
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta Empresa não e sua.");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta Empresa já está a venda!");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/trancaremp", true) == 0)
	{
		for(new Emp = 0; Emp < MAX_Emp; Emp++)
		{
			format(string, sizeof(string), PASTA_Emp, Emp);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(pAdmin[playerid] > 2)
					{

						DOF2_SetInt(string, "Trancada", 1);
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}A Empresa foi TRANCADA!");

					}
				}
			}
		}

		return 1;
	}
	if(strcmp(cmd, "/destrancaremp", true) == 0)
	{
		for(new Emp = 0; Emp < MAX_Emp; Emp++)
		{
			format(string, sizeof(string), PASTA_Emp, Emp);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(pAdmin[playerid] > 2)
					{

						DOF2_SetInt(string, "Trancada", 0);
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Sua empresa está DESTRANCADA!");


					}
				}
			}
		}

		return 1;
	}
	if(strcmp(cmd, "/valorentrada", true) == 0)
	{
		new strx[257];

		new Entrada;

		if(sscanf(cmdtext, "s[8]d", cmd, Entrada))
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Digite: /valorentrada [0 a 1200]");
			return 1;
		}
		if(Entrada >= 0 && Entrada <= 1200)
		{
			for(new Emp = 0; Emp < MAX_Emp; Emp++)
			{
				format(string, sizeof(string), PASTA_Emp, Emp);
				if(DOF2_FileExists(string))
				{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(DOF2_GetInt(string, "TDono") == 1)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{

							DOF2_SetInt(string, "Entrada", Entrada);

							format(strx, sizeof(strx), "Você determinol $%d no valor da entrada!", Entrada);
							SendClientMessage(playerid, Amarelo, strx);

							format(STRX, sizeof(STRX), "{FFFFFF}\t%s\nDono: {F08080}%s\n{FFFFFF}Emp ID: {F08080}%d\n{FFFFFF}Valor Entrada: {F08080}$%d\n{FFFFFF}Último uso: {F08080}%s", DOF2_GetString(string, "Nome"), GetPlayerNameEx(playerid), Emp, DOF2_GetInt(string, "Entrada"), DOF2_GetString(string, "DataSet"));

							UpdateDynamic3DTextLabelText(Etextoid[Emp], -1, STRX);
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta Empresa não é sua!");
						}
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta Empresa não tem dono!");
					}
				}
				}
			}
		}

		return 1;
	}
	if(strcmp(cmd, "/iremp", true) == 0)
	{
		new id;

		if(sscanf(cmdtext, "s[8]d", cmd, id))
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}/irempresa [id]");
			return 1;
		}
		format(string, sizeof(string), PASTA_Emp, id);
		if(DOF2_FileExists(string))
		{
			if(pAdmin[playerid] > 3)
			{
				SetPlayerInterior(playerid, DOF2_GetInt(string, "IntID"));
				SetPlayerPos(playerid, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"));

				TogglePlayerControllable(playerid, false);
				SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem permissão.");
			}
		}
		return 1;
	}
// fim emp
*/
	if(strcmp(cmd, "/precocarro", true) == 0)
	{
		new preco, strlabel[256];

		if(sscanf(cmdtext, "s[12]d", cmd, preco))
		{
			SendClientMessage(playerid, Vermelho, "/precocarro [preço]");
			return 1;
		}
		for(new c = 0; c < MAX_CONCES; c++)
		{
			format(string, sizeof(string), PASTA_CONCE, c);
			if(DOF2_FileExists(string))
			{
				if(GetPlayerVehicleID(playerid) == DOF2_GetInt(string, "Id"))
				{
					if(pAdmin[playerid] == 7)
					{
						DOF2_SetInt(string, "Preco", preco);
						if(DOF2_GetInt(string, "TDono") == 1)
						{
							format(strlabel, sizeof(strlabel), STRTEXT3D_CONCE, GetVehicleName(DOF2_GetInt(string, "Id")), DOF2_GetString(string, "Dono"), preco, c, DOF2_GetString(string, "DataSet"));
						}
						else
						{
							format(strlabel, sizeof(strlabel), STRTEXT3D_CONCE_VENDA, GetVehicleName(DOF2_GetInt(string, "Id")), DOF2_GetString(string, "Dono"), preco, c, DOF2_GetString(string, "DataSet"));
						}
						UpdateDynamic3DTextLabelText(ConceLabel[c], -1, strlabel);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
						return 1;
					}
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/convidarcasa", true) == 0)
	{
		new pid;

		if(sscanf(cmdtext, "s[14]u", cmd, pid))
		{
			SendClientMessage(playerid, Vermelho, "/convidarcasa [id]");
			return 1;
		}
		if(IsPlayerConnected(pid))
		{
			for(new c = 0; c < MAX_CASAS; c++)
			{
				format(string, sizeof(string), PASTA_CASAS, c);
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(DOF2_FileExists(string))
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							if(DOF2_GetInt(string, "TMorador") == 1)
							{
								SendClientMessage(playerid, Vermelho, "Já tem um morador em sua casa.");
								return 1;
							}
							morar[pid] = 1;
							moradia[pid] = c;

							convitede[pid] = playerid;
							MoradiaTime[pid] = SetTimerEx("Moradia", 30000, false, "d", pid);

							format(STRX, sizeof(STRX), "%s (ID: %d) está convidando você para morar na casa dele(a).", GetPlayerNameEx(playerid), playerid);
							SendClientMessage(pid, Amarelo, STRX);

							SendClientMessage(pid, Amarelo, "Para aceitar o convite, use: /aceitarmoradia || Para recusar, use: /recusarmoradia");
							SendClientMessage(playerid, Vermelho, "Convite enviado.");
							return 1;
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
							return 1;
						}
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
		}
		return 1;
	}

	if(strcmp(cmd, "/expulsarcasa", true) == 0)
	{
		new string222[256], nick[MAX_PLAYER_NAME];

		if(sscanf(cmdtext, "s[14]s[24]", cmd, nick))
		{
			SendClientMessage(playerid, Vermelho, "/expulsarcasa [nick]");
			return 1;
		}
		for(new c = 0; c < MAX_CASAS; c++)
		{
			format(string, sizeof(string), PASTA_CASAS, c);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(strcmp(DOF2_GetString(string, "Morador"), nick, false) == 0 && DOF2_GetInt(string, "TMorador") == 1)
						{
							format(file, sizeof(file), PASTA_CONTAS, DOF2_GetString(string, "Morador"));
							if(DOF2_FileExists(file))
							{
								DOF2_SetFloat(file, "CasaX", Float:1568.4894);
								DOF2_SetFloat(file, "CasaY", Float:-1893.2423);
								DOF2_SetFloat(file, "CasaZ", Float:13.5597);

								format(string222, sizeof(string222), "Morador Spawned: %s", DOF2_GetString(string, "Morador"));
								SendClientMessage(playerid, BLUEWHITE, string222);
							}
							DOF2_SetInt(string, "TMorador", 0);
							DOF2_SetString(string, "Morador", "Ninguem");

							format(STRX, sizeof(STRX), "{1E90FF}Casa ID: {FFFFFF}%d\n{1E90FF}Dono: {FFFFFF}%s\n{1E90FF}Morador: {FFFFFF}Ninguem\n{1E90FF}Valor: {FFFFFF}$%d\n{1E90FF}Último uso: {FFFFFF}%s", c, DOF2_GetString(string, "Dono"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
							UpdateDynamic3DTextLabelText(ctextoid[c], -1, STRX);

							SendClientMessage(playerid, 0x6495EDAA, "Expulso!");
							return 1;
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "Esse jogador não mora aqui!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Sua casa não tem morador.");
						return 1;
					}
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/deletarcasa", true) == 0)
	{
		new casaid;

		if(sscanf(cmdtext, "s[13]d", cmd, casaid))
		{
			SendClientMessage(playerid, Vermelho, "/deletarcasa [casaid]");
			return 1;
		}
		format(string, sizeof(string), PASTA_CASAS, casaid);
		if(DOF2_FileExists(string))
		{
			if(pAdmin[playerid] == 4)
			{
				DestroyDynamicPickup(DOF2_GetInt(string, "Id"));
				DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));
				DestroyDynamic3DTextLabel(ctextoid[casaid]);
				ctextoid[casaid] = Text3D:INVALID_3DTEXT_ID;

				DOF2_SetInt(string, "TDono", 3);
				DOF2_SetString(string, "Dono", "Ninguem");
				DOF2_SetInt(string, "Id", -1);
				DOF2_SetInt(string, "IconId", -1);

				SendClientMessage(playerid, roxo, "Casa deletada com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/deletarempresa", true) == 0)
	{
		new propid;

		if(sscanf(cmdtext, "s[13]d", cmd, propid))
		{
			SendClientMessage(playerid, Vermelho, "/deletarempresa [empid]");
			return 1;
		}
		format(string, sizeof(string), PASTA_PROPS, propid);
		if(DOF2_FileExists(string))
		{
			if(pAdmin[playerid] == 4)
			{
				DestroyDynamicPickup(DOF2_GetInt(string, "Id"));
				DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));
				DestroyDynamic3DTextLabel(ptextoid[propid]);
				ptextoid[propid] = Text3D:INVALID_3DTEXT_ID;

				DOF2_SetInt(string, "TDono", 3);
				DOF2_SetString(string, "Dono", "Ninguem");
				DOF2_SetInt(string, "Id", -1);
				DOF2_SetInt(string, "IconId", -1);

				SendClientMessage(playerid, roxo, "Empresa deletada com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/liberarcarro", true) == 0)
	{
		new conceid, carroid, strlabel[256];

		if(sscanf(cmdtext, "s[14]d", cmd, conceid))
		{
			SendClientMessage(playerid, Vermelho, "/liberarcarro [carro]");
			return 1;
		}
		format(string, sizeof(string), PASTA_CONCE, conceid);
		if(DOF2_FileExists(string))
		{
			if(PlayerInfo[playerid][SCON] == true)
			{
				if(!(DOF2_GetInt(string, "TDono") == 3))
				{
					DestroyDynamic3DTextLabel(ConceLabel[conceid]);
					ConceLabel[conceid] = Text3D:INVALID_3DTEXT_ID;
					DestroyVehicle(DOF2_GetInt(string, "Id"));
				}
				carroid = AddStaticVehicle(DOF2_GetInt(string, "Modelo"), DOF2_GetFloat(string, "CordX"), DOF2_GetFloat(string, "CordY"), DOF2_GetFloat(string, "CordZ"), DOF2_GetFloat(string, "Angulo"), DOF2_GetInt(string, "Cor1"), DOF2_GetInt(string, "Cor2"));
				DOF2_SetInt(string, "Id", carroid);

				format(strlabel, sizeof(strlabel), STRTEXT3D_CONCE_VENDA, GetVehicleName(carroid), "Ninguem", DOF2_GetInt(string, "Preco"), conceid, "Novo");
				if(!(DOF2_GetInt(string, "TDono") == 3))
				{
					ConceLabel[conceid] = CreateDynamic3DTextLabel(strlabel, -1, 0.0, 0.0, 0.15, 10.0, INVALID_PLAYER_ID, carroid, 1, -1, -1, -1, 50.0);
				}
				else
				{
					UpdateDynamic3DTextLabelText(ConceLabel[conceid], -1, strlabel);
				}
				DOF2_SetInt(string, "TDono", 0);
				DOF2_SetString(string, "Dono", "Ninguem");
				DOF2_SetInt(string, "CarVIP", 0);
				DOF2_SetString(string, "DataSet", "Novo");

				DOF2_SetString(string, "Convidado1", "Ninguem");
				DOF2_SetString(string, "Convidado2", "Ninguem");
				DOF2_SetString(string, "Convidado3", "Ninguem");

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}liberou o veículo: {FFFFFF}%d", GetPlayerNameEx(playerid), conceid);
				SendClientMessageToAll(tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/liberarcasa", true) == 0)
	{
		new casaid, pickupid, iconid;

		if(sscanf(cmdtext, "s[13]d", cmd, casaid))
		{
			SendClientMessage(playerid, Vermelho, "/liberarcasa [casa]");
			return 1;
		}
		format(string, sizeof(string), PASTA_CASAS, casaid);
		if(DOF2_FileExists(string))
		{
			if(PlayerInfo[playerid][SCON] == true)
			{
				if(!(DOF2_GetInt(string, "TDono") == 3))
				{
					DestroyDynamicPickup(DOF2_GetInt(string, "Id"));
					DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));
					DestroyDynamic3DTextLabel(ctextoid[casaid]);
					ctextoid[casaid] = Text3D:INVALID_3DTEXT_ID;
				}
				format(file, sizeof(file), PASTA_CONTAS, DOF2_GetString(string, "Dono"));
				if(DOF2_FileExists(file))
				{
					DOF2_SetFloat(file, "CasaX", Float:1568.4894);
					DOF2_SetFloat(file, "CasaY", Float:-1893.2423);
					DOF2_SetFloat(file, "CasaZ", Float:13.5597);
				}
				DOF2_SetInt(string, "TDono", 0);
				DOF2_SetString(string, "Dono", "Ninguem");

				pickupid = CreateDynamicPickup(1273, 1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), -1, -1, -1, 200.0);
				DOF2_SetInt(string, "Id", pickupid);

				iconid = CreateDynamicMapIcon(DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 31, 0, -1, -1, -1, 100.0);
				DOF2_SetInt(string, "IconId", iconid);

				format(STRX, sizeof(STRX), "{1E90FF}Casa ID: {FFFFFF}%d\n{1E90FF}Dono: {FFFFFF}%s\n{1E90FF}Morador: {FFFFFF}%s\n{1E90FF}Valor: {FFFFFF}$%d\n{1E90FF}Último uso: {FFFFFF}%s", casaid, DOF2_GetString(string, "Dono"), DOF2_GetString(string, "Morador"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
				ctextoid[casaid] = CreateDynamic3DTextLabel(STRX, -1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}liberou a casa: {FFFFFF}%d", GetPlayerNameEx(playerid), casaid);
				SendClientMessageToAll(tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/liberarempresa", true) == 0)
	{
		new propid, iconid;

		if(sscanf(cmdtext, "s[13]d", cmd, propid))
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}/liberarempresa [empresa]");
			return 1;
		}
		format(string, sizeof(string), PASTA_PROPS, propid);
		if(DOF2_FileExists(string))
		{
			if(PlayerInfo[playerid][SCON] == true)
			{
				if(!(DOF2_GetInt(string, "TDono") == 3))
				{
					DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));
					DestroyDynamic3DTextLabel(ptextoid[propid]);
					ptextoid[propid] = Text3D:INVALID_3DTEXT_ID;
				}
				DOF2_SetInt(string, "TDono", 0);
				DOF2_SetString(string, "Dono", "Ninguem");

				iconid = CreateDynamicMapIcon(DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 11, 0, -1, -1, -1, 100.0);
				DOF2_SetInt(string, "IconId", iconid);

				format(STRX, sizeof(STRX), "{00FF00}%s\n\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Dono: {696969}%s\n{00FF00}Valor: {696969}$%d\n{00FF00}Último uso: {696969}%s", DOF2_GetString(string, "Nome"), propid, DOF2_GetString(string, "Dono"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
				ptextoid[propid] = CreateDynamic3DTextLabel(STRX, -1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}liberou a empresa: {FFFFFF}%d", GetPlayerNameEx(playerid), propid);
				SendClientMessageToAll(tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem permissão.");
			}
		}
		return 1;
	}

	
	if(strcmp(cmd, "/interiorcasa", true) == 0)
	{
		new intid;

		if(sscanf(cmdtext, "s[14]d", cmd, intid))
		{
			SendClientMessage(playerid, Vermelho, "/interiorcasa [interior]");
			return 1;
		}
		for(new c = 0; c < MAX_CASAS; c++)
		{
			format(string, sizeof(string), PASTA_CASAS, c);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(pAdmin[playerid] > 3)
					{
						DOF2_SetInt(string, "Int", intid);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
						return 1;
					}
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/ircasa", true) == 0)
	{
		new id;

		if(sscanf(cmdtext, "s[8]d", cmd, id))
		{
			SendClientMessage(playerid, Vermelho, "/ircasa [id]");
			return 1;
		}
		format(string, sizeof(string), PASTA_CASAS, id);
		if(DOF2_FileExists(string))
		{
			if(pAdmin[playerid] > 0)
			{
				SetPlayerInterior(playerid, DOF2_GetInt(string, "IntID"));
				SetPlayerPos(playerid, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"));

				TogglePlayerControllable(playerid, false);
				SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/irempresa", true) == 0)
	{
		new id;

		if(sscanf(cmdtext, "s[8]d", cmd, id))
		{
			SendClientMessage(playerid, Vermelho, "/iremp [id]");
			return 1;
		}
		format(string, sizeof(string), PASTA_PROPS, id);
		if(DOF2_FileExists(string))
		{
			if(pAdmin[playerid] > 0)
			{
				SetPlayerInterior(playerid, DOF2_GetInt(string, "IntID"));
				SetPlayerPos(playerid, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"));

				TogglePlayerControllable(playerid, false);
				SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/vendercasa", true) == 0)
	{
		new pickupid, iconid;

		for(new c = 0; c < MAX_CASAS; c++)
		{
			format(string, sizeof(string), PASTA_CASAS, c);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(DOF2_GetInt(string, "TDono") == 1)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0 || pAdmin[playerid] == 7 || PlayerInfo[playerid][SCON] == true)
						{
							format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
							if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
							{
								DOF2_SetFloat(file, "CasaX", Float:1568.4894);
								DOF2_SetFloat(file, "CasaY", Float:-1893.2423);
								DOF2_SetFloat(file, "CasaZ", Float:13.5597);
								DOF2_SetInt(file, "Casa", 0);
							}
							DOF2_SetInt(string, "TDono", 0);
							DOF2_SetString(string, "Dono", "Ninguem");
							GivePlayerGrana(playerid, DOF2_GetInt(string, "Preco"));

							DestroyDynamicPickup(DOF2_GetInt(string, "Id"));

							pickupid = CreateDynamicPickup(1273, 1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), -1, -1, -1, 200.0);
							DOF2_SetInt(string, "Id", pickupid);

							DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));

							iconid = CreateDynamicMapIcon(DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 31, 0, -1, -1, -1, 100.0);
							DOF2_SetInt(string, "IconId", iconid);

							format(STRX, sizeof(STRX), "{1E90FF}Casa ID: {FFFFFF}%d\n{1E90FF}Dono: {FFFFFF}Ninguem\n{1E90FF}Morador: {FFFFFF}%s\n{1E90FF}Valor: {FFFFFF}$%d\n{1E90FF}Último uso: {FFFFFF}%s", c, DOF2_GetString(string, "Morador"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
							UpdateDynamic3DTextLabelText(ctextoid[c], -1, STRX);

							format(string, sizeof(string), "{FFFFFF}(INFO) {EAEDE8}%s {FFFFFF}vendeu a casa ID: {EAEDE8}%i", GetPlayerNameEx(playerid), c);
							SendClientMessageToAll(roxo, string);
							return 1;
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "Esta casa não é sua.");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Esta casa já está a venda!");
						return 1;
					}
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/desbugarcarro", true) == 0)
	{
		new id, Float:X, Float:Y, Float:Z;

		if(sscanf(cmdtext, "s[15]d", cmd, id))
		{
			SendClientMessage(playerid, Vermelho, "/desbugarcarro [carro]");
			return 1;
		}
		if(pAdmin[playerid] > 4)
		{
			format(string, sizeof(string), PASTA_CONCE, id);
			if(DOF2_FileExists(string))
			{
				GetVehiclePos(DOF2_GetInt(string, "Id"), X, Y, Z);
				if(strcmp(DOF2_GetString(string, "Dono"), "Ninguem", true) == 0)
				{
					if(DOF2_GetInt(string, "TDono") == 3)
					{
						SendClientMessage(playerid, Vermelho, "Você não pode desbugar esse carro.");
						return 1;
					}
					if(!(DOF2_GetInt(string, "TDono") == 3))
					{
						DOF2_SetInt(string, "TDono", 0);
					}
				}
				DestroyDynamic3DTextLabel(ConceLabel[id]);
				ConceLabel[id] = Text3D:INVALID_3DTEXT_ID;

				DestroyVehicle(DOF2_GetInt(string, "Id"));
				CriarVeiculo3(id, DOF2_GetInt(string, "Modelo"), DOF2_GetFloat(string, "CordX"), DOF2_GetFloat(string, "CordY"), DOF2_GetFloat(string, "CordZ"), DOF2_GetFloat(string, "Angulo"), DOF2_GetInt(string, "Cor1"), DOF2_GetInt(string, "Cor2"));
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/ircarro", true) == 0)
	{
		new id, Float:X, Float:Y, Float:Z;

		if(sscanf(cmdtext, "s[9]d", cmd, id))
		{
			SendClientMessage(playerid, Vermelho, "/ircarro [id]");
			return 1;
		}
		if(pAdmin[playerid] > 0)
		{
			format(string, sizeof(string), PASTA_CONCE, id);
			if(DOF2_FileExists(string))
			{
				GetVehiclePos(DOF2_GetInt(string, "Id"), X, Y, Z);
				if(IsVehicleOccupied(DOF2_GetInt(string, "Id")))
				{
					SetPlayerPos(playerid, X, Y, Z+4);
				}
				else
				{
					PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
				}
				TogglePlayerControllable(playerid, false);
				SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/nascercasa", true) == 0)
	{
		new Float:X, Float:Y, Float:Z;

		for(new c = 0; c < MAX_CASAS; c++)
		{
			format(string, sizeof(string), PASTA_CASAS, c);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(DOF2_GetInt(string, "TDono") == 1)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
							if(DOF2_FileExists(file))
							{
								GetPlayerPos(playerid, X, Y, Z);
								DOF2_SetFloat(file, "CasaX", Float:X);
								DOF2_SetFloat(file, "CasaY", Float:Y);
								DOF2_SetFloat(file, "CasaZ", Float:Z);
								DOF2_SetInt(file, "Casa", 1);
							}
							SetSpawnInfo(playerid, 1, DOF2_GetInt(file, "Skin"), DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"), 354.1657, 0, 0, 0, 0, 0, 0);
                            new FromF[90], msg[95];
							for (new P; P < MAX_PORTOES; P++) {
								format(FromF, sizeof(FromF), PASTA_PORTOES, P);
								if(!DOF2_FileExists(FromF)) continue;
								if(DOF2_GetInt(FromF, "CasaAssociada") == -1) continue;
								if(DOF2_GetInt(FromF, "CasaAssociada") == c) {
									LiberarPortao(-1, P);
									DOF2_SetString(FromF, "Dono", GetPlayerNameEx(playerid));
									format(msg, sizeof(msg), "Você recebeu a chave do portão %d.", P);
									SendClientMessage(playerid, 0x6495EDAA, msg);
								}
							} return 1;
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta casa não é sua.");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta casa não é sua.");
						return 1;
					}
				}
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/salvarempresa", true) == 0)
	{
		new Float:X, Float:Y, Float:Z;

		for(new c = 0; c < MAX_PROPS; c++)
		{
			format(string, sizeof(string), PASTA_PROPS, c);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(DOF2_GetInt(string, "TDono") == 1)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
							if(DOF2_FileExists(string))
							{
								GetPlayerPos(playerid, X, Y, Z);
								DOF2_SetFloat(file, "PropX", Float:X);
								DOF2_SetFloat(file, "PropY", Float:Y);
								DOF2_SetFloat(file, "PropZ", Float:Z);
								DOF2_SetInt(file, "Prop", 1);

       							for (new P; P < MAX_PORTOES; P++)
				   				{
				   				    new FromF[90], msg[90];
									format(FromF, sizeof(FromF), PASTA_PORTOES, P);
									if(!DOF2_FileExists(FromF)) continue;
									if(DOF2_GetInt(FromF, "EmpresaAssociada") != -1) continue;
									if(DOF2_GetInt(FromF, "EmpresaAssociada") == c) {
										DOF2_SetString(FromF, "Dono", GetPlayerNameEx(playerid));
										format(msg, sizeof(msg), "Você recebeu a chave do portão %d.", P);
										SendClientMessage(playerid, 0x6495EDAA, msg);
									}
								}
								return 1;
							}
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta empresa não é sua.");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta empresa não é sua.");
						return 1;
					}
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/aceitarmoradia", true) == 0)
	{
		for(new c = 0; c < MAX_CASAS; c++)
		{
			format(string, sizeof(string), PASTA_CASAS, c);
			if(DOF2_GetInt(string, "TMorador") == 1)
			{
				if(strcmp(DOF2_GetString(string, "Morador"), GetPlayerNameEx(playerid), false) == 0)
				{
					DOF2_SetInt(string, "TMorador", 0);
					DOF2_SetString(string, "Morador", "Ninguem");
				}
			}
		}
		format(string, sizeof(string), PASTA_CASAS, moradia[playerid]);
		if(DOF2_FileExists(string))
		{
			if(morar[playerid] == 1)
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));

				morar[playerid] = 0;
				moradia[playerid] = 0;

				KillTimer(MoradiaTime[playerid]);
				convitede[playerid] = INVALID_PLAYER_ID;

				DOF2_SetInt(string, "TMorador", 1);
				DOF2_SetString(string, "Morador", GetPlayerNameEx(playerid));
				DOF2_SetFloat(file, "CasaX" , DOF2_GetFloat(string, "PosX"));
				DOF2_SetFloat(file, "CasaY" , DOF2_GetFloat(string, "PosY"));
				DOF2_SetFloat(file, "CasaZ" , DOF2_GetFloat(string, "PosZ"));

				SetSpawnInfo(playerid, 1, DOF2_GetInt(file, "Skin"), DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"), 354.1657, 0, 0, 0, 0, 0, 0);

				format(STRX, sizeof(STRX), "{1E90FF}Casa ID: {FFFFFF}%d\n{1E90FF}Dono: {FFFFFF}%s\n{1E90FF}Morador: {FFFFFF}%s\n{1E90FF}Valor: {FFFFFF}$%d\n{1E90FF}Último uso: {FFFFFF}%s", moradia[playerid], DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
				UpdateDynamic3DTextLabelText(ctextoid[moradia[playerid]], -1, STRX);

				SendClientMessage(playerid, Amarelo, "Agora você está morando em uma casa!");
				SendClientMessage(convitede[playerid], Amarelo, "O(A) jogador(a) aceitou!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não foi convidado!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/recusarmoradia", true) == 0)
	{
		if(morar[playerid] == 1)
		{
			morar[playerid] = 0;
			moradia[playerid] = 0;
			convitede[playerid] = INVALID_PLAYER_ID;

			SendClientMessage(playerid, Amarelo, "Você recusou.");
			SendClientMessage(convitede[playerid], Amarelo, "O(A) jogador(a) recusou!");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não foi convidado!");
		}
		return 1;
	}

	if(strcmp(cmd, "/entrarcasa", true) == 0)
	{
		new Float:X, Float:Y, Float:Z;

		for(new c = 0; c < MAX_CASAS; c++)
		{
			format(string, sizeof(string), PASTA_CASAS, c);
			if(DOF2_FileExists(string) && IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
			{
				if(DOF2_GetInt(string, "Trancada") == 1)
				{
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0 || PlayerInfo[playerid][SCON] == true)
					{
						format(file, sizeof(file), PASTA_Int, DOF2_GetInt(string, "Int"));
						if(DOF2_FileExists(file))
						{
							GetPlayerPos(playerid, X, Y, Z);
							emcasa[playerid] = 1;

							CasaX[playerid] = X;
							CasaY[playerid] = Y;
							CasaZ[playerid] = Z;

							SetPlayerVirtualWorld(playerid, c);
							SetPlayerInterior(playerid, DOF2_GetInt(file, "Int"));

							SetPlayerPos(playerid, DOF2_GetFloat(file, "EX"), DOF2_GetFloat(file, "EY"), DOF2_GetFloat(file, "EZ"));
							SendClientMessage(playerid, Vermelho, "Você entrou na casa, para sair aperte ENTER.");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, 0xFFFF00AA, "Esta casa não é sua.");
					}
				}
				else
				{
					format(file, sizeof(file), PASTA_Int, DOF2_GetInt(string, "Int"));
					if(DOF2_FileExists(file))
					{
						GetPlayerPos(playerid, X, Y, Z);
						emcasa[playerid] = 1;

						CasaX[playerid] = X;
						CasaY[playerid] = Y;
						CasaZ[playerid] = Z;

						SetPlayerVirtualWorld(playerid, c);
						SetPlayerInterior(playerid, DOF2_GetInt(file, "Int"));

						SetPlayerPos(playerid, DOF2_GetFloat(file, "EX"), DOF2_GetFloat(file, "EY"), DOF2_GetFloat(file, "EZ"));
						SendClientMessage(playerid, Vermelho, "Você entrou na casa, para sair aperte ENTER.");
						return 1;
					}
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/verinterior", true) == 0)
	{
		new intid, Float:X, Float:Y, Float:Z;

		if(sscanf(cmdtext, "s[13]d", cmd, intid))
		{
			SendClientMessage(playerid, Vermelho, "/verinterior [interior]");
			return 1;
		}
		if(pAdmin[playerid] == 7)
		{
			format(string, sizeof(string), PASTA_Int, intid);
			if(DOF2_FileExists(string))
			{
				if(GetPlayerInterior(playerid) == 0)
				{
					GetPlayerPos(playerid, X, Y, Z);
					emcasa[playerid] = 1;

					CasaX[playerid] = X;
					CasaY[playerid] = Y;
					CasaZ[playerid] = Z;
				}
				SetPlayerInterior(playerid, DOF2_GetInt(string, "Int"));
				SetPlayerPos(playerid, DOF2_GetFloat(string, "EX"), DOF2_GetFloat(string, "EY"), DOF2_GetFloat(string, "EZ"));
				SendClientMessage(playerid, Amarelo, "Para voltar aperte ENTER.");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
			}
		}
		return 1;
	}

	// Casamento
    if(strcmp(cmd, "/pedircasamento", true) == 0)
	{
    if(permitido[playerid] == 0)
	{
    SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}(ERRO) Você não tem permição para pedir casamento, vá no cartorio e compre uma!");
    return 1;
    }
    new pname[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
    format(file, sizeof(file), PASTA_CONTAS, pname);
    if(permitido[playerid] == 1) {
    new pid, Float:x, Float:y, Float:z;
	if(sscanf(cmdtext, "s[16]u", cmd, pid))
	{
	SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}/pedircasamento [id]");
	return 1;
	}
    if(pid == playerid)
    {
    SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode casar com si mesmo.");
    return 1 ;
    }
    if(IsPlayerConnected(pid))
    {
    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
    if(DOF2_GetInt(file, "Casado") == 0)
    {
    GetPlayerPos(pid, x, y, z);
    if(IsPlayerInRangeOfPoint(playerid, 10.0, x, y, z))
    {
    casar[playerid] = 1;
    pedidode[pid] = playerid;

    format(string, sizeof(string), "{FF00EE}%s {FFFFFF}está te pedindo em casamento.\n{FFFF00}Escolha abaixo a resposta para o pedido:", GetPlayerNameEx(playerid));
    ShowPlayerDialog(pid, pedidocasamento, DIALOG_STYLE_MSGBOX, "Pedido de Casamento", string, "Aceitar", "Recusar");
    }
    else
    {
    SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Chegue mais perto para pedir.");
    }
    return 1;
    }
    else
    {
    SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você já está casado(a), divorcie antes.");
    }
    }
    else
    {
    SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Valor inválido, tente novamente!");
    return 1;
    }
    }
    }

    if(strcmp(cmd, "/divorcio", true) == 0)
	{
		if(permitidodivorcio[playerid] == 0) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF} Você não tem permição para se divorciar, vá no cartório e compre uma!");

	    new pname[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	    format(file, sizeof(file), PASTA_CONTAS, pname);

		if(permitidodivorcio[playerid] == 1)
		{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(DOF2_GetInt(file, "Casado") == 1)
			{
				format(string, sizeof(string), "{FF00EE}Você está casado(a) com: %s.\n{FFFF00}Quer mesmo prosseguir com esta separação?", DOF2_GetString(file, "CasouCom"));
				ShowPlayerDialog(playerid, divorcio, DIALOG_STYLE_MSGBOX, "Divórcio", string, "Sim", "Não");
			}
		}
		else SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não está casado(a).");
		return 1;
	}

	if(strcmp(cmd, "/infocarro", true) == 0)
	{
		for(new carro = 0; carro < MAX_CONCES; carro++)
		{
			format(file, sizeof(file), PASTA_CONCE, carro);
			if(DOF2_FileExists(file))
			{
				if(IsPlayerInRangeOfPoint(playerid, 3.0, DOF2_GetFloat(file, "CordX"), DOF2_GetFloat(file, "CordY"), DOF2_GetFloat(file, "CordZ")))
				{
					format(string, sizeof(string), "Veículo: %s | Conce ID: %d", GetVehicleName(DOF2_GetInt(file, "Id")), carro);
					SendClientMessage(playerid, Blue, string);

					format(string, sizeof(string), "Último uso: %s | Dono: %s | Valor: %d", DOF2_GetString(file, "DataSet"), DOF2_GetString(file, "Dono"), DOF2_GetInt(file, "Preco"));
					SendClientMessage(playerid, Blue, string);

					format(string, sizeof(string), "Cópias da chave com: %s, %s, %s", DOF2_GetString(file, "Convidado1"), DOF2_GetString(file, "Convidado2"), DOF2_GetString(file, "Convidado3"));
					SendClientMessage(playerid, Blue, string);
					return 1;
				}
				else if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleID(playerid) == DOF2_GetInt(file, "Id"))
				{
					format(string, sizeof(string), "Veículo: %s | Conce ID: %d", GetVehicleName(DOF2_GetInt(file, "Id")), carro);
					SendClientMessage(playerid, Blue, string);

					format(string, sizeof(string), "Último uso: %s | Dono: %s | Valor: %d", DOF2_GetString(file, "DataSet"), DOF2_GetString(file, "Dono"), DOF2_GetInt(file, "Preco"));
					SendClientMessage(playerid, Blue, string);

					format(string, sizeof(string), "Cópias da chave com: %s, %s, %s", DOF2_GetString(file, "Convidado1"), DOF2_GetString(file, "Convidado2"), DOF2_GetString(file, "Convidado3"));
					SendClientMessage(playerid, Blue, string);
					return 1;
				}
			}
		}
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, Vermelho, "Este veículo parece não ter sido fornecido pela concessionária.");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Não consegui mostrar as informações, entre no veículo para ver e tente novamente.");
		}
		return 1;
	}

    if(strcmp("/sms", cmd, true) == 0 || strcmp(cmd, "/pm", true) == 0)
	{
		new id, Message[128], gMessage[128], pMessage[128];

		if(sscanf(cmdtext, "s[4]us[128]", cmd, id, pMessage))
		{
			SendClientMessage(playerid, tcadm, "Use: /sms [id] [mensagem] ou /pm [id] [mensagem]");
			return 1;
		}
		if(!IsPlayerConnected(id))
		{
			SendClientMessage(playerid, tcadm, "Valor inválido, tente novamente!");
			return 1;
		}

		for(new i = 0; i < strlen(pMessage); i++)
		{
			gMessage[i] = pMessage[i];
		}
		gMessage[strlen(pMessage)] = EOS;

		if(!(pAdmin[playerid] > 0))
		{
			if(VBIsIP(gMessage))
			{
				SendClientMessage(playerid, COLOR_WHITE, "[ANTI-SPAM] Você não pode fazer spam no servidor.");
				return 1;
			}
		}

		if(playerid != id)
		{
			if(blockpm[id] == 1)
			{
				SendClientMessage(playerid, tcadm, "Este player não está recebendo SMS.");
				return 1;
			}
			format(Message, sizeof(Message), "[SMS ENVIADO] {FFFFFF}%s (ID: %d): {A8ADAB}%s", GetPlayerNameEx(id), id, gMessage);
			SendClientMessage(playerid, 0xFFD700AA, Message);

			format(Message, sizeof(Message), "[SMS RECEBIDO] {FFFFFF}%s (ID: %d): {A8ADAB}%s", GetPlayerNameEx(playerid), playerid, gMessage);
			SendClientMessage(id, 0xDAA520AA, Message);

			format(Message, sizeof(Message), "(WhatsApp): %s (%d) > %s (%d): %s", GetPlayerNameEx(playerid), playerid, GetPlayerNameEx(id), id, gMessage);
			ABroadCastPM(Vermelho, Message);

			PlayerPlaySound(id, 1085, 0.0, 0.0, 0.0);
			printf("SMS de %s para %s: %s", GetPlayerNameEx(playerid), GetPlayerNameEx(id), gMessage);
		}
		else
		{
			SendClientMessage(playerid, tcadm, "Você não pode enviar SMS para você mesmo!");
		}
		return 1;
	}

	if(strcmp("/ccar", cmd, true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new carid, preco, cor1, cor2,
				Float:X, Float:Y, Float:Z, Float:ang;

			if(sscanf(cmdtext, "s[6]ddD(-1)D(-1)", cmd, carid, preco, cor1, cor2))
			{
				SendClientMessage(playerid, Cinza, "Use: /ccar [id] [preço] [cor1] [cor2]");
				return 1;
			}
			if(carid >= 400 && carid <= 611)
			{
				if(carid == 577 || carid == 592)
				{
					SendClientMessage(playerid, tcadm, "Veículo proibido, tente outro! | ID's = 400-611");
					return 1;
				}
				if(IsPlayerInAnyVehicle(playerid))
				{
					GetPlayerPos(playerid, X, Y, Z);
					GetVehicleZAngle(GetPlayerVehicleID(playerid), ang);
					PlayerAddConceVehicle(playerid, carid, preco, X, Y, Z, ang, cor1, cor2);
				}
				else
				{
					GetPlayerPos(playerid, X, Y, Z);
					GetPlayerFacingAngle(playerid, ang);
					PlayerAddConceVehicle(playerid, carid, preco, X, Y, Z, ang, cor1, cor2);
				}
			}
			else
			{
				SendClientMessage(playerid, Cinza, "Valor inválido, tente novamente! | ID's = 400-611");
			}
		}
		else
		{
			SendClientMessage(playerid, Cinza, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/meucarro", true) == 0)
	{
	    if(NaCorrida[playerid] == true) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}[ATENÇÃO]{FFFFFF}: Comando Bloqueado em Eventos Devido ao uso abusivo do {FF0000}Missil{FFFFFF}! .");
		for(new carro = 0; carro < MAX_CONCES; carro++)
		{
			format(string, sizeof(string), PASTA_CONCE, carro);
			if(DOF2_FileExists(string))
			{
				if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
				{
					ShowPlayerDialog(playerid, 4501, DIALOG_STYLE_LIST, "Meu Carro", "{FF00FF}Entrar\n{FF0000}Salvar\n{FFDD00}Chaves\n{AFAFAF}Cor 1\n{FFA500}Cor 2\n{FFFFFF}Respawnar\n{2C0BB3}Ferramentas\n{00FFFF}Vender\n{FF33FF}Tunar\n{00FF00}Destunar", "OK", "Cancelar");
					SendClientMessage(playerid, 0x6495EDAA, "Você está no menu de seu(s) carro(s).");
					return 1;
				}
			}
		}
		SendClientMessage(playerid, 0x6495EDAA, "Você não tem nenhum carro proprio.");
		return 1;
	}

	if(strcmp(cmd, "/modelocarro", true) == 0)
	{
		if(pAdmin[playerid] == 6)
		{
			new modelo, Float:carroX, Float:carroY, Float:carroZ, Float:carroA;

			if(sscanf(cmdtext, "s[13]d", cmd, modelo))
			{
				SendClientMessage(playerid, Vermelho, "/modelocarro [modelo]");
				return 1;
			}
			if(!IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "Você não está em um veículo!");
				return 1;
			}
			if(!(modelo >= 400 && modelo <= 611))
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente! | ID's = 400-611");
				return 1;
			}
			for(new c = 0; c < MAX_CONCES; c++)
			{
				format(string, sizeof(string), PASTA_CONCE, c);
				if(DOF2_FileExists(string))
				{
					if(GetPlayerVehicleID(playerid) == DOF2_GetInt(string, "Id"))
					{
						GetVehiclePos(GetPlayerVehicleID(playerid), carroX, carroY, carroZ);
						GetVehicleZAngle(GetPlayerVehicleID(playerid), carroA);

						DOF2_SetInt(string, "Modelo", modelo);
						DestroyDynamic3DTextLabel(ConceLabel[c]);
						ConceLabel[c] = Text3D:INVALID_3DTEXT_ID;

						DestroyVehicle(DOF2_GetInt(string, "Id"));
						CriarVeiculo3(c, modelo, carroX, carroY, carroZ, carroA, DOF2_GetInt(string, "Cor1"), DOF2_GetInt(string, "Cor2"));
						SendClientMessage(playerid, 0x6495EDAA, "Modelo alterado com sucesso!");
						return 1;
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/veiculosdeletados", true) == 0)  //nota3
	{
		new count = 0, msg[1000];

		SendClientMessage(playerid, 0x008000AA, "=== Veículos Deletados ===");
		for(new carro = 0; carro < MAX_CONCES; carro++)
		{
			format(file, sizeof(file), PASTA_CONCE, carro);
			if(DOF2_GetInt(file, "TDono") == 3)
			{
				format(msg, sizeof(msg), "» Veículo ID: %d - Deletado", carro);
				SendClientMessage(playerid, 0x0088CAAA, msg);
				count++;
			}
		}
		if(count == 0)
		{
			SendClientMessage(playerid, 0xFF0000AA, "Nenhum veículo foi deletado!");
		}
		return 1;
	}

	if(strcmp(cmd, "/veiculosliberados", true) == 0) //nota2
	{
		if(pAdmin[playerid] > 0)
		{
			new count = 0, msg[1000];

			SendClientMessage(playerid, 0x008000AA, "=== Veículos Liberados ===");
			for(new carro = 0; carro < MAX_CONCES; carro++)
			{
				format(file, sizeof(file), PASTA_CONCE, carro);
				if(DOF2_FileExists(file))
				{
					if(DOF2_GetInt(file, "TDono") == 0)
					{
						format(msg, sizeof(msg), "» Veículo ID: %d - Liberado", carro);
						SendClientMessage(playerid, 0x0088CAAA, msg);
						count++;
					}
				}
			}
			if(count == 0)
			{
				SendClientMessage(playerid, 0xFF0000AA, "Nenhum veículo foi liberado!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/respawnccar", true) == 0)
	{
		if(pAdmin[playerid] > 2)
		{
			new carroid, strlabel[256];

			for(new c = 0; c < MAX_CONCES; c++)
			{
				format(string, sizeof(string), PASTA_CONCE, c);
				if(DOF2_FileExists(string))
				{
					if(GetPlayerVehicleID(playerid) == DOF2_GetInt(string, "Id"))
					{
						DestroyDynamic3DTextLabel(ConceLabel[c]);
						ConceLabel[c] = Text3D:INVALID_3DTEXT_ID;
						DestroyVehicle(DOF2_GetInt(string, "Id"));

						carroid = AddStaticVehicle(DOF2_GetInt(string, "Modelo"), DOF2_GetFloat(string, "CordX"), DOF2_GetFloat(string, "CordY"), DOF2_GetFloat(string, "CordZ"), DOF2_GetFloat(string, "Angulo"), DOF2_GetInt(string, "Cor1"), DOF2_GetInt(string, "Cor2"));
						if(DOF2_GetInt(string, "TDono") == 1)
						{
							format(strlabel, sizeof(strlabel), STRTEXT3D_CONCE, GetVehicleName(carroid), DOF2_GetString(string, "Dono"), DOF2_GetInt(string, "Preco"), c, DOF2_GetString(string, "DataSet"));
						}
						else
						{
							format(strlabel, sizeof(strlabel), STRTEXT3D_CONCE_VENDA, GetVehicleName(carroid), DOF2_GetString(string, "Dono"), DOF2_GetInt(string, "Preco"), c, DOF2_GetString(string, "DataSet"));
						}
						ConceLabel[c] = CreateDynamic3DTextLabel(strlabel, -1, 0.0, 0.0, 0.15, 10.0, INVALID_PLAYER_ID, carroid, 1, -1, -1, -1, 50.0);
						DOF2_SetInt(string, "Id", carroid);
						return 1;
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/salvarcar", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new Float:carroX, Float:carroY, Float:carroZ, Float:carroA;

			if(IsPlayerInAnyVehicle(playerid))
			{
				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_FileExists(string))
					{
						GetVehiclePos(GetPlayerVehicleID(playerid), carroX, carroY, carroZ);
						GetVehicleZAngle(GetPlayerVehicleID(playerid), carroA);
						if(DOF2_GetInt(string, "Id") == GetPlayerVehicleID(playerid))
						{
							DOF2_SetFloat(string, "CordX", Float:carroX);
							DOF2_SetFloat(string, "CordY", Float:carroY);
							DOF2_SetFloat(string, "CordZ", Float:carroZ);
							DOF2_SetFloat(string, "Angulo", Float:carroA);

							DestroyDynamic3DTextLabel(ConceLabel[carro]);
							ConceLabel[carro] = Text3D:INVALID_3DTEXT_ID;
							DestroyVehicle(DOF2_GetInt(string, "Id"));

							CriarVeiculo3(carro, DOF2_GetInt(string, "Modelo"), DOF2_GetFloat(string, "CordX"), DOF2_GetFloat(string, "CordY"), DOF2_GetFloat(string, "CordZ"), DOF2_GetFloat(string, "Angulo"), DOF2_GetInt(string, "Cor1"), DOF2_GetInt(string, "Cor2"));
							SendClientMessage(playerid, 0x6495EDAA, "Veículo salvo na sua posição.");
							return 1;
						}
					}
				}
				SendClientMessage(playerid, Amarelo, "Este veículo não foi feito na Conce.");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você precisa estar no veículo.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/ajudavotacao", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			SendClientMessage(playerid, 0x008000AA, "Use: /votacao - Para iniciar uma votação.");
			SendClientMessage(playerid, 0x008000AA, "Use: /encerrar - Para encerrar uma votação.");
			return 1;
		}
	}

	if(strcmp(cmd, "/votacao", true) == 0)
	{
		new pergunta[256];

		if(sscanf(cmdtext, "s[9]s[256]", cmd, pergunta))
		{
			return SendClientMessage(playerid, 0xFFFFFFAA, "Use: /votacao [pergunta]");
		}
		if(pAdmin[playerid] > 0)
		{
			if(!votacao[iniciada])
			{
				votacao[iniciada] = true;
				votacao[sim] = 0;
				votacao[nao] = 0;

				SendClientMessageToAll(LARANJA, "|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|");
				format(string, sizeof string, "Pergunta: %s", pergunta);
				SendClientMessageToAll(VERDECLARO, string);

				SendClientMessageToAll(LARANJA, "---------------------------------------------");
				SendClientMessageToAll(VERDEMEDIO, "--> Se você acha que sim digite: /sim");
				SendClientMessageToAll(VERDEMEDIO, "--> Se você acha que não digite: /nao");
				SendClientMessageToAll(LARANJA, "|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|-|");

				GameTextForAll("~r~Enquete ~p~Iniciada!", 6000, 3);

				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					votou[i] = false;
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Já existe uma votação em andamento!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/sim", true) == 0)
	{
		if(votou[playerid] == 1)
		{
			return SendClientMessage(playerid, Vermelho, "Você já votou.");
		}
		if(votacao[iniciada] && !votou[playerid])
		{
			votacao[sim]++;
			votacao[total]++;
			votou[playerid] = true;

			SendClientMessage(playerid, LARANJA, "Seu voto foi computado com sucesso.");
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/nao", true) == 0)
	{
		if(votou[playerid] == 1)
		{
			return SendClientMessage(playerid, Vermelho, "Você já votou.");
		}
		if(votacao[iniciada] && !votou[playerid])
		{
			votacao[nao]++;
			votacao[total]++;
			votou[playerid] = true;

			SendClientMessage(playerid, LARANJA, "Seu voto foi computado com sucesso.");
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/encerrar", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			if(votacao[iniciada])
			{
				SendClientMessageToAll(LARANJA, "=========== RESULTADOS ============");
				SendClientMessageToAll(LARANJA, "» RESULTADO DA VOTAÇÃO «");

				if(votacao[sim] == votacao[nao])
				{
					SendClientMessageToAll(VERMELHO, "==> EMPATE!");
				}
				else if(votacao[sim] > votacao[nao])
				{
					SendClientMessageToAll(VERMELHO, "==> A maioria votou em sim.");
				}
				else if(votacao[sim] < votacao[nao])
				{
					SendClientMessageToAll(VERMELHO, "==> A maioria votou em não.");
				}

				format(string, sizeof string, "» %d jogador(es) votaram em sim.", votacao[sim]);
				SendClientMessageToAll(VERDEMEDIO, string);

				format(string, sizeof string, "» %d jogador(es) votaram em não.", votacao[nao]);
				SendClientMessageToAll(VERDEMEDIO, string);

				format(string, sizeof string, "» Esta enquete teve %d votos!",votacao[total]);
				SendClientMessageToAll(BRANCO, string);

				votacao[iniciada] = false;
				votacao[sim] = 0;
				votacao[nao] = 0;
				votacao[total] = 0;

				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					votou[i] = false;
				}

				SendClientMessageToAll(LARANJA, "===================================");
				GameTextForAll("~r~Votacao ~r~encerrada!", 6000, 3);
			}
			else
			{
				SendClientMessage(playerid, BRANCO, "Não existe nenhuma votação em andamento...");
			}
		}
		else
		{
			SendClientMessage(playerid, -1, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/punir", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid, motivo[256];

			if(sscanf(cmdtext, "s[7]us[256]", cmd, plid, motivo))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /punir [id] [motivo]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
                if(pAdmin[plid] > 0 && pAdmin[playerid] < 7) return SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você não pode punir um admin");
				aviso[plid] += 1;
				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}puniu o(a) {FFFFFF}%s. {6959CD}Motivo: {FFFFFF}%s (%d/3)", GetPlayerNameEx(playerid), GetPlayerNameEx(plid), motivo, aviso[plid]);
				SendClientMessageToAll(Azul, string);
				if(aviso[plid] >= 3)
				{
					format(string, sizeof(string), "{FF0000}O(a) jogador(a) {FFFFFF}%s {FF0000}foi kickado(a) por {FFFFFF}[BSL]Admin. {FF0000}Motivo: 3 Punições", GetPlayerNameEx(plid));
					SendClientMessageToAll(Amarelo, string);
					
					KickLog(string);
					Kick(plid);
				}
			}
			else
			{
				format(string, sizeof(string), "ID inválido!", plid);
				SendClientMessage(playerid, Vermelho, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/liberarnick", true) == 0)
	{
		if(pAdmin[playerid] > 2)
		{
			new plid;

			if(sscanf(cmdtext, "s[13]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /liberarnick [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file2, "MN", 1);

				format(string, sizeof(string), "Você liberou o(a) %s para mudar de nick!", GetPlayerNameEx(plid), playerid);
				SendClientMessage(playerid, Blue, string);

				format(string, sizeof(string), "{FFC1C1}O ADM {FFFFFF}%s{FFC1C1} ({FFFFFF}ID: %d{FFC1C1}) liberou você para mudar de nick{FFFFFF}!", GetPlayerNameEx(playerid), playerid);
				SendClientMessage(plid, tcadm, string);

				GameTextForPlayer(plid, "~w~/trocarnick", 8000, 3);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp("/ping", cmd, true) == 0)
	{
		if(pAdmin[playerid] == 7)
		{
			new cfg[64];

			if(sscanf(cmdtext, "s[6]s[64]", cmd, cfg))
			{
				SendClientMessage(playerid, 0x00E800FF, "Use: /ping [desativar/ban/kick]");
				SendClientMessage(playerid, 0x00E800FF, "Ex.: /ping ban");
				return 1;
			}
			if(!strcmp(cfg, "desativar", true))
			{
				PingCfg = 0;
				SendClientMessage(playerid, Amarelo, "Limite de ping desativado com sucesso!");
			}
			else if(!strcmp(cfg, "ban", true))
			{
				PingCfg = 1;
				SendClientMessage(playerid, Amarelo, "Agora os players que ultrapassar o limite serão banidos!");
			}
			else if(!strcmp(cfg, "kick", true))
			{
				PingCfg = 2;
				SendClientMessage(playerid, Amarelo, "Agora os players que ultrapassar o limite serão kickados!");
			}
			else SendClientMessage(playerid, 0x00E800FF, "Função não disponível!");
		}
		return 1;
	}

	if(strcmp("/kick", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid, motivo[64];

			if(sscanf(cmdtext, "s[6]us[64]", cmd, plid, motivo))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /kick [id] [motivo]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
                if(pAdmin[plid] > 0 && pAdmin[playerid] < 7) return SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você não pode kickar um admin");
				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}kickou o(a) {FFFFFF}%s. {6959CD}Motivo: {FFFFFF}%s", GetPlayerNameEx(playerid), GetPlayerNameEx(plid), motivo);
				SendClientMessageToAll(Amarelo, string);
				
				KickLog(string);
				Kick(plid);
			}
			else
			{
				format(string, sizeof(string), "Valor inválido, tente novamente!", plid);
				SendClientMessage(playerid, Vermelho, string);
			}
		}
		return 1;
	}

	if(strcmp("/banirnick", cmd, true) == 0)  //nota1
	{
		if(pAdmin[playerid] == 3)
		{
			new nick[MAX_PLAYER_NAME], motivo[64];

			if(sscanf(cmdtext, "s[11]s[24]s[64]", cmd, nick, motivo))
			{
				SendClientMessage(playerid, Vermelho, "Use: /banirnick [nick] [motivo]");
				return 1;
			}
			VBanNick(playerid, nick, motivo);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/desbanirnick", cmd, true) == 0)
	{
		if(pAdmin[playerid] == 6)
		{
			new nick[MAX_PLAYER_NAME];

			if(sscanf(cmdtext, "s[14]s[24]", cmd, nick))
			{
				SendClientMessage(playerid, Vermelho, "Use: /desbanirnick [nick]");
				return 1;
			}
			VUnBan(playerid, nick);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/ban", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 2)
		{
			new plid, motivo[64];

			if(sscanf(cmdtext, "s[5]us[64]", cmd, plid, motivo))
			{
				SendClientMessage(playerid, Cinza, "Use: /ban [id] [motivo]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
                if(pAdmin[plid] > 0 && pAdmin[playerid] < 7) return SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você não pode banir um admin");
				if(IsPlayerNPC(plid))
				{
					SendClientMessage(playerid, Vermelho, "Você não pode fazer isso com um NPC.");
					return 1;
				}
				VBanID(playerid, plid, motivo);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/banip", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 3)
		{
			new ip[32], motivo[64];

			if(sscanf(cmdtext, "s[7]s[32]s[64]", cmd, ip, motivo))
			{
				SendClientMessage(playerid, Cinza, "Use: /banip [ip] [motivo]");
				return 1;
			}
			if(VBIsIP(ip))
			{
				if(strcmp("127.0.0.1", ip, true) == 0)
				{
					SendClientMessage(playerid, Vermelho, "Você não pode fazer isso com este IP.");
					return 1;
				}
				VBanIP(playerid, ip, motivo);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Endereço IP inválido, tente novamente!");
				SendClientMessage(playerid, Amarelo, "/ip [id]: Para ver o endereço IP de um jogador.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/desbanir", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 6)
		{
			new info[64];

			if(sscanf(cmdtext, "s[10]s[64]", cmd, info))
			{
				SendClientMessage(playerid, Cinza, "Use: /desbanir [nick/ip]");
				return 1;
			}
			VUnBan(playerid, info);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/infoban", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new info[64];

			if(sscanf(cmdtext, "s[9]s[64]", cmd, info))
			{
				SendClientMessage(playerid, Cinza, "Use: /infoban [nick/ip]");
				return 1;
			}
			format(file, sizeof(file), "/Bans/%s.ini", info);
			VBanLoadInfo(playerid, file);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

/*
	if(strcmp("/infoconta", cmd, true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new conta[MAX_PLAYER_NAME];

			if(sscanf(cmdtext, "s[12]s[24]", cmd, conta))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /infoconta [nick]");
				return 1;
			}
			format(file2, sizeof(file2), PASTA_CONTAS, conta);
			if(DOF2_FileExists(file2))
			{
				new string222[512];

				format(string222, sizeof(string222), "(§) - %s - (§)", conta);
				SendClientMessage(playerid, -1, string222);

				format(string, sizeof(string), "{FFFF00}[»] {FF0000}Level ADM: {FFFFFF}%s", DOF2_GetString(file2, "Admin"));
				SendClientMessage(playerid, -1, string);

				format(string, sizeof(string), "{FFFF00}[»] {FF0000}Level: {FFFFFF}%s", DOF2_GetString(file2, "Level"));
				SendClientMessage(playerid, -1, string);

				format(string, sizeof(string), "{FFFF00}[»] {FF0000}Estudo: {FFFFFF}%s", DOF2_GetString(file2, "Faculdade"));
				SendClientMessage(playerid, -1, string);
				
				format(string, sizeof(string), "{FFFF00}[»] {FF0000}Cash: {FFFFFF}%s", DOF2_GetString(file2, "CASH"));
				SendClientMessage(playerid, -1, string);

				format(string, sizeof(string), "{FFFF00}[»] {FF0000}Senha: {FFFFFF}%s", DOF2_GetString(file2, "Senha"));
				SendClientMessage(playerid, -1, string);

				SendClientMessage(playerid, -1, string222);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Este usuário não existe!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}


*/
    if (!strcmp(cmdtext, "/infoconta", true))
    {
        if (!PlayerInfo[playerid][SCON])
            return SendClientMessage(playerid, -1, "Sem permissão");

        new conta[MAX_PLAYER_NAME + 1];
        if (sscanf(cmdtext, "s[12]s[24]", cmd, conta))
            return SendClientMessage(playerid, -1, "Use: /infoconta [nick]");

        if (!DOF2_FileExists(file2))
            return SendClientMessage(playerid, -1, "Conta não encontrada");

        format(file, sizeof(file2), PASTA_CONTAS, conta);

        format(string, sizeof(string), "[Admin]: Informações da conta de %s", conta);
        SendClientMessage(playerid, -1, string);

        strcat(string, "Admin: %i\n", DOF2_GetInt(file2, "Admin"));
        strcat(string, "Cash: %i\n", DOF2_GetInt(file2, "CASH"));
        strcat(string, "Level: %i\n", DOF2_GetInt(file2, "Level"));
        strcat(string, "Estudo: %i\n", DOF2_GetInt(file2, "Faculdade"));

        ShowPlayerDialog(playerid, DIALOG_CONTA, DIALOG_STYLE_MSGBOX, "Informações gerais", string, "Ok", #);
    }
	
	if(strcmp("/deletaracc", cmd, true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new conta[MAX_PLAYER_NAME];

			if(sscanf(cmdtext, "s[12]s[24]", cmd, conta))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /deletaracc [nick]");
				return 1;
			}

			format(file2, sizeof(file2), PASTA_CONTAS, conta);
			if(DOF2_FileExists(file2))
			{
				DOF2_RemoveFile(file2);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}deletou a conta: {FFFFFF}%s.", GetPlayerNameEx(playerid), conta);
				SendClientMessageToAll(tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Este usuário não existe!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

	if(strcmp("/fakeban", cmd, true) == 0)
	{
		if(pAdmin[playerid] == 0)
		{
			new plid, motivo[64];

			if(sscanf(cmdtext, "s[9]us[64]", cmd, plid, motivo))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /fakeban [id] [motivo]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(string, sizeof(string), "{FF0000}Você fakebaniu o(a) jogador(a) {FFFFFF}%s.", GetPlayerNameEx(plid));
				SendClientMessage(playerid, tcadm, string);

				format(string, sizeof(string), "O(a) jogador(a) %s foi banido(a) por %s. Motivo: %s", GetPlayerNameEx(plid), GetPlayerNameEx(playerid), motivo);
				SendClientMessageToAll(CorBan, string);

				format(string, sizeof(string), "{316262}%s {FFFFFF}Saiu Do Servidor {316262}({FFFFFF} kickado/Banido {316262})", GetPlayerNameEx(plid));
				SendClientMessageToAll(-1, string);

				SendClientMessage(plid, 0xDFDFDFAA, "Server closed the connection.");
			}
			else
			{
				format(string, sizeof(string), "Valor inválido, tente novamente!", plid);
				SendClientMessage(playerid, Vermelho, string);
			}
		}
		return 1;
	}
	
    if(strcmp("/fakekick", cmd, true) == 0)
	{
		if(pAdmin[playerid] == 0)
		{
			new plid, motivo[64];

			if(sscanf(cmdtext, "s[9]us[64]", cmd, plid, motivo))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /fakekick [id] [motivo]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(string, sizeof(string), "{FF0000}Você fakekickou o(a) jogador(a) {FFFFFF}%s.", GetPlayerNameEx(plid));
				SendClientMessage(playerid, tcadm, string);

				format(string, sizeof(string), "{EAEDE8}O(a) ADM {FFFFFF}%s {EAEDE8}kickou o(a) {FFFFFF}%s, {EAEDE8}Motivo: {FFFFFF}%s", GetPlayerNameEx(playerid), GetPlayerNameEx(plid), motivo);
				SendClientMessageToAll(Amarelo, string);

				format(string, sizeof(string), "{316262}%s {FFFFFF}Saiu Do Servidor {316262}({FFFFFF} Kickado/Banido {316262})", GetPlayerNameEx(plid));
				SendClientMessageToAll(-1, string);

				SendClientMessage(plid, 0xDFDFDFAA, "Server closed the connection.");
			}
			else
			{
				format(string, sizeof(string), "Valor inválido, tente novamente!", plid);
				SendClientMessage(playerid, Vermelho, string);
			}
		}
		return 1;
	}

	if(strcmp("/fakeadm", cmd, true) == 0)
	{
	    if(PlayerInfo[playerid][SCON] == true)
	    {
			new plid, lvl;

			if(sscanf(cmdtext, "s[10]ud", cmd, plid, lvl))
			{
			    SendClientMessage(playerid, Vermelho, "Digite: /fakeadm [id] [level]");
			    return 1;
			}
   			if(lvl >= 8)
			{
				SendClientMessage(playerid, Vermelho, "O level permitido para ADM é de 0 a 7!");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(string, sizeof(string), "{6959CD}O(a) ADM RCON {FFFFFF}%s {6959CD}te promoveu para ADM Level: {FFFFFF}%d", GetPlayerNameEx(playerid), lvl);
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
                format(string, sizeof(string), "Valor inválido, tente novamente!", plid);
				SendClientMessage(playerid, Vermelho, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/afk", true) == 0)
	{
		if(AFK[playerid] == 0)
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "Você não pode usar este comando dentro de um carro!");
				return 1;
			}
			AFK[playerid] = 1;
			SetPlayerVirtualWorld(playerid, 1);

			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 0);

			TextDrawShowForPlayer(playerid, AfkText);
			TextDrawShowForPlayer(playerid, AfkBackText);

			format(string, sizeof(string), "{FFFFFF}%s {FF0000}ficou ausente {FFFFFF}/afk", GetPlayerNameEx(playerid));
			SendClientMessageToAll(0xFF9595AA, string);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você já está no modo online para poder utilizar esse comando!");
		}
		return 1;
	}

	if(strcmp(cmd, "/ausentes", true) == 0)
	{
		new count = 0, msg[1000];

		SendClientMessage(playerid, 0x008000AA, "{FFFFFF}Jogadores {FF0000}AFK");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && AFK[i])
			{
				format(msg, sizeof(msg), "%s", GetPlayerNameEx(i));
				SendClientMessage(playerid, 0x0088CAAA, msg);
				count++;
			}
		}
		if(count == 0)
		{
			SendClientMessage(playerid, 0xFF0000AA, "{FF0000}Ninguém está ausente.");
		}
		return 1;
	}

	if(strcmp("/trabalhar", cmd, true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));

		if(DOF2_GetInt(file, "Profissao") == Desempregado)
		{
			SendClientMessage(playerid, Vermelho, "Você não tem um emprego e não está trabalhando.");
			SendClientMessage(playerid, Vermelho, "Você pode conseguir um emprego na prefeitura.");
		}
		if(DOF2_GetInt(file, "Profissao") == MotoristaP)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == MOnibus)
		{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1647.0151,-1065.8488,23.8984);
		}
		if(DOF2_GetInt(file, "Profissao") == Guarda)
		{
			if(GetClosestDelegacia(playerid) == 0)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 308.7138, -1859.3555, 3.0668); // Praia St. M.
			}
			else if(GetClosestDelegacia(playerid) == 1)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -1606.2260, 675.1903, -5.2421); // DPExSF
			}
			else if(GetClosestDelegacia(playerid) == 2)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 2293.6933, 2451.4687, 10.8203); // DPExLV
			}
		}
		if(DOF2_GetInt(file, "Profissao") == Policial_R)
		{
			if(GetClosestDelegacia(playerid) == 0)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906); // DPExLS
			}
			else if(GetClosestDelegacia(playerid) == 1)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -1606.2260, 675.1903, -5.2421); // DPExSF
			}
			else if(GetClosestDelegacia(playerid) == 2)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 2293.6933, 2451.4687, 10.8203); // DPExLV
			}
		}
		if(DOF2_GetInt(file, "Profissao") == Policial_M)
		{
			if(GetClosestDelegacia(playerid) == 0)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906); // DPExLS
			}
			else if(GetClosestDelegacia(playerid) == 1)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -1606.2260, 675.1903, -5.2421); // DPExSF
			}
			else if(GetClosestDelegacia(playerid) == 2)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 2293.6933, 2451.4687, 10.8203); // DPExLV
			}
		}
		if(DOF2_GetInt(file, "Profissao") == Policial_C)
		{
			if(GetClosestDelegacia(playerid) == 0)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906); // DPExLS
			}
			else if(GetClosestDelegacia(playerid) == 1)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -1606.2260, 675.1903, -5.2421); // DPExSF
			}
			else if(GetClosestDelegacia(playerid) == 2)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 2293.6933, 2451.4687, 10.8203); // DPExLV
			}
		}
		if(DOF2_GetInt(file, "Profissao") == Policial_F)
		{
			if(GetClosestDelegacia(playerid) == 0)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906); // DPExLS
			}
			else if(GetClosestDelegacia(playerid) == 1)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -1606.2260, 675.1903, -5.2421); // DPExSF
			}
			else if(GetClosestDelegacia(playerid) == 2)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 2293.6933, 2451.4687, 10.8203); // DPExLV
			}
		}
		if(DOF2_GetInt(file, "Profissao") == Delegado)
		{
			if(GetClosestDelegacia(playerid) == 0)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906); // DPExLS
			}
			else if(GetClosestDelegacia(playerid) == 1)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -1606.2260, 675.1903, -5.2421); // DPExSF
			}
			else if(GetClosestDelegacia(playerid) == 2)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 2293.6933, 2451.4687, 10.8203); // DPExLV
			}
		}
		if(DOF2_GetInt(file, "Profissao") == Bope)
		{
			if(GetClosestDelegacia(playerid) == 0)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906); // DPExLS
			}
			else if(GetClosestDelegacia(playerid) == 1)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -1606.2260, 675.1903, -5.2421); // DPExSF
			}
			else if(GetClosestDelegacia(playerid) == 2)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 2293.6933, 2451.4687, 10.8203); // DPExLV
			}
		}
		if(DOF2_GetInt(file, "Profissao") == Swat)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1182.0980, -2036.8110, 69.0078); // SWAT BASE LS
		}
		if(DOF2_GetInt(file, "Profissao") == Narcoticos)
		{
			if(GetClosestDelegacia(playerid) == 0)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906); // DPExLS
			}
			else if(GetClosestDelegacia(playerid) == 1)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -1606.2260, 675.1903, -5.2421); // DPExSF
			}
			else if(GetClosestDelegacia(playerid) == 2)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 2293.6933, 2451.4687, 10.8203); // DPExLV
			}
		}
		if(DOF2_GetInt(file, "Profissao") == Exercito)
		{
			if(GetClosestDelegacia(playerid) == 0)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906); // DPExLS
			}
			else if(GetClosestDelegacia(playerid) == 1)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -1606.2260, 675.1903, -5.2421); // DPExSF
			}
			else if(GetClosestDelegacia(playerid) == 2)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 2293.6933, 2451.4687, 10.8203); // DPExLV
			}
		}
		if(DOF2_GetInt(file, "Profissao") == Traficante)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2154.8842, -1071.1025, 39.2741);
		}
		if(DOF2_GetInt(file, "Profissao") == Assasino)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Terrorista)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == AssasinoProfissional)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Jornalista)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 927.1906,-1220.6859,16.9512);
		}
		if(DOF2_GetInt(file, "Profissao") == Fotografo)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Coveiro)
		{

			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 946.7126, -1103.7504, 24.2480);
			SendClientMessage(playerid, C_Coveiro, "Cave as covas.");

		}
		if(DOF2_GetInt(file, "Profissao") == Reporter)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 927.1906,-1220.6859,16.9512);

		}
		if(DOF2_GetInt(file, "Profissao") == Ancora)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 927.1906,-1220.6859,16.9512);
		}
		if(DOF2_GetInt(file, "Profissao") == Meteorologista)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Mecanico)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1627.1512,-1520.0609,13.6022);
		}
		if(DOF2_GetInt(file, "Profissao") == Rapper)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Mcarroforte)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1524.3943,-1474.8267,9.5000);
		}
		if(DOF2_GetInt(file, "Profissao") == Uber)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Frentista)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Taxista)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1758.1934, -1860.5705, 13.5785);
		}
		if(DOF2_GetInt(file, "Profissao") == FBI)
		{
			if(GetClosestDelegacia(playerid) == 0)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906); // DPExLS
			}
			else if(GetClosestDelegacia(playerid) == 1)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -1606.2260, 675.1903, -5.2421); // DPExSF
			}
			else if(GetClosestDelegacia(playerid) == 2)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 2293.6933, 2451.4687, 10.8203); // DPExLV
			}
		}
		if(DOF2_GetInt(file, "Profissao") == Interpol)
		{
			if(GetClosestDelegacia(playerid) == 0)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906); // DPExLS
			}
			else if(GetClosestDelegacia(playerid) == 1)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -1606.2260, 675.1903, -5.2421); // DPExSF
			}
			else if(GetClosestDelegacia(playerid) == 2)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 2293.6933, 2451.4687, 10.8203); // DPExLV
			}
		}
		if(DOF2_GetInt(file, "Profissao") == Aposentado)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Advogado)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Contrabando)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 935.2385,2071.5857,10.8203);
		}
		if(DOF2_GetInt(file, "Profissao") == Promotor)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == SegVila)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Assaltante)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Bibliotecario)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Ator)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Deputado)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Vereador)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == TraficanteD)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == DonoM)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == JogadorF)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == LSPD)
		{
			if(GetClosestDelegacia(playerid) == 0)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906); // DPExLS
			}
			else if(GetClosestDelegacia(playerid) == 1)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -1606.2260, 675.1903, -5.2421); // DPExSF
			}
			else if(GetClosestDelegacia(playerid) == 2)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 2293.6933, 2451.4687, 10.8203); // DPExLV
			}
		}
		if(DOF2_GetInt(file, "Profissao") == YKZ)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == MRN)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Empresario)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Imobiliario)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Gari)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2083.7078, -2040.8997 ,13.5469);
		}
		if(DOF2_GetInt(file, "Profissao") == Lixeiro)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Bombeiro)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Hotdog)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Estudante)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Correios)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2322.2366,-2079.3625,13.5469);
		}
		if(DOF2_GetInt(file, "Profissao") == Cantor)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Poeta)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Mafia)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Drifter)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Ayrton)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Professor)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Empregador)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == AtiradorElite)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Ninja)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Desembargador)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Astronauta)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Cozinheiro)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Piloto)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Eletricista)
		{

		}
		if(DOF2_GetInt(file, "Profissao") == Maquinista)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1697.3809, -1949.3073, 14.1171);
		}
		if(DOF2_GetInt(file, "Profissao") == Caminhoneiro)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -1038.2656,-588.4892,32.0078);
		}
		if(DOF2_GetInt(file, "Profissao") == Petroleiro)
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 259.9681,1369.9745,10.5859);
		}
		if(DOF2_GetInt(file, "Profissao") == MOD)
		{

		}
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
		return 1;
	}
	if(strcmp("/pizzaboy", cmd, true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~ Pizza-boy ~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, Branco, "Entrega de pizzas!");
		SendClientMessage(playerid, Branco, "Area de pegar pizzas: simbolizado por o ícones de ''Hamburgers'', ''Pizzas'' ou ''Frangos'' por Los Santos.");
		SendClientMessage(playerid, Branco, "Area de entregar pizzas: simbolizado pelo ícone de ''Garfo e Faca'' na entrada de Los Santos.");
		SendClientMessage(playerid, Branco, "Valor recebido: $500 - Por cada entrega.");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~ Pizza-boy ~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp("/pescador", cmd, true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~ Pescador ~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, Branco, "Pesque em alto mar e venda sua pesca!");
		SendClientMessage(playerid, Branco, "Area de pesca: simbolizado pelo ícone de uma ''Ancora'' em Santa Maria Beach. (Los Santos)");
		SendClientMessage(playerid, Branco, "Area de venda de pesca: simbolizado pelo ícone ''Vermelho'' na areia da Praia. (Los Santos)");
		SendClientMessage(playerid, Branco, "Valor recebido: $130 - por cada peixe pescado.");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~ Pescador ~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp("/lenhador", cmd, true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~ Lenhador ~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, Branco, "Corte e venda de madeiras ilegais!");
		SendClientMessage(playerid, Branco, "Area de corte: simbolizado por o ícone de um ''C-'' no mapa na entrada de Los Santos.");
		SendClientMessage(playerid, Branco, "Area de venda de madeira: simbolizado por o ícone de um ''Boneco Verde'' na entrada de Los Santos.");
		SendClientMessage(playerid, Branco, "Valor recebido: $80 - Por cada madeira.");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~ Lenhador ~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp("/pagamento", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 4)
		{
			Up();

			format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}adiantou o salário de todos!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(BLUEWHITE, string);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/cp", true) == 0)
	{
		new texto[128];

		if(sscanf(cmdtext, "s[4]s[128]", cmd, texto))
		{
			SendClientMessage(playerid, Vermelho, "/cp [texto]");
		}
		else
		{
			format(string, sizeof(string), "(Chat Profissão) %s: %s", GetPlayerNameEx(playerid), texto);
			Chatp(GetPlayerColor(playerid), string, 1, playerid);
		}
		return 1;
	}

	if(strcmp(cmd, "/virar", true) == 0)
	{
		if(pAdmin[playerid] > 0 || IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
				FlipCar(GetPlayerVehicleID(playerid));
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/virarp", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[8]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /virarp [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(IsPlayerInAnyVehicle(plid))
				{
					FlipCar(GetPlayerVehicleID(plid));

					format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s (%d) {6959CD}virou seu veículo!", GetPlayerNameEx(playerid), playerid);
					SendClientMessage(plid, tcadm, string);

					SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
				}
			}
		}
		return 1;
	}


	if(strcmp("/ip", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[4]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "/ip [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(string, sizeof(string), "%s (ID: %d) - IP: %s", GetPlayerNameEx(plid), plid, GetPlayerIPEx(plid));
				SendClientMessage(playerid, -1, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/rv", true) == 0)
	{
		if(pAdmin[playerid] > 5)
		{
			for(new v; v < MAX_VEHICLES; v++)
			{
				SetVehicleToRespawn(v);
			}
			format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}respawnou todos os veículos.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(tcadm, string);

			SendClientMessage(playerid, -1, "Veículos respawnados!");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/rvu", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			for(new v = 0; v < MAX_VEHICLES; v++)
			{
				if(!IsVehicleOccupied(v)) SetVehicleToRespawn(v);
			}
			format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}respawnou todos os veículos desocupados.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(-1, string);

			SendClientMessage(playerid, -1, "Veículos desocupados respawnados!");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/objstatus", true) == 0)
	{
		format(string, sizeof(string), "Existe %d objetos ao total no servidor.", CountDynamicObjects());
		SendClientMessage(playerid, Amarelo, string);
		return 1;
	}

	if(strcmp(cmd, "/vehstatus", true) == 0)
	{
		format(string, sizeof(string), "Existe %d veículos na conce do servidor.", proximocarro);
		SendClientMessage(playerid, Amarelo, string);
		return 1;
	}

	if(strcmp(cmd, "/rmov", true) == 0)
	{
		if(pAdmin[playerid] == 7)
		{
			if(EventoCriado == 1)
			{
				SendClientMessage(playerid, Vermelho, "Antes de fazer isso feche ou cancele o evento.");
				return 1;
			}

			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					#if defined gText1User
					PlayerTextDrawHide(i, PlayerInfo[i][gText1]);
					#endif

					#if defined gText2User
					PlayerTextDrawHide(i, PlayerInfo[i][gText2]);
					#endif

					#if defined gText3User
					PlayerTextDrawHide(i, PlayerInfo[i][gText3]);
					#endif

					TextDrawHideForPlayer(i, Relogio);
					TextDrawHideForPlayer(i, Facebook);
                    TextDrawHideForPlayer(i, Facebook);
                    TextDrawHideForPlayer(i, IPTXT);
                    
					if(AFK[playerid] == 1)
					{
						TextDrawHideForPlayer(playerid, AfkText);
						TextDrawHideForPlayer(playerid, AfkBackText);
					}
					DeletePlayerTextDraws(i);

					GangZoneHideForPlayer(i, GangZonesFix[1]);
					GangZoneHideForPlayer(i, GangZonesFix[2]);
					GangZoneHideForPlayer(i, GangZonesFix[3]);
					GangZoneHideForPlayer(i, GangZonesFix[5]);
					GangZoneHideForPlayer(i, GangZonesFix[6]);
					GangZoneHideForPlayer(i, GangZonesFix[7]);
					GangZoneHideForPlayer(i, GangZonesFix[8]);
					GangZoneHideForPlayer(i, GangZonesFix[9]);
				}
			}
			DeleteTextDraws();
			Destroy3DTextsFix();
			DestroyCheckpointsFix();
			DestroyGangZonesFix();
			DestroyMapIconsFix();
			DestroyPickupsFix();
			DestroyObjectsFix();
			DestroyVehiclesFix();
			UnloadFilesIniItens();
			UnloadAllDynamicObjects();
			UnloadAllStaticVehicles();

			SetTimerEx("RespawnSystem", 1000, false, "e", playerid);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/deletcar", true) == 0)
	{
		if(pAdmin[playerid] > 5)
		{
			Loop(o, sizeof(VehiclesFix))
			{
				if(GetPlayerVehicleID(playerid) == VehiclesFix[o])
				{
					SendClientMessage(playerid, Vermelho, "Este carro não pode ser deletado!");
					return 1;
				}
			}
			for(new carro = 0; carro < MAX_CONCES; carro++)
			{
				format(string, sizeof(string), PASTA_CONCE, carro);
				if(GetPlayerVehicleID(playerid) == DOF2_GetInt(string, "Id"))
				{
					ShowPlayerDialog(playerid, deletcarconce, DIALOG_STYLE_MSGBOX, "Deletando Veículo", "{FF0000}Este veículo é da Conce, quer mesmo deletar?", "Sim", "Não");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/respawncar", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			SendClientMessage(playerid, 0x0080FFAA, "Veículo respawnado com sucesso!");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/explodir", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 3)
		{
			new plid, Float:X, Float:Y, Float:Z;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /explodir [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				GetPlayerPos(plid, X, Y, Z);
				SetPlayerHealth(plid, 95.0);
				CreateExplosion(X, Y, Z-3, 10, 100);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}explodiu você!", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);

				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/lc", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			foreach(Player, i)
			{
				if(IsPlayerConnected(i))
				{
					ClearChatbox(i, 30);
				}
			}
			GameTextForAll("~w~Chat ~p~Limpo", 1000, 1);
			SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
		}
		return 1;
	}

	if(strcmp(cmd, "/jetpack", true) == 0)
	{
		if(pAdmin[playerid] > 0 || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
			SetPlayerSpecialAction(playerid, 2);
			if(pAdmin[playerid] > 0)
			{
				SendClientMessage(playerid, 0xFF0000AA, "{FFFFFF}[INFO] {1F0C9B}Voce pegou seu Jetpack.");
			}
			else if(IsPlayerVIPT(playerid))
			{
				format(string, sizeof(string),"{FFFFFF}O VIP PREMIUM {1F0C9B}%s {FFFFFF}Pegou seu {1F0C9B}Jetpack.", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Amarelo, string);
			}
			else if(IsPlayerVIPMT(playerid))
			{
				format(string, sizeof(string),"{FFFFFF}O VIP $Prestige$ {1F0C9B}%s {FFFFFF}Pegou seu {1F0C9B}Jetpack.", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Amarelo, string);
			}
		}
		return 1;
	}


	if(strcmp("/vida", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid, Float:vida;

			if(sscanf(cmdtext, "s[6]uf", cmd, plid, vida))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /vida [id] [quantidade]");
				return 1;
			}
			if(vida < 1.0 || vida > 100.0)
			{
				SendClientMessage(playerid, Vermelho, "A quantidade máxima é de 100.0");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				SetPlayerHealth(plid, vida);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}alterou sua vida para: {FFFFFF}%f", GetPlayerNameEx(playerid), vida);
				SendClientMessage(plid, tcadm, string);

				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado!");
			}
		}
		return 1;
	}

	if(strcmp("/colete", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid, Float:colete;

			if(sscanf(cmdtext, "s[8]uf", cmd, plid, colete))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /colete [id] [quantidade]");
				return 1;
			}
			if(colete < 0.0 || colete > 100.0)
			{
				SendClientMessage(playerid, Vermelho, "A quantidade máxima é de 100.0");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				SetPlayerArmour(plid, colete);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}alterou seu colete para: {FFFFFF}%f", GetPlayerNameEx(playerid), colete);
				SendClientMessage(plid,tcadm, string);

				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/ir", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid, Float:X, Float:Y, Float:Z;

			if(sscanf(cmdtext, "s[4]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /ir [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				GetPlayerPos(plid, X, Y, Z);
				SetPlayerInterior(playerid, GetPlayerInterior(plid));

				if(IsPlayerInAnyVehicle(playerid))
				{
					SetVehiclePos(GetPlayerVehicleID(playerid), X+2, Y+2, Z);
					PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
				}
				else
				{
					SetPlayerPos(playerid, X+2, Y+2, Z);

					TogglePlayerControllable(playerid, false);
					SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);
				}
				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}foi até sua posição para ajuda-lo(a)!", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}
	
	if(strcmp("/tapa", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 3)
		{
			new plid, Float:X, Float:Y, Float:Z;

			if(sscanf(cmdtext, "s[6]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /tapa [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				GetPlayerPos(plid, X, Y, Z);
				SetPlayerInterior(plid, GetPlayerInterior(plid));
				SetPlayerPos(plid, X, Y, Z +50);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}deu um tapa em você!", GetPlayerNameEx(playerid));
				SendClientMessage(plid,tcadm, string);

				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp("/cercar", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid, Float:px, Float:py, Float:pz;

			if(sscanf(cmdtext, "s[8]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /cercar [id]");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode fazer isso com si mesmo.");
				return 1 ;
			}
			if(cercado[plid] == 1)
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) já está cercado(a).");
				return 1 ;
			}
			if(IsPlayerConnected(plid))
			{
				CagePlayer(plid);
				GetPlayerPos(plid, px, py, pz);
				SetPlayerPos(plid, px, py, pz+7);
				cercado[plid] = 1;

				TogglePlayerControllable(plid, false);
				SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", plid);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}cercou você!", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);

				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp("/descercar", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid, Float:px, Float:py, Float:pz;

			if(sscanf(cmdtext, "s[11]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /descercar [id]");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode fazer isto com si mesmo.");
				return 1 ;
			}
			if(cercado[plid] == 0)
			{
				SendClientMessage(playerid, Vermelho, "O(a) jogador(a) não está cercado(a).");
				return 1 ;
			}
			if(IsPlayerConnected(plid))
			{
				UncagePlayer(plid);
				GetPlayerPos(plid, px, py, pz);
				SetPlayerPos(plid, px, py, pz-4);
				cercado[plid] = 0;

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}descercou você!", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);

				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp("/congelar", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /congelar [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				TogglePlayerControllable(plid, 0);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}congelou você!", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);

				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp("/descongelar", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[13]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /descongelar [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				TogglePlayerControllable(plid, 1);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}descongelou você!", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);

				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}
// emp
/*	if(strcmp("/infoemp", cmd, true) == 0)
	{
		for(new Emp = 0; Emp < MAX_Emp; Emp++)
		{
			format(string, sizeof(string), PASTA_Emp, Emp);
			if(DOF2_FileExists(string))
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
				{
					if(DOF2_GetInt(string, "TDono") == 0)
					{

						format(STRX, sizeof(STRX), "{FFFFFF}Esta empresa está a venda.\n\n{00FF00}Preço: {696969}$%d\n{00FF00}Dono: {696969}%s\n{00FF00}Valor Entrada: {696969}$%d\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Nome: {696969}%s\n\n{FFFFFF}Oque deseja?", DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "Dono"), DOF2_GetInt(string, "Entrada"), DOF2_GetString(string, "Emp"), DOF2_GetString(string, "Nome"));
						ShowPlayerDialog(playerid, empcomp, DIALOG_STYLE_MSGBOX, "Informações", STRX, "Comprar", "Cancelar");
						return 1;
					}
					else
					{
						format(STRX, sizeof(STRX), "{696969}\t%s\n\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Proprietário: {696969}%s\n{00FF00}Valor Entrada: {696969}$%d\n{00FF00}Preço: %d\n{00FF00}Ultimo Uso: %s", DOF2_GetString(string, "Nome"), DOF2_GetString(string, "Emp"), DOF2_GetString(string, "Dono"), DOF2_GetInt(string, "Entrada"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
						ShowPlayerDialog(playerid, proporder, DIALOG_STYLE_MSGBOX, "Informações", STRX, "Ok", "  ");

					}

				}
				else
				{
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						new year, month, day, data[128];

						getdate(year, month, day);
						format(data, sizeof(data), "%d/%d/%d", day, month, year);
						DOF2_SetString(string, "DataSet", data);

					}
				}
			}
		}
		return 1;
	}
// fim emp
*/
	if(strcmp("/clima", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 2)
		{
			new weatherid;

			if(sscanf(cmdtext, "s[7]i", cmd, weatherid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Digite: /clima [clima]");
				return 1;
			}
			if(weatherid >= 1 && weatherid <= 50)
			{
				SetWeather(weatherid);

				format(string, sizeof(string), "{00FF00}O ADM {696969}%s {00FF00} alterou o clima", GetPlayerNameEx(playerid), playerid);
				SendClientMessageToAll(tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Valor inválido, tente novamente! | ID's = 1-50");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/aclima", true) == 0)
	{
		if(pAdmin[playerid] > 2)
		{
			new Previsao;

			Previsao = random(sizeof(WeatherName));
			if(Previsao >= 1 && Previsao <= 50)
			{
				SetWeather(Previsao);
			}
			format(string, sizeof(string), "O clima de hoje é: %s", WeatherName[Previsao]);
			SendClientMessageToAll(0xFFFFFFAA, string);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não e um admin!");
		}
		return 1;
	}

	if(strcmp(cmd, "/desarmar", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /desarmar [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				ResetPlayerWeapons(plid);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}te desarmou!", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);

				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/trazer", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid, VehicleID, Float:X, Float:Y, Float:Z;

			if(sscanf(cmdtext, "s[8]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /trazer [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				SetPlayerInterior(plid, GetPlayerInterior(playerid));
				GetPlayerPos(playerid, X, Y, Z);

				if(IsPlayerInAnyVehicle(plid))
				{
					VehicleID = GetPlayerVehicleID(plid);
					SetVehiclePos(VehicleID, X+2, Y+2, Z);
					PutPlayerInVehicle(plid, VehicleID, 0);
				}
				else
				{
					SetPlayerPos(plid, X+2, Y+2, Z);

					TogglePlayerControllable(plid, false);
					SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", plid);
				}
				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}trouxe você até sua posição!", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);

				format(string, sizeof(string), "{6959CD}Você trouxe {FFFFFF}%s {6959CD}até sua posição!", GetPlayerNameEx(plid));
				SendClientMessage(playerid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000AA, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/calar", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[7]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /calar [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
			    if(pAdmin[plid] > 0 && pAdmin[playerid] < 7) return SendClientMessage(playerid, Vermelho, "[ERRO] {FFFFFF}Você não pode calar um admin");
    			format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}pregou um durex na boca do(a): {FFFFFF}%s", GetPlayerNameEx(playerid), GetPlayerNameEx(plid));
				SendClientMessageToAll(tcadm, string);
				Mute[plid] = 1;
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/descalar", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /descalar [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}tirou o durex da boca do(a): {FFFFFF}%s", GetPlayerNameEx(playerid), GetPlayerNameEx(plid));
				SendClientMessageToAll(tcadm, string);
				Mute[plid] = 0;
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/resetarflood", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[14]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /resetarflood [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				FloodAlert[plid] = 0;
				xplayerDM[plid] = 0;

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}resetou seu flood!", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/carona", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid, VehicleID;

			if(sscanf(cmdtext, "s[8]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /carona [id]");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode pegar uma carona com você mesmo.");
				return 1;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "O(a) jogador(a) não está conectado.");
			}
			else
			{
				if(IsPlayerInAnyVehicle(plid))
				{
					VehicleID = GetPlayerVehicleID(plid);
					PutPlayerInVehicle(playerid, VehicleID, 1);

					format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}entrou no seu carro!", GetPlayerNameEx(playerid));
					SendClientMessage(plid, tcadm, string);

					SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
				}
				else
				{
					format(string, sizeof(string), "%s (%d) não está em um carro!", GetPlayerNameEx(plid), plid);
					SendClientMessage(playerid, Vermelho, string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/injetar", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid, VehicleID;

			if(sscanf(cmdtext, "s[9]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /injetar [id]");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode dar uma carona para você mesmo.");
				return 1 ;
			}
			if(IsPlayerConnected(plid))
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					VehicleID = GetPlayerVehicleID(playerid);
					PutPlayerInVehicle(plid, VehicleID, 1);

					format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}te deu uma carona!", GetPlayerNameEx(playerid));
					SendClientMessage(plid, tcadm, string);

					SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não está em um carro!");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/ejetar", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[8]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /ejetar [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(IsPlayerInAnyVehicle(plid))
				{
					RemovePlayerFromVehicle(plid);

					format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}te tirou do veículo!", GetPlayerNameEx(playerid));
					SendClientMessage(plid, tcadm, string);

					SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
				}
				else
				{
					format(string, sizeof(string), "%s (%d) não está em um carro!", GetPlayerNameEx(plid), plid);
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/desbugar", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /desbugar [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(plid, X, Y, Z);

                PlayerInfo[plid][Logged] = 1;
                Logarprof(plid);

				DesbugPlayer(plid);
				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}desbugou o(a) player: {FFFFFF}%s", GetPlayerNameEx(playerid), GetPlayerNameEx(plid));
				SendClientMessageToAll(tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/abencoar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /abencoar [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(string, sizeof(string), "O religioso %s abençoou você.", GetPlayerNameEx(playerid));
				SendClientMessage(plid, Azul, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp("/espiar", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new specplayerid;

			if(sscanf(cmdtext, "s[8]u", cmd, specplayerid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /espiar [id]");
				return 1;
			}
			if(!IsPlayerConnected(specplayerid))
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
				return 1;
			}

			gSpectateID[playerid] = specplayerid;
			TogglePlayerSpectating(playerid, 1);
			SetPlayerInterior(playerid, GetPlayerInterior(specplayerid));

			if(IsPlayerInAnyVehicle(specplayerid))
			{
				PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specplayerid));
				gSpectateType[playerid] = ADMIN_SPEC_TYPE_VEHICLE;
			}
			else
			{
				PlayerSpectatePlayer(playerid, specplayerid);
				gSpectateType[playerid] = ADMIN_SPEC_TYPE_PLAYER;
			}
		}
		return 1;
	}

	dcmd(terri,5,cmdtext);
	if(!strcmp(cmdtext,"/dominar",true))
	{
	    if(GetGang(playerid)==0) return SendClientMessage(playerid,amarelo,"[CHECK] Você não tem gang!");
		new terrid = GetPlayerTerri(playerid);
		if(terrid==-1) return SendClientMessage(playerid,amarelo,"[CHECK] Você não está em um território!");
		if(DOF2_GetInt(FormatTerri(terrid),"Gang")==GetGang(playerid)) return SendClientMessage(playerid,amarelo,"[CHECK] Este território pertence a seu clan!");
		new tempo = TempoCheck[terrid][GetGang(playerid)];
		new fm[128];
		format(fm,128,"[CHECK] É necessário ter %d membros de seu clan para começar a dominar!",MIN_MEMBROS_D);
		if(tempo==TEMPO_CHECK) return SendClientMessage(playerid,amarelo,fm);
		if(TerriGuerra[terrid]!=0) return SendClientMessage(playerid,amarelo,"[CHECK] Este território já está em guerra!");
	    format(fm,128,"Tempo para começar a dominar: %d/%d segundos",tempo,TEMPO_CHECK);
	    SendClientMessage(playerid,amarelo,fm);
	    return 1;
	}

	if(strcmp(cmd, "/pespiar", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
			{
				TogglePlayerSpectating(playerid, 0);
				gSpectateID[playerid] = INVALID_PLAYER_ID;
				gSpectateType[playerid] = ADMIN_SPEC_TYPE_NONE;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/explodircarp", true) == 0)
	{
		if(pAdmin[playerid] > 3)
		{
			new plid;

			if(sscanf(cmdtext, "s[14]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /explodircarp [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				KillVehicle(GetPlayerVehicleID(plid));

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}explodiu o seu veículo!", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);

				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/abrirconta", true) == 0)
	{
		if(IsPlayerInDynamicCP(playerid, CheckpointsFix[36]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[37]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[38]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[39]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[40]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[41]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[42])
			|| IsPlayerInDynamicCP(playerid, CheckpointsFix[43]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[52]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[53]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[54]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[55]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[56]))
		{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(DOF2_GetInt(file, "ContaBancaria") == 0)
			{
				if(GetPlayerGrana(playerid) > 299)
				{
					GivePlayerGrana(playerid, -300);

					DOF2_SetInt(file, "ContaBancaria", 1);
					DOF2_SetInt(file, "SaldoBancario", 300);

					format(string, sizeof(string), "{FFFFFF}x {BEBEBE}O jogador {FFFFFF}%s {BEBEBE}abriu uma conta no {FFFFFF}/banco {BEBEBE}x", GetPlayerNameEx(playerid));
					SendClientMessageToAll(roxo, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Para abrir uma conta bancária você presisa de pelo menos $300.");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você já tem uma conta bancária.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não está em um banco.");
		}
		return 1;
	}

	if(strcmp(cmd, "/saldo", true) == 0)
	{
		if(IsPlayerInDynamicCP(playerid, CheckpointsFix[36]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[37]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[38]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[39]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[40]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[41]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[42])
			|| IsPlayerInDynamicCP(playerid, CheckpointsFix[43]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[52]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[53]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[54]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[55]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[56]))
		{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(DOF2_GetInt(file, "ContaBancaria") == 1)
			{
				format(string, sizeof(string), "Banco: Você tem depositado em sua conta $%d.", DOF2_GetInt(file, "SaldoBancario"));
				SendClientMessage(playerid, 0x6495EDAA, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho,"Você não tem uma conta bancária.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não está em um banco.");
		}
		return 1;
	}

	if(strcmp(cmd, "/saldocell", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "ContaBancaria") == 1)
		{
			format(string, sizeof(string), "Secretaria eletrônica: Você tem depositado no banco $%d.", DOF2_GetInt(file, "SaldoBancario"));
			SendClientMessage(playerid, 0x6495EDAA, string);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem uma conta bancária.");
		}
		return 1;
	}

	if(strcmp(cmd, "/depositar", true) == 0)
	{
		if(IsPlayerInDynamicCP(playerid, CheckpointsFix[36]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[37]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[38]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[39]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[40]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[41]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[42]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[43])
			|| IsPlayerInDynamicCP(playerid, CheckpointsFix[52]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[53]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[54]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[55]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[56]))
		{
			new valor;

			if(sscanf(cmdtext, "s[11]d", cmd, valor))
			{
				SendClientMessage(playerid, Vermelho, "Use /depositar [quantia]");
				return 1;
			}
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(DOF2_GetInt(file, "ContaBancaria") == 1)
			{
				if(GetPlayerGrana(playerid) > valor-1 && valor > 0)
				{
					GivePlayerGrana(playerid, -valor);
					DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+valor);

					format(string, sizeof(string), "Banco: Você depositou a quantia de $%d.", valor);
					SendClientMessage(playerid, 0x6495EDAA, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem todo este dinheiro.");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não tem uma conta bancária.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não está em um banco.");
		}
		return 1;
	}

	if(strcmp(cmd, "/sacar", true) == 0)
	{
		if(IsPlayerInDynamicCP(playerid, CheckpointsFix[36]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[37]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[38]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[39]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[40]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[41]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[42])
			|| IsPlayerInDynamicCP(playerid, CheckpointsFix[43]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[52]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[53]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[54]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[55]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[56]))
		{
			new valor;

			if(sscanf(cmdtext, "s[7]d", cmd, valor))
			{
				SendClientMessage(playerid, Vermelho, "Use /sacar [quantia]");
				return 1;
			}
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(DOF2_GetInt(file, "ContaBancaria") == 1)
			{
				if(DOF2_GetInt(file, "SaldoBancario") > valor-1 && valor > 0)
				{
					DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")-valor);
					GivePlayerGrana(playerid, valor);

					format(string, sizeof(string), "Banco: Você sacou a quantia de $%d.", valor);
					SendClientMessage(playerid, 0x6495EDAA, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem todo este dinheiro.");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não tem uma conta bancária.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não está em um banco.");
		}
		return 1;
	}

	if(strcmp(cmd, "/repararp", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /repararp [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(IsPlayerInAnyVehicle(plid))
				{
					RepairVehicle(GetPlayerVehicleID(plid));
					
					format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}conscertou o seu veículo!", GetPlayerNameEx(playerid));
					SendClientMessage(plid, tcadm, string);

					SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "O(a) jogador(a) não está em um veículo.");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/respawncarp", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid;

			if(sscanf(cmdtext, "s[13]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /respawncarp [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(IsPlayerInAnyVehicle(plid))
				{
					SetVehicleToRespawn(GetPlayerVehicleID(plid));

					format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}respawnou o seu veículo!", GetPlayerNameEx(playerid));
					SendClientMessage(plid, tcadm, string);

					SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "O(a) jogador(a) não está em um veículo.");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0x6495EDAA, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/vidaveiculo", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid, Float:vidacarro;

			if(sscanf(cmdtext, "s[13]uf", cmd, plid, vidacarro))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /vidaveiculo [id] [vida]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(IsPlayerInAnyVehicle(plid))
				{
					FreezeVehicleHealth(GetPlayerVehicleID(plid), vidacarro, 1);

					format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}setou a vida do seu veículo para: {FFFFFF}%f", GetPlayerNameEx(playerid), vidacarro);
					SendClientMessage(plid, tcadm, string);

					SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está em um veículo.");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/dararma", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new plid, idarma, municao;

			if(sscanf(cmdtext, "s[9]udd", cmd, plid, idarma, municao))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /dararma [id] [arma] [munição]");
				return 1;
			}
			if(idarma == 38 || idarma == 35 || idarma == 36 || idarma == 37 || idarma == 39 || idarma == 40)
			{
				SendClientMessage(playerid, Vermelho, "ID de arma proibida!");
				return 1;
			}
			if(municao > 15000)
			{
				SendClientMessage(playerid, Vermelho, "A munição máxima permitida é 9000.");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				GivePlayerWeapon(plid, idarma, municao);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}te forneceu uma arma de ID: {FFFFFF}%d, {6959CD}Munição: {FFFFFF}%d", GetPlayerNameEx(playerid), idarma, municao);
				SendClientMessage(plid, tcadm, string);

				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado!");
			}
		}
		return 1;
	}
	
	if(strcmp("/ann", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new texto[64];

			if(sscanf(cmdtext, "s[5]s[64]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /ann [texto]");
				return 1;
			}
			format(string, sizeof(string), "~r~] ~w~%s ~r~]", texto);
			GameTextForAll(string, 5000, 3);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/cnn", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new texto[64];

			if(sscanf(cmdtext, "s[5]s[64]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /cnn [texto]");
				return 1;
			}
			format(string, sizeof(string), "~r~%s ~w~diz:~n~~g~] ~w~%s ~g~]", GetPlayerNameEx(playerid), texto);
			GameTextForAll(string, 5000, 3);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/resetargrana", true) == 0)
	{
		if(pAdmin[playerid] > 5)
		{
			new plid;

			if(sscanf(cmdtext, "s[14]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /resetargrana [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				ResetPlayerGrana(plid);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}resetou sua grana!", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);

				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/resetarsaldo", true) == 0)
	{
		if(pAdmin[playerid] > 5)
		{
			new plid;

			if(sscanf(cmdtext, "s[14]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /resetarsaldo [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file, "SaldoBancario", 300);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}resetou seu saldo no banco!", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);

				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado!");
			}
		}
		return 1;
	}
	
	if(strcmp("/setadmin", cmd, true) == 0)
	{
		#if defined SystemAdminUser
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid, lvl;

			if(sscanf(cmdtext, "s[10]ud", cmd, plid, lvl))
			{
				SendClientMessage(playerid, -1, "Digite: /setadmin [id] [level]");
				return 1;
			}
			if(lvl >= 8)
			{
				SendClientMessage(playerid, -1, "O level permitido para ADM é de 0 a 7!");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				PlayerSetPlayerAdmin(playerid, plid, lvl);
				SendClientMessage(playerid, -1, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, -1, "Jogador não conectado!");
			}
		}
		#else
		SendClientMessage(playerid, -1, "Comando desativado temporáriamente.");
		#endif

		return 1;
	}

	if(strcmp(cmd, "/tiraradmdetodos", true) == 0)
	{
		if(!PlayerInfo[playerid][SCON] == true)
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
			return 1;
		}
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(pAdmin[i] > 0)
				{
					PlayerSetPlayerAdmin(-1, i, 0);
				}
			}
		}
		SendClientMessage(playerid, -1, "Comando efetuado com sucesso!");
		return 1;
	}

	if(strcmp(cmd, "/admins", true) == 0)
	{
		new str[1000], count = 0;

        SendClientMessage(playerid, 0x008000AA, "{FFffff}Adminstradores {FF0000}Online:");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(admin[i])
				{
                    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(i));
 		        	if(DOF2_GetInt(file, "Tag") == 0)
 		        	{
			    		if(pAdmin[i] == 1)
						{
							format(str, sizeof(str), "{FF0000}Helper {FFFFFF}%s [%d] {FF0000}Level ADM: 1", GetPlayerNameEx(i), i, playerid);
							strcat(string, str, sizeof(string));
						}
						if(pAdmin[i] == 2)
						{
              	       		format(str, sizeof(str), "{FF0000}Administrador {FFFFFF}%s [%d] {FF0000}Level ADM: 2", GetPlayerNameEx(i), i, playerid);
							strcat(string, str, sizeof(string));
						}
						if(pAdmin[i] == 3)
						{
							format(str, sizeof(str), "{FF0000}Ancião {FFFFFF}%s [%d] {FF0000}Level ADM: 3", GetPlayerNameEx(i), i, playerid);
							strcat(string, str, sizeof(string));
						}
						if(pAdmin[i] == 4)
						{
							format(str, sizeof(str), "{FF0000}Mestre {FFFFFF}%s [%d] {FF0000}Level ADM: 4", GetPlayerNameEx(i), i, playerid);
							strcat(string, str, sizeof(string));
						}
						if(pAdmin[i] == 5)
						{
							format(str, sizeof(str), "{FF0000}Scripter {FFFFFF}%s [%d] {FF0000}Level ADM: 5", GetPlayerNameEx(i), i, playerid);
							strcat(string, str, sizeof(string));
						}
						if(pAdmin[i] == 6)
						{
							format(str, sizeof(str), "{FF0000}Sub-Dono(a) {FFFFFF}%s [%d] {FF0000}Level ADM: 6", GetPlayerNameEx(i), i, playerid);
							strcat(string, str, sizeof(string));
						}
						if(pAdmin[i] == 7)
						{
							format(str, sizeof(str), "{FF0000}Dono/Fundador(a) {FFFFFF}%s [%d] {FF0000}Level ADM: 7", GetPlayerNameEx(i), i, playerid);
							strcat(string, str, sizeof(string));
						}
                 	    SendClientMessage(playerid, 0x0088CAAA, str);
				    	count++;
					}
				}
			}
		}
		if(count == 0)
		{
			SendClientMessage(playerid, Vermelho, "Nenhum administrador online no momento");
		}
		return 1;
	}

	if(strcmp(cmd, "/adminsrcon", true) == 0)
	{
		new count = 0, msg[1000];

		SendClientMessage(playerid, 0x008000AA, "{ffffff}Administradores {ff0000}Rcon");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && PlayerInfo[i][SCON] == true)
			{
				format(msg,sizeof(msg), "%s [%d]\n", GetPlayerNameEx(i), i);
				strcat(string, msg, sizeof(string));
                SendClientMessage(playerid, Vermelho, msg);
				count++;
			}
		}
		if(count == 0)
		{
			SendClientMessage(playerid, Vermelho, "Nenhum administrador logado na rcon no momento.");
		}
		return 1;
	}

	if(strcmp("/setarvip", cmd, true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid, dias;

			if(sscanf(cmdtext, "s[10]ud", cmd, plid, dias))
			{
				SendClientMessage(playerid, 0x008040AA, "Use: /setarvip [id] [dias]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				SetPlayerVIP(plid, dias);
				format(string, sizeof(string), "{6959CD}O(a) ADM RCON {FFFFFF}%s {6959CD}te setou {FFFFFF}%d {6959CD}dia(s) de VIP. Aproveite!", GetPlayerNameEx(playerid), dias);
				SendClientMessage(plid, BRANCO, string);
				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

	if(strcmp("/tirarvip", cmd, true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, 0x008040AA, "Use: /tirarvip [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				UnsetPlayerVIP(plid);
				format(string, sizeof(string), "{6959CD}O(a) ADM RCON {FFFFFF}%s {6959CD}retirou o seu VIP.", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);
				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

	if(strcmp(cmd, "/tirarvipdetodos", true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(IsPlayerVIP(i))
					{
						UnsetPlayerVIP(i);
					}
				}
			}
			SendClientMessage(playerid, 0x6495EDAA, "Concluído somente para os players online!");
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}


	if(strcmp(cmd, "/comandosvip", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsPlayerVIP(playerid))
			{
				strcat(string, "{EE5C42} /tunar /comemorar /tagvip\n", sizeof(string));
				strcat(string, "{EE5C42} /cvip /cv /mudarcor", sizeof(string));
				ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, ".:: - Comandos VIP - ::.", string, "OK", "");
			}
		}
		return 1;
	}
	
	if(strcmp(cmdtext,"/mudarcor", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
			{
				ShowPlayerDialog(playerid, 1208, DIALOG_STYLE_LIST, "Escolha uma cor!", "Vermelho\nVerde\nAmarelo\nAzul\nLaranja\nRoxo\nAzul Marinho\nCinza\nMarrom\nBranco\nAzul Claro\nVerde Escuro", "Ok", "Cancelar");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/aa", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(pAdmin[playerid] == 1) //Helper
			{
				SendClientMessage(playerid, 0xFF6600FF, "/cercar /descercar /evento /ca /punir /kick /a /desbugar");
		        SendClientMessage(playerid, 0xFF6600FF, "/infoban /vidat /coletet /clima /ir /trazer /rvu /ann /cnn /contar");
		        SendClientMessage(playerid, 0xFF6600FF, "/calar /descalar /injetar /ejetar /lc /carona /espiar /pespiar");
		        SendClientMessage(playerid, 0xFF6600FF, "/godmod /trazertodos /ircasa /iremp /irportao /dararma /desarmart");
		        SendClientMessage(playerid, 0xFF6600FF, "/resetarflood /congelar /descongelar /liberarportao /darchave");
			}
			if(pAdmin[playerid] == 2) //Administrador
			{
				SendClientMessage(playerid, 0xFF6600FF, "/cercar /descercar /evento /ca /punir /kick /ban /a /desbugar");
		        SendClientMessage(playerid, 0xFF6600FF, "/infoban /vidat /coletet /clima /ir /trazer /rvu /ann /cnn /contar");
		        SendClientMessage(playerid, 0xFF6600FF, "/calar /descalar /injetar /ejetar /lc /carona /espiar /pespiar");
		        SendClientMessage(playerid, 0xFF6600FF, "/trazertodos /ircasa /iremp /irportao /dararma /desarmart");
		        SendClientMessage(playerid, 0xFF6600FF, "/congelar /descongelar /liberarportao /darchave /versms");
			}
			if(pAdmin[playerid] == 3) //Ancião
			{
				SendClientMessage(playerid, 0xFF6600FF, "/cercar /descercar /evento /ca /punir /kick /ban /a /desbugar");
		        SendClientMessage(playerid, 0xFF6600FF, "/vidat /coletet /clima /ir /trazer /rvu /ann /cnn /contar");
		        SendClientMessage(playerid, 0xFF6600FF, "/calar /descalar /injetar /ejetar /lc /carona /espiar /pespiar");
		        SendClientMessage(playerid, 0xFF6600FF, "/trazertodos /ircasa /iremp /irportao /dararma /desarmart");
		        SendClientMessage(playerid, 0xFF6600FF, "/congelar /descongelar /versms /liberarportao /darchave");
		        SendClientMessage(playerid, 0xFF6600FF, "/ip /banip /liberarnick /infoban /godmod /resetarflood /desarmar");
			}
			if(pAdmin[playerid] == 4) //Mestre
			{
                SendClientMessage(playerid, 0xFF6600FF, "/cercar /descercar /evento /ca /punir /kick /ban /a /desbugar");
		        SendClientMessage(playerid, 0xFF6600FF, "/setprocu /vidat /coletet /clima /ir /trazer /rvu /ann /cnn /contar");
		        SendClientMessage(playerid, 0xFF6600FF, "/calar /descalar /injetar /ejetar /lc /carona /espiar /pespiar");
		        SendClientMessage(playerid, 0xFF6600FF, "/darcomb /trazertodos /ircasa /iremp /irportao /dararma /desarmart");
		        SendClientMessage(playerid, 0xFF6600FF, "/tapa /congelar /descongelar /versms /liberarportao /darchave");
		        SendClientMessage(playerid, 0xFF6600FF, "/ip /banip /liberarnick /infoban /godmod /resetarflood /desarmar");
		        SendClientMessage(playerid, 0xFF6600FF, "/deletcar /explodir /explodircarp /interiorcasa");
			}
			if(pAdmin[playerid] == 5) //Scripter
			{
				SendClientMessage(playerid, 0xFF6600FF, "/cercar /descercar /evento /ca /punir /kick /ban /a /desbugar");
		        SendClientMessage(playerid, 0xFF6600FF, "/setprocu /vidat /coletet /clima /ir /trazer /rvu /ann /cnn /contar");
		        SendClientMessage(playerid, 0xFF6600FF, "/calar /descalar /injetar /ejetar /lc /carona /espiar /pespiar");
		        SendClientMessage(playerid, 0xFF6600FF, "/darcomb /trazertodos /ircasa /iremp /irportao /dararma /desarmart");
		        SendClientMessage(playerid, 0xFF6600FF, "/tapa /congelar /descongelar /desbanir /liberarportao /darchave");
		        SendClientMessage(playerid, 0xFF6600FF, "/ip /banip /liberarnick /infoban /godmod /resetarflood /desarmar");
		        SendClientMessage(playerid, 0xFF6600FF, "/versms /deletcar /explodir /explodircarp /interiorcasa");
		        SendClientMessage(playerid, 0xFF6600FF, "/criarcasa /criaremp /liberarcasa /liberaremp /mudarcasa /mudaremp");
			}
            if(pAdmin[playerid] == 6) //SubDono
			{
				SendClientMessage(playerid, 0xFF6600FF, "/cercar /descercar /evento /ca /punir /kick /ban /a /desbugar");
		        SendClientMessage(playerid, 0xFF6600FF, "/setprocu /vidat /coletet /clima /ir /trazer /rvu /ann /cnn /contar");
		        SendClientMessage(playerid, 0xFF6600FF, "/rv /ccar /calar /descalar /injetar /ejetar /lc /carona /espiar /pespiar");
		        SendClientMessage(playerid, 0xFF6600FF, "/darcomb /trazertodos /ircasa /iremp /irportao /dararma /desarmart");
		        SendClientMessage(playerid, 0xFF6600FF, "/resetargrana /tapa /congelar /descongelar /desbanir /liberarportao /darchave");
		        SendClientMessage(playerid, 0xFF6600FF, "/resetarsaldo /ip /banip /liberarnick /infoban /godmod /resetarflood /desarmar");
		        SendClientMessage(playerid, 0xFF6600FF, "/versms /deletcar /explodir /explodircarp /liberarcarro /interiorcasa");
		        SendClientMessage(playerid, 0xFF6600FF, "/criarcasa /criaremp /liberarcasa /liberaremp /mudarcasa /mudaremp");
			}
            if(pAdmin[playerid] == 7) //Dono
			{
				SendClientMessage(playerid, 0xFF6600FF, "/darg /darlevel /cercar /descercar /evento /ca /punir /kick /ban /a /desbugar");
		        SendClientMessage(playerid, 0xFF6600FF, "/setlevel /setprocu /vidat /coletet /clima /ir /trazer /rvu /ann /cnn /contar");
		        SendClientMessage(playerid, 0xFF6600FF, "/setestudo /rv /ccar /calar /descalar /injetar /ejetar /lc /carona /espiar /pespiar");
		        SendClientMessage(playerid, 0xFF6600FF, "/darestudo /darcomb /trazertodos /ircasa /iremp /irportao /dararma /desarmart");
		        SendClientMessage(playerid, 0xFF6600FF, "/cd /resetargrana /tapa /congelar /descongelar /desbanir /liberarportao /darchave");
		        SendClientMessage(playerid, 0xFF6600FF, "/resetarsaldo /ip /banip /liberarnick /infoban /godmod /resetarflood /desarmar");
		        SendClientMessage(playerid, 0xFF6600FF, "/vercmds /tirarvercmds /versms /deletcar /explodir /explodircarp /liberarcarro /interiorcasa");
		        SendClientMessage(playerid, 0xFF6600FF, "/banirnick /criarcasa /criaremp /liberarcasa /liberaremp /mudarcasa /mudaremp");
		        SendClientMessage(playerid, 0xFF6600FF, "/criarportao /mudarportao /modeloportao /desbanirnick /fakeban /fakekick /fakeadm");
		        SendClientMessage(playerid, 0xFF6600FF, "/deletarcasa /deletarempresa /ping /setcar /sendcmd /fakechat /crashar /setprof /preprr");
			}

		}
		return 1;
	}

	if(strcmp("/a", cmd, true) == 0)
	{
		if(pAdmin[playerid] == 7)
		{
			new texto[128];

			if(sscanf(cmdtext, "s[4]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /a [texto]");
			}
			else
			{
				format(string, sizeof(string), "{99FF33}(») Dono/Fundador: {FFFF99}%s {99FF33}diz: {FFFF99}%s {99FF33}(«)", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(roxo, string);
			}
		}
		else if(pAdmin[playerid] == 6)
		{
			new texto[128];

			if(sscanf(cmdtext, "s[4]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /a [texto]");
			}
			else
			{
				format(string, sizeof(string), "{33FFCC}(») Sub-Dono(a): {66FF66}%s {33FFCC}diz: {66FF66}%s {33FFCC}(«)", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(roxo, string);
			}
		}
		else if(pAdmin[playerid] == 5)
		{
			new texto[128];

			if(sscanf(cmdtext, "s[4]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /a [texto]");
			}
			else
			{
				format(string, sizeof(string), "{FF3300}(») Scripter: {FFCC33}%s {FF3300}diz: {FFCC33}%s {FF3300}(«)", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(roxo, string);
			}
		}
		else if(pAdmin[playerid] == 4)
		{
			new texto[128];

			if(sscanf(cmdtext, "s[4]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /a [texto]");
			}
			else
			{
				format(string, sizeof(string), "{6600CC}(») Admin: {00FF33}%s {6600CC}diz: {00FF33}%s {6600CC}(«)", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(roxo, string);
			}
		}
		else if(pAdmin[playerid] == 3)
		{
			new texto[128];

			if(sscanf(cmdtext, "s[4]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /a [texto]");
			}
			else
			{
				format(string, sizeof(string), "{6600CC}(») Admin(a): {00FF33}%s {6600CC}diz: {00FF33}%s {6600CC}(«)", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(roxo, string);
			}
		}
		else if(pAdmin[playerid] == 2)
		{
			new texto[128];

			if(sscanf(cmdtext, "s[4]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /a [texto]");
			}
			else
			{
				format(string, sizeof(string), "{6600CC}(») Admin: {00FF33}%s {6600CC}diz: {00FF33}%s {6600CC}(«)", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(roxo, string);
			}
		}
		else if(pAdmin[playerid] == 1)
		{
			new texto[128];

			if(sscanf(cmdtext, "s[4]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /a [texto]");
			}
			else
			{
				format(string, sizeof(string), "{6600CC}(») Admin: {00FF33}%s {6600CC}diz: {00FF33}%s {6600CC}(«)", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(roxo, string);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão para usar este comando!");
		}
		return 1;
	}

	if(strcmp("/ca", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new texto[128];

			if(sscanf(cmdtext, "s[4]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /ca [texto]");
			}
			else
			{
				format(string, sizeof(string), "{FF0000}Chat-Admin: %s: {FFFF00}%s", GetPlayerNameEx(playerid), texto);
				ABroadCast(Amarelo, string, 1);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão para usar este comando!");
		}
		return 1;
	}

	if(strcmp("/cdj", cmd, true) == 0)
	{
        if(DOF2_GetInt(file, "musica") == 1)
		{
			new texto[128];

			if(sscanf(cmdtext, "s[4]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /cdj [texto]");
			}
			else
			{
				format(string, sizeof(string), "{00FF00}Chat-DJ: %s: {FFFFFF}%s", GetPlayerNameEx(playerid), texto);
				ABroadCast(Amarelo, string, 7);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão para usar este comando!");
		}
		return 1;
	}

/*	if(strcmp("/blocktp", cmd, true) == 0)
	{
		if(pAdmin[playerid] == 7)
		{
	        if(blocktp[playerid] == 0)
	        {
	            blocktp[playerid] = 1;
	        }
   			else if(blocktp[playerid] == 1)
	        {
	            blocktp[playerid] = 0;
	        }
        }
		return 1;
	}
*/
	if(strcmp("/cr", cmd, true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new texto[128];

			if(sscanf(cmdtext, "s[4]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /cr [texto]");
			}
			else
			{
				format(string, sizeof(string), "{8B3A62}Chat-Rcon: %s: {FFFFFF}%s", GetPlayerNameEx(playerid), texto);
				ABroadCast(Amarelo, string, 7);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão para usar este comando!");
		}
		return 1;
	}

	if(strcmp("/cvip", cmd, true) == 0)
	{
		if(IsPlayerVIP(playerid) || PlayerInfo[playerid][SCON] == true)
		{
			new texto[128];

			if(sscanf(cmdtext, "s[4]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Digite: /cvip [texto]");
			}
			else
			{
			if(!(pAdmin[playerid] > 0))
			{
				if(VBIsIP(texto))
				{
					SendClientMessage(playerid, Amarelo, "[ANTI-SPAM] Você não pode fazer spam no servidor.");
					return 1;
				}
			}
			if(IsPlayerVIP(playerid))
			{
			format(string, sizeof(string), "{FFFFFF}Chat-VIP: %s: %s", GetPlayerNameEx(playerid), texto);
			ABroadCastVIP(-1, string);
			}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem permissão para usar este comando!");
		}
		return 1;
	}
	if(strcmp(cmd, "/relatorio", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new texto[128];

			if(sscanf(cmdtext, "s[11]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Use /relatorio [texto]");
				return 1;
			}
			if(IsPlayerConnected(playerid))
			{
				format(string, sizeof(string), "{FF0000}Relatorio de %s (ID: %d): %s", GetPlayerNameEx(playerid), playerid, texto);
				Relatorio(-1, string, 1);

				SendClientMessage(playerid, Aviso, "Seu relatorio foi enviado a administração com sucesso, aguarde uma resposta!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/revistar", true) == 0)
	{
		new plid;

		if(sscanf(cmdtext, "s[7]u", cmd, plid))
		{
			SendClientMessage(playerid, COLOR_GREEN, "Use /revistar [id]");
			return 1;
		}
		if(IsPlayerConnected(plid))
		{
			if(GetDistanceBetweenPlayers(plid, playerid) < 21)
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(plid));

				SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~ Exame ~~~~~~~~~~~~~~");

				format(string, sizeof(string), "- Maconha: %d", DOF2_GetInt(file, "Maconha"));
				SendClientMessage(playerid, 0xFFFFFFAA, string);

				format(string, sizeof(string), "- Crack: %d", DOF2_GetInt(file, "Crack"));
				SendClientMessage(playerid, 0xFFFFFFAA, string);

				format(string, sizeof(string), "- Cocaina: %d", DOF2_GetInt(file, "Cocaina"));
				SendClientMessage(playerid, 0xFFFFFFAA, string);

				SendClientMessage(playerid, Vermelho, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");

				format(string, sizeof(string), "- Maconha no sangue: %d", DOF2_GetInt(file, "tmaconha"));
				SendClientMessage(playerid, 0xFFFFFFAA, string);

				format(string, sizeof(string), "- Crack no sangue: %d", DOF2_GetInt(file, "tcrack"));
				SendClientMessage(playerid, 0xFFFFFFAA, string);

				format(string, sizeof(string), "- Cocaína no sangue: %d", DOF2_GetInt(file, "tcocaina"));
				SendClientMessage(playerid, 0xFFFFFFAA, string);

				SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~ Exame ~~~~~~~~~~~~~~");

				format(string, sizeof(string), "Você está examinando o(a) jogador(a) %s", GetPlayerNameEx(plid));
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Chega mais perto para examinar!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
		}
		return 1;
	}

	if(strcmp("/minhasdrogas", cmd, true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Traficante)
		{
			SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");

			format(string, sizeof(string), "Maconha: %d", DOF2_GetInt(file, "Maconha"));
			SendClientMessage(playerid, 0xFFFFFFAA, string);

			format(string, sizeof(string), "Crack: %d", DOF2_GetInt(file, "Crack"));
			SendClientMessage(playerid, 0xFFFFFFAA, string);

			format(string, sizeof(string), "Cocaina: %d", DOF2_GetInt(file, "Cocaina"));
			SendClientMessage(playerid, 0xFFFFFFAA, string);

			SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		}
		return 1;
	}

	if(strcmp("/usarmaconha", cmd, true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "tmaconha") >= 1)
		{
			DOF2_SetInt(file, "tmaconha", DOF2_GetInt(file, "tmaconha")-1);
			DOF2_SetInt(file, "usoudroga", 1);

			TextDrawShowForPlayer(playerid, drogas1);
			TextDrawShowForPlayer(playerid, drogas2);

			SendClientMessage(playerid, C_Traficante, "Você usou maconha. Agora aguarde para ver os efeitos dela!");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem Maconha.");
		}
		return 1;
	}

	if(strcmp("/usarcrack", cmd, true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "tcrack") >= 1)
		{
			DOF2_SetInt(file, "tcrack", DOF2_GetInt(file, "tcrack")-1);
			DOF2_SetInt(file, "usoudroga", 1);

			TextDrawShowForPlayer(playerid, drogas1);
			TextDrawShowForPlayer(playerid, drogas2);

			SendClientMessage(playerid, C_Traficante, "Você usou crack. Agora aguarde para ver os efeitos dele!");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, " Você não tem Crack.");
		}
		return 1;
	}

	if(strcmp("/usarcocaina", cmd, true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "tcocaina") == 1)
		{
            DOF2_SetInt(file, "tcocaina", DOF2_GetInt(file, "tcocaina")-1);
			DOF2_SetInt(file, "usoudroga", 1);

			TextDrawShowForPlayer(playerid, drogas1);
			TextDrawShowForPlayer(playerid, drogas2);

			SendClientMessage(playerid, C_Traficante, "Você usou cocaína. Agora aguarde para ver os efeitos dela!");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem Cocaína.");
		}
		return 1;
	}
	

	if(strcmp("/pegardrogas", cmd, true) == 0)
	{
		if(GetPlayerGrana(playerid) > 199)
		{
			if(PlayerToPoint(1.0, playerid, 516.7604, -14.3393, 1001.5653))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "Profissao") == Traficante)
				{
					GivePlayerGrana(playerid, -200);

					DOF2_SetInt(file, "Maconha", DOF2_GetInt(file, "Maconha")+5);
					DOF2_SetInt(file, "Crack", DOF2_GetInt(file, "Crack")+5);
					DOF2_SetInt(file, "Cocaina", DOF2_GetInt(file, "Cocaina")+5);

					SendClientMessage(playerid, C_Traficante, "Você pegou as drogas, 5kg de Maconha, Cocaína e Crack.");
					SendClientMessage(playerid, C_Traficante, "Você pagou $200 por elas. /minhasdrogas");
				}
				else
				{
					SendClientMessage(playerid, C_Traficante, "Você não é um Traficante de Drogas!");
				}
			}
			else
			{
				SendClientMessage(playerid, C_Traficante, "Você não está na 'boca' de fumo e não pode pegar drogas!");
			}
		}
		else
		{
			SendClientMessage(playerid, C_Traficante, "Você não tem dinheiro suficiente. ($200)");
		}
		return 1;
	}

	if(strcmp(cmd, "/ofmaconha", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Traficante)
		{
			new plid;

			if(sscanf(cmdtext, "s[11]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /ofmaconha [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
				if(DOF2_GetInt(file, "Maconha") == 0)
				{
					SendClientMessage(playerid, Vermelho, "Sua maconha acabou, pegue mais na boca!");
					return 1;
				}
				if(DOF2_GetInt(file, "Maconha") >= 1)
				{
					DOF2_SetInt(file, "Maconha", DOF2_GetInt(file, "Maconha")-1);
					DOF2_SetInt(file2, "ofmaconha", 1);

					format(string, sizeof(string), "%s te ofereceu 1kg de maconha!", GetPlayerNameEx(playerid));
					SendClientMessage(plid, C_Traficante, string);

					SendClientMessage(plid, C_Traficante, "Você pode aceitar a droga ou recusar: /aceitar /recusar.");
					SendClientMessage(playerid, 0x6495EDAA, "Maconha oferecida com sucesso!");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/ofcrack", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Traficante)
		{
			new plid;

			if(sscanf(cmdtext, "s[9]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /ofcrack [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
				if(DOF2_GetInt(file, "Crack") == 0)
				{
					SendClientMessage(playerid, Vermelho, "Seu crack acabou, pegue mais na boca!");
					return 1;
				}
				if(DOF2_GetInt(file, "Crack") >= 1)
				{
					DOF2_SetInt(file, "Crack", DOF2_GetInt(file, "Crack")-1);
					DOF2_SetInt(file2, "ofcrack", 1);

					format(string, sizeof(string), "%s te ofereceu 1kg de crack!", GetPlayerNameEx(playerid));
					SendClientMessage(plid, C_Traficante, string);

					SendClientMessage(plid, C_Traficante, "Você pode aceitar a droga ou recusar: /aceitar /recusar.");
					SendClientMessage(playerid, 0x6495EDAA, "Crack oferecido com sucesso!");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/ofcocaina", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Traficante)
		{
			new plid;

			if(sscanf(cmdtext, "s[11]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /ofcocaina [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
				if(DOF2_GetInt(file, "Cocaina") == 0)
				{
					SendClientMessage(playerid, Vermelho, "Sua cocaína acabou, pegue mais na boca!");
					return 1;
				}
				if(DOF2_GetInt(file, "Cocaina") >= 1)
				{
					DOF2_SetInt(file, "Cocaina", DOF2_GetInt(file, "Cocaina")-1);
					DOF2_SetInt(file2, "ofcocaina", 1);

					format(string, sizeof(string), "%s te ofereceu 1kg de cocaína!", GetPlayerNameEx(playerid));
					SendClientMessage(plid, C_Traficante, string);

					SendClientMessage(plid, C_Traficante, "Você pode aceitar a droga ou recusar: /aceitar /recusar.");
					SendClientMessage(playerid, 0x6495EDAA, "Cocaina oferecida com sucesso!");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/aceitar", true) == 0)
	{
		format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(IsPlayerConnected(playerid))
		{
			if(DOF2_GetInt(file2, "convitent") == 1)
			{
				SendClientMessage(playerid, Amarelo, "Você aceitou o convite para a entrevista!");
				SendClientMessage(playerid, Amarelo, "Vá até a prefeitura para começar a entrevista.");
			}
			if(DOF2_GetInt(file2, "ofmaconha") == 1)
			{
				DOF2_SetInt(file2, "ofmaconha", 0);
				DOF2_SetInt(file2, "tmaconha", DOF2_GetInt(file2, "tmaconha")+1);
				SendClientMessage(playerid, Amarelo, "Você tem mais 1kg de maconha, para usar digite /usarmaconha");
			}
			if(DOF2_GetInt(file2, "ofcrack") == 1)
			{
				DOF2_SetInt(file2, "ofcrack", 0);
				DOF2_SetInt(file2, "tcrack", DOF2_GetInt(file2, "tcrack")+1);
				SendClientMessage(playerid, Amarelo, "Você tem mais 1kg de crack, para usar digite /usarcrack!");
			}
			if(DOF2_GetInt(file2, "ofcocaina") == 1)
			{
				DOF2_SetInt(file2, "ofcocaina", 0);
				DOF2_SetInt(file2, "tcocaina", DOF2_GetInt(file2, "tcocaina")+1);
				SendClientMessage(playerid, Amarelo, "Você tem mais 1kg de cocaína, para usar digite /usarcocaina!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/recusar", true) == 0)
	{
		format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(IsPlayerConnected(playerid))
		{
			if(DOF2_GetInt(file2, "convitent") == 1)
			{
				DOF2_SetInt(file2, "convitent", 0);
				SendClientMessage(playerid, Amarelo, "Você recusou o convite da entrevista!");

				format(string, sizeof(string), "%s (ID: %d) não quer ser entrevistado!", GetPlayerNameEx(playerid), playerid);
				SendClientMessageToAll(Vermelho, string);
			}
			if(DOF2_GetInt(file2, "ofmaconha") == 1)
			{
				DOF2_SetInt(file2, "ofmaconha", 0);
				SendClientMessage(playerid, Amarelo, "Você recusou mais 1kg de maconha!");
			}
			if(DOF2_GetInt(file2, "ofcrack") == 1)
			{
				DOF2_SetInt(file2, "ofcrack", 0);
				SendClientMessage(playerid, Amarelo, "Você recusou mais 1kg de crack!");
			}
			if(DOF2_GetInt(file2, "ofcocaina") == 1)
			{
				DOF2_SetInt(file2, "ofcocaina", 0);
				SendClientMessage(playerid, Amarelo, "Você recusou mais 1kg de cocaína!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/preprr", true) == 0)
	{
		if(pAdmin[playerid] == 7 || PlayerInfo[playerid][SCON] == true)
		{
			prepbyid[playerid] = playerid;

			CreateCountdown(30, 1);
			PrepTimer = SetTimer("AutoRestart", 32000, 1);

			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					SendClientMessage(i, Vermelho, "O servidor está sendo preparado para reiniciar em 30 segundos.");
				}
			}

			SendClientMessage(playerid, Amarelo, "Para cancelar o processo use: /cancelprep");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem o direito de fazer isso.");
		}
		return 1;
	}

	if(strcmp(cmd, "/darcaixab", true) == 0)
	{
		if(pAdmin[playerid] == 7)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]ud", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Digite: /DarCaixaa");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file, "Cashier", 1);

				format(string, sizeof(string), "{6959CD}Você deu {FFFFFF}1 {6959CD}chave básica para: {FFFFFF}%s.",GetPlayerNameEx(plid));
				SendClientMessage(playerid, Blue, string);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s (%d) {6959CD}te deu {FFFFFF}1 {6959CD}chave para caixa básica.", GetPlayerNameEx(playerid), playerid);
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Jogador não conectado!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/darcaixaa", true) == 0)
	{
		if(pAdmin[playerid] == 7 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]ud", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Digite: /DarCaixaa");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file, "Caixaa", 1);

				format(string, sizeof(string), "{6959CD}Você deu {FFFFFF}1 {6959CD}chave avançada para: {FFFFFF}%s.",GetPlayerNameEx(plid));
				SendClientMessage(playerid, Blue, string);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s (%d) {6959CD}te deu {FFFFFF}1 {6959CD}chave para caixa avançada.", GetPlayerNameEx(playerid), playerid);
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Jogador não conectado!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/caixab", true) == 0)
	{
		if(pAdmin[playerid] == 7)
		{
			foreach(Player, i)
			{
				if(IsPlayerConnected(i))
				{
					format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(i));
					DOF2_SetInt(file, "Cashier", 1);

                    format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s (%d) {6959CD}deu caixa básica para todos os players online!", GetPlayerNameEx(playerid), playerid);
					SendClientMessage(i, Verde, string);
				}
			}
			SendClientMessage(playerid, 0x6495EDAA, "Concluído somente para os Online!");
		}
		return 1;
	}

	if(strcmp(cmd, "/caixaa", true) == 0)
	{
		if(pAdmin[playerid] == 7)
		{
			foreach(Player, i)
			{
				if(IsPlayerConnected(i))
				{
					format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(i));
					DOF2_SetInt(file, "Caixaa", 1);

					format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s (%d) {6959CD}deu caixa avançada para todos os players online!", GetPlayerNameEx(playerid), playerid);
					SendClientMessage(i, Verde, string);
				}
			}
			SendClientMessage(playerid, 0x6495EDAA, "Concluído somente para os Online!");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/cancelprep", true) == 0)
	{
		if(pAdmin[playerid] == 7)
		{
			prepbyid[playerid] = INVALID_PLAYER_ID;

			StopCountdown();
			KillTimer(PrepTimer);

			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}cancelou o reiniciamento do servidor.", GetPlayerNameEx(playerid));
					SendClientMessage(i, tcadm, string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem o direito de fazer isso.");
		}
		return 1;
	}

	if(strcmp(cmd, "/recarregarmapas", true) == 0)
	{
	    if(PlayerInfo[playerid][SCON] == true) return 1;
	    UnloadAllDynamicObjects();
		LoadDynamicObjectsFromFile("Objetos/Casas.txt");
		LoadDynamicObjectsFromFile("Objetos/Dten.txt");
		format(string, sizeof(string), "{6666ff}| INFO | %s recarregou todos os mapas do servidor.", GetPlayerNameEx(playerid));
		SendClientMessageToAll(-1, string);
		return 1;
	}

	if(strcmp(cmd, "/trazertodos", true) == 0)
	{
		if(pAdmin[playerid] > 6)
		{
			new Float:X, Float:Y, Float:Z;

			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					GetPlayerPos(playerid, X, Y, Z);

					SetPlayerInterior(i, GetPlayerInterior(playerid));
					SetPlayerPos(i, X+2, Y+2, Z);

					TogglePlayerControllable(i, false);
					SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", i);

					format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}trouxe todos para sua posição.", GetPlayerNameEx(playerid));
					SendClientMessage(i, tcadm, string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/vidat", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					SetPlayerHealth(i, 100.0);
				}
			}
			format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}recuperou a vida de todos.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(tcadm, string);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/liberarchat", true) == 0)
	{
		if(pAdmin[playerid] > 4)
		{
			Chatlb = 1;
			format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}liberou o Chat Global!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(tcadm, string);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/blockchat", true) == 0)
	{
		if(pAdmin[playerid] > 4)
		{
			Chatlb = 0;
			format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}bloqueou o Chat Global!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(tcadm, string);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/liberardm", true) == 0)
	{
		if(pAdmin[playerid] > 4)
		{
			DMlb = 1;
			format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}liberou o DM!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(tcadm, string);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/blockdm", true) == 0)
	{
		if(pAdmin[playerid] > 4)
		{
			DMlb = 0;
			format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}bloqueou o DM!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(tcadm, string);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/coletet", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					SetPlayerArmour(i, 100.0);
				}
			}
			format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}recuperou o colete de todos.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(tcadm, string);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/desarmart", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					ResetPlayerWeapons(i);
				}
			}
			format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}desarmou todos.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(tcadm, string);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/tirarvercmds", true) == 0)
	{
	    for(new i = 0; i < MAX_PLAYERS; i++)
		vercmds[i] = 0;
		SendClientMessage(playerid, 0x0016DDFF, "Voce tirou todos do vercmds!");
		return 1;
	}

	if(strcmp(cmd, "/vercmds", true) == 0)
	{
		if(pAdmin[playerid] == 6)
		{
			if(vercmds[playerid] == 0)
			{
				vercmds[playerid] = 1;
				SendClientMessage(playerid, 0x0016DDFF, "Agora você está lendo os comandos do servidor!");
				SendClientMessage(playerid, Amarelo, "Digite novamente /vercmds para não ver os comandos!");
			}
			else if(vercmds[playerid] == 1)
			{
				vercmds[playerid] = 0;
				SendClientMessage(playerid, 0x0016DDFF, "Agora você não está mais lendo os comandos do servidor!");
				SendClientMessage(playerid, Amarelo, "Digite novamente /vercmds para ver os comandos!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/versms", true) == 0)
	{
		if(pAdmin[playerid] > 2)
		{
			if(verpms[playerid] == 0)
			{
				verpms[playerid] = 1;
				SendClientMessage(playerid, 0x0016DDFF, "Agora você está lendo as SMS do servidor!");
				SendClientMessage(playerid, Amarelo, "Digite novamente /versms para não ver as SMS!");
			}
			else if(verpms[playerid] == 1)
			{
				verpms[playerid] = 0;
				SendClientMessage(playerid, 0x0016DDFF, "Agora você não está mais lendo as SMS do servidor!");
				SendClientMessage(playerid, Amarelo, "Digite novamente /versms para ver as SMS!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/blocksms", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(blockpm[playerid] == 1)
			{
				blockpm[playerid] = 0;
				SendClientMessage(playerid, Vermelho, "Agora você está recebendo SMS, se não quiser receber use /blocksms.");
			}
			else if(blockpm[playerid] == 0)
			{
				blockpm[playerid] = 1;
				SendClientMessage(playerid, Vermelho, "Agora você não está recebendo SMS, use /blocksms novamente para recebê-los!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/soltar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1 || DOF2_GetInt(file, "Profissao") == Advogado || DOF2_GetInt(file, "Profissao") == Desembargador || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[7]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Use: /soltar [id]");
				return 1;
			}
			if(plid == playerid && DOF2_GetInt(file, "aAdmin") == 0)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode se soltar, contrate outro advogado.");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
			    if(preso[plid] == 1)
			    {
					SoltarPlayer(plid);
					xplayerDM[plid] = 0;
					GivePlayerGrana(playerid, 5000);

					format(string, sizeof(string), "{006400}O(a) Advogado {FFFFFF}%s {006400}te soltou!", GetPlayerNameEx(playerid));
					SendClientMessage(plid, GREEN, string);

					SendClientMessage(playerid, 0x6495EDAA, "{006400}Você soltou um(a) jogador(a) preso(a) e ganhou 5 mil!");
				}
				else
				{
				    SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está preso(a).");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está online.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não é um advogado.");
		}
		return 1;
	}

	if(strcmp(cmd, "/sequestrar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(PlayerInfo[playerid][SCON] == true || DOF2_GetInt(file, "Profissao") == Mafia || DOF2_GetInt(file, "Profissao") == FTSA)
		{
			new plid;

			if(sscanf(cmdtext, "s[12]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "/sequestrar [id]");
				return 1;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado");
				return 1 ;
			}
			if(jasequestro[playerid] == 1)
			{
				SendClientMessage(playerid, Vermelho, "Você já sequestrou alguem.");
				return 1;
			}
			if(sequestro[playerid] == 1)
			{
				SendClientMessage(playerid, Vermelho, "Você só pode sequestrar um por vez!");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode fazer isto com si mesmo.");
				return 1 ;
			}
			if(IsPlayerInAnyVehicle(plid))
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) que você quer sequestrar está em um veículo!");
			}
			else
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					if(GetDistanceBetweenPlayers(plid, playerid) < 10)
					{
						SetPlayerWantedLevel(playerid, 6);
						DOF2_SetInt(file, "Procurado", 1);

						Procurados[playerid] = 1;
						sequestro[playerid] = 1;
						jasequestro[playerid] = 1;

						xsequestrado[plid] = 1;

						TogglePlayerControllable(plid, 0);
						PutPlayerInVehicle(plid, GetPlayerVehicleID(playerid), 1);
						SetTimerEx("liberar", 300000, 1, "d", playerid);

						format(string, sizeof(string), "O(a) Sequestrador %s te sequestrou.", GetPlayerNameEx(playerid));
						SendClientMessage(plid, Blue, string);

						format(string, sizeof(string), "O(a) %s squestrou %s e está sendo procurado(a).", GetPlayerNameEx(playerid), GetPlayerNameEx(plid));
						SendClientMessageToAll(Amarelo, string);

						format(string, sizeof(string), "Tente pagar uma recompensa para salvá-lo(a).");
						SendClientMessageToAll(Amarelo, string);

						SendClientMessage(playerid, COLOR_GREEN, "Player sequestrado!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Chegue mais perto para sequestrar!");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você precisa estar em um veículo para sequestrar!");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Apenas gangster pode fazer isso!");
		}
		return 1;
	}

	if(strcmp(cmd, "/trocarnick", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "MN") == 1)
		{
		    if(GangID[playerid]!=0) return SendClientMessage(playerid,amarelo,"[CLAN] Saia do clan para trocar de nick");
			trocandonick[playerid] = 1;
			ShowPlayerDialog(playerid, mudarnick, DIALOG_STYLE_INPUT, "Trocando Nick", "{FFA500}Digite seu novo nick:", "Mudar", "Sair");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Peça para um ADM te liberar a mudar de nick!");
		}
		return 1;
	}

	if(strcmp(cmd, "/trocarsenha", true) == 0)
	{
		ShowPlayerDialog(playerid, mudarsenha, DIALOG_STYLE_PASSWORD, "Trocando Senha", "{FF0000}Digite sua nova senha:", "Mudar", "Sair");
		return 1;
	}
	
	if(strcmp(cmd, "/resetarmortes", true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[9]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "/resetarmortes [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				matou[plid] = 0;
				morreu[plid] = 0;

				format(string, sizeof(string), "{6959CD}Você resetou as mortes de {FFFFFF}%s!", GetPlayerNameEx(plid));
				SendClientMessage(playerid, Blue, string);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}resetou suas mortes!", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
			return 1;
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/naauto", true) == 0)
	{
		new count = 0, msg[1000];

		SendClientMessage(playerid, 0x008000AA, "{FFFFFF}Jogadores na {FF0000}Auto-Escola");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && autoescola[i])
			{
				format(msg,sizeof(msg), "%s (ID: %d)", GetPlayerNameEx(i), i);
				SendClientMessage(playerid, 0x0088CAAA, msg);
				count++;
			}
		}
		if(count == 0)
		{
			SendClientMessage(playerid, 0xFF0000AA, "Ninguém está em teste da Auto-Escola!");
		}
		return 1;
	}

	if(strcmp(cmd, "/nacorrida", true) == 0)
	{
		new count = 0, msg[1000];

		SendClientMessage(playerid, 0x008000AA, "{FFFFFF}Jogadores na {FF0000}Corrida");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && NaCorrida[i])
			{
				format(msg, sizeof(msg), "%s (ID: %d)", GetPlayerNameEx(i), i);
				SendClientMessage(playerid, 0x0088CAAA, msg);
				count++;
			}
		}
		if(count == 0)
		{
			SendClientMessage(playerid, 0xFF0000AA, "Ninguém está em uma Corrida!");
		}
		return 1;
	}


	if(strcmp(cmd, "/noevento", true) == 0)
	{
		new count = 0, msg[1000];

		SendClientMessage(playerid, 0x008000AA, "{FFFFFF}Jogadores no {FF0000}Evento");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && noevento[i])
			{
				format(msg, sizeof(msg), "%s (ID: %d)", GetPlayerNameEx(i), i);
				SendClientMessage(playerid, 0x0088CAAA, msg);
				count++;
			}
		}
		if(count == 0)
		{
			SendClientMessage(playerid, 0xFF0000AA, "Ninguém está em um Evento!");
		}
		return 1;
	}

	if(strcmp("/horarios", cmd, true) == 0)
	{
		SendClientMessage(playerid, 0x80FF00AA, "{FF0000}~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}A {FF0000}Biblioteca{FFFFFF} estará aberta nos horários:");
		SendClientMessage(playerid, Amarelo, "{FFFFFF}De manha das {FF0000}9:00 as {FF0000}12:00");
		SendClientMessage(playerid, Amarelo, "{FFFFFF}De tarde das {FF0000}14:00 as {FF0000}17:00");
		SendClientMessage(playerid, Amarelo, "{FFFFFF}De noite das {FF0000}21:00 as {FF0000}24:00");
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}Você receberá seu {FF0000}salário {FFFFFF}no horário:");
		SendClientMessage(playerid, Amarelo, "{FFFFFF}Á Tarde as {FF0000}15:00 {FFFFFF}horas!");
		SendClientMessage(playerid, 0x80FF00AA, "{FF0000}~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}
	
	if(strcmp("/discord", cmd, true) == 0)
	{
		SendClientMessage(playerid, 0x80FF00AA, "{FF0000}https://discord.gg/CMFBNJ8UgD");
		return 1;
	}

    if(strcmp(cmd, "/desbugarme", true) == 0)
	{
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);

        PlayerInfo[playerid][Logged] = 1;
        Logarprof(playerid);

		DesbugPlayer(playerid);
		format(string, sizeof(string), "Se continuar bugado, use /q, e loguei novamente");
		SendClientMessage(playerid, tcadm, string);
		format(string, sizeof(string), "{6959CD}O(a) jogador(a) {FFFFFF}%s {6959CD}se desbugou. {FFFFFF}/desbugarme.", GetPlayerNameEx(playerid));
		SendClientMessageToAll(Amarelo, string);

		return 1;
	}

	if(strcmp("/cv", cmd, true) == 0)
    {
		if(pAdmin[playerid] > 0 || IsPlayerVIP(playerid)|| IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
			new modelo, carro, cor1, cor2,
				Float:X, Float:Y, Float:Z, Float:Angle;

			if(sscanf(cmdtext, "s[4]dD(-1)D(-1)", cmd, modelo, cor1, cor2))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Digite: /cv [modelo] [cor1] [cor2]");
				return 1;
			}
 			if(gettime() - GetPVarInt(playerid, "VETempo") < 5) return SendClientMessage(playerid, Vermelho, "Aguarde 5 segundos para utilizar este comando novamente !.");
			if(IsPlayerConnected(playerid))
			{
				if(modelo >= 400 && modelo <= 611)
				{
					if(modelo == 425 || modelo == 469 || modelo == 523 || modelo == 577 || modelo == 538 || modelo == 537 || modelo == 520 || modelo == 449 || modelo == 447 || modelo == 569 || modelo == 570 || modelo == 432)
					{
						SendClientMessage(playerid, tcadm, "Veículo proibido, tente outro! | ID's = 400-611");
						return 1;
					}
					if(IsPlayerInAnyVehicle(playerid))
					{
						SendClientMessage(playerid, Vermelho, "Saia deste veículo para criar outro.");
						return 1;
					}
					GetPlayerPos(playerid, X, Y, Z);
					GetPlayerFacingAngle(playerid, Angle);
					carro = AddStaticVehicleEx(modelo, X, Y, Z, Angle, cor1, cor2, 90000);

					PutPlayerInVehicle(playerid, carro, 0);

					LinkVehicleToInterior(carro, GetPlayerInterior(playerid));
					SetVehicleVirtualWorld(carro, GetPlayerVirtualWorld(playerid));

					VehicleOldID[playerid] = carro;
					crioucarro[playerid] = 1;

					format(string, sizeof(string), "[ATENÇÃO] {FFFFFF}Veículo criado com sucesso, ID: %d.", modelo);
					SendClientMessage(playerid, Vermelho, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}x Valor inválido, tente novamente! | ID's = 400-611");
				}
			}
		}
		SetPVarInt(playerid, "VETempo", gettime());
		return 1;
	}

	
	if(strcmp("/bebado", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "PED", "WALK_DRUNK", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/merda", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "RAPPING", "Laugh_01", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/mascararse", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "SHOP", "ROB_Shifty", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/cruzarb", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "COP_AMBIENT", "Coplook_loop", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/deitar", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "BEACH", "bather", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "BEACH", "bather", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/abaixar", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "PED", "cower", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "PED", "cower", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/vomitar", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "FOOD", "EAT_Vomit_P", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/rap", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "ON_LOOKERS", "wave_loop", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/cobrar", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		OnePlayAnim(playerid, "DEALER", "DEALER_DEAL", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

    if(strcmp("/fumar", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "SMOKING", "F_smklean_loop", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/passarmao", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		OnePlayAnim(playerid, "SWEET", "sweet_ass_slap", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/sentar", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "BEACH", "ParkSit_M_loop", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "BEACH", "ParkSit_M_loop", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/conversar", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		OnePlayAnim(playerid, "PED", "IDLE_CHAT", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "PED", "IDLE_CHAT", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/fodase", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		OnePlayAnim(playerid, "PED", "fucku", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "PED", "fucku", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/observar", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "BAR", "dnk_stndF_loop", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "BAR", "dnk_stndF_loop", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/taichi", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "PARK", "Tai_Chi_Loop", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/strip", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "STRIP", "STR_B2C", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "STRIP", "STR_B2C", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/mulhersexo", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "benchpress", "gym_bp_up_B", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "benchpress", "gym_bp_up_B", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/comermulher", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "MD_END", "END_SC1_SMO", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "MD_END", "END_SC1_SMO", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/mulherfudida", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "FINALE", "FIN_Land_Die", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "FINALE", "FIN_Land_Die", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/de4", cmd, true) == 0)
	{
		#if defined AnimLoopsUser
		LoopingAnim(playerid, "FINALE", "FIN_Land_Car", 4.1, 0, 1, 1, 1, 1);
		#else
		ApplyAnimation(playerid, "FINALE", "FIN_Land_Car", 4.1, 0, 1, 1, 1, 1);
		#endif

		return 1;
	}

	if(strcmp("/animes", cmd, true) == 0)
	{
		SendClientMessage(playerid, Blue, "====================== Lista de Animes ======================");
		SendClientMessage(playerid, 0x6495EDAA, "/bebado /merda /mascararse /cruzarb /deitar /sentar");
		SendClientMessage(playerid, 0x6495EDAA, "/vomitar /rap /cobrar /fumar /passarmao /taichi");
		SendClientMessage(playerid, 0x6495EDAA, "/observar /fodase /conversar /abaixar /strip");
		SendClientMessage(playerid, 0x6495EDAA, "/de4 /mulhersexo /comermulher /mulherfudida");
		SendClientMessage(playerid, Blue, "====================== Lista de Animes ======================");
		return 1;
	}

	if(strcmp(cmd, "/godmod", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
		    if(gmod[playerid] == 0)
			{
				gmod[playerid] = 1;
				SetPlayerHealth(playerid, 999999.0);
				SendClientMessage(playerid, COLOR_GREEN, "GOD-MOD: ATIVADO");
			}
			else
			{
				if(gmod[playerid] == 1)
				{
					gmod[playerid] = 0;
					SetPlayerHealth(playerid, 100.0);
					SendClientMessage(playerid, COLOR_GREEN, "GOD-MOD: DESATIVADO");
				}
			}
		}
		return 1;
	}
	
	if(strcmp("/colissao", cmd, true) == 0)
	{
        if(IsPlayerVIPMT(playerid))
		{
	        if(Batida[playerid] == 0)
	        {
	            DisableRemoteVehicleCollisions(playerid, 0);
	            Batida[playerid] = 1;
	        }
   			else if(Batida[playerid] == 1)
	        {
	            DisableRemoteVehicleCollisions(playerid, 1);
	            Batida[playerid] = 0;
	        }
        }
		return 1;
	}
    
    if(strcmp("/chapeu", cmd, true) == 0)
	{
        SetPlayerAttachedObject(playerid, 0, 18639, 2, 0.158797, 0.010018, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
        SendClientMessage(playerid, -1,"Você Colocou {00FFFF}Chapeu Ziika :)");
		return 1;
	}

	if(strcmp(cmd, "/gorro", true) == 0)
	{
		GameTextForPlayer(playerid,"~r~Gorro!",4000,6);
	    SetPlayerAttachedObject(playerid, 3, 19065, 2, 0.120000, 0.040000, -0.003500, 0, 100, 100, 1.4, 1.4, 1.4);
	    return 1;
	}
    
	if(strcmp(cmd, "/godcar", true) == 0)
	{
		if(pAdmin[playerid] > 0 || IsPlayerVIPT(playerid) || IsPlayerDJ(playerid) || IsPlayerVIPMT(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, 0xE60000FF, "Você precisa estar em um veículo!");
				return 1;
			}
			vmod[playerid] = 1;
			RepairVehicle(GetPlayerVehicleID(playerid));
			if(pAdmin[playerid] > 0)
			{
				SendClientMessage(playerid, 0xFF0000AA, "{FFFFFF}[INFO] {1F0C9B}GOD CAR ATIVADO.");
			}
			else if(IsPlayerVIPT(playerid))
			{
				format(string, sizeof(string),"{FFFFFF}O VIP PREMIUM {1F0C9B}%s {FFFFFF}Ativou o  {1F0C9B}GOD CAR.", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Amarelo, string);
			}
			else if(IsPlayerVIPMT(playerid))
			{
				format(string, sizeof(string),"{FFFFFF}O VIP $Prestige$ {1F0C9B}%s {FFFFFF}Ativou o {1F0C9B}GOD CAR.", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Amarelo, string);
			}
			else if(IsPlayerDJ(playerid))
			{
				format(string, sizeof(string),"{FFFFFF}O DJ {1F0C9B}%s {FFFFFF}Ativou o {1F0C9B}GOD CAR.", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Amarelo, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/armas", true) == 0)
	{
		if(pAdmin[playerid] > 0 || IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
			ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Armas Vip", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
		}
		return 1;
	}

	if(strcmp(cmd, "/minigunM", true) == 0)
	{
		if(pAdmin[playerid] > 0 || IsPlayerVIPMT(playerid))
		{
			GivePlayerWeapon(playerid, 38, 9000);
		}
		return 1;
	}

	if(strcmp(cmd, "/bazuca", true) == 0)
	{
		if(pAdmin[playerid] > 0 || IsPlayerVIPMT(playerid))
		{
			GivePlayerWeapon(playerid, 35, 9000);
		}
		return 1;
	}

	if(strcmp(cmd, "/hydra", true) == 0)
	{
		if(IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
			new carro, Float:X, Float:Y, Float:Z, Float:Angle;

			if(IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Saia deste veículo para criar outro.");
				return 1;
			}
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, Angle);
			carro = AddStaticVehicleEx(520, X, Y, Z, Angle, -1, -1, 90000);
		 	if(IsPlayerVIPT(playerid))
			{
				format(string, sizeof(string), "PREMIUM %s (%d)\nVeículo ID: 520", GetPlayerNameEx(playerid), playerid);
			}
			else if(IsPlayerVIPMT(playerid))
			{
				format(string, sizeof(string), "$Prestige$ %s (%d)\nVeículo ID: 520", GetPlayerNameEx(playerid), playerid);
			}

			PutPlayerInVehicle(playerid, carro, 0);

			LinkVehicleToInterior(carro, GetPlayerInterior(playerid));
			SetVehicleVirtualWorld(carro, GetPlayerVirtualWorld(playerid));

			VehicleOldID[playerid] = carro;
			crioucarro[playerid] = 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/hunter", true) == 0)
	{
		if(IsPlayerVIPMT(playerid))
		{
			new carro, Float:X, Float:Y, Float:Z, Float:Angle;

			if(IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Saia deste veículo para criar outro.");
				return 1;
			}
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, Angle);
			carro = AddStaticVehicleEx(425, X, Y, Z, Angle, -1, -1, 90000);

			if(IsPlayerVIPMT(playerid))
			{
				format(string, sizeof(string), "$Prestige$ %s (%d)\nVeículo ID: 425", GetPlayerNameEx(playerid), playerid);
			}

			PutPlayerInVehicle(playerid, carro, 0);

			LinkVehicleToInterior(carro, GetPlayerInterior(playerid));
			SetVehicleVirtualWorld(carro, GetPlayerVirtualWorld(playerid));

			VehicleOldID[playerid] = carro;
			crioucarro[playerid] = 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/rhino", true) == 0)
	{
		if(IsPlayerVIPMT(playerid))
		{
			new carro, Float:X, Float:Y, Float:Z, Float:Angle;

			if(IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Saia deste veículo para criar outro.");
				return 1;
			}
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, Angle);
			carro = AddStaticVehicleEx(432, X, Y, Z, Angle, -1, -1, 90000);
		 	if(IsPlayerVIPMT(playerid))
			{
				format(string, sizeof(string), "$Prestige$ %s (%d)\nVeículo ID: 432", GetPlayerNameEx(playerid), playerid);
			}
			PutPlayerInVehicle(playerid, carro, 0);

			LinkVehicleToInterior(carro, GetPlayerInterior(playerid));
			SetVehicleVirtualWorld(carro, GetPlayerVirtualWorld(playerid));

			VehicleOldID[playerid] = carro;
			crioucarro[playerid] = 1;
		}
		return 1;
	}

	if(strcmp("/rduvida", cmd, true) == 0)
	{
	    new id, Message[128], pMessage[128];
	    if(!pAdmin[playerid]) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}x Você não possui permissão para utilizar este comando.");
		if(sscanf(cmdtext, "s[6]us[128]", cmd, id, pMessage)) return SendClientMessage(playerid, tcadm, "Use: /rduvida [id] [resposta]");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid, tcadm, "Valor inválido, tente novamente!");

		format(Message, sizeof(Message), "| DUVIDA | Você respondeu a dúvida de %s [%d]: %s", GetPlayerNameEx(id), id, pMessage);
		SendClientMessage(playerid, 0x00BFFFAA, Message);

		format(Message, sizeof(Message), "[ ADM'S ] %s respondeu a dúvida de %s. Resposta: %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(id), pMessage);
		ABroadCast(Azul, Message, 1);

		format(Message, sizeof(Message), "| DUVIDA | Sua dúvida foi respondida! '%s'", pMessage);
		SendClientMessage(id, 0x00BFFFAA, Message);

		PlayerPlaySound(id, 1085, 0.0, 0.0, 0.0);
		return 1;
	}

	if(strcmp(cmd, "/duvida", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) return 1;
		if(gettime() - GetPVarInt(playerid, "DVTempo") < 30) return SendClientMessage(playerid, Vermelho, "Aguarde 30 segundos para utilizar este comando dnv !.");
		new texto[128];
		if(sscanf(cmdtext, "s[11]s[128]", cmd, texto)) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}{FF4500}[ ERRO ] Use: /Duvida [Sua Dúvida]");

		format(string, sizeof(string), "{000000}| {00FFFF}DUVIDA {000000}|{00FFFF} Duvida de %s [%d]: %s", GetPlayerNameEx(playerid), playerid, texto);
		Relatorio(-1, string, 1);
		SendClientMessage(playerid, Aviso, "{FFFFFF}| DUVIDA | Sua dúvida foi enviada a Administração, Aguarde uma resposta!");
		SetPVarInt(playerid, "DVTempo", gettime());
		return 1;
	}

	if(strcmp(cmd, "/denunciar", true) == 0)
	{
		if(!IsPlayerConnected(playerid)) return 1;
		new texto[128];
		if(sscanf(cmdtext, "s[11]s[128]", cmd, texto)) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}x Use: /denunciar [ID][Motivo]");

		format(string, sizeof(string), "{000000}| {FF0000}DENÚNCIA {000000}| {FF0000}Denúncia de %s [%d]: {FFFFFF}%s", GetPlayerNameEx(playerid), playerid, texto);
		ABroadCast(Violeta, string, 1);
		SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}| DENÚNCIA | Sua denúncia foi enviada com sucesso.");
		return 1;
	}

	if(strcmp("/rdenuncia", cmd, true) == 0)
	{
	    new id, Message[128], pMessage[128];
	    if(!pAdmin[playerid]) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}x Você não possui permissão para utilizar este comando.");
		if(sscanf(cmdtext, "s[6]us[128]", cmd, id, pMessage)) return SendClientMessage(playerid, tcadm, "Use: /rdenuncia [id] [resposta]");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid, tcadm, "x Valor inválido, tente novamente!");

		format(Message, sizeof(Message), "| DENÚNCIA | Você respondeu a denúncia de {FFFFFF}%s [%d]: %s", GetPlayerNameEx(id), id, pMessage);
		SendClientMessage(playerid, Vermelho, Message);

		format(Message, sizeof(Message), "[ ADM'S ] %s respondeu a denúncia de %s. Resposta: %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(id), pMessage);
		ABroadCast(Amarelo, Message, 1);

		format(Message, sizeof(Message), "| DENÚNCIA | Sua denúncia foi respondida! {FFFFFF}'%s'", pMessage);
		SendClientMessage(id, Vermelho, Message);

		PlayerPlaySound(id, 1085, 0.0, 0.0, 0.0);
		return 1;
	}

/*	if(strcmp("/imortal", cmd, true) == 0)
	{
		if(gettime() - GetPVarInt(playerid, "IMTempo") < 480) return SendClientMessage(playerid, Vermelho, "Este Comando ja foi utilizado recentemente aguarde alguns minutos.");
		if(IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
			gmod[playerid] = 1;
			SetPlayerHealth(playerid, 999999.0);
			SendClientMessage(playerid, COLOR_GREEN, "{FFFFFF}Agora você tem {6959CD}5 {FFFFFF}minutos de {6959CD}GOD-MOD");
			SetTimerEx("imortal", 300000, false, "i", playerid);
		}
		SetPVarInt(playerid, "IMTempo", gettime());
		return 1;
	}
*/
	if(strcmp("/matar", cmd, true) == 0)
	{
		if(pAdmin[playerid] == 7)
		{
			new plid;

			if(sscanf(cmdtext, "s[6]uf", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /matar [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				SetPlayerHealth(plid, 0);
				SendClientMessage(playerid, Amarelo, "jogador, morto com sucesso.");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "este jogador não está online no momento.");
			}
		}
		else
		{
		    SendClientMessage(playerid, Vermelho, "x Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/matart", cmd, true) == 0)
	{
        new aname[MAX_PLAYER_NAME];
        GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
        format(file, sizeof(file), PASTA_CONTAS, aname);
		if(pAdmin[playerid] == 7)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					SetPlayerHealth(i, 0);
				    SendClientMessage(playerid, Amarelo, "Todos os Jogadores Foram Mortos");
				}
			}

		}
		else
		{
		    SendClientMessage(playerid, Vermelho, "x Você não tem permissão x");
		}
		return 1;
	}

	if(strcmp(cmd, "/kitvip", true) == 0)
	{
		if(IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid) || pAdmin[playerid] > 0)
		{
			GivePlayerWeapon(playerid, 24, 150000);
			GivePlayerWeapon(playerid, 26, 150000);
			GivePlayerWeapon(playerid, 32, 150000);
			GivePlayerWeapon(playerid, 31, 150000);
			GivePlayerWeapon(playerid, 34, 150000);
			GivePlayerWeapon(playerid, 39, 150000);
			GivePlayerWeapon(playerid, 46, 1);
			GivePlayerWeapon(playerid, 8, 1);
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 100.0);
			SendClientMessage(playerid, -1, "{FFFF00}[KIT-VIP] {FFFFFF}Você conseguiu armas, vida e colete com o Kit Vip!");
		}
		else
		{
            SendClientMessage(playerid, -1, "Você não é um VIP PREMIUM/$Prestige$");
        }
		return 1;
	}
	
	if(strcmp(cmd, "/recuperar", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			format(string, sizeof(string), "{EAEDE8}[BSL] Vida e Coletes Recuperados!");
			SendClientMessageToAll(tcadm, string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					SetPlayerArmour(i, 100.0);
					SetPlayerHealth(i, 100.0);
				}
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/minigun", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			GivePlayerWeapon(playerid, 38, 150000);
		}
		return 1;
	}

    if(strcmp(cmd, "/bazuca", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			GivePlayerWeapon(playerid, 35, 150000);
		}
		return 1;
	}
	if(strcmp(cmd, "/bazuca2", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			GivePlayerWeapon(playerid, 36, 150000);
		}
		return 1;
	}
	if(strcmp(cmd, "/lanca", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			GivePlayerWeapon(playerid, 37, 150000);
		}
		return 1;
	}

	if(strcmp(cmd, "/kitadm", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			GivePlayerWeapon(playerid, 4, 1);
			GivePlayerWeapon(playerid, 16, 999999);
			GivePlayerWeapon(playerid, 24, 999999);
			GivePlayerWeapon(playerid, 25, 999999);
			GivePlayerWeapon(playerid, 29, 999999);
			GivePlayerWeapon(playerid, 30, 999999);
			GivePlayerWeapon(playerid, 34, 999999);
			GivePlayerWeapon(playerid, 41, 999999);
			GivePlayerWeapon(playerid, 43, 999999);
			GivePlayerWeapon(playerid, 36, 999999);
			GivePlayerWeapon(playerid, 38, 999999);
			SetPlayerArmour(playerid, 150);
			SetPlayerHealth(playerid, 100);
			SendClientMessage(playerid,COLOR_GREEN,"{FFFF00}[KIT-ADM] {FFFFFF}Você conseguiu armas, vida e colete com o Kit ADM!");
		}
		return 1;
	}
	
	if(strcmp("/vvida", cmd, true) == 0)
	{
		if(IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
			if(IsPlayerConnected(playerid))
			{
				SetPlayerHealth(playerid, 100);

				SendClientMessage(playerid, 0x6495EDAA, "{FFFF00}[INFO-VIP] {FFFFFF}Você recarregou sua Vida!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Ocorreu um erro ao efetuar o comando!");
			}
		}
		return 1;
	}

	if(strcmp("/vcolete", cmd, true) == 0)
	{
		if(IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
			if(IsPlayerConnected(playerid))
			{
				SetPlayerArmour(playerid, 100);

				SendClientMessage(playerid, 0x6495EDAA, "{FFFF00}[INFO-VIP] {FFFFFF}Você recarregou seu Colete!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Ocorreu um erro ao efetuar o comando!");
			}
		}
		return 1;
	}

	if(strcmp("/favela", cmd, true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 2172.7041, -1003.7318, 62.5093, 80.3100);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2172.7041, -1003.7318, 62.5093);
		}
		return 1;
	}
	
	if(strcmp("/deposito", cmd, true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), -2870.6563,-114.8421,6.3921,91.3226);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -2870.6563,-114.8421,6.3921);
		}
		return 1;
	}

	if(strcmp("/seradm", cmdtext, true, 10) == 0)
	{
		new strcmd[1000];
		strcat(strcmd, "»{00FF00}[BSL]: {DAA520}x Divulgar o Servidor, e Ajudar os novatos!\n", sizeof(strcmd));
		strcat(strcmd, "»{00FF00}[BSL]: {DAA520}x Entrar no servidor sempre\n", sizeof(strcmd));
		strcat(strcmd, "»{00FF00}[BSL]: {DAA520}x Não ficar perguntando se tem vagas\n", sizeof(strcmd));
		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, ".:: - Ser ADM - ::.", strcmd, "OK", "");
		return 1;
    }

	if(!strcmp(cmd, "/guinchar"))
	{
	    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") != Mecanico && pAdmin[playerid] < 5) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}x Você não tem permissão.");
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) != 525) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}x Você não está em um guincho!");
		if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}x Você não tem um Guincho!");
		if(IsTrailerAttachedToVehicle(vehicleid)) return DetachTrailerFromVehicle(vehicleid);
		new Float: menordistancia = 59999999.0, veiculop = INVALID_VEHICLE_ID;
		for(new vid = 0; vid < MAX_VEHICLES; vid++)
	 	{
	 	    if(vid ==  vehicleid) continue;
	 	    if(!IsVehicleStreamedIn(vid, playerid)) continue;
			new Float:distancia = GetVehicleDistanceFromVehicle(vehicleid, vid);
			if(distancia > 10) continue;
			if(distancia < menordistancia) menordistancia = distancia, veiculop = vid;
		}
		if(veiculop != INVALID_VEHICLE_ID) AttachTrailerToVehicle(veiculop, vehicleid);
		return 1;
	}
	
	if(strcmp(cmdtext,"/cartorio",true)==0)
	{
		SetPlayerPos(playerid, 1384.0331, -1753.5792, 13.5469);
		SetPlayerInterior(playerid,0);
		return 1;
	}

	if(strcmp("/bancolv", cmd, true) == 0 || strcmp("/bradescolv", cmd, true) == 0)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1938.7201,1345.3442,9.2578);
		return 1;
	}

	if(strcmp("/banco", cmd, true) == 0 || strcmp("/bradesco", cmd, true) == 0)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1200.1720,-1744.8708,13.5914);
		return 1;
	}

	if(strcmp("/uti", cmd, true) == 0 || strcmp("/utilidades", cmd, true) == 0)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1347.2015, -1748.7418,13.3703);
		return 1;
	}

	if(strcmp("/lojaskin", cmd, true) == 0 || strcmp("/binco", cmd, true) == 0)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1158.8909, -1694.3607, 13.9531);
		return 1;
	}

	if(strcmp(cmdtext,"/igreja",true)==0)
	{
		SetPlayerPos(playerid,2227.1885,-1332.4369,23.9844);
		SetPlayerInterior(playerid,0);
		return 1;
	}

	if(strcmp(cmdtext,"/montesf",true)==0)
	{

		SetPlayerPos(playerid,-2233.7285,-1737.2473,480.8223);
		SetPlayerInterior(playerid,0);
		return 1;
	}

	if(strcmp(cmdtext,"/academia",true)==0)
	{
		SetPlayerPos(playerid,667.3986,-1859.5801,5.4609);
		SetPlayerInterior(playerid,0);
		return 1;
	}

	if(strcmp(cmdtext,"/parkour",true)==0)
	{
		if(IsPlayerVIPT(playerid) || pAdmin[playerid] > 0 || IsPlayerVIPMT(playerid))
		SetPlayerPos(playerid,2908.3794,-1094.2211,11.0999);
		SetPlayerInterior(playerid,0);
		return 1;
	}

	if(strcmp(cmdtext,"/puteiro",true)==0)
	{
		SetPlayerPos(playerid,1834.1600,-1682.2346,13.4431);
		SetPlayerInterior(playerid,0);
		return 1;
	}

	if(strcmp(cmdtext,"/ammu",true)==0)
	{
		if(IsPlayerVIPT(playerid) || pAdmin[playerid] > 0 || IsPlayerVIPMT(playerid))
		SetPlayerPos(playerid,1364.7736,-1279.1780,13.5469);
		SetPlayerInterior(playerid,0);
		return 1;
	}
	
	if(strcmp("/bocadefumo", cmd, true) == 0)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2153.0891, -1069.6021,38.4454);
		return 1;
	}

	if(strcmp("/praca", cmd, true) == 0)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1479.8235,-1697.5100,14.0469);
		return 1;
	}

	if(strcmp("/dp", cmd, true) == 0)
	{
	    SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1553.7681, -1675.6943, 16.1953);
		return 1;
	}

	if(strcmp("/loja", cmd, true) == 0)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1310.3097, -1369.0471, 13.5574);
		return 1;
	}

	if(strcmp("/autoescola", cmd, true) == 0 || strcmp("/jjjjjj", cmd, true) == 0)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1081.0706, -1701.3231, 13.5469);
		return 1;
	}

    if(strcmp("/aerolv", cmd, true) == 0)
    {
		if(pAdmin[playerid] > 0 || IsPlayerVIPMT(playerid))
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 1285.2111, 1271.6621, 10.5278, 323.3700);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1285.2111, 1271.6621, 10.5278);
		}
		return 1;
	}

	if(strcmp("/aerosf", cmd, true) == 0)
	{
		if(IsPlayerVIPT(playerid) || pAdmin[playerid] > 0 || IsPlayerVIPMT(playerid))
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), -1644.0799, -207.7807, 13.8556, 224.8902);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -1644.0799, -207.7807, 13.8556);
		}
		return 1;
	}

	if(strcmp("/aerols", cmd, true) == 0)
	{
		if(IsPlayerVIPT(playerid) || pAdmin[playerid] > 0 || IsPlayerVIPMT(playerid))
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 1565.4782, -2485.5905, 13.2604, 137.6596);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1565.4782, -2485.5905, 13.2604);
		}
		return 1;
	}

	if(strcmp("/Vinewood", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0 || IsPlayerVIPMT(playerid))
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 1374.0349,-934.9835,34.1875,64.5669);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1374.0349,-934.9835,34.1875);
		}
		return 1;
	}

	if(strcmp("/basestaff", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 2539.3584,2346.8274,10.8203,94.5363);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2539.3584,2346.8274,10.8203);
		}
		return 1;
	}
	
	if(strcmp("/patio", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 1067.27,1373.55,10.57,0);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1067.27,1373.55,10.57);
		}
		return 1;
	}
	
	if(strcmp("/lv", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 2074.2454,872.3428,6.9398,5.1117);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2074.2454,872.3428,6.9398);
		}
		return 1;
	}

	if(strcmp("/ls", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 1640.4237, -1034.4143, 61.7462, 170.5807);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1640.4237, -1034.4143, 61.7462);
		}
		return 1;
	}

	if(strcmp("/sf", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), -1899.2922,-664.6954,40.5677,358.8379);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -1899.2922,-664.6954,40.5677);
		}
		return 1;
	}

	if(strcmp("/aerovm", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0 || IsPlayerVIPMT(playerid))
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 398.7192, 2526.5710, 16.2140, 137.5965);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 398.7192, 2526.5710, 16.2140);
		}
		return 1;
	}

	if(strcmp("/deposito", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 1655.0585,1795.9718,10.8203, 266.1063);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1655.0585,1795.9718,10.8203);
		}
		return 1;
	}

	if(strcmp("/stunt", cmd, true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid))
        {
 			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 2422.1685,-1.5873,480.8712, 90.9026);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2422.1685,-1.5873,480.8712);
		}
		return 1;
	}

	if(strcmp("/skate", cmd, true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 1877.6309, -1385.1787, 13.2740, 359.2364);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1877.6309, -1385.1787, 13.2740);
		}
		return 1;
	}

	if(strcmp("/rocinha", cmd, true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 2172.7041, -1003.7318, 62.5093, 80.3100);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2172.7041, -1003.7318, 62.5093);
		}
		return 1;
	}

	if(strcmp("/grove", cmd, true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 2486.0910, -1657.3436, 13.0549, 85.1661);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2486.0910, -1657.3436, 13.0549);
		}
		return 1;
	}

	if(strcmp("/posto", cmd, true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), 1938.4263, -1774.5457, 13.1140, 180);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1938.4263, -1774.5457, 13.1140);
		}
		return 1;
	}

	if(strcmp("/drift", cmd, true) == 0)
	{
		if(IsPlayerVIPT(playerid) || pAdmin[playerid] > 0 || IsPlayerVIPMT(playerid))
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetPlayerInterior(playerid, 0);
			SetVehiclePosEx(GetPlayerVehicleID(playerid), -303.6220,1519.5155,75.3594, 180);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
		}
		else
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -303.6220,1519.5155,75.3594);
		}
		return 1;
	}

	if(strcmp("/arenadm", cmd, true) == 0)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1369.7585, 2195.4555, 9.7578);
		return 1;
	}

	if(strcmp("/oceandm", cmd, true) == 0)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2734.7502, -2450.1545, 17.5937);
		return 1;
	}

	if(strcmp(cmdtext,"/a51",true)==0)
	{
		SetPlayerPos(playerid,135.1038,2046.3840,17.1007);
		SetPlayerInterior(playerid,0);
		return 1;
	}

	if(strcmp(cmdtext,"/facul",true)==0)
	{
		SetPlayerPos(playerid,1226.6499,-1816.6497,16.5938);
		SetPlayerInterior(playerid,0);
		return 1;
	}

	if(strcmp(cmdtext,"/rodoviaria",true)==0)
	{
		SetPlayerPos(playerid, 1398.4099,-1841.3881,13.5469);
		SetPlayerInterior(playerid,0);
		return 1;
	}

//Comando RCON do melhor Dono do mundo
	if(strcmp(cmdtext,"/rui", true)==0)
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(strcmp(aname, "Ruighost", true) == 0)
		{
			if(PlayerInfo[playerid][SCON] == false)
			{

				PlayerInfo[playerid][SCON] = true;
				PlayerPlaySound(playerid, 1057, 0, 0, 0);
				SendClientMessage(playerid, LARANJA, "{00B7FF}[RCON] Rui, você acaba de logar na rcon do servidor.");
				return 1;
			}
			else
			{
				PlayerInfo[playerid][SCON] = false;
				PlayerPlaySound(playerid, 1057, 0, 0, 0);
				SendClientMessage(playerid, LARANJA, "[RCON] Você acaba de deslogar da rcon.");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, LARANJA, "[ERRO] Você não é o Rui que eu conheço.");
		}
		return 1;
	}

//Comando RCON do melhor GATO do mundo
	if(strcmp(cmdtext,"/mega", true)==0)
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(strcmp(aname, "Megatron_", true) == 0)
		{
			if(PlayerInfo[playerid][SCON] == false)
			{

				PlayerInfo[playerid][SCON] = true;
				PlayerPlaySound(playerid, 1057, 0, 0, 0);
				SendClientMessage(playerid, LARANJA, "{00B7FF}[RCON] Mega, você acaba de logar na rcon do servidor.");
				return 1;
			}
			else
			{
				PlayerInfo[playerid][SCON] = false;
				PlayerPlaySound(playerid, 1057, 0, 0, 0);
				SendClientMessage(playerid, LARANJA, "[RCON] Você acaba de deslogar da rcon.");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, LARANJA, "[ERRO] Você não é o Mega que eu conheço.");
		}
		return 1;
	}
	
	if(strcmp("/agencia", cmd, true) == 0 || strcmp("/pref", cmd, true) == 0)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1481.2195, -1769.1388, 18.7958);
		return 1;
	}

	if(strcmp("/spawn", cmd, true) == 0)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1293.9814,-1858.5223,13.5469);
		return 1;
	}

    if(strcmp("/detran", cmd, true) == 0)
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1414.6830, -1702.1613, 13.5395);
		return 1;
    }

	if(!strcmp(cmd, "/conce", true))
	{
		format(STRX, sizeof(STRX), "Conce Terrestre\nConce Aerea\nLoja de Bike\nViaturas e Outros\nLoja de Carretas\nConce Nautica");
		ShowPlayerDialog(playerid, concelist, DIALOG_STYLE_LIST, "Concessionarias", STRX, "OK", "Cancelar");
		return 1;
	}

	if(strcmp("/teles", cmd, true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "=-=-=-=-=-=-=-=-=-=-=-= -=-=-=-=-=-==-=-=-=Teleportes=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=");
		SendClientMessage(playerid, COLOR_WHITE, "/parkour /puteiro /detran /deposito /bocadefumo /academia /lan /rodoviaria /montesf /posto /Conce");
		SendClientMessage(playerid, COLOR_WHITE, "/autoescola /aerosf /aerols /aerolv /agencia /dp /spawn /bancolv /facul /ammu  /banco /skate");
		SendClientMessage(playerid, COLOR_WHITE, "/rocinha /praca /stunt /drift /cartorio /loja /ArenaDm /Igreja /lojaSkin /Uti /naviodm /swatdm /jump");
		SendClientMessage(playerid, COLOR_WHITE, "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=");
		return 1;
	}

 	if(strcmp("/telesadm", cmd, true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(pAdmin[playerid] > 0)
            {
                new texto[1000];
                strcat(texto, "{FFFFFF} /patio /basestaff /lv /ls /sf \n");
                strcat(texto, "{FFFFFF} /deposito \n");
                strcat(texto, "{FFFFFF} a\n");
                strcat(texto, "{FFFFFF} ADM e Vips\n");
                strcat(texto, "{FFFFFF} /aerols /aerosf /aerolv /aerovm /vinewood /parkour\n");
                strcat(texto, "{FFFFFF} /ammu\n");
                strcat(texto, "{FFFFFF} adm\n");
                ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FF0000}Teleportes Admin", texto, "Fechar", "");
            }
        }
        return 1;
    }

 	if(strcmp("/telespremium", cmd, true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsPlayerVIPT(playerid))
            {
                new texto[1000];
                strcat(texto, "{FFFFFF} /drift /aerols /aerosf /parkour /ammu\n");
                strcat(texto, "{FFFFFF} a\n");
                strcat(texto, "{FFFFFF} a\n");
                strcat(texto, "{FFFFFF} a\n");
                strcat(texto, "{FFFFFF} a\n");
                strcat(texto, "{FFFFFF} a\n");
                strcat(texto, "{FFFFFF} premium\n");
                ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FF0000}Teleportes Exclusivos Premium", texto, "Fechar", "");
            }
        }
        return 1;
    }

	if(strcmp("/telesprestige", cmd, true) == 0)
    {
        if(IsPlayerVIPMT(playerid))
        {
            if(IsPlayerVIPT(playerid))
            {
                new texto[1000];
                strcat(texto, "{FFFFFF} /drift /aerols /aerosf /aerolv /aerovm\n");
                strcat(texto, "{FFFFFF} /vinewood /parkour /ammu\n");
                strcat(texto, "{FFFFFF} a\n");
                strcat(texto, "{FFFFFF} a\n");
                strcat(texto, "{FFFFFF} a\n");
                strcat(texto, "{FFFFFF} a\n");
                strcat(texto, "{FFFFFF} prestige\n");
                ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FF0000}Teleportes Exclusivos $Prestige$", texto, "Fechar", "");
            }
        }
        return 1;
    }

	if(strcmp("/criarevento", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			new vagas, nome[64], Float:eXx, Float:eYy, Float:eZz;
			if(sscanf(cmdtext, "s[13]ds[64]", cmd, vagas, nome)) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}/criarevento [vagas] [nome]");

			GetPlayerPos(playerid, eXx, eYy, eZz);
			PlayerCreateEvent(playerid, vagas, nome, eXx, eYy, eZz, GetPlayerInterior(playerid));
		}
		return 1;
	}
	if(strcmp(cmd, "/noevento", true) == 0)
	{
		new count = 0, msg[1000];

		SendClientMessage(playerid, 0x008000AA, "[Players no Evento]");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && noevento[i])
			{
				format(msg, sizeof(msg), "%s (ID: %d)", GetPlayerNameEx(i), i);
				SendClientMessage(playerid, 0x0088CAAA, msg);
				count++;
			}
		}
		if(count == 0)
		{
			SendClientMessage(playerid, 0xFF0000AA, "Ninguém está em um Evento!");
		}
		return 1;
	}
	if(strcmp("/fecharevento", cmd, true) == 0)
	{
	if(pAdmin[playerid] >= 1) PlayerCloseEvent(playerid);
	return 1;
	}

	if(strcmp("/expulsarevento", cmd, true) == 0)
	{
		new plid, motivo[64];

		if(sscanf(cmdtext, "s[16]us[64]", cmd, plid, motivo))
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}/expulsarevento [id] [motivo]");
			return 1;
		}
		PlayerExpulsePlayerEvent(playerid, plid, motivo);
		return 1;
	}
	
    if(strcmp(cmd, "/edararma", true) == 0)
	{
		if(pAdmin[playerid] >= 2)
		{
			new tmp[256];
			new idarma;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GREEN, "Erro: Use /edararma [id da arma]");
				return 1;
			}

			idarma = strval(tmp);
			if(idarma == 38 || idarma == 35 || idarma == 36 || idarma == 37 || idarma == 39 || idarma == 40)
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}** ID de Arma Proibida!");
				return 1;
			}
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
			new aname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, aname, MAX_PLAYER_NAME);

			format(string, sizeof(string), "{FF0000}[INFO] {75EA00}O Admin %s (%d) deu uma arma de (ID:%d) a todos do evento", aname, playerid,idarma);
			SendClientMessageToAll(tcadm, string);
			foreach(Player, i)
			{
				if(IsPlayerConnected(i) && noevento[i] == 1)
				{
					GivePlayerWeapon(i, idarma, 999999);
				}
			}
			return 1;
		}
    }

    if(strcmp(cmd, "/evida", true) == 0)
	{
		new tmp[256];
		new vida;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}** Use /evida [Quantidade]");
			return 1;
		}
		vida = strval(tmp);
		if(vida < 1 || vida > 100)
		{
			SendClientMessage(playerid,Vermelho,"** Quantidade inválida!");
			return 1;
		}
		if(pAdmin[playerid] >= 2)
		{

			new aname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, aname, MAX_PLAYER_NAME);

			format(string, sizeof(string), "{FF0000}[INFO] {75EA00}O Admin %s (%d) deu %d de vida a todos do evento", aname, playerid,vida);
			SendClientMessageToAll(tcadm, string);
			tvida = 1;
			evida = vida;
			foreach(Player, i)
			{
				if(IsPlayerConnected(i) && noevento[i] == 1)
				{
					SetPlayerHealth(i, vida);
				}
			}
			return 1;
		}
	}


    if(strcmp(cmd, "/ecolete", true) == 0)
	{
		new tmp[256];
		new vida;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}** Use /ecolete [Quantidade]");
			return 1;
		}
		vida = strval(tmp);
		if(vida < 1 || vida > 100)
		{
			SendClientMessage(playerid,Vermelho,"** Quantidade inválida!");
			return 1;
		}
		if(pAdmin[playerid] >= 2)
		{
			ecolete = vida;
			tcolete = 1;
			new aname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, aname, MAX_PLAYER_NAME);

			format(string, sizeof(string), "{FF0000}[INFO] {75EA00}O Admin %s (%d) deu %d de colete a todos do evento", aname, playerid,vida);
			SendClientMessageToAll(tcadm, string);

			foreach(Player, i)
			{
				if(IsPlayerConnected(i) && noevento[i] == 1)
				{
					SetPlayerArmour(i, vida);
					//SetPlayerKevlarHealth(playerid, 300.0);
				}
			}
			return 1;
		}
	}


    if(strcmp(cmd, "/edesarmar", true) == 0)
	{
		if(pAdmin[playerid] >= 2)
		{
			new aname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, aname, MAX_PLAYER_NAME);

			format(string, sizeof(string), "{FF0000}[INFO] {75EA00}O Admin %s (%d) Desarmou todos do evento!", aname, playerid);
			SendClientMessageToAll(tcadm, string);
			ereset = 1;
			foreach(Player, i)
			{
				if(IsPlayerConnected(i) && noevento[i] == 1)
				{
					ResetPlayerWeapons(i);
				}
			}
			return 1;
		}
	}

    if(strcmp(cmd, "/econgelar", true) == 0)
	{
		if(pAdmin[playerid] >= 2)
		{
			foreach(Player, i)
			{
				if(IsPlayerConnected(i))
				{
					if(noevento[i] == 1)
					{
						TogglePlayerControllable(i, 0);
					}
				}
			}
			new aname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, aname, MAX_PLAYER_NAME);

			format(string, sizeof(string), "{FF0000}[INFO] {75EA00}O Admin %s (%d) congelou todos do evento", aname, playerid);
			SendClientMessageToAll(tcadm, string);
			econgelar = 1;
			return 1;
			}
		}


    if(strcmp(cmd, "/edescongelar", true) == 0)
	{
		if(pAdmin[playerid] >= 2)
		{
			new aname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, aname, MAX_PLAYER_NAME);

			format(string, sizeof(string), "{FF0000}[INFO] {75EA00}O Admin %s (%d) descongelou todos do evento", aname, playerid);
			SendClientMessageToAll(tcadm, string);
			econgelar = 0;
			foreach(Player, i)
			{
				if(IsPlayerConnected(i) && noevento[i] == 1)
				{
					TogglePlayerControllable(i, 1);
				}
			}
			return 1;
		}
	}


	if(strcmp(cmd, "/pausarevento", true) == 0)
	{
		if(EventoCriado == 0)
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}O evento não começou.");
			return 1;
		}
		if(pAdmin[playerid] > 2)
		{
			foreach(Player, i)
			{
				if(IsPlayerConnected(i))
				{
					if(noevento[i] == 1)
					{
						TogglePlayerControllable(i, 0);
					}
				}
			}
			GameTextForAll("~y~Evento ~b~Pausado", 6000, 1);
			format(STRX, sizeof(STRX), "{FFFFFF}ADM %s {FF4500}pausou o evento{FFFFFF}.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(tcadm, STRX);
		}
		return 1;
	}

	if(strcmp(cmd, "/continuarevento", true) == 0)
	{
		if(EventoCriado == 0)
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}O evento não começou.");
			return 1;
		}
		if(pAdmin[playerid] > 2)
		{
			foreach(Player, i)
			{
				if(IsPlayerConnected(i))
				{
					if(noevento[i] == 1)
					{
						TogglePlayerControllable(i, 1);
					}
				}
			}
			GameTextForAll("~y~Evento ~b~Continua", 6000, 1);
			format(STRX, sizeof(STRX), "{FFFFFF}ADM %s {FF4500}deu continuação ao evento{FFFFFF}.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(tcadm, STRX);
		}
		return 1;
	}

	if(strcmp("/comecarevento", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0) PlayerInitEvent(playerid);
		return 1;
	}

	if(strcmp("/irevento", cmd, true) == 0)
	    {
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Preso") == 1) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você está preso!");

		SetPlayerEventPos(playerid);
		return 1;
	}
	if(strcmp("/irevento", cmd, true) == 0)
	{
		new aname[MAX_PLAYER_NAME];
		new sInterior;
		new Float:sX, Float:sY, Float:sZ;
		GetPlayerPos(playerid, sX, sY, sZ);
		DOF2_SetFloat(file,"EventoX",Float:sX);
		DOF2_SetFloat(file,"EventoY",Float:sY);
		DOF2_SetFloat(file,"EventoZ",Float:sZ);
		DOF2_SetInt(file,"EventoI",sInterior);
		SetPlayerInterior(playerid, interiore);
		SetPlayerPos(playerid, eventoX, eventoY, eventoZ);
		GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
		format(file, sizeof(file), PASTA_CONTAS, aname);
	//	DisableRemoteVehicleCollisions(playerid, 1);
		if(Proibido == 1) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}* Evento cancelado ou já começou.");
		if(DOF2_GetInt(file, "Preso") >= 1) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}** Você está preso !");
		if(EventoCriado == 1)
		SendClientMessage(playerid, Azul, "[INFO] Você entrou no evento, para sair digite /sairevento !");
		noevento[playerid] = 1;
		evento[playerid] = 1;
		if(econgelar == 1)
		{
			TogglePlayerControllable(playerid, 0);
		}
		if(tvida  == 1)
		{
			SetPlayerHealth(playerid, evida);
		}
		if(tcolete == 1)
		{
			SetPlayerArmour(playerid, ecolete);
			//SetPlayerKevlarHealth(playerid, 300.0);
		}
		if(ereset == 1)
		{
			ResetPlayerWeapons(playerid);
		}
		return 1;
	}

	if(strcmp("/evento", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			SendClientMessage(playerid, 0x008000AA, "Use: /criarevento para criar um evento");
			SendClientMessage(playerid, 0x008000AA, "Use: /expulsarevento para expulsar alguem do evento");
			SendClientMessage(playerid, 0x008000AA, "Use: /comecarevento para iniciar o evento");
			SendClientMessage(playerid, 0x008000AA, "Use: /noevento para ver o player no evento");
			SendClientMessage(playerid, 0x008000AA, "Use: /pausarevento para pausar o evento");
			SendClientMessage(playerid, 0x008000AA, "Use: /continuarevento para continuar o evento em pausa");
			SendClientMessage(playerid, 0x008000AA, "Use: /fecharevento quando o evento começado acabar");
		}
		return 1;
	}

	if(strcmp(cmd, "/comandoscelular", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Celular") == 1)
		{
			SendClientMessage(playerid, 0x6495EDAA, "-- Menu celular --.");
			SendClientMessage(playerid, Amarelo, "/ligar [ID] para ligar.");
			SendClientMessage(playerid, Amarelo, "/atender para atender.");
			SendClientMessage(playerid, Amarelo, "/ignorar para não atender.");
			SendClientMessage(playerid, Amarelo, "/desligar para desligar.");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, " Você precisa de um celular.");
		}
		return 1;
	}

	if(!strcmp(cmd, "/ligar", true))
	{
		if(sscanf(cmdtext, "s[7]u", cmd, id2))
		{
			SendClientMessage(playerid, RED, "Use /ligar [id]");
			return 1;
		}

		docommand = playerid;

		if(!IsPlayerConnected(id2))
		{
			SendClientMessage(docommand, RED, "Fora de área, tente novamente mais tarde.");
			return 1;
		}
		if(InCall[id2] == 1)
		{
			SendClientMessage(gc, RED, "O telefone está ocupado, tente novamente mais tarde.");
			return 1;
		}
		if(InCall[playerid] == 1)
		{
			SendClientMessage(gc, RED, "Você já está em uma chamada.");
			return 1;
		}
		if(GetPlayerState(docommand) == PLAYER_STATE_DRIVER)
		{
			SendClientMessage(docommand, RED, "Você não pode dirigir e falar no telefone ao mesmo tempo.");
			return 1;
		}
		if(IsPlayerNPC(id2))
		{
			SendClientMessage(docommand, RED, "Este telefone não está recebendo chamadas.");
			return 1;
		}
		if(id2 == playerid)
		{
			SendClientMessage(docommand, RED, "Você não pode ligar para si mesmo.");
			return 1;
		}
		if(IsPlayerInAnyVehicle(id2) || IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, Vermelho, "A pessoa que você ligou está dentro de um carro.");
			return 1;
		}
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Celular") == 1)
		{
			format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(id2));
			if(DOF2_GetInt(file2, "Celular") == 1)
			{
				InCall[docommand] = 0;
				InCall[id2] = 0;

				GetCall[docommand] = 0;
				GetCall[id2] = 1;

				format(str3, sizeof(str3), "Você está ligando para %s, aguarde ele(a) atender.", GetPlayerNameEx(id2));
				SendClientMessage(docommand, WHITE, str3);

				format(str3, sizeof(str3), "O(a) jogador(a) %s está ligando para você.", GetPlayerNameEx(docommand));
				SendClientMessage(id2, WHITE, str3);

				SendClientMessage(id2, BLUEWHITE, "Para atender o telefone use /atender e para recusar a chamada use /ignorar");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Este telefone não está disponível no momento!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem um telefone!");
		}
		return 1;
	}

	gc = id2;
	sender = docommand;

	if(!strcmp(cmd, "/ignorar", true))
	{
		if(GetCall[playerid] == 0)
		{
			SendClientMessage(playerid, RED, "Você não está recebendo uma chamada.");
			return 1;
		}
		InCall[sender] = 0;
		InCall[gc] = 0;

		GetCall[sender] = 0;
		GetCall[gc] = 0;

		format(str3, sizeof(str3), "Você ignorou a chamada de %s.", GetPlayerNameEx(sender));
		SendClientMessage(gc, GREEN, str3);

		format(str3, sizeof(str3), "O(a) jogador(a) %s ignorou a sua ligação.", GetPlayerNameEx(gc));
		SendClientMessage(sender, GRAY, str3);
		return 1;
	}

	if(!strcmp(cmd, "/atender", true))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, Vermelho, "Você está dentro de um carro e não pode atender.");
			return 1;
		}
		if(GetCall[playerid] == 0)
		{
			return SendClientMessage(playerid, RED, "Você não está recebendo uma chamada.");
		}
		if(InCall[playerid] == 1)
		{
			return SendClientMessage(playerid, RED, "Seu telefone está tocando...");
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			return SendClientMessage(playerid, RED, "Você não pode dirigir e falar no celular ao mesmo tempo.");
		}
		InCall[sender] = 1;
		InCall[gc] = 1;

		GetCall[sender] = 0;
		GetCall[gc] = 0;

		SetPlayerSpecialAction(sender, SPECIAL_ACTION_USECELLPHONE);
		SetPlayerSpecialAction(gc, SPECIAL_ACTION_USECELLPHONE);

		format(str3, sizeof(str3), "Você atendeu o telefonema de %s.", GetPlayerNameEx(sender));
		SendClientMessage(gc, GREEN, str3);

		format(str3, sizeof(str3), "O(a) jogador(a) %s atendeu o telefone.", GetPlayerNameEx(gc));
		SendClientMessage(sender, GREEN, str3);
		return 1;
	}

	if(!strcmp(cmd, "/desligar", true))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, Vermelho, "Você está dentro de um carro e não pode desligar.");
			return 1;
		}
		if(InCall[gc] == 0)
		{
			SendClientMessage(gc, RED, "Você não está em uma chamada agora.");
			return 1;
		}
		if(gc == playerid)
		{
			InCall[gc] = 0;
			GetCall[gc] = 0;

			InCall[sender] = 0;
			GetCall[sender] = 0;

			SetPlayerSpecialAction(gc, SPECIAL_ACTION_STOPUSECELLPHONE);
			SetPlayerSpecialAction(sender, SPECIAL_ACTION_STOPUSECELLPHONE);

			format(str3, sizeof(str3), "Você finalizou a chamada com %s.", GetPlayerNameEx(sender));
			SendClientMessage(gc, GREEN, str3);

			format(str3, sizeof(str3), "%s desligou o telefone.", GetPlayerNameEx(gc));
			SendClientMessage(sender, GRAY, str3);
		}
		if(sender == playerid)
		{
			InCall[gc] = 0;
			GetCall[gc] = 0;

			InCall[sender] = 0;
			GetCall[sender] = 0;

			SetPlayerSpecialAction(gc, SPECIAL_ACTION_STOPUSECELLPHONE);
			SetPlayerSpecialAction(sender, SPECIAL_ACTION_STOPUSECELLPHONE);

			format(str3, sizeof(str3), "Você finalizou a chamada com %s.", GetPlayerNameEx(gc));
			SendClientMessage(sender, GREEN, str3);

			format(str3, sizeof(str3), "%s desligou o telefone.", GetPlayerNameEx(sender));
			SendClientMessage(gc, GRAY, str3);
		}
		return 1;
	}

	if(strcmp(cmd, "/vantagensvip", true) == 0)
	{
		new strcmd[1000], strurl[128];
		format(strurl, sizeof(strurl), "\t {FFFFFF}-=-=-=-=-=-| {6666ff}Vip {FFFFFF}|-=-=-=-=-=- \n", weburl);
		strcat(strcmd, "\t{FF0000}x{FFFFFF} VANTAGENS VIP: {FF0000}x\n\n", sizeof(strcmd));
		strcat(strcmd, "\nLimite de Carros {FF0000}6 {4F94CD}({FFFFFF}Pra players 5{4F94CD})\n", sizeof(strcmd));
		strcat(strcmd, "{4F94CD}Tag {FFFF00}[PREMIUM] {4F94CD}no chat global\nVeiculos Particulares Vem com alarme explosivo", sizeof(strcmd));
		strcat(strcmd, "\nSalário {FFFF00}VIP Premium\n{4F94CD} em CASH ! {FFFF00}VIP's\n\n{FFFFFF}\n veja Alguns  comandos:\n\n", sizeof(strcmd));
		strcat(strcmd, "{4F94CD} /kitvip /tunar /comemorar /armas /imortal  /n", sizeof(strcmd));
		strcat(strcmd, "{4F94CD} /cvip /cv /godcar /jetpack /hydra /mudarcor/n", sizeof(strcmd));
		strcat(string, "{EE5C42} Teleportes Vip Básicos! /n", sizeof(string));
		ShowPlayerDialog(playerid, Creditos, DIALOG_STYLE_MSGBOX, "Vantagens Vip", strcmd, "OK", "");
		return 1;

	}

	if(strcmp(cmd, "/vantagenspremium", true) == 0)
	{
		new strcmd[1000], strurl[128];
		format(strurl, sizeof(strurl), "\t {FFFFFF}-=-=-=-=-=-| {6666ff}Vip PREMIUM {FFFFFF}|-=-=-=-=-=- \n", weburl);
		strcat(strcmd, "\t{FF0000}x{FFFFFF} VANTAGENS VIP PREMIUM: {FF0000}x\n\n", sizeof(strcmd));
		strcat(strcmd, "\nLimite de Carros {FF0000}8 {4F94CD}({FFFFFF}Pra players 5{4F94CD})\n", sizeof(strcmd));
		strcat(strcmd, "{4F94CD}Tag {FFFF00}[PREMIUM] {4F94CD}no chat global\nVeiculos Particulares Vem com alarme explosivo", sizeof(strcmd));
		strcat(strcmd, "\nSalário {FFFF00}VIP Premium\n{4F94CD} em CASH ! {FFFF00}VIP's\n\n{FFFFFF}\n veja Alguns  comandos:\n\n", sizeof(strcmd));
		strcat(strcmd, "{4F94CD} /kitvip /tunar /comemorar /armas /imortal  /n", sizeof(strcmd));
		strcat(strcmd, "{4F94CD} /cvip /cv /godcar /jetpack /hydra /mudarcor/n", sizeof(strcmd));
		strcat(string, "{EE5C42} Teleportes Premium Extra! /n", sizeof(string));
		ShowPlayerDialog(playerid, Creditos, DIALOG_STYLE_MSGBOX, "Vantagens PREMIUM", strcmd, "OK", "");
		return 1;

	}

	if(strcmp(cmd, "/vantagensprestige", true) == 0)
	{
		new strcmd[1000], strurl[128];
		format(strurl, sizeof(strurl), "\t {FFFFFF}-=-=-=-=-=-| {6666ff}Vip $Prestige$ {FFFFFF}|-=-=-=-=-=- \n", weburl);
		strcat(strcmd, "\t{FF0000}x{FFFFFF} VANTAGENS VIP $Prestige$: {FF0000}x\n\n", sizeof(strcmd));
		strcat(strcmd, "\nLimite de Carros {FF0000}10 {4F94CD}({FFFFFF}Pra players 5{4F94CD})\n", sizeof(strcmd));
		strcat(strcmd, "{4F94CD}Tag {FFFF00}[$Prestige$] {4F94CD}no chat global\nVeiculos Particulares Vem com alarme explosivo", sizeof(strcmd));
		strcat(strcmd, "\nSalário {FFFF00}VIP Prestige\n{4F94CD} em CASH ! {FFFF00}VIP's\n\n{FFFFFF}\n veja Alguns  comandos:\n\n", sizeof(strcmd));
		strcat(strcmd, "{4F94CD} /kitvipm /tunar /comemorar /lc /m /Reparar /bazuca /armas /imortal  /n", sizeof(strcmd));
		strcat(strcmd, "{4F94CD} /cvip /cv /minigunm/godcar /jetpack /hydra /hunter /rhino /mudarcor /n", sizeof(strcmd));
		strcat(string, "{EE5C42} Teleportes $Prestige$ Exclusivos! /n", sizeof(string));
		ShowPlayerDialog(playerid, Creditos, DIALOG_STYLE_MSGBOX, "Vantagens $Prestige$", strcmd, "OK", "");
		return 1;

	}
	if(!strcmp(cmd, "/Ajuda", true))
	{
		format(STRX, sizeof(STRX), "Ajuda Level\nAjuda Caixa\nAjuda Cash\nAjuda Casa\nAjuda Empresa\nAjuda Radar\nAjuda Clan\nAjuda Portao");
		ShowPlayerDialog(playerid, ajudalist, DIALOG_STYLE_LIST, "Algumas Duvidas ", STRX, "OK", "Cancelar");
		return 1;
	}

	if(strcmp(cmd, "/vippremium", true) == 0)
	{
		new strcmd[1000], strurl[128];
		format(strurl, sizeof(strurl), "\t {FFFFFF}-=-=-=-=-=-| {6666ff}Vip PREMIUM {FFFFFF}|-=-=-=-=-=- \n", weburl);
		strcat(strcmd, "\t{FF0000}x{FFFFFF} SEJA UM VIP PREMIUM: {FF0000}x\n\n", sizeof(strcmd));
		strcat(strcmd, "\n{ff0000}SITE: {FFFFFF}Em Construção\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}Comprando vip Premium alem de ter muitas Vantagens !\n", sizeof(strcmd));
		strcat(strcmd, "\n{FFFFFF}Veja as Vantagens de ser PREMIUM {FF0000}/Vantagenspremium\n{FFFFFF}\n", sizeof(strcmd));
		strcat(strcmd, "{ff0000} VIAS DE PAGAMENTO ABAIXO /n", sizeof(strcmd));
		strcat(strcmd, "{4F94CD} BOLETO , CARTÃO ETC..", sizeof(strcmd));
		strcat(string, "{FFFFFF}LINK DO {6666ff}SITE {FFFFFF}DE {6666ff}AZUL {FFFFFF}NA JANELA DO SEU SAMP !", sizeof(string));
		ShowPlayerDialog(playerid, Creditos, DIALOG_STYLE_MSGBOX, "Vip PREMIUM", strcmd, "OK", "");
		return 1;

	}

	if(strcmp(cmd, "/veiculosa", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos A ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " AT-400: 577 || Andromada: 592");
		SendClientMessage(playerid, COLOR_WHITE, " Admiral: 445 || Alpha: 602 || Ambulan: 416");
		SendClientMessage(playerid, COLOR_WHITE, " Artict1: 435 || Artict2: 450");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos A ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosb", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos B ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " BF-400: 581 || Beagle: 511 || Baggage: 485 || Bandito: 568");
		SendClientMessage(playerid, COLOR_WHITE, " Banshee: 429 || Barracks: 433 || Benson: 499 || Bfinject: 424");
		SendClientMessage(playerid, COLOR_WHITE, " Blade: 536 || Blistac: 496 || Bloodra: 504 || Bobcat: 422");
		SendClientMessage(playerid, COLOR_WHITE, " Boxburg: 609 || Boxville: 498 || Bravura: 401 || Broadway: 575");
		SendClientMessage(playerid, COLOR_WHITE, " Buccanee: 518 || Buffalo: 402 || Bullet: 541 || Bagboxb: 607");
		SendClientMessage(playerid, COLOR_WHITE, " Burrito: 482 || Bus: 431 || Bike: 509 || BMX: 481 || Bagboxa: 606");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos B ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosc", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos C ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " CopBike: 523 || Cropdust: 512 || CoastGuard: 472");
		SendClientMessage(playerid, COLOR_WHITE, " Caddy: 457 || Cadrona: 527 || Camper: 483 || Cement: 524");
		SendClientMessage(playerid, COLOR_WHITE, " Cheetah: 415 || Clover: 542 || Club: 589 || Coach: 437");
		SendClientMessage(playerid, COLOR_WHITE, " Combine: 532 || Comet: 480 || CopCarLS: 596 || CopCar: 599");
		SendClientMessage(playerid, COLOR_WHITE, " CopCarSF: 597 || CopCarLV: 598 || Cft30: 578 || Cozer: 486");
		SendClientMessage(playerid, COLOR_WHITE, " Cargobob: 548 || Cabbie: 438");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos C ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosd", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos D ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Dodo: 593 || Dinghy: 473 || Dumper: 406 || Duneride: 573");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos D ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculose", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos E ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Elegant: 507 || Elegy: 562 || Emperor: 585");
		SendClientMessage(playerid, COLOR_WHITE, " Esperant: 419 || Euros: 587 || Enforcer: 427");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos E ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosf", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos F ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Faggio: 462 || FCR-900: 521 || Freeway: 463 || Fbiranch: 490");
		SendClientMessage(playerid, COLOR_WHITE, " Fbitruck: 528 || Feltze: 533 || Firela: 544 || Firetruck: 407");
		SendClientMessage(playerid, COLOR_WHITE, " Flash: 565 || Flatbed: 455 || Forklift: 530 || Fortune: 526");
		SendClientMessage(playerid, COLOR_WHITE, " Freight: 537 || Farmtr1: 610 ");
		SendClientMessage(playerid, verdel,"~~~~~~~~~~~~~~~~~~~~~~~~ Veículos F ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosg", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos G ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Glendale: 466 || Glenshit: 604 || Greenwoo: 492 ");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos G ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosh", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos H ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Hydra: 520 || Hermes: 474 || Hotdog: 588 || Hunter:425 ");
		SendClientMessage(playerid, COLOR_WHITE, " Hotrina: 502 || Hotrinb: 503 || Hotring: 594 ");
		SendClientMessage(playerid, COLOR_WHITE, " Hustler: 545 || Huntley: 579 || Hotknife: 434");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos H ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosi", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos I ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Infernus: 411 || Intruder: 546");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos I ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosj", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos J ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Jester: 559 || Journey: 508 ");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos J ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosk", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos K ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Kart: 571");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos K ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosl", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos L ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Launch: 595 || Landstal: 400");
		SendClientMessage(playerid, COLOR_WHITE, " Leviathn: 417 || Linerun: 403");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos L ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosm", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos M ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Marquis: 484 || Majestic: 517 || Manana: 410 ");
		SendClientMessage(playerid, COLOR_WHITE, " Merit: 551 || Mesa: 500 || Moonbeam: 418 || Mowerr: 572");
		SendClientMessage(playerid, COLOR_WHITE, " Mrwhoop: 423 || Mule: 414 || Monster: 444 || MonsterA: 556");
		SendClientMessage(playerid, COLOR_WHITE, " MonsterB: 557 || Mountain Bike: 510 || Maverick: 487");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos M ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosn", true) == 0)
	{
		SendClientMessage(playerid, verdel,"~~~~~~~~~~~~~~~~~~~~~~~~ Veículos N ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE," NRG-500: 522 || Nevada: 553 || Nebula: 516 || Newsvan: 582");
		SendClientMessage(playerid, verdel,"~~~~~~~~~~~~~~~~~~~~~~~~ Veículos N ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculoso", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos O ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Oceanic: 467");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos O ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosp", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos P ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " PCJ-600: 461 || Pizzaboy: 448 || Predator: 430");
		SendClientMessage(playerid, COLOR_WHITE, " Packer: 443 || Patriot: 470 || Peren: 404 || Petro: 514");
		SendClientMessage(playerid, COLOR_WHITE, " Phoenix: 603 || Picador: 600 || Pony: 413 || Premier: 426");
		SendClientMessage(playerid, COLOR_WHITE, " Previon: 436 || Primo: 547 || Polmav: 497 || Petrotr: 584");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos P ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosq", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos Q ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Quad: 471");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos Q ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosr", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos R ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Rustler: 476 || RC Barron: 464 || Reefer: 453");
		SendClientMessage(playerid, COLOR_WHITE, " Rancher: 489 || Rcbandit: 441 || Rccam: 594 ");
		SendClientMessage(playerid, COLOR_WHITE, " Rctiger: 564 || Rdtrain: 515 || Regina: 479 ");
		SendClientMessage(playerid, COLOR_WHITE, " Remingtn: 534 || Rhino: 432 || Rnchlure: 505 || Rcraider: 465");
		SendClientMessage(playerid, COLOR_WHITE, " Romero: 442 || Rumpo: 440 || Raindanc: 563 || Rcgoblin: 501");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos R ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculoss", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos S ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Sanchez: 468 || Stuntplane: 513 || Skimmer: 460 || Sparrow: 469");
		SendClientMessage(playerid, COLOR_WHITE, " Shamal: 519 || Speeder: 452 || Squalo: 446 || Sabre: 475");
		SendClientMessage(playerid, COLOR_WHITE, " Sadler: 543 || Sadlshit: 605 || Sandking: 495 || Savanna: 567");
		SendClientMessage(playerid, COLOR_WHITE, " Securica: 428 || Sentinel: 405 || Slamvan: 535 || Solair: 458");
		SendClientMessage(playerid, COLOR_WHITE, " Stafford: 580 || Stallion: 439 || Stratum: 561 || Stretch: 409 ");
		SendClientMessage(playerid, COLOR_WHITE, " Sultan: 560 || Sunrise: 550 || Supergt: 506 || Swatvan: 601 ");
		SendClientMessage(playerid, COLOR_WHITE, " Sweeper: 574 || Streak: 538 || Streakc: 570 || Seasparr: 447");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos S ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculost", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos T ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Tropic: 454 || Tahoma: 566 || Tampa: 499 || Taxi: 420");
		SendClientMessage(playerid, COLOR_WHITE, " Topfun: 459 || Tornado: 576 || Towtruck: 525");
		SendClientMessage(playerid, COLOR_WHITE, " Trash: 408 || Tug: 583 || Turismo: 451 || Tram: 449 ");
		SendClientMessage(playerid, COLOR_WHITE, " Tugstair: 608 ");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos T ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosu", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos U ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Uranus: 558 || Utility: 522 || Utiltr1: 611");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos U ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosv", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos V ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Vortex: 539 || Vincent: 540 || Virgo: 491");
		SendClientMessage(playerid, COLOR_WHITE, " Vcnmav: 488 || Voodoo: 412");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos V ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosx", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos X ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Não existe veículos com as inicias da letra 'X'");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos X ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

	if(strcmp(cmd, "/veiculosz", true) == 0)
	{
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos Z ~~~~~~~~~~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, " Zr350: 477");
		SendClientMessage(playerid, verdel, "~~~~~~~~~~~~~~~~~~~~~~~~ Veículos Z ~~~~~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}

//==============================================================================

	if(strcmp(cmd, "/regras", true) == 0)
	{
		new strcmd[1000];

		strcat(strcmd, "{33AAFF}1ª Não insulte os administradores! eles estão aqui para lhe ajudar!\n", sizeof(strcmd));
		strcat(strcmd, "{FFA500}2ª Não use nenhum tipo de hacker/cheat pois é proibido! Viu hacker? /relatorio\n", sizeof(strcmd));
		strcat(strcmd, "{33AAFF}3ª Não abuse de comandos existentes nas profissões.\n", sizeof(strcmd));
		strcat(strcmd, "{FFA500}4ª Caso descumpra uma regra vital poderá ser banido.\n", sizeof(strcmd));
		strcat(strcmd, "{33AAFF}5ª Seja honesto e jogue limpo conosco.\n", sizeof(strcmd));
		strcat(strcmd, "{FFA500}6ª Os gerentes escolhem os administradores, por tanto não peça!\n", sizeof(strcmd));
		strcat(strcmd, "{33AAFF}7ª Não peça nenhum tipo de itens como: Level, Grana, VIP, Admin, Estudo e Cash.\n", sizeof(strcmd));
		strcat(strcmd, "{FFA500}8ª Lembre-se o servidor é um RPG, não mata-mata\n", sizeof(strcmd));
		strcat(strcmd, "{33AAFF}9ª Faça DM apenas em áreas específicas tais como: /favela e /maracana\n", sizeof(strcmd));
		strcat(strcmd, "{FFA500}10ª Caso precise de ajuda, use: /relatorio\n", sizeof(strcmd));

		ShowPlayerDialog(playerid, Regras, DIALOG_STYLE_MSGBOX, "Regras do BSL", strcmd, "Aceitar", "Recusar");
		return 1;
	}
	
	if(strcmp("/listabsl", cmd, true) == 0)
    {
		new strcmd[1500];

		strcat(strcmd, "{F3FA23} Atualização Brasil Sem Limites {33E823} (Online) {3241ED}Data: 17/06/2018\n", sizeof(strcmd));
        strcat(strcmd, "{FFFFFF}\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF} (Adicionado) Cor pra mudar o nick /cores. {F3FA23}Feito.\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF} (Novo) Nova texdraw. {09B31D}Feito.\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF} (Mudança) Tag VIP agora na frente. {F3FA23}Feito.\n", sizeof(strcmd));
        strcat(strcmd, "{FFFFFF} (Novo) Sistema de pegar presentes. {09B31D}Feito.\n", sizeof(strcmd));
        strcat(strcmd, "{FFFFFF} (Novo) Sistema de DJ. {F3FA23}Feito.\n", sizeof(strcmd));
        strcat(strcmd, "{FFFFFF} . {09B31D}Feito. \n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF} . {F3FA23}Feito.\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF} (Manuntenção) Foi iniciada as 21:59 e teve seu término ás 22:15. (17/06/2018) para (30/01/2018).\n", sizeof(strcmd));
        strcat(strcmd, "{FFFFFF} (!) Devido a problemas de dar coisas proibidas aos players , godcar e godmod ficará indisponivel no momento.\n", sizeof(strcmd));
        strcat(strcmd, "{FFFFFF} (!): Caso esteja levando muito crash verifique seu gta para afins no jogo. {09B31D}Lembrete.\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF} Todos os comandos do servidor foram revisados. {F3FA23}[Feito].\n", sizeof(strcmd));
        strcat(strcmd, "{FA20C4} [Aviso]: Nesta atualização tem objetivo de trazer coisas novas/novos sistemas.!\n", sizeof(strcmd));
        strcat(strcmd, "{FFFFFF}\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF} Data da proxíma atualização sem previsão.\n", sizeof(strcmd));
        strcat(strcmd, "{FFFFFF}\n", sizeof(strcmd));
        strcat(strcmd, "{FFFFFF} Em Breve mais novidades!\n", sizeof(strcmd));
        strcat(strcmd, "{FFFFFF}\n", sizeof(strcmd));
		strcat(strcmd, "{FA20C4} Para mais informações procure um administrador.\n", sizeof(strcmd));

		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{09B31D}Lista Brasil Sem Limites RPG", strcmd, "OK", "");
		return 1;
	}
	
	if(strcmp(cmd, "!kill", true) == 0)
	{
		Kick(playerid);
		return 1;
	}
	
	if(strcmp(cmd, "/tutorial", true) == 0)
	{
		DynTutorialStart(playerid);
		return 1;
	}
	
	if(strcmp(cmd, "/data", true) == 0)
	{
		new year, month, day,
		hour, minute, second;

		getdate(year, month, day);
		gettime(hour, minute, second);

		format(string, sizeof(string), "%d/%d/%d~n~%d:%d:%d", day, month, year, hour, minute, second);
		GameTextForPlayer(playerid, string, 5000, 1);
		return 1;
	}
	
	if(strcmp(cmd, "/ajudalevel", true) == 0)
	{
		SendClientMessage(playerid, 0xFF8000AA, "======================== Ajuda Level ========================");
		SendClientMessage(playerid, COLOR_WHITE, "» Para você ganhar level(s) precisa juntar 7 EXP's.");
		SendClientMessage(playerid, COLOR_WHITE, "» A cada 3 minutos jogando você ganhará 1 EXP's.");
		SendClientMessage(playerid, COLOR_WHITE, "» Juntando 7 EXP's você ganhará 2 level(s).");
		SendClientMessage(playerid, COLOR_WHITE, "» Você precisa ir estudar para ganhar 10 de estudo por aula.");
		SendClientMessage(playerid, COLOR_WHITE, "» Veja seu level em /verlevel");
		SendClientMessage(playerid, 0xFF8000AA, "======================== Ajuda Level ========================");
		return 1;
	}

	if(strcmp("/comandos", cmd, true) == 0)
	{
		new strcmd[900];

		strcat(strcmd, "{FF0000}-{FFFFFF} /BSL - /data - /ausentes - /afk - /animes - /gps - /radios -\n", sizeof(strcmd));
		strcat(strcmd, "{FF0000}-{FFFFFF} /regras - /creditos - /admins - /vips \n", sizeof(strcmd));
		strcat(strcmd, "{FF0000}-{FFFFFF} /batercartao -/ap - /fp - /meucarro - /minhacasa - /minhaempresa\n", sizeof(strcmd));
		strcat(strcmd, "{FF0000}-{FFFFFF} /ajuda - /ad - /fd - /abastecer - /rg - /status - \n", sizeof(strcmd));
		strcat(strcmd, "{FF0000}-{FFFFFF} /procurados - /infratores - /p - /verlevel - /tutorial - /horarios\n", sizeof(strcmd));
		strcat(strcmd, "{FF0000}-{FFFFFF} /trocarsenha - /mudarsexo - /transferir - /desbugarme\n", sizeof(strcmd));
		strcat(strcmd, "{FF0000}-{FFFFFF} /saldocell - /profissao - /trabalhar - /cortarmadeira - /pegardrogas - cores\n", sizeof(strcmd));
		strcat(strcmd, "{FF0000}-{FFFFFF} /casasdeletadas - /portoesdeletados - /irevento - /sairevento - /musicas\n", sizeof(strcmd));
		strcat(strcmd, "{FF0000}-{FFFFFF} /bandana - /gorro - /chapeu - /dominar\n", sizeof(strcmd));
		
		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, ".:: - Comandos Úteis - ::.", strcmd, "OK", "");
		return 1;
	}

    if(strcmp("/sairevento", cmd, true) == 0)
	{
	    if(noevento[playerid] == 1)
        {
		     if(Proibido == 0 || Proibido == 1)
		     {
			     PlayersNoEvento--;
			     noevento[playerid] = 0;
				 DesbugPlayer(playerid);
			     format(string, sizeof(string), "{FF0000}%s {FFFFFF}saiu do evento{FF0000}.", GetPlayerNameEx(playerid));
			     SendClientMessageToAll(tcadm, string);
 			//	 DisableRemoteVehicleCollisions(playerid, 0);
		       	 return 1;
		     }
		}
		else
		{
		    SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não está em um evento !");
		    return 1;
		}
	}

//==============================================================================

	if(strcmp("/youtube", cmd, true) == 0)
	{
		new strcmd[1000];

        strcat(strcmd, "{FF0000}Canal no Youtube: {FFFFFF}https://youtube.com/@BrasilSemLimites_\n");

		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Canal no Youtube", strcmd, "OK", "");
		return 1;
	}

//==============================================================================

	if(strcmp("/contato", cmd, true) == 0)
	{
		new strcmd[1000];

        strcat(strcmd, "{FF0000}Site Oficial: {FFFFFF}www.BVLrpgsamp.x10.bz\n");
        strcat(strcmd, "{FF0000}Página Oficial: {FFFFFF}www.facebook.com/BVLsamprpg\n");
        strcat(strcmd, "{FF0000}Samu Bellinazzi: {FFFFFF}(11)9.9004-3783\n");
        strcat(strcmd, "{FF0000}Victor Ramos: {FFFFFF}(73)9.8168-4358\n");
        strcat(strcmd, "{FF0000}Lucas Pauletti: {FFFFFF}(45)9.8428-9089\n");
        strcat(strcmd, "{FF0000}Bruno Henrique: {FFFFFF}(31)9.7172-8833\n");

		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Contatos do Servidor", strcmd, "OK", "");
		return 1;
	}


//
 	if(strcmp("/comprase", cmd, true) == 0)
	{
		new strcmd[1000];

        strcat(strcmd, "{9E3EFF}Compras ESPECIAIS\n");
        strcat(strcmd, "{00FFFF}* VEICULOS PROIBIDOS *\n");
        strcat(strcmd, "{FF0000}1 veículo proibido: {FFFFFF}R$10,00\n");
        strcat(strcmd, "{FF0000}2 veículos proibido: {FFFFFF}R$15,00\n");
        strcat(strcmd, "{FF0000}3 veículos proibido: {FFFFFF}R$25,00\n");
        strcat(strcmd, "{00FFFF}* PACOTES ESPECIAIS *\n");
        strcat(strcmd, "{FF0000}1 veículo proibido + 30 Dias VIP: {FFFFFF}R$15,00\n");
        strcat(strcmd, "{FF0000}2 Veículos proibido + 30 Dias TOPPER: {FFFFFF}R$27,00\n");
        strcat(strcmd, "{FF0000}3 veículos proibidos + 30 Dias MASTER: {FFFFFF}R$55,00\n");
        strcat(strcmd, "{9E3EFF}Para comprar digite: {FFFFFF}/conta");

		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Compras Especiais", strcmd, "OK", "");
		return 1;
	}
//
 	if(strcmp("/comprasc", cmd, true) == 0)
	{
		new strcmd[1000];

        strcat(strcmd, "{9E3EFF}Compras CASH\n");
		strcat(strcmd, "{FF0000}2.000 Cash's: {FFFFFF}R$10,00\n");
		strcat(strcmd, "{FF0000}4.000 Cash's: {FFFFFF}R$17,00\n");
        strcat(strcmd, "{FF0000}7.000 Cash's: {FFFFFF}R$27,00\n");
        strcat(strcmd, "{9E3EFF}Para comprar digite: {FFFFFF}/conta");

		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Compras Cash", strcmd, "OK", "");
		return 1;
	}
//
 	if(strcmp("/comprasm", cmd, true) == 0)
	{
		new strcmd[1000];

        strcat(strcmd, "{9E3EFF}Compras MASTER\n");
		strcat(strcmd, "{FF0000}10 Dias: {FFFFFF}R$15,00\n");
		strcat(strcmd, "{FF0000}15 Dias: {FFFFFF}R$20,00\n");
        strcat(strcmd, "{FF0000}30 Dias: {FFFFFF}R$40,00\n");
        strcat(strcmd, "{9E3EFF}Para comprar digite: {FFFFFF}/conta");

		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Compras Master", strcmd, "OK", "");
		return 1;
	}
//
 	if(strcmp("/comprast", cmd, true) == 0)
	{
		new strcmd[1000];

        strcat(strcmd, "{9E3EFF}Compras TOPPER\n");
		strcat(strcmd, "{FF0000}15 Dias: {FFFFFF}R$10,00\n");
		strcat(strcmd, "{FF0000}30 Dias: {FFFFFF}R$18,00\n");
        strcat(strcmd, "{FF0000}40 Dias: {FFFFFF}R$27,00\n");
        strcat(strcmd, "{9E3EFF}Para comprar digite: {FFFFFF}/conta");

		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Compras Topper", strcmd, "OK", "");
		return 1;
	}
//
 	if(strcmp("/comprasv", cmd, true) == 0)
	{
		new strcmd[1000];

        strcat(strcmd, "{9E3EFF}Compras VIP\n");
		strcat(strcmd, "{FF0000}30 Dias: {FFFFFF}R$10,00\n");
		strcat(strcmd, "{FF0000}60 Dias: {FFFFFF}R$17,00\n");
        strcat(strcmd, "{FF0000}90 Dias: {FFFFFF}R$25,00\n");
        strcat(strcmd, "{9E3EFF}Para comprar digite: {FFFFFF}/conta");

		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Compras VIP", strcmd, "OK", "");
		return 1;
	}

//
    if(strcmp("/compras", cmd, true) == 0)
	{
		new strcmd[1000];

        strcat(strcmd, "{9E3EFF}Compras BVL\n");
        strcat(strcmd, "{FF0000}/comprasv\n");
        strcat(strcmd, "{FFFFFF}/comprast\n");
		strcat(strcmd, "{FFFFFF}/comprasm\n");
        strcat(strcmd, "{FFFFFF}/comprasc\n");
        strcat(strcmd, "{FF0000}/comprase \n");

		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "COMPRAS BVL", strcmd, "OK", "");
		return 1;
	}

    if(strcmp("/conta", cmd, true) == 0)
	{
		new strcmd[1000];

		strcat(strcmd, "{FFFFFF}» Siga os passos abaixo.\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» 1° passo: {FF0000}Vá em alguma agência lotérica ou banco.\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» 2° passo: {FF0000}Fale para a(o) atendente que você quer depositar.\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» 3° passo: {FF0000}Diga a conta, agencia e variação para o atendente.\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» Seguindo todos esses 4 passos ja está pronto(a)\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» Número da conta: 31.174-X\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» Agencia: 3583-1\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» Variação: 51\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» Banco do Brasil\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» Nome: {FF0000}Samuel Furtado\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» Pago! Mande um comprovante para a page.\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» 4° passo: {FF0000}Mande-nos a foto legivel do comprovante do pagamento feito.\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» 5° passo: {FF0000}Em menos de 24 horas confirmaremos, e setaremos-lhe o vip.\n", sizeof(strcmd));

		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, ".:: -~~> Conta para Compra <~~- ::.", strcmd, "OK", "");
		return 1;
	}

	if(strcmp("/Creditos", cmd, true) == 0)
	{
		new strcmd[1000];

        strcat(strcmd, "{33FF33}» Dono/Fundador {FFFFFF} {3399FF}Ruighost\n", sizeof(strcmd));
        strcat(strcmd, "{33FF33}» Sub-Dono {FFFFFF} {3399FF}Não Defenido\n", sizeof(strcmd));
        strcat(strcmd, "{33FF33}» Scripter {FFFFFF} {3399FF}Não Defenido\n", sizeof(strcmd));
        strcat(strcmd, "{33FF33}» Mapper {FFFFFF} {3399FF}Não Defenido\n", sizeof(strcmd));
        strcat(strcmd, "{33FF33}» Discord {FFFFFF} {3399FF}https://discord.gg/CMFBNJ8UgD\n", sizeof(strcmd));
        strcat(strcmd, "{33FF33}» Site {FFFFFF} {3399FF}Em construção\n", sizeof(strcmd));
        strcat(strcmd, "{33FF33}» YouTube {FFFFFF} {3399FF}https://youtube.com/@BrasilSemLimites_\n", sizeof(strcmd));
        strcat(strcmd, "{33FF33}» TikTok {FFFFFF} {3399FF}Em construção\n", sizeof(strcmd));

		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Créditos do Servidor", strcmd, "OK", "");
		return 1;
	}

    if(strcmp("/BSL", cmd, true) == 0)
	{
		new strcmd[1000];

        strcat(strcmd, "{FF0000}» (AVISO): Comandos Especiais para VIPS,VIPTS,VIPMTS\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» /euri\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» /nemri\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» /zoa\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» /ava\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» /Noza\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» /pai\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» /caim\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» /burgues\n", sizeof(strcmd));
		strcat(strcmd, "{FFFFFF}» /irineu\n", sizeof(strcmd));

        ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, ".:: - WHAT ? - ::.", strcmd, "OK", "");
		return 1;
	}

	if(strcmp(cmd, "/nomecorridas", true) == 0)
	{
		SendClientMessage(playerid, Azul, "{FFFFFF}/Buceta race /Cirtuito LV /Corrida em LS /Corrida Maluca");
		SendClientMessage(playerid, Azul, "{FFFFFF}/DP a DP /Drift /Esgoto race /Faggio race /Formula Truck");
		SendClientMessage(playerid, Azul, "{FFFFFF}/Infernal race /Moto Cross /Racha de Bike /Moto GP /Turismo Race");
		SendClientMessage(playerid, Azul, "{FFFFFF}/racha de avioes /Pica Race /Pauletti race /Otacu race /Aerols");
		SendClientMessage(playerid, Azul, "{00FF00} Os Nomes das corridas terão que estar igual ao da lista");
		return 1;
	}

    if(strcmp(cmd, "/irineu", true) == 0)   //
	{
		if(IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
            format(string, sizeof(string), "{FF0000}%s {FFFF00}Irineu. Você Não Sabe, Nem eu! haushuaus", GetPlayerNameEx(playerid));
			SendClientMessageToAll(roxo, string);
		}
		else
		{
		    SendClientMessage(playerid, 0xFFFF00AA, "Você não é um player VIP!");
		}
		return 1;
	}


    if(strcmp(cmd, "/burgues", true) == 0)   //
	{
		if(IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
            format(string, sizeof(string), "{666666}%s {FFFFFF} Diz:{00FF00} Bando de Burguês safado!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(roxo, string);
		}
		else
		{
		    SendClientMessage(playerid, 0xFFFF00AA, "Você não é um player VIP!");
		}
		return 1;
	}

    if(strcmp(cmd, "/caim", true) == 0)  //
	{
		if(IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
            format(string, sizeof(string), "{66FFFF}Auto Cbug e AimBot 2017 PTBR Crackeado kjkkj!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(roxo, string);
		}
		else
		{
		    SendClientMessage(playerid, 0xFFFF00AA, "Você não é um player VIP!");
		}
		return 1;
	}

    if(strcmp(cmd, "/euri", true) == 0)  //
	{
		if(IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
            format(string, sizeof(string), "{666666}%s {00FF00}Riu pra Karai! KKKKKK{00FF00}", GetPlayerNameEx(playerid));
			SendClientMessageToAll(roxo, string);
		}
		else
		{
		    SendClientMessage(playerid, 0xFFFF00AA, "Você não é um player VIP!");
		}
		return 1;
	}

	if(strcmp(cmd, "/nemri", true) == 0)   //
	{
		if(IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
            format(string, sizeof(string), "{666666}%s {00FF00}Nem riu    ¬¬", GetPlayerNameEx(playerid));
			SendClientMessageToAll(roxo, string);
		}
		else
		{
		    SendClientMessage(playerid, 0xFFFF00AA, "Você não é um player VIP!");
		}
		return 1;
	}

	if(strcmp(cmd, "/zoa", true) == 0)   //
	{
		if(IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
            format(string, sizeof(string), "{666666}%s {00FF00}zoa, heuheuhueh", GetPlayerNameEx(playerid));
			SendClientMessageToAll(roxo, string);
		}
		else
		{
		    SendClientMessage(playerid, 0xFFFF00AA, "Você não é um player VIP!");
		}
		return 1;
	}

	if(strcmp(cmd, "/ava", true) == 0)   //
	{
	    if(IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
            format(string, sizeof(string), "{666666}%s {00FF00}ava? Não me diga!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(roxo, string);
		}
		else
		{
		    SendClientMessage(playerid, 0xFFFF00AA, "Você não é um player VIP!");
		}
		return 1;
	}

	if(strcmp(cmd, "/noza", true) == 0)   //
	{
		if(IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
            format(string, sizeof(string), "{FF0000}%s {FFFF00}Noza jureg faz o urro '-'", GetPlayerNameEx(playerid));
			SendClientMessageToAll(roxo, string);
		}
		else
		{
		    SendClientMessage(playerid, 0xFFFF00AA, "Você não é um player VIP!");
		}
		return 1;
	}

	if(strcmp(cmd, "/pai", true) == 0)  //
	{
		new plid;

		if(sscanf(cmdtext, "s[12]u", cmd, plid))
		{
			SendClientMessage(playerid, Vermelho, "/pai [O ID do seu pai]");
			return 1;
		}
     	if(IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não é vip!");
			return 1 ;
		}
		if(!IsPlayerConnected(plid))
		{
			SendClientMessage(playerid, Vermelho, "O seu pai não está conectado");
			return 1 ;
		}
		if(plid == playerid)
		{
			SendClientMessage(playerid, Vermelho, "Você não pode ser pai de si mesmo.");
			return 1 ;
		}

		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(plid));
		if(DOF2_GetInt(file, "Sexo") == Masculino)
		{
			format(string, sizeof(string), "Meu pai %s é foda e eu %s sou fodinha.", GetPlayerNameEx(plid), GetPlayerNameEx(playerid));
			SendClientMessageToAll(Amarelo, string);

			format(string, sizeof(string), "Meu pai %s pega as coroa e eu %s pego as novinha.", GetPlayerNameEx(plid), GetPlayerNameEx(playerid));
			SendClientMessageToAll(Amarelo, string);
		}

		return 1;
	}

//==============================================================================

	if(strcmp(cmd, "/profissao", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Desempregado)
		{
			SendClientMessage(playerid, 0x6495EDAA, "Desempregado");
		}
    	if(DOF2_GetInt(file, "Profissao") == MotoristaP)
		{
			SendClientMessage(playerid, C_MotoristaP, "~~~~~~~~~~~~~~ Motorista Particular ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, 0xFFFFFFAA, "Arrume um patrão e cobre pelo seu serviço.");
			SendClientMessage(playerid, 0xFFFFFFAA, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_MotoristaP, "~~~~~~~~~~~~~~ Motorista Particular ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Guarda)
		{
			SendClientMessage(playerid, C_Guarda, "~~~~~~~~~~~~~~ Guarda ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/pegararmas [id]");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Guarda, "~~~~~~~~~~~~~~ Guarda ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Policial_R)
		{
			strcat(string, "{87CEFF}Sua Profissão é {FFFFFF}Policial Rodoviário{87CEFF}.\nAlguns Comandos da Profissão abaixo:\n{FFFFFF}/pegararmas [id]\n/multar [id] [quantia]\n/patrulha\t\t", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Policial_M)
		{
			strcat(string, "{87CEFF}Sua Profissão é {FFFFFF}Policial Militar{87CEFF}.\nAlguns Comandos da Profissão abaixo:\n{FFFFFF}/pegararmas [id]\n/algemar [id]\n/desalgemar [id]\n/cp - Chat Profissão\n/paradoai [id]\n/patrulha\t\t", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Policial_C)
		{
			strcat(string, "{87CEFF}Sua Profissão é {FFFFFF}Policial Civil{87CEFF}.\nAlguns Comandos da Profissão abaixo:\n{FFFFFF}/multar [id]\n/pegararmas [id]\n/algemar [id]\n/desalgemar [id]\n/cp - Chat Profissão\n/paradoai [id]\n/patrulha\t\t", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Policial_F)
		{
			strcat(string, "{87CEFF}Sua Profissão é {FFFFFF}Policial Federal{87CEFF}.\nAlguns Comandos da Profissão abaixo:\n{FFFFFF}/multar [id]\n/pegararmas [id]\n/algemar [id]\n/desalgemar [id]\n/cp - Chat Profissão\n/paradoai [id]\n/patrulha\t\t", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Delegado)
		{
			strcat(string, "{87CEFF}Sua Profissão é {FFFFFF}Delegado{87CEFF}.\nAlguns Comandos da Profissão abaixo:\n{FFFFFF}/multar [id]\n/pegararmas [id]\n/algemar [id]\n/desalgemar [id]\n/cp - Chat Profissão\n/paradoai [id]\n/patrulha\t\t", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Bope)
		{
			strcat(string, "{87CEFF}Sua Profissão é {FFFFFF}BOPE{87CEFF}.\nAlguns Comandos da Profissão abaixo:\n{FFFFFF}/multar [id]\n/pegararmas [id]\n/algemar [id]\n/desalgemar [id]\n/cp - Chat Profissão\n/paradoai [id]\n/patrulha\t\t", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Swat)
		{
			strcat(string, "{87CEFF}Sua Profissão é {FFFFFF}SWAT{87CEFF}.\nAlguns Comandos da Profissão abaixo:\n{FFFFFF}/multar [id]\n/pegararmas [id]\n/algemar [id]\n/desalgemar [id]\n/cp - Chat Profissão\n/paradoai [id]\n/patrulha\t\t", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Narcoticos)
		{
			strcat(string, "{87CEFF}Sua Profissão é {FFFFFF}Narcótico{87CEFF}.\nAlguns Comandos da Profissão abaixo:\n{FFFFFF}/multar [id]\n/pegararmas [id]\n/algemar [id]\n/desalgemar [id]\n/cp - Chat Profissão\n/paradoai [id]\n/patrulha\t\t", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Exercito)
		{
			strcat(string, "{87CEFF}Sua Profissão é {FFFFFF}Exercito{87CEFF}.\nAlguns Comandos da Profissão abaixo:\n{FFFFFF}/multar [id]\n/pegararmas [id]\n/algemar [id]\n/desalgemar [id]\n/cp - Chat Profissão\n/paradoai [id]\n/patrulha\t\t", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == TraficanteD)
		{
			strcat(string, "{87CEFF}Você é um {FFFFFF}Traficante de Armas{87CEFF}.\nComandos da profissão abaixo:\n{FFFFFF}/venderak [id]\n/venderm4 [id]\n/vendersawnoff [id]\n/vendersniper [id]\n/vendertec[id]\n/cp - Chat Profissão.\t\t", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Ayrton)
		{
			strcat(string, "{00FF00}Você é o {696969}Ayrton Senna{00FF00}.\n/eusousenna.\t\t", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Assasino)
		{
			SendClientMessage(playerid, C_Assasino, "~~~~~~~~~~~~~~ Assasino ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Cobre por cada assasinato.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Assasino, "~~~~~~~~~~~~~~ Assasino ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Terrorista)
		{
			strcat(string, "{87CEFF}Você é um {FFFFFF}Terrorista{87CEFF}.\nComandos da profissão abaixo:\n{FFFFFF}/terror [texto]\n/plantarbomba\n/cp - Chat Profissão.\t\t", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == AssasinoProfissional)
		{
			SendClientMessage(playerid, C_AssasinoP, "~~~~~~~~~~~~~~ Assasino Profissional ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Cobre por cada assasinato.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_AssasinoP, "~~~~~~~~~~~~~~ Assasino Profissional ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Jornalista)
		{
			strcat(string, "{FF0000}x {FFFFFF}Jornalista {FF0000}x\n\n{FFFFFF}/noticiar [texto] - Publica uma noticia para todos do servidor.\n/convidarent[id] - Convida um jogador para uma entrevista.\n", sizeof(string));
			strcat(string, "{FFFFFF}/cp - Chat da Profissão\n/trabalhar - Vai Até o spawn da profissão.", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Fotografo)
		{
			SendClientMessage(playerid, C_Fotografo, "~~~~~~~~~~~~~~ Fotografo ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Tire fotos para o jornal San Andreas.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Fotografo, "~~~~~~~~~~~~~~ Fotografo ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Reporter)
		{
			strcat(string, "		{FF0000}x {FFFFFF}Reporter {FF0000}x		\n\n{FFFFFF}/noticiar [texto] - Publica uma noticia para todos do servidor.\n/convidarent[id] - Convida um jogador para uma entrevista.\n", sizeof(string));
			strcat(string, "{FFFFFF}/cp - Chat da Profissão\n/trabalhar - Vai Até o spawn da profissão.", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Ancora)
		{
			strcat(string, "		{FF0000}x {FFFFFF}Ancora {FF0000}x		\n\n{FFFFFF}/noticiar [texto] - Publica uma noticia para todos do servidor.\n/convidarent[id] - Convida um jogador para uma entrevista.\n", sizeof(string));
			strcat(string, "{FFFFFF}/cp - Chat da Profissão\n/trabalhar - Vai Até o spawn da profissão.", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Obras)
		{
			SendClientMessage(playerid, C_Obras, "~~~~~~~~~~~~~~ Mestre de Obras ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/obras - Anúncie sua profissão.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Obras, "~~~~~~~~~~~~~~ Mestre de Obras ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Meteorologista)
		{
			SendClientMessage(playerid, C_Meteoro, "~~~~~~~~~~~~~~ Meteorologista ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/previsao [previsão]");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Meteoro, "~~~~~~~~~~~~~~ Meteorologista ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Mecanico)
		{
   			strcat(string, "		{FF0000}x {FFFFFF}Mecânico {FF0000}x		\n\n{FFFFFF}/pintar [cor1] [cor2]\n/vcontrole\n/reparar - Conserta um Veículo\n/cp - Chat da profissão\n/guinchar - Guincha um veículo\n/trabalhar - Vai para o spawn da profissão.", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Rapper)
		{
			SendClientMessage(playerid, C_Rapper, "~~~~~~~~~~~~~~ Rapper ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/rimar [texto]");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Rapper, "~~~~~~~~~~~~~~ Rapper ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Mcarroforte)
		{
			SendClientMessage(playerid, C_Mcarroforte, "~~~~~~~~~~~~~~ Banco Do Brasil ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Agora Você e um(a) motorista de carro forte! ");
			SendClientMessage(playerid, Branco, "Seu Dever e levar grandes quantias de dinheiro");
			SendClientMessage(playerid, Branco, "ate os cofre publicos do BRASIL VIDA DA LOUCURA !");
			SendClientMessage(playerid, Branco, "/Trabalhar");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Mcarroforte, "~~~~~~~~~~~~~~  Banco Do Brasil ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Coveiro)
		{
			SendClientMessage(playerid, C_Coveiro, "~~~~~~~~~~~~~~ Coveiro ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cavar - para cavar as covas.");
			SendClientMessage(playerid, Branco, "/trabalhar para ir ao seu serviço.");
			SendClientMessage(playerid, Branco, "Cobre pelos teus serviços.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Coveiro, "~~~~~~~~~~~~~~ Coveiro ~~~~~~~~~~~~~~");
		}

		if(DOF2_GetInt(file, "Profissao") == Jardineiro)
		{
			SendClientMessage(playerid, C_Jardineiro, "~~~~~~~~~~~~~~ Jardineiro ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Cobre pelo seu serviço.");
			SendClientMessage(playerid, Branco, "Seu salário é de: R$800,00.");
			SendClientMessage(playerid, Branco, "/jardineiro - Anuncie sua Profissão.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Jardineiro, "~~~~~~~~~~~~~~ Jardineiro ~~~~~~~~~~~~~~");
		}
		
		if(DOF2_GetInt(file, "Profissao") == Uber)
		{
			SendClientMessage(playerid, C_Uber, "~~~~~~~~~~~~~~ UBER  ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/Anuncio - Anuncie seu Trabalho");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Uber, "~~~~~~~~~~~~~~ UBER  ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Frentista)
		{
			SendClientMessage(playerid, C_Frentista, "~~~~~~~~~~~~~~ Frentista ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/darcomb [id] [litros]");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Frentista, "~~~~~~~~~~~~~~ Frentista ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Taxista)
		{
			SendClientMessage(playerid, C_Taxista, "~~~~~~~~~~~~~~ Taxista ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/ttaxi [id]");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Taxista, "~~~~~~~~~~~~~~ Taxista ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Paramedico)
		{
			SendClientMessage(playerid, C_Paramedico, "~~~~~~~~~~~~~~ Paramédico ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/curativo [id]");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/exame [id] ");
			SendClientMessage(playerid, C_Paramedico, "~~~~~~~~~~~~~~ Paramédico ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == FBI)
		{
			SendClientMessage(playerid, C_FBI, "~~~~~~~~~~~~~~ FBI ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/pegararmas [id]");
			SendClientMessage(playerid, Branco, "/algemar [id]");
			SendClientMessage(playerid, Branco, "/desalgemar [id]");
			SendClientMessage(playerid, Branco, "/multar [id] [quantia]");
			SendClientMessage(playerid, Branco, "/ad - /fd");
			SendClientMessage(playerid, Branco, "/ad2 - /fd2");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/paradoai [id]");
			SendClientMessage(playerid, Branco, "/patrulha - Entre em Uma Viatura Antes!");
			SendClientMessage(playerid, C_FBI, "~~~~~~~~~~~~~~ FBI ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Interpol)
		{
			SendClientMessage(playerid, C_Interpol, "~~~~~~~~~~~~~~ Interpol ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/pegararmas [id]");
			SendClientMessage(playerid, Branco, "/algemar [id]");
			SendClientMessage(playerid, Branco, "/desalgemar [id]");
			SendClientMessage(playerid, Branco, "/multar [id] [quantia]");
			SendClientMessage(playerid, Branco, "/ad - /fd");
			SendClientMessage(playerid, Branco, "/ad2 - /fd2");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/paradoai [id]");
			SendClientMessage(playerid, Branco, "/patrulha - Entre em Uma Viatura Antes!");
			SendClientMessage(playerid, C_Interpol, "~~~~~~~~~~~~~~ Interpol ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Aposentado)
		{
			SendClientMessage(playerid, C_Aposentado, "~~~~~~~~~~~~~~ Aposentado ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Você está cansado da vida e não trabalha só recebe.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Aposentado, "~~~~~~~~~~~~~~ Aposentado ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Advogado)
		{
			SendClientMessage(playerid, C_Advogado, "~~~~~~~~~~~~~~ Advogado ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/soltar [id]");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Advogado, "~~~~~~~~~~~~~~ Advogado ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == GuardaCostas)
		{
			SendClientMessage(playerid, C_GuardaCostas, "~~~~~~~~~~~~~~ Guarda Costas ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Encontre um patrão e cobre pelo seu serviço.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_GuardaCostas, "~~~~~~~~~~~~~~ Guarda Costas ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == MOnibus)
		{
			SendClientMessage(playerid, C_MOnibus, "~~~~~~~~~~~~~~ Turismo BVL ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/Tarifa [id]");
			SendClientMessage(playerid, Branco, "Anuncie seu trabalho /Anuncio.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_MOnibus, "~~~~~~~~~~~~~~  TB ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Contrabando)
		{
			SendClientMessage(playerid, C_Contrabando, "~~~~~~~~~~~~~~ Contrabando ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Cobre por cada encontro.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Contrabando, "~~~~~~~~~~~~~~ Contrabando ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Promotor)
		{
			SendClientMessage(playerid, C_Promotor, "~~~~~~~~~~~~~~ Promotor De Justiça ~~~~~~~~~~~~~~");
			//SendClientMessage(playerid, Branco, "/soltar [ip] - Anuncie uma festa.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Promotor, "~~~~~~~~~~~~~~ Promotor De Justiça ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == SegVila)
		{
			SendClientMessage(playerid, C_SegVila, "~~~~~~~~~~~~~~ Segurança da Vila ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_SegVila, "~~~~~~~~~~~~~~ Segurança da Vila ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Assaltante)
		{
  			strcat(string, "		{FF0000}x {FFFFFF}Assaltante {FF0000}x		\n\n{FFFFFF}Seu Trabalho é assaltar bancos!\n/amarrar [id](DESATIVADO) - Amarra um Jogador.\ndesamarrar [id] - Desamarra um Jogador.\n\n{FF0000}Atenção, é proibido abusar do /amarrar desta profissão!", sizeof(string));
			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Minha Profissão", string, "OK", "");
		}
		if(DOF2_GetInt(file, "Profissao") == Bibliotecario)
		{
			SendClientMessage(playerid, C_Bibliotecario, "~~~~~~~~~~~~~~ Bibliotecário(a) ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Você pode cuidar da biblioteca!");
			SendClientMessage(playerid, Branco, "/abrirbi");
			SendClientMessage(playerid, Branco, "/fecharbi");
			SendClientMessage(playerid, C_Bibliotecario, "~~~~~~~~~~~~~~ Bibliotecário(a) ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Traficante)
		{
			SendClientMessage(playerid, C_Traficante, "~~~~~~~~~~~~~~ Traficante ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/ofmaconha [id]");
			SendClientMessage(playerid, Branco, "/ofcrack [id]");
			SendClientMessage(playerid, Branco, "/ofcocaina [id]");
			SendClientMessage(playerid, C_Traficante, "~~~~~~~~~~~~~~ Traficante ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Deputado)
		{
			SendClientMessage(playerid, C_Deputado, "~~~~~~~~~~~~~~ Deputado ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/discurso");
			SendClientMessage(playerid, Branco, "/soltar [id]");
			SendClientMessage(playerid, C_Deputado, "~~~~~~~~~~~~~~ Deputado ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Vereador)
		{
			SendClientMessage(playerid, C_Vereador, "~~~~~~~~~~~~~~ Vereador ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/discursar");
			SendClientMessage(playerid, C_Vereador, "~~~~~~~~~~~~~~ Vereador ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Ator)
		{
			SendClientMessage(playerid, C_Ator, "~~~~~~~~~~~~~~ Ator ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/ator ");
			SendClientMessage(playerid, C_Ator, "~~~~~~~~~~~~~~ Ator ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == JogadorF)
		{
			SendClientMessage(playerid, C_JogadorF, "~~~~~~~~~~~~~~ Jogador de Futebol ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, 0xFFFFFFAA, "Agora ;você e um jogador de futebol !");
			SendClientMessage(playerid, 0xFFFFFFAA, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_JogadorF, "~~~~~~~~~~~~~~ Jogador de Futebol ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == LSPD)
		{
			SendClientMessage(playerid, C_LSPD, "~~~~~~~~~~~~~~ LSPD ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/pegararmas [id]");
			SendClientMessage(playerid, Branco, "/algemar [id]");
			SendClientMessage(playerid, Branco, "/desalgemar [id]");
			SendClientMessage(playerid, Branco, "/multar [id] [quantia]");
			SendClientMessage(playerid, Branco, "/ad - /fd");
			SendClientMessage(playerid, Branco, "/ad2 - /fd2");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/paradoai [id]");
			SendClientMessage(playerid, C_LSPD, "~~~~~~~~~~~~~~ LSPD ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Imobiliario)
		{
			SendClientMessage(playerid, C_Imobiliario, "~~~~~~~~~~~~~~ Agente Imobiliario ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Você e um agente imobiliario seu trabalho e ajudar  .");
			SendClientMessage(playerid, Branco, "Quem esta procurando uma casa!");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão /Anuncio - Anuncie seu Trabalho.");
			SendClientMessage(playerid, C_Imobiliario, "~~~~~~~~~~~~~~ Agente Imobiliario ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Gari)
		{
			SendClientMessage(playerid, C_Gari, "~~~~~~~~~~~~~~ Gari ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/catarlixo - Para limpar a rua.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/trabalhar");
			SendClientMessage(playerid, Branco, "/coletarlixo");
			SendClientMessage(playerid, C_Gari, "~~~~~~~~~~~~~~ Gari ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Lixeiro)
		{
			SendClientMessage(playerid, C_Lixeiro, "~~~~~~~~~~~~~~ Lixeiro ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/catarlixo - Para pegar o lixo da rua.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Lixeiro, "~~~~~~~~~~~~~~ Lixeiro ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Bombeiro)
		{
			SendClientMessage(playerid, C_Bombeiro, "~~~~~~~~~~~~~~ Bombeiro ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/trabalhar - para ir ate o seu hq.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Bombeiro, "~~~~~~~~~~~~~~ Bombeiro ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Hotdog)
		{
			SendClientMessage(playerid, C_Hotdog, "~~~~~~~~~~~~~~ Hotdogs ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/venderhotdog [ID] - Esta Em Construção !.");
			SendClientMessage(playerid, Branco, "/Trabalhar - para ir para o hq da sua profissão.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Hotdog, "~~~~~~~~~~~~~~ Hotdogs ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Estudante)
		{
			SendClientMessage(playerid, C_Estudante, "~~~~~~~~~~~~~~ Estudante ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/horarios - Para ver os horários de funcionamento da biblioteca.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Estudante, "~~~~~~~~~~~~~~ Estudante ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Correios)
		{
			SendClientMessage(playerid, C_Correios, "~~~~~~~~~~~~~~ Correios ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/Trablahar - Vá para o Spawn da sua profissão.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Correios, "~~~~~~~~~~~~~~ Correios ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Cantor)
		{
			SendClientMessage(playerid, C_Cantor, "~~~~~~~~~~~~~~ Cantor(a) ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cantar - Para cantar à todos do server.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Cantor, "~~~~~~~~~~~~~~ Cantor(a) ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Poeta)
		{
			SendClientMessage(playerid, C_Poeta, "~~~~~~~~~~~~~~ Poeta ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/poema - Para publicar um de seus poemas.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Poeta, "~~~~~~~~~~~~~~ Poeta ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Empresario)
		{
			SendClientMessage(playerid, C_Empresario, "~~~~~~~~~~~~~~ Empresario ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Agora Você E um Grande Empresario Seu Trabalho e Ajudar .");
			SendClientMessage(playerid, Branco, " players estão procurando um investimento .");
			SendClientMessage(playerid, Branco, "/Anuncio - Anuncie seu trabalho.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Empresario, "~~~~~~~~~~~~~~ Empresario ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == YKZ)
		{
			SendClientMessage(playerid, C_YKZ, "~~~~~~~~~~~~~~ Yakuza ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/venderak [id]");
			SendClientMessage(playerid, Branco, "/venderm4 [id]");
			SendClientMessage(playerid, Branco, "/venderswanoff [id]");
			SendClientMessage(playerid, Branco, "/vendersniper [id]");
			SendClientMessage(playerid, Branco, "/vendertec [id]");
			SendClientMessage(playerid, Branco, "/plantarbomba");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_YKZ, "~~~~~~~~~~~~~~ Yakuza ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == MRN)
		{
			SendClientMessage(playerid, C_MRN, "~~~~~~~~~~~~~~ Marines ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Obedeça as ordens do General MacTavish.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_MRN, "~~~~~~~~~~~~~~ Marines ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Mafia)
		{
			SendClientMessage(playerid, C_Mafia, "~~~~~~~~~~~~~~ Máfia ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/venderak [id]");
			SendClientMessage(playerid, Branco, "/venderm4 [id]");
			SendClientMessage(playerid, Branco, "/venderswanoff [id]");
			SendClientMessage(playerid, Branco, "/vendersniper [id]");
			SendClientMessage(playerid, Branco, "/vendertec [id]");
			SendClientMessage(playerid, Branco, "/sequestrar - /liberar");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Mafia, "~~~~~~~~~~~~~~ Máfia ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == DonoM)
		{
			SendClientMessage(playerid, C_DonoM, "~~~~~~~~~~~~~~ Dono do Morro ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/venderak [id].");
			SendClientMessage(playerid, Branco, "/venderm4 [id].");
			SendClientMessage(playerid, Branco, "/vendersawnoff [id].");
			SendClientMessage(playerid, Branco, "/vendersniper [id].");
			SendClientMessage(playerid, Branco, "/vendertec [id].");
			SendClientMessage(playerid, Branco, "/eusoumorro.");
			SendClientMessage(playerid, Branco, "/donom.");
			SendClientMessage(playerid, C_DonoM, "~~~~~~~~~~~~~~ Dono do Morro ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Drifter)
		{
			SendClientMessage(playerid, C_Drifter, "~~~~~~~~~~~~~~ Drifter King ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Melhore seu drift ao extremo.");
			SendClientMessage(playerid, Branco, "/dk - Anuncie um drift aqui.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Drifter, "~~~~~~~~~~~~~~ Drifter King ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Professor)
		{
			SendClientMessage(playerid, C_Professor, "~~~~~~~~~~~~~~ Professor ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/abrirbi - /fecharbi");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Professor, "~~~~~~~~~~~~~~ Professor ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Empregador)
		{
			SendClientMessage(playerid, C_Empregador, "~~~~~~~~~~~~~~ Empregador ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/convidarent [id]");
			SendClientMessage(playerid, Branco, "/setprof [id] [prof]");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Empregador, "~~~~~~~~~~~~~~ Empregador ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == AtiradorElite)
		{
			SendClientMessage(playerid, C_AtiradorElite, "~~~~~~~~~~~~~~ Atirador Elite ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Os comandos se encontram em construção.");
			SendClientMessage(playerid, Branco, " ");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_AtiradorElite, "~~~~~~~~~~~~~~ Atirador Elite ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Ninja)
		{
			SendClientMessage(playerid, C_Ninja, "~~~~~~~~~~~~~~ Ninja ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Especialista em mortes silênciadas.");
			SendClientMessage(playerid, Branco, "/na - Anúncie sua profissão.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Ninja, "~~~~~~~~~~~~~~ Ninja ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Desembargador)
		{
			SendClientMessage(playerid, C_Desembargador, "~~~~~~~~~~~~~~ Desembargador ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/soltar [id]");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Desembargador, "~~~~~~~~~~~~~~ Desembargador ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Astronauta)
		{
			SendClientMessage(playerid, C_Astronauta, "~~~~~~~~~~~~~~ Astronauta ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Você é um Astronauta");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Astronauta, "~~~~~~~~~~~~~~ Astronauta ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Maquinista)
		{
			SendClientMessage(playerid, C_Maquinista, "~~~~~~~~~~~~~~ Maquinista ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Pegue o trem para fazer seus serviços.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Maquinista, "~~~~~~~~~~~~~~ Maquinista ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Caminhoneiro)
		{
			SendClientMessage(playerid, C_Caminhoneiro, "~~~~~~~~~~~~~~ Caminhoneiro ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Digite /Trabalhar e vá para HQ do seu emprego.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Caminhoneiro, "~~~~~~~~~~~~~~ Caminhoneiro ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Petroleiro)
		{
			SendClientMessage(playerid, C_Petroleiro, "~~~~~~~~~~~~~~ Petroleiro ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Digite /Trabalhar e vá para HQ do seu emprego.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Petroleiro, "~~~~~~~~~~~~~~ Petroleiro ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Piloto)
		{
			SendClientMessage(playerid, C_Piloto, "~~~~~~~~~~~~~~ Piloto ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Você é um Piloto");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Piloto, "~~~~~~~~~~~~~~ Piloto ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Cozinheiro)
		{
			SendClientMessage(playerid, C_Cozinheiro, "~~~~~~~~~~~~~~ Cozinheiro ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Você é um Cozinheiro");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Cozinheiro, "~~~~~~~~~~~~~~ Cozinheiro ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Eletricista)
		{
			SendClientMessage(playerid, C_Eletricista, "~~~~~~~~~~~~~~ Eletricista ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Você é um Eletricista");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Eletricista, "~~~~~~~~~~~~~~ Eletricista ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == MOD)
		{
			SendClientMessage(playerid, C_MOD, "~~~~~~~~~~~~~~ Guardião ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Seu dever de Guardião é ajudar os outros em tudo.");
			SendClientMessage(playerid, Branco, "/comandosadm - Para ver os comandos que poderá usar.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_MOD, "~~~~~~~~~~~~~~ Guardião ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == MotoqueiroFantasma)
		{
			SendClientMessage(playerid, C_MotoqueiroFantasma, "~~~~~~~~~~~~~~ Motoqueiro Fantasma ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Pegue uma moto Freeway para ficar em chamas.");
			SendClientMessage(playerid, Branco, "/chamas - Ativar/Desativar o fogo.");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_MotoqueiroFantasma, "~~~~~~~~~~~~~~ Motoqueiro Fantasma ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == ACG)
		{
			SendClientMessage(playerid, C_ACG, "~~~~~~~~~~~~~~ Atletico Goianiense ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Atletico Goianiense.");
			SendClientMessage(playerid, Branco, "/acg. Divulgue que você torce pro Atletico Goianiense");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_ACG, "~~~~~~~~~~~~~~ Atletico Goianiense ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == CAM)
		{
			SendClientMessage(playerid, C_CAM, "~~~~~~~~~~~~~~ Atletico Mineiro ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Atletico Mineiro.");
			SendClientMessage(playerid, Branco, "/cam. Divulgue que você torce pro Atletico Mineiro");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_CAM, "~~~~~~~~~~~~~~ Atletico Mineiro ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == CAP)
		{
			SendClientMessage(playerid, C_CAP, "~~~~~~~~~~~~~~ Atlético Paranaense ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Atletico Paranaense.");
			SendClientMessage(playerid, Branco, "/cap. Divulgue que você torce pro Atlético Paranaense");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_CAP, "~~~~~~~~~~~~~~ Atlético Paranaense ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == AVA)
		{
			SendClientMessage(playerid, C_AVA, "~~~~~~~~~~~~~~ Avaí ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Avaí.");
			SendClientMessage(playerid, Branco, "/ava. Divulgue que você torce pro Avaí");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_AVA, "~~~~~~~~~~~~~~ Avaí ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == BAH)
		{
			SendClientMessage(playerid, C_BAH, "~~~~~~~~~~~~~~ Bahia ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Bahia.");
			SendClientMessage(playerid, Branco, "/bah. Divulgue que você torce pro Bahia");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_BAH, "~~~~~~~~~~~~~~ Bahia ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == BOT)
		{
			SendClientMessage(playerid, C_BOT, "~~~~~~~~~~~~~~ Botafogo ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Botafogo.");
			SendClientMessage(playerid, Branco, "/bot. Divulgue que você torce pro Botafogo");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_BOT, "~~~~~~~~~~~~~~ Botafogo ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == CHA)
		{
			SendClientMessage(playerid, C_CHA, "~~~~~~~~~~~~~~ Chapecoense ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa da Chapecoense.");
			SendClientMessage(playerid, Branco, "/cha. Divulgue que você torce pra Chapecoense");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_CHA, "~~~~~~~~~~~~~~ Chapecoense ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == COR)
		{
			SendClientMessage(playerid, C_COR, "~~~~~~~~~~~~~~ Corinthians ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Corinthians.");
			SendClientMessage(playerid, Branco, "/cor. Divulgue que você torce pro Corinthians");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_COR, "~~~~~~~~~~~~~~ Corinthians ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == CFC)
		{
			SendClientMessage(playerid, C_CFC, "~~~~~~~~~~~~~~ Coritiba ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Coritiba.");
			SendClientMessage(playerid, Branco, "/cfc. Divulgue que você torce pro Coritiba!");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_CFC, "~~~~~~~~~~~~~~ Coritiba ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == CRU)
		{
			SendClientMessage(playerid, C_CRU, "~~~~~~~~~~~~~~ Cruzeiro ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Cruzeiro.");
			SendClientMessage(playerid, Branco, "/cru. Divulgue que você torce pro Cruzeiro!");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_CRU, "~~~~~~~~~~~~~~ Cruzeiro ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == FLA)
		{
			SendClientMessage(playerid, C_FLA, "~~~~~~~~~~~~~~ Flamengo ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Flamengo.");
			SendClientMessage(playerid, Branco, "/fla. Divulgue que você torce pro Flamengo!");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_FLA, "~~~~~~~~~~~~~~ Flamengo ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == FLU)
		{
			SendClientMessage(playerid, C_FLU, "~~~~~~~~~~~~~~ Fluminense ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Fluminense.");
			SendClientMessage(playerid, Branco, "/flu. Divulgue que você torce pro Fluminense!");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_FLU, "~~~~~~~~~~~~~~ Fluminense ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == GRE)
		{
			SendClientMessage(playerid, C_GRE, "~~~~~~~~~~~~~~ Grêmio ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Grêmio.");
			SendClientMessage(playerid, Branco, "/gre. Divulgue que você torce pro Grêmio!");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_GRE, "~~~~~~~~~~~~~~ Grêmio ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == INT)
		{
			SendClientMessage(playerid, C_INT, "~~~~~~~~~~~~~~ Internacional ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Internacional.");
			SendClientMessage(playerid, Branco, "/int. Divulgue que você torce pro Internacional!");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_INT, "~~~~~~~~~~~~~~ Internacional ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == PAL)
		{
			SendClientMessage(playerid, C_PAL, "~~~~~~~~~~~~~~ Palmeiras ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Palmeiras.");
			SendClientMessage(playerid, Branco, "/pal. Divulgue que você torce pro Palmeiras");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_PAL, "~~~~~~~~~~~~~~ Palmeiras ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == PON)
		{
			SendClientMessage(playerid, C_PON, "~~~~~~~~~~~~~~ Ponte Preta ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Ponte Preta.");
			SendClientMessage(playerid, Branco, "/pon. Divulgue que você torce pra Ponte Preta");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_PON, "~~~~~~~~~~~~~~ Ponte Preta ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == SAN)
		{
			SendClientMessage(playerid, C_SAN, "~~~~~~~~~~~~~~ Santos ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Santos.");
			SendClientMessage(playerid, Branco, "/san. Divulgue que você torce pro Santos");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_SAN, "~~~~~~~~~~~~~~ Santos ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == SAO)
		{
			SendClientMessage(playerid, C_SAO, "~~~~~~~~~~~~~~ São Paulo ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Sao Paulo.");
			SendClientMessage(playerid, Branco, "/sao. Divulgue que você torce pro Sao Paulo");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_SAO, "~~~~~~~~~~~~~~ São Paulo ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == SPO)
		{
			SendClientMessage(playerid, C_SPO, "~~~~~~~~~~~~~~ Sport ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Sport.");
			SendClientMessage(playerid, Branco, "/spo Divulgue que você torce pro Sport");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_SPO, "~~~~~~~~~~~~~~ Sport ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == VIT)
		{
			SendClientMessage(playerid, C_VIT, "~~~~~~~~~~~~~~ Vitória ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Represente a camisa do Vitória.");
			SendClientMessage(playerid, Branco, "/vit. Divulgue que você torce pro Vitoria");
            SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_VIT, "~~~~~~~~~~~~~~ Vitória ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Hacker)
		{
			SendClientMessage(playerid, C_Hacker, "~~~~~~~~~~~~~~ Hacker ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Invada o computador policial.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Hacker, "~~~~~~~~~~~~~~ Hacker ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Goku)
		{
			SendClientMessage(playerid, C_Hacker, "~~~~~~~~~~~~~~ Saiyajin ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/ssj e fique imortal por 5 minutos");
			SendClientMessage(playerid, Branco, "/eusougoku");
			SendClientMessage(playerid, C_Hacker, "~~~~~~~~~~~~~~ Saiyajin ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Cientista)
		{
			SendClientMessage(playerid, C_Cientista, "~~~~~~~~~~~~~~ Cientista ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Você é um Cientista");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Cientista, "~~~~~~~~~~~~~~ Cientista ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Astronauta)
		{
			SendClientMessage(playerid, C_Astronauta, "~~~~~~~~~~~~~~ Astronauta ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Você é um Astronauta");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Astronauta, "~~~~~~~~~~~~~~ Astronauta ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Mercenario)
		{
			SendClientMessage(playerid, C_Mercenario, "~~~~~~~~~~~~~~ Mercenário ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Você é um Mercenário");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Mercenario, "~~~~~~~~~~~~~~ Mercenário ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == GovernadorSA)
		{
			SendClientMessage(playerid, C_GovernadorSA, "~~~~~~~~~~~~~~ Governador de San Andreas ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Você é o Governador de San Andreas");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_GovernadorSA, "~~~~~~~~~~~~~~ Governador de San Andreas ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == ExercitoMilitar)
		{
			SendClientMessage(playerid, C_ExercitoMilitar, "~~~~~~~~~~~~~~ Exercito Militar ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/pegararmas [id]");
			SendClientMessage(playerid, Branco, "/algemar [id]");
			SendClientMessage(playerid, Branco, "/desalgemar [id]");
			SendClientMessage(playerid, Branco, "/prender [id]");
			SendClientMessage(playerid, Branco, "/multar [id] [quantia]");
			SendClientMessage(playerid, Branco, "/ad - /fd");
			SendClientMessage(playerid, Branco, "/ad 2 - /fd 2");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/paradoai [id]");
			SendClientMessage(playerid, C_ExercitoMilitar, "~~~~~~~~~~~~~~ Exercito Militar ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == ExercitoAero)
		{
			SendClientMessage(playerid, C_ExercitoAero, "~~~~~~~~~~~~~~ Exercito Aeronáutica ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/pegararmas [id]");
			SendClientMessage(playerid, Branco, "/algemar [id]");
			SendClientMessage(playerid, Branco, "/desalgemar [id]");
			SendClientMessage(playerid, Branco, "/prender [id]");
			SendClientMessage(playerid, Branco, "/multar [id] [quantia]");
			SendClientMessage(playerid, Branco, "/ad - /fd");
			SendClientMessage(playerid, Branco, "/ad 2 - /fd 2");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/paradoai [id]");
			SendClientMessage(playerid, C_ExercitoAero, "~~~~~~~~~~~~~~ Exercito Aeronáutica ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == FuzileiroMilitar)
		{
			SendClientMessage(playerid, C_FuzileiroMilitar, "~~~~~~~~~~~~~~ Fuzileiro Militar ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/pegararmas [id]");
			SendClientMessage(playerid, Branco, "/algemar [id]");
			SendClientMessage(playerid, Branco, "/desalgemar [id]");
			SendClientMessage(playerid, Branco, "/prender [id]");
			SendClientMessage(playerid, Branco, "/multar [id] [quantia]");
			SendClientMessage(playerid, Branco, "/ad - /fd");
			SendClientMessage(playerid, Branco, "/ad 2 - /fd 2");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/paradoai [id]");
			SendClientMessage(playerid, C_FuzileiroMilitar, "~~~~~~~~~~~~~~ Fuzileiro Militar ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == General)
		{
			SendClientMessage(playerid, C_General, "~~~~~~~~~~~~~~ General ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/pegararmas [id]");
			SendClientMessage(playerid, Branco, "/algemar [id]");
			SendClientMessage(playerid, Branco, "/desalgemar [id]");
			SendClientMessage(playerid, Branco, "/prender [id]");
			SendClientMessage(playerid, Branco, "/multar [id] [quantia]");
			SendClientMessage(playerid, Branco, "/ad - /fd");
			SendClientMessage(playerid, Branco, "/ad 2 - /fd 2");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/paradoai [id]");
			SendClientMessage(playerid, C_General, "~~~~~~~~~~~~~~ General ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Major)
		{
			SendClientMessage(playerid, C_Major, "~~~~~~~~~~~~~~ Major ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/pegararmas [id]");
			SendClientMessage(playerid, Branco, "/algemar [id]");
			SendClientMessage(playerid, Branco, "/desalgemar [id]");
			SendClientMessage(playerid, Branco, "/prender [id]");
			SendClientMessage(playerid, Branco, "/multar [id] [quantia]");
			SendClientMessage(playerid, Branco, "/ad - /fd");
			SendClientMessage(playerid, Branco, "/ad 2 - /fd 2");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/paradoai [id]");
			SendClientMessage(playerid, C_Major, "~~~~~~~~~~~~~~ Major ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Marechal)
		{
			SendClientMessage(playerid, C_Marechal, "~~~~~~~~~~~~~~ Marechal ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/pegararmas [id]");
			SendClientMessage(playerid, Branco, "/algemar [id]");
			SendClientMessage(playerid, Branco, "/desalgemar [id]");
			SendClientMessage(playerid, Branco, "/prender [id]");
			SendClientMessage(playerid, Branco, "/multar [id] [quantia]");
			SendClientMessage(playerid, Branco, "/ad - /fd");
			SendClientMessage(playerid, Branco, "/ad 2 - /fd 2");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/paradoai [id]");
			SendClientMessage(playerid, C_Marechal, "~~~~~~~~~~~~~~ Marechal ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Tenente)
		{
			SendClientMessage(playerid, C_Tenente, "~~~~~~~~~~~~~~ Tenente ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/pegararmas [id]");
			SendClientMessage(playerid, Branco, "/algemar [id]");
			SendClientMessage(playerid, Branco, "/desalgemar [id]");
			SendClientMessage(playerid, Branco, "/prender [id]");
			SendClientMessage(playerid, Branco, "/multar [id] [quantia]");
			SendClientMessage(playerid, Branco, "/ad - /fd");
			SendClientMessage(playerid, Branco, "/ad 2 - /fd 2");
			//SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/paradoai [id]");
			SendClientMessage(playerid, C_Tenente, "~~~~~~~~~~~~~~ Tenente ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == FTSA)
		{
			SendClientMessage(playerid, C_FTSA, "~~~~~~~~~~~~~~ FTSA ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/pegararmas [id]");
			SendClientMessage(playerid, Branco, "/algemar [id]");
			SendClientMessage(playerid, Branco, "/desalgemar [id]");
			SendClientMessage(playerid, Branco, "/prender [id]");
			SendClientMessage(playerid, Branco, "/ftsa");
			SendClientMessage(playerid, Branco, "/escudo");
			SendClientMessage(playerid, Branco, "/rescudo");
			SendClientMessage(playerid, Branco, "/equipar");
			SendClientMessage(playerid, Branco, "/liberar");
			SendClientMessage(playerid, C_FTSA, "~~~~~~~~~~~~~~ FTSA ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Cafetão)
		{
			SendClientMessage(playerid, C_Cafetão, "~~~~~~~~~~~~~~ Cafetão ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/labia - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Cafetão, "~~~~~~~~~~~~~~ Cafetão ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Governador)
		{
			SendClientMessage(playerid, C_Governador, "~~~~~~~~~~~~~~ Governador de LS ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/governar - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Governador, "~~~~~~~~~~~~~~ Governador de LS ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Gringo)
		{
			SendClientMessage(playerid, C_Gringo, "~~~~~~~~~~~~~~ Gringo ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/nagringo - Anúncie sua profissão.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Gringo, "~~~~~~~~~~~~~~ Gringo ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Juiz)
		{
			SendClientMessage(playerid, C_Juiz, "~~~~~~~~~~~~~~ Juiz Federal ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/najuiz - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Juiz, "~~~~~~~~~~~~~~ Juiz Federal ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == JogadorSamp)
		{
			SendClientMessage(playerid, C_JogadorSamp, "~~~~~~~~~~~~~~ Jogador de SAMP ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/samp - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_JogadorSamp, "~~~~~~~~~~~~~~ Jogador de SAMP ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == JogadorMine)
		{
			SendClientMessage(playerid, C_JogadorMine, "~~~~~~~~~~~~~~ Jogador de Minecraft ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/mine - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_JogadorMine, "~~~~~~~~~~~~~~ Jogador de Minecraft ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == TEC)
		{
			SendClientMessage(playerid, C_TEC, "~~~~~~~~~~~~~~ Torcida Esquadrão Colorado ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/ofmaconha [id]");
			SendClientMessage(playerid, Branco, "/ofcrack [id]");
			SendClientMessage(playerid, Branco, "/ofcocaina [id]");
			SendClientMessage(playerid, Branco, "/venderak [id]");
			SendClientMessage(playerid, Branco, "/venderm4 [id]");
			SendClientMessage(playerid, Branco, "/venderswanoff [id]");
			SendClientMessage(playerid, Branco, "/vendersniper [id]");
			SendClientMessage(playerid, Branco, "/vendertec [id]");
			SendClientMessage(playerid, Branco, "/plantarbomba");
			SendClientMessage(playerid, Branco, "/tec - Anúncie sua profissão.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_TEC, "~~~~~~~~~~~~~~ Torcida Esquadrão Colorado ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == AgenteDoPT)
		{
			SendClientMessage(playerid, C_AgenteDoPT, "~~~~~~~~~~~~~~ Agente do Partido Trabalhista - PT ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/ofmaconha [id]");
			SendClientMessage(playerid, Branco, "/ofcrack [id]");
			SendClientMessage(playerid, Branco, "/ofcocaina [id]");
			SendClientMessage(playerid, Branco, "/venderak [id]");
			SendClientMessage(playerid, Branco, "/venderm4 [id]");
			SendClientMessage(playerid, Branco, "/venderswanoff [id]");
			SendClientMessage(playerid, Branco, "/vendersniper [id]");
			SendClientMessage(playerid, Branco, "/vendertec [id]");
			SendClientMessage(playerid, Branco, "/plantarbomba");
			SendClientMessage(playerid, Branco, "/PT - Anúncie sua profissão.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_AgenteDoPT, "~~~~~~~~~~~~~~ Agente do Partido Trabalhista - PT ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == TTA)
		{
			SendClientMessage(playerid, C_TTA, "~~~~~~~~~~~~~~ Torcida Organizada Trovão Azul ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/ofmaconha [id]");
			SendClientMessage(playerid, Branco, "/ofcrack [id]");
			SendClientMessage(playerid, Branco, "/ofcocaina [id]");
			SendClientMessage(playerid, Branco, "/venderak [id]");
			SendClientMessage(playerid, Branco, "/venderm4 [id]");
			SendClientMessage(playerid, Branco, "/venderswanoff [id]");
			SendClientMessage(playerid, Branco, "/vendersniper [id]");
			SendClientMessage(playerid, Branco, "/vendertec [id]");
			SendClientMessage(playerid, Branco, "/plantarbomba");
			SendClientMessage(playerid, Branco, "/tta - Anúncie sua profissão.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_TTA, "~~~~~~~~~~~~~~ Torcida Organizada Trovão Azul ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == VagabundoBVL)
		{
			SendClientMessage(playerid, C_VagabundoBVL, "~~~~~~~~~~~~~~ Vagabundo(a) [BSL] ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Saia Vagabundeando por ai.");
			SendClientMessage(playerid, Branco, "/naBSL, Anúncie sua profissão.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_VagabundoBVL, "~~~~~~~~~~~~~~ Vagabundo(a) [BSL] ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == TécnicoInformática)
		{
			SendClientMessage(playerid, C_TécnicoInformática, "~~~~~~~~~~~~~~ Técnico Em Informática ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/tecnico - Anúncie sua profissão.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_TécnicoInformática, "~~~~~~~~~~~~~~ Técnico Em Informática ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == CapitaoA)
		{
			SendClientMessage(playerid, C_CapitaoA, "~~~~~~~~~~~~~~ Capitão América ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/capitao - Anúncie sua profissão.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_CapitaoA, "~~~~~~~~~~~~~~ Capitão América ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Robin)
		{
			SendClientMessage(playerid, C_Robin, "~~~~~~~~~~~~~~ Robin Wood ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/robin - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Robin, "~~~~~~~~~~~~~~ Robin Wood ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == LanternaV)
		{
			SendClientMessage(playerid, C_LanternaV, "~~~~~~~~~~~~~~ Lanterna Verde ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/lanterna - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_LanternaV, "~~~~~~~~~~~~~~ Lanterna Verde ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Batman)
		{
			SendClientMessage(playerid, C_Batman, "~~~~~~~~~~~~~~ Batman ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/morcego - Anúncie sua profissão.");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Batman, "~~~~~~~~~~~~~~ Batman ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Flash)
		{
			SendClientMessage(playerid, C_Flash, "~~~~~~~~~~~~~~ Flash ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/flash - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Flash, "~~~~~~~~~~~~~~ Flash ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Thor)
		{
			SendClientMessage(playerid, C_Thor, "~~~~~~~~~~~~~~ Thor ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/thor - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Thor, "~~~~~~~~~~~~~~ Thor ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Mascara)
		{
			SendClientMessage(playerid, C_Mascara, "~~~~~~~~~~~~~~ Mascará ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/mask - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Mascara, "~~~~~~~~~~~~~~ Mascará ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Ben10)
		{
			SendClientMessage(playerid, C_Ben10, "~~~~~~~~~~~~~~ BEN 10 ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/10 - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Ben10, "~~~~~~~~~~~~~~ BEN 10 ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Patata)
		{
			SendClientMessage(playerid, C_Patata, "~~~~~~~~~~~~~~ Patatá ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/patata - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Patata, "~~~~~~~~~~~~~~ Patatá ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Hulk)
		{
			SendClientMessage(playerid, C_Hulk, "~~~~~~~~~~~~~~ Hulk ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/hulk - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Hulk, "~~~~~~~~~~~~~~ Hulk ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Wolverine)
		{
			SendClientMessage(playerid, C_Wolverine, "~~~~~~~~~~~~~~ Wolverine ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/wolverine - anúncie sua profissão.");
			SendClientMessage(playerid, C_Wolverine, "~~~~~~~~~~~~~~ Wolverine ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Marido)
		{
			SendClientMessage(playerid, C_Marido, "~~~~~~~~~~~~~~ Marido de Aluguel ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/naluguel - anúncie sua profissão.");
			SendClientMessage(playerid, C_Marido, "~~~~~~~~~~~~~~ Marido de Aluguel ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Ministro)
		{
			SendClientMessage(playerid, C_Ministro, "~~~~~~~~~~~~~~ Ministro da Desgraça ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, Branco, "/desgraca - anúncie sua profissão.");
			SendClientMessage(playerid, C_Ministro, "~~~~~~~~~~~~~~ Ministro da Desgraça ~~~~~~~~~~~~~~");
		}
 	    if(DOF2_GetInt(file, "Profissao") == Engenheiro)
		{
			SendClientMessage(playerid, C_Engenheiro, "~~~~~~~~~~~~~~ Engenheiro Ambiental ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Engenheiro, "~~~~~~~~~~~~~~ Engenheiro Ambiental ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Acessor )
		{
			SendClientMessage(playerid, C_Acessor , "~~~~~~~~~~~~~~ Acessor Jurídico  ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Acessor , "~~~~~~~~~~~~~~ Acessor Juridíco  ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Empresarial)
		{
			SendClientMessage(playerid, C_Empresarial, "~~~~~~~~~~~~~~ Advogado Empresarial ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/empresa - Anúncie sua profissão.");
			SendClientMessage(playerid, Branco, "/soltar [id].");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Empresarial, "~~~~~~~~~~~~~~ Advogado Empresarial ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Recursos)
		{
			SendClientMessage(playerid, C_Recursos, "~~~~~~~~~~~~~~ Diretor de Recursos Humanos ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/Recursos - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Recursos, "~~~~~~~~~~~~~~ Diretor de Recursos Humanos ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Analista)
		{
			SendClientMessage(playerid, C_Analista, "~~~~~~~~~~~~~~ Analista de Sistemas ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Analista, "~~~~~~~~~~~~~~ Analista de Sistemas ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Atendimento)
		{
			SendClientMessage(playerid, C_Atendimento, "~~~~~~~~~~~~~~ Gerente de Atendimento ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Atendimento, "~~~~~~~~~~~~~~ Gerente de Atendimento ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Marketing)
		{
			SendClientMessage(playerid, C_Marketing, "~~~~~~~~~~~~~~ Analista de Marketing ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Marketing, "~~~~~~~~~~~~~~ Analista de Marketing ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Comercial)
		{
			SendClientMessage(playerid, C_Comercial, "~~~~~~~~~~~~~~ Diretor Comercial ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Comercial, "~~~~~~~~~~~~~~ Diretor Comercial ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Consultor)
		{
			SendClientMessage(playerid, C_Consultor, "~~~~~~~~~~~~~~ Consultor Financeiro ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/Consultor - anúncie sua profissão.");
			SendClientMessage(playerid, C_Consultor, "~~~~~~~~~~~~~~ Consultor Financeiro ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Supervisor)
		{
			SendClientMessage(playerid, C_Supervisor, "~~~~~~~~~~~~~~ Supervisor Administrativo ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Supervisor, "~~~~~~~~~~~~~~ Supervisor Administrativo ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Bancario)
		{
			SendClientMessage(playerid, C_Bancario, "~~~~~~~~~~~~~~ Bancário ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Bancario, "~~~~~~~~~~~~~~ Bancário ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Crackudo)
		{
			SendClientMessage(playerid, C_Crackudo, "~~~~~~~~~~~~~~ Crackudo ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Crackudo, "~~~~~~~~~~~~~~ Crackudo ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Comandante)
		{
			SendClientMessage(playerid, C_Comandante, "~~~~~~~~~~~~~~ Comandante da Crackolândia ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Comandante, "~~~~~~~~~~~~~~ Comandante da Crackolândia ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Mente)
		{
			SendClientMessage(playerid, C_Mente, "~~~~~~~~~~~~~~ Mente Criminosa ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Mente, "~~~~~~~~~~~~~~ Mente Criminosa ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == VigilanteS)
		{
			SendClientMessage(playerid, C_VigilanteS, "~~~~~~~~~~~~~~ Vigilante Sanitário~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_VigilanteS, "~~~~~~~~~~~~~~ Vigilante Sanitário ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Medico)
		{
			SendClientMessage(playerid, C_Medico, "~~~~~~~~~~~~~~ Médico VIP ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "/curar [id]");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Medico, "~~~~~~~~~~~~~~ Médico VIP ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Corretor)
		{
			SendClientMessage(playerid, C_Corretor, "~~~~~~~~~~~~~~ Corretor Imobiliário ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Seu dever é achar casas boas e baratas para seus clientes");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Corretor, "~~~~~~~~~~~~~~ Corretor Imobiliário ~~~~~~~~~~~~~~");
		}
		if(DOF2_GetInt(file, "Profissao") == Noel)
		{
			SendClientMessage(playerid, C_Noel, "~~~~~~~~~~~~~~ Papai Noel ~~~~~~~~~~~~~~");
			SendClientMessage(playerid, Branco, "Dê Presentes Para Todo O BVL <3");
			SendClientMessage(playerid, Branco, "/vovo - Anúncie sua profissão");
			SendClientMessage(playerid, Branco, "/cp - Chat Profissão.");
			SendClientMessage(playerid, C_Noel, "~~~~~~~~~~~~~~ Papai Noel ~~~~~~~~~~~~~~");
		}
		
		return 1;
	}

	if(!strcmp(cmd, "/comemorar", true))
	{
		if(pAdmin[playerid] > 0 || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		{
			new Float:x, Float:y, Float:z;

			GetPlayerPos(playerid, x, y, z);

			SetTimerEx("CriarExplosao", 1000, false, "fffdf", x+1, y+1, z+12, 10, 100.0);
			SetTimerEx("CriarExplosao", 2000, false, "fffdf", x+5, y+5, z+12, 10, 100.0);
			SetTimerEx("CriarExplosao", 3000, false, "fffdf", x+9, y+9, z+12, 10, 100.0);
			SetTimerEx("CriarExplosao", 4000, false, "fffdf", x+1, y+1, z+12, 10, 100.0);
			SetTimerEx("CriarExplosao", 5000, false, "fffdf", x+5, y+5, z+12, 10, 100.0);
			SetTimerEx("CriarExplosao", 6000, false, "fffdf", x+9, y+9, z+12, 10, 100.0);
			SetTimerEx("CriarExplosao", 7000, false, "fffdf", x+1, y+1, z+12, 10, 100.0);
			SetTimerEx("CriarExplosao", 8000, false, "fffdf", x+5, y+5, z+12, 10, 100.0);
			SetTimerEx("CriarExplosao", 9000, false, "fffdf", x+9, y+9, z+12, 10, 100.0);

			GameTextForPlayer(playerid, "~r~FOGOS ~y~DE ~b~ARTIFICIO", 1000, 4);
		}
		return 1;
	}

	if(!strcmp(cmd, "/plantarbomba", true))
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Terrorista || DOF2_GetInt(file, "Profissao") == YKZ || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			if(pbomba[playerid] == 0)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					SendClientMessage(playerid, Vermelho, "Você não pode plantar uma bomba dentro do veículo.");
				}
				else
				{
					new dinid, Float:x, Float:y, Float:z;

					pbomba[playerid] = 1;
					GetPlayerPos(playerid, x, y, z);

					#if defined AnimLoopsUser
					OnePlayAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
					#else
					ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
					#endif

					dinid = CreateDynamicObject(1252, x, y, z-0.8, 0, 0, 0, -1, -1, -1, 200.0);
					SetTimerEx("DestruirObjeto", 8000, false, "d", dinid);
					SetTimerEx("PlantouBomba", 7000, false, "i", playerid);

					SetTimerEx("CriarExplosao", 8000, false, "fffdf", x, y, z-0.8, 7, 50.0);
					SetTimerEx("CriarExplosao", 8000, false, "fffdf", x, y, z-0.8, 10, 50.0);
					SetTimerEx("CriarExplosao", 8000, false, "fffdf", x, y, z-0.8, 2, 50.0);

					GameTextForPlayer(playerid, "~r~BOMBA ~b~PLANTADA", 1000, 4);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, 0x6495EDAA, "Plante uma bomba por vez.");
		}
		return 1;
	}

	if(strcmp(cmd, "/taxi", true) == 0)
	{
		new texto[128];

		if(sscanf(cmdtext, "s[6]s[128]", cmd, texto))
		{
			SendClientMessage(playerid, Vermelho, "Use: /taxi [lugar]");
		}
		else
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(i));
					if(DOF2_GetInt(file, "Profissao") == Taxista || DOF2_GetInt(file, "aAdmin") == 1)
					{
						format(string, sizeof(string), "%s pediu um Taxi (») Local: %s (») Atenda-o e não esqueça de ligar o taximetro.", GetPlayerNameEx(playerid), texto);
						SendClientMessage(i, Amarelo, string);
					}
				}
			}
			SendClientMessage(playerid, Amarelo, "Os taxistas foram informados, aguarde uma resposta.");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/uber", true) == 0)
	{
		new texto[128];

		if(sscanf(cmdtext, "s[6]s[128]", cmd, texto))
		{
			SendClientMessage(playerid, Vermelho, "Use: /uber [lugar]");
		}
		else
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(i));
					if(DOF2_GetInt(file, "Profissao") == Uber || DOF2_GetInt(file, "aAdmin") == 1)
					{
						format(string, sizeof(string), "%s pediu um Uber (») Local: %s (») Atenda-o e não esqueça de ligar o uber.", GetPlayerNameEx(playerid), texto);
						SendClientMessage(i, Amarelo, string);
					}
				}
			}
			SendClientMessage(playerid, Amarelo, "Os motoristas do Uber foram informados, aguarde uma resposta.");
		}
		return 1;
	}


	if(strcmp(cmd, "/190", true) == 0)
	{
		new texto[128];

		if(sscanf(cmdtext, "s[5]s[128]", cmd, texto))
		{
			SendClientMessage(playerid, Vermelho, "Use: /190 [denúncia]");
		}
		else
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(i));
					if(DOF2_GetInt(file, "Profissao") == Guarda || DOF2_GetInt(file, "Profissao") == Policial_R || DOF2_GetInt(file, "Profissao") == Policial_M || DOF2_GetInt(file, "Profissao") == Policial_F || DOF2_GetInt(file, "Profissao") == Delegado || DOF2_GetInt(file, "Profissao") == Bope || DOF2_GetInt(file, "Profissao") == Swat || DOF2_GetInt(file, "Profissao") == Narcoticos || DOF2_GetInt(file, "Profissao") == Interpol || DOF2_GetInt(file, "Profissao") == LSPD)
					{
						format(string, sizeof(string), "%s fez uma denúncia: %s (») Atenda-o!", GetPlayerNameEx(playerid), texto);
						SendClientMessage(i, Blue, string);
					}
					else if(DOF2_GetInt(file, "Profissao") == Exercito || DOF2_GetInt(file, "Profissao") == ExercitoMilitar || DOF2_GetInt(file, "Profissao") == ExercitoAero || DOF2_GetInt(file, "Profissao") == FuzileiroMilitar || DOF2_GetInt(file, "Profissao") == General || DOF2_GetInt(file, "Profissao") == Major || DOF2_GetInt(file, "Profissao") == Marechal || DOF2_GetInt(file, "Profissao") == Tenente)
					{
						format(string, sizeof(string), "%s fez uma denúncia: %s (») Atenda-o!", GetPlayerNameEx(playerid), texto);
						SendClientMessage(i, Blue, string);
					}
				}
			}
			SendClientMessage(playerid, Blue, "Os policiais foram informados, aguarde uma resposta.");
		}
		return 1;
	}

	if(strcmp(cmd, "/193", true) == 0)
	{
		new texto[128];

		if(sscanf(cmdtext, "s[5]s[128]", cmd, texto))
		{
			SendClientMessage(playerid, Vermelho, "Use: /193 [local]");
		}
		else
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(i));
					if(DOF2_GetInt(file, "Profissao") == Paramedico || DOF2_GetInt(file, "Profissao") == Guarda || DOF2_GetInt(file, "Profissao") == Policial_R  || DOF2_GetInt(file, "Profissao") == Policial_M || DOF2_GetInt(file, "Profissao") == Policial_C || DOF2_GetInt(file, "Profissao") == Policial_F
				|| DOF2_GetInt(file, "Profissao") == Delegado || DOF2_GetInt(file, "Profissao") == Bope || DOF2_GetInt(file, "Profissao") == Swat || DOF2_GetInt(file, "Profissao") == Narcoticos || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
 					{
						format(string, sizeof(string), "%s pedindu uma ambulância (») Local: %s (») Atenda-o rápido!", GetPlayerNameEx(playerid), texto);
						SendClientMessage(i, Blue, string);
					}
				}
			}
			SendClientMessage(playerid, Blue, "Os paramédicos foram informados, aguarde uma resposta.");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/curativo", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Paramedico || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Use: /curativo [id]");
				return 1;
			}
			if(IsPlayerInAnyVehicle(plid) || IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "Alguem está dentro de um carro.");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não consegue curar você mesmo.");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(GetDistanceBetweenPlayers(plid, playerid) < 21)
				{
					SetPlayerHealth(plid, 100.0);
					SendClientMessage(playerid, COLOR_GREEN, "Missão cumprida!");
					SendClientMessage(plid, COLOR_WHITE, "Um paramédico aplicou uma injeção e você melhoro!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Chegue mais perto para aplicar o curativo!");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Apenas paramédicos podem usar este comando!");
		}
		return 1;
	}

	if(strcmp(cmd, "/naempresario", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Empresario  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um empresário.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Empresario, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/eusouvip", true) == 0)
	{
		if(IsPlayerVIP(playerid))
		{
            format(string, sizeof(string), "{00FFBF}Eu {FFFFFF}%s {00FFBF}sou 'VIP' e você não me chupa!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(roxo, string);
		}
		else
		{
		    SendClientMessage(playerid, 0xFFFF00AA, "Você não é um player VIP!");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/ajudarp", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
            format(string, sizeof(string), "{99FFFF}O(a) Admin {FFFFFF}%s (%d){99FFFF}Diz:{FF3333}Tem Dúvidas? Precisa de Ajuda?{99FFFF} use:{FF3333} /relatório {99FFFF} ou {FF3333} /pm (%d)", GetPlayerNameEx(playerid));
			SendClientMessageToAll(roxo, string);
		}
		else
		{
		    SendClientMessage(playerid, 0xFFFF00AA, "Você não é um Admin");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/vips", true) == 0)
    {
        new count = 0, msg[1000];

        SendClientMessage(playerid, 0x008000AA, "{006400}(§) - Jogadores VIP - (§)");
        for(new i = 0; i < MAX_PLAYERS; i++)
        {
            if(IsPlayerConnected(i) && IsPlayerVIP(i))
            {
                format(msg,sizeof(msg), "{FFFF00}%s (%d)\n", GetPlayerNameEx(i), i);
                strcat(string, msg, sizeof(string));
                SendClientMessage(playerid, 0x0088CAAA, msg);
                count++;
            }
        }
        if(count == 0)
        {
            SendClientMessage(playerid, Vermelho, "Nenhum(a) jogador(a) VIP logado(a) no momento.");
        }
        return 1;
    }

	if(strcmp(cmd, "/casasdeletadas", true) == 0)
	{
		new count = 0, msg[1000];

		SendClientMessage(playerid, 0x008000AA, "=== Casas Deletadas ===");
		for(new c = 0; c < MAX_CASAS; c++)
		{
			format(string, sizeof(string), PASTA_CASAS, c);
			if(DOF2_GetInt(string, "TDono") == 3)
			{
				format(msg, sizeof(msg), "» Casa ID: %d - Deletada", c);
				SendClientMessage(playerid, 0x0088CAAA, msg);
				count++;
			}
		}
		if(count == 0)
		{
			SendClientMessage(playerid, 0xFF0000AA, "Nenhuma casa foi deletada!");
		}
		return 1;
	}

	if(strcmp(cmd, "/empsdeletadas", true) == 0)
	{
		new count = 0, msg[1000];

		SendClientMessage(playerid, 0x008000AA, "=== Empresas Deletadas ===");
		for(new p = 0; p < MAX_PROPS; p++)
		{
			format(string, sizeof(string), PASTA_PROPS, p);
			if(DOF2_GetInt(string, "TDono") == 3)
			{
				format(msg, sizeof(msg), "» Empresa ID: %d - Deletada", p);
				SendClientMessage(playerid, 0x0088CAAA, msg);
				count++;
			}
		}
		if(count == 0)
		{
			SendClientMessage(playerid, 0xFF0000AA, "Nenhuma empresa foi deletada!");
		}
		return 1;
	}

	if(strcmp(cmd, "/mudarsexo", true) == 0)
	{
		ShowPlayerDialog(playerid, skinnovato, DIALOG_STYLE_MSGBOX, "Gênero", "{00ff00}Qual é seu sexo?\n\n", "Masculino", "Feminino");
		return 1;
	}

	if(strcmp(cmd, "/comandosmp3", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "MP3") == 1)
		{
			SendClientMessage(playerid, 0x6495EDAA, "Digite /mp3 para começar e /stopmp3 para parar.");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem um mp3 para usar seu manual.");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/mp3", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "MP3") == 1)
		{
			ShowPlayerDialog(playerid, mp3, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem um mp3 para escutar, você pode comprar um em uma loja de ultilidades.");
		}
		return 1;
	}

	if(strcmp(cmd, "/musicas", true) == 0)
	{
		ShowPlayerDialog(playerid, musicas, DIALOG_STYLE_LIST, "Musicas","{FFFFFF}Rock\nFunk\nRap\nEletronica\nAnime","Selecionar","Cancelar");
		return 1;
	}
	
	if(strcmp(cmd, "/cc", true) ==0)
	{
        new fm[128],fm2[128],resto[128];
        if(sscanf(cmdtext, "s[4]s[128]", cmd, resto))
		{
            SendClientMessage(playerid, Vermelho,"/cc [texto]");
            return 1;
        }
        else
		{
		if(GangLevel[playerid]>3)
	    {
	        new nml[MAX_PLAYER_NAME];
	        GetPlayerName(playerid,nml,sizeof(nml));
	        if(GangLevel[playerid]==5)
		    {
		    	format(fm,128,"~b~%s: %s",POS_NV5,resto);
		    	format(fm2,128,"[GANG CHAT] %s %s: %s",POS_NV5,nml,resto);
		    }
		    else
		    {
		        format(fm,128,"~b~%s: %s",POS_NV4,resto);
		    	format(fm2,128,"[GANG CHAT] %s %s: %s",POS_NV4,nml,resto);
		    }
	        for(new i=0;i<MAX_PLAYERS;i++)
                if(IsPlayerConnected(i))
		        	if(GangID[playerid]==GangID[i])
		        	{
		            	SendClientMessage(i,azul,fm2);
					}
	        return 1;
	    }
	    new name[MAX_PLAYER_NAME];GetPlayerName(playerid,name,sizeof(name));
 		switch(GangLevel[playerid])
 		{
 		    case 0:
 		        format(fm,128,"[GANG CHAT] (%s) %s: %s",POS_NV0,name,resto);
 		    case 1:
 		        format(fm,128,"[GANG CHAT] (%s) %s: %s",POS_NV1,name,resto);
            case 2:
 		        format(fm,128,"[GANG CHAT] (%s) %s: %s",POS_NV2,name,resto);
            case 3:
 		        format(fm,128,"[GANG CHAT] (%s) %s: %s",POS_NV3,name,resto);
            case 4:
 		        format(fm,128,"[GANG CHAT] (%s) %s: %s",POS_NV4,name,resto);
            case 5:
 		        format(fm,128,"[GANG CHAT] (%s) %s: %s",POS_NV5,name,resto);
 		}
	    for(new i=0;i<MAX_PLAYERS;i++)
	        if(IsPlayerConnected(i))
		        if(GangID[playerid]==GangID[i])
		            SendClientMessage(i,azul,fm);
		return 1;
        }
    }
	
	if(strcmp(cmd, "/meuclan", true) == 0)
	{
    	if(GangID[playerid]==0) return SendClientMessage(playerid,amarelo,"[CLAN] Você não tem clan!");
		ShowPlayerDialog(playerid, GANGS, DIALOG_STYLE_LIST, "CLAN","Convite\nKick\nLema\nLevel\nAtk\nLider\nSair\nBanco","Selecionar","Cancelar");
		return 1;
	}
	
	if(strcmp(cmd, "/criarclan", true) == 0)
	{
		new szPlayerName[MAX_PLAYER_NAME];
    	GetPlayerName(playerid, szPlayerName, MAX_PLAYER_NAME);
		for(new i = 0; i < sizeof(BadNameChars); i++)
		{
			if(strfind(szPlayerName, BadClanNames[i], true) != -1 || strlen(szPlayerName) > MAX_PLAYERS)
			{
				SendClientMessage(playerid, 0x6495EDAA, "Voce não pode criar um clan com caracteres especiais no nick");
				return 1 ;
			}
			else
			{
				if(GangID[playerid]!=0) return SendClientMessage(playerid,amarelo,"[CLAN] Você já participa de um clan, saia dela!");
				if(GetNewGangID()>=MAX_GANGS) return SendClientMessage(playerid,amarelo,"[CLAN] O máximo de clan no servidor foi atingido!");
				new str[128];format(str,128,"[CLAN] Você deve ter R$%d para criar um clan",CUSTO_GANG*-1);
				if(GetPlayerGrana(playerid)<CUSTO_GANG) return SendClientMessage(playerid,amarelo,str);
				ShowPlayerDialog(playerid,400,DIALOG_STYLE_INPUT,"Clan - Criar","Digite o nome do clan a baixo:\nSerá cobrada uma taxa de $5000 para criar seu clan!","Criar","Sair");
				return 1;
			}
		}
	}

	if(strcmp(cmd, "/entrarclan", true) == 0)
	{
		new szPlayerName[MAX_PLAYER_NAME];
    	GetPlayerName(playerid, szPlayerName, MAX_PLAYER_NAME);
		for(new i = 0; i < sizeof(BadNameChars); i++)
		{
			if(strfind(szPlayerName, BadClanNames[i], true) != -1 || strlen(szPlayerName) > MAX_PLAYERS)
			{
				SendClientMessage(playerid, 0x6495EDAA, "Voce não pode entrar em um clan com caracteres especiais no nick");
				return 1 ;
			}
			else
			{
				if(Convite[playerid]==0) return SendClientMessage(playerid,amarelo,"[CLAN] Você não foi convidado a entrar em nenhuma clan");
				if(DOF2_GetInt(FormatGang(Convite[playerid]),"NMembros")>=GANG_MEMBERS) return SendClientMessage(playerid,amarelo,"[CLAN] Este clan atingiu o máximo de players!");
				GangID[playerid]=Convite[playerid];
				Convite[playerid]=0;
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				DOF2_SetInt(file, "SGang", 1);
				SetPVarInt(playerid,"GangID",GangID[playerid]);
				SetPlayerTeam(playerid,MIN_ATK+GangID[playerid]);
				new strmenn[128],nm1[25],strmenn2[128];
				GetPlayerName(playerid,nm1,25);
				format(strmenn,128,"[CLAN] %s (ID:%d) entrou no clan!",nm1,playerid);
				format(strmenn2,128,"[CLAN] Você entrou no clan: %s!",DOF2_GetString(FormatGang(GangID[playerid]),"Nome"));
        		SendClientMessage(playerid,laranja,strmenn2);
  	    		for(new allgp=0;allgp<MAX_PLAYERS;allgp++)
  	    		if(IsPlayerConnected(allgp))
	     			if(GangID[playerid]==GangID[allgp])
		           		SendClientMessage(allgp,laranja,strmenn);
				return 1;
			}
		}
	}
	if(strcmp(cmd, "/clan", true) == 0)
	{
		ShowPlayerDialog(playerid, GANGSALL, DIALOG_STYLE_LIST, "CLAN","Membros\nInfo\nDeletar","Selecionar","Cancelar");
		return 1;
	}
	
	if(strcmp(cmd, "/musicast", true) == 0)
	{
	    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1 || DOF2_GetInt(file, "musica") == 1)
		{
			ShowPlayerDialog(playerid, musicast, DIALOG_STYLE_LIST, "Escolher Música", "{FFFFFF}Rock\nFunk\nRap\nEletronica\nAnime", "OK", "Cancelar");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/mp3t", true) == 0)
	{
	    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1)
		{
			ShowPlayerDialog(playerid, mp3todos, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/stopmp3", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "MP3") == 1)
		{
			StopAudioStreamForPlayer(playerid);
			SendClientMessage(playerid, 0x6495EDAA, "MP3 parado com sucesso!");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem um mp3 para dar stop.");
		}
		return 1;
	}

    if(strcmp(cmd, "/mp3todos", true) == 0)
	{
    	format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1 || DOF2_GetInt(file, "musica") == 1 || IsPlayerDJ(playerid))
		if(gettime() - GetPVarInt(playerid, "DJTempo") < 300) return SendClientMessage(playerid, Vermelho, "Este Comando ja foi utilizado recentemente aguarde alguns minutos.");
		{
			ShowPlayerDialog(playerid, somd, DIALOG_STYLE_INPUT, "{FFFFFF}Radio", "{FFFFFF}Cole aqui o endereço {6666ff}URL {FFFFFF}do audio.", "Tocar", "Cancelar");
		}
		SetPVarInt(playerid, "DJTempo", gettime());
		return 1;
	}

	if(strcmp("/tocart", cmd, true) == 0)
	{
	    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1)
		{
			new texto[120];

			if(sscanf(cmdtext, "s[120]s[120]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /tocart [link]");
				return 1;
			}
			format(string, sizeof(string), "~g~] ~w~%s ~g~]", texto);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				PlayAudioStreamForPlayer(i,texto);
			}
			format(string, sizeof(string), "{FFFF00}O(a) ADM {FF0000}%s {FFFF00}colocou uma música para todos, {00ff00}Não quer ouvir? /stopradio", GetPlayerNameEx(playerid));
	        SendClientMessageToAll(Verde, string);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão para usar este comando!");
		}
		return 1;
	}

	if(strcmp(cmd, "/parart", true) == 0)
	{
		if(pAdmin[playerid] > 0)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				StopAudioStreamForPlayer(i);
			}
		}
		SendClientMessage(playerid, 0x6495EDAA, "Todos os MP3 tocando no servidor, foram parados com sucesso!");
		return 1;
	}

    if(strcmp(cmd, "/radios", true) == 0) return ShowPlayerDialog(playerid, radio, DIALOG_STYLE_LIST, "{FFFFFF}Lista de Radios", "Radio Brasil Vida Virtual RPG\nSertaneja\nHunter Hitz\nDubstep\nRap\nEletrônica\nRadio Funk\nRadio Funk 2\nRadio FM MG\nRock\n{FF0000}Desligar", "Ok", "Sair");

	if(strcmp(cmd, "/stopradio", true) == 0)
	{
			StopAudioStreamForPlayer(playerid);
			SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}Você parou a {FF0000}Musica");
			return 1;
	}
	
	if(strcmp(cmd, "/desligarm", true) == 0)
	{
			StopAudioStreamForPlayer(playerid);
			SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}Você parou a {FF0000}Musica");
			return 1;
	}

	if(strcmp(cmd, "/abastecer", true) == 0)
	{
		new quantidade, quantia;

		if(sscanf(cmdtext, "s[11]d", cmd, quantidade))
		{
			SendClientMessage(playerid, Vermelho, "Use: /abastecer [litros]");
			return 1;
		}
		if(quantidade <= 0 || GetPlayerGrana(playerid) < quantidade)
		{
			SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente para pagar o frentista.");
			return 1;
		}
		if(AreaPosto[playerid] == 1)
		{
			if(IsPlayerInAnyVehicle(playerid) == 1)
			{
				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(file, sizeof(file), PASTA_CONCE, carro);
					if(DOF2_FileExists(file))
					{
						if(GetPlayerVehicleID(playerid) == DOF2_GetInt(file, "Id"))
						{
							if(quantidade+DOF2_GetInt(file, "Combustivel") < MAX_COMB)
							{
								GivePlayerGrana(playerid, -quantidade);
								DOF2_SetInt(file, "Combustivel", DOF2_GetInt(file, "Combustivel")+quantidade);

								new engine, lights, alarm, doors, bonnet, boot, objective;
								GetVehicleParamsEx(DOF2_GetInt(file, "Id"), engine, lights, alarm, doors, bonnet, boot, objective);
								SetVehicleParamsEx(DOF2_GetInt(file, "Id"), VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);

								format(string, sizeof(string), "Você completou seu tanque com %d litro(s) de combustível.", quantidade);
								SendClientMessage(playerid, COLOR_GREEN, string);
							}
							else if(quantidade+DOF2_GetInt(file, "Combustivel"))
							{
								GivePlayerGrana(playerid, -quantia);
								quantia = MAX_COMB-DOF2_GetInt(file, "Combustivel");
								DOF2_SetInt(file, "Combustivel", MAX_COMB);

								new engine, lights, alarm, doors, bonnet, boot, objective;
								GetVehicleParamsEx(DOF2_GetInt(file, "Id"), engine, lights, alarm, doors, bonnet, boot, objective);
								SetVehicleParamsEx(DOF2_GetInt(file, "Id"), VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);

								format(string, sizeof(string), "Tanque cheio, foram colocados %d litro(s).", quantia);
								SendClientMessage(playerid, COLOR_GREEN, string);
							}
							cCarro[playerid] = DOF2_GetInt(file, "Combustivel");
							return 1;
						}
					}
				}
			}
			else
			{
				format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(quantidade+DOF2_GetInt(file2, "Combustivel") < MAX_COMB)
				{
					GivePlayerGrana(playerid, -quantidade);
					DOF2_SetInt(file2, "Combustivel", DOF2_GetInt(file2, "Combustivel")+quantidade);

					format(string, sizeof(string), "Você encheu galões com %d litro(s) de combustível.", quantidade);
					SendClientMessage(playerid, COLOR_GREEN, string);
				}
				else if(quantidade+DOF2_GetInt(file2, "Combustivel"))
				{
					GivePlayerGrana(playerid, -quantia);
					quantia = MAX_COMB-DOF2_GetInt(file2, "Combustivel");
					DOF2_SetInt(file2, "Combustivel", MAX_COMB);

					format(string, sizeof(string), "Galões cheio, foram colocados %d litro(s).", quantia);
					SendClientMessage(playerid, COLOR_GREEN, string);
				}
				ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Posto de Combustível", "{FFFF00}Você não está em um veículo.\n{FFFFFF}Enchemos galões de combustível para você.\n{FF33FF}Vá até seu carro e use /enchertanque para colocar este combustível.", "OK", "");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não está no posto.");
		}
		return 1;
	}

	if(strcmp(cmd, "/enchertanque", true) == 0)
	{
		new quantidade, quantia;

		if(IsPlayerInAnyVehicle(playerid) == 1)
		{
			format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(playerid));
			quantidade = DOF2_GetInt(file2, "Combustivel");
			if(quantidade > 0)
			{
				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(file, sizeof(file), PASTA_CONCE, carro);
					if(DOF2_FileExists(file))
					{
						if(GetPlayerVehicleID(playerid) == DOF2_GetInt(file, "Id"))
						{
							if(quantidade+DOF2_GetInt(file, "Combustivel") < MAX_COMB)
							{
								DOF2_SetInt(file2, "Combustivel", DOF2_GetInt(file2, "Combustivel")-quantidade);
								DOF2_SetInt(file, "Combustivel", DOF2_GetInt(file, "Combustivel")+quantidade);

								new engine, lights, alarm, doors, bonnet, boot, objective;
								GetVehicleParamsEx(DOF2_GetInt(file, "Id"), engine, lights, alarm, doors, bonnet, boot, objective);
								SetVehicleParamsEx(DOF2_GetInt(file, "Id"), VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);

								format(string, sizeof(string), "Você completou seu tanque com %d litro(s) de combustível.", quantidade);
								SendClientMessage(playerid, COLOR_GREEN, string);

								format(string, sizeof(string), "Resta %d litro(s) em seus galões.", DOF2_GetInt(file2, "Combustivel"));
								SendClientMessage(playerid, Amarelo, string);
							}
							else if(quantidade+DOF2_GetInt(file, "Combustivel"))
							{
								quantia = MAX_COMB-DOF2_GetInt(file, "Combustivel");
								DOF2_SetInt(file2, "Combustivel", DOF2_GetInt(file2, "Combustivel")-quantia);
								DOF2_SetInt(file, "Combustivel", MAX_COMB);

								new engine, lights, alarm, doors, bonnet, boot, objective;
								GetVehicleParamsEx(DOF2_GetInt(file, "Id"), engine, lights, alarm, doors, bonnet, boot, objective);
								SetVehicleParamsEx(DOF2_GetInt(file, "Id"), VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);

								format(string, sizeof(string), "Tanque cheio, foram colocados %d litro(s).", quantia);
								SendClientMessage(playerid, COLOR_GREEN, string);

								format(string, sizeof(string), "Resta %d litro(s) em seus galões.", DOF2_GetInt(file2, "Combustivel"));
								SendClientMessage(playerid, Amarelo, string);
							}
							cCarro[playerid] = DOF2_GetInt(file, "Combustivel");
							return 1;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, "Você não tem galões cheios.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "Entre em seu carro para abastece-lo.");
		}
		return 1;
	}

	if(strcmp(cmd, "/pegararmas", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Policial_M || DOF2_GetInt(file, "Profissao") == Policial_F || DOF2_GetInt(file, "Profissao") == Delegado || DOF2_GetInt(file, "Profissao") == Bope || DOF2_GetInt(file, "Profissao") == Swat || DOF2_GetInt(file, "Profissao") == Narcoticos || DOF2_GetInt(file, "Profissao") == FBI || DOF2_GetInt(file, "Profissao") == Interpol || DOF2_GetInt(file, "Profissao") == LSPD || DOF2_GetInt(file, "aAdmin") == 1)
		{
			new plid;

			if(sscanf(cmdtext, "s[12]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Use: /pegararmas [id]");
				return 1;
			}
			if(IsPlayerInAnyVehicle(plid) || IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "Alguem está dentro de um carro.");
				return 1 ;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode fazer isto com você mesmo.");
				return 1 ;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado.");
			}
			else
			{
				if(GetDistanceBetweenPlayers(plid, playerid) < 10)
				{
					ResetPlayerWeapons(plid);

					format(string, sizeof(string), "O(A) policial %s prendeu suas armas, elas foram levadas para delegacia.", GetPlayerNameEx(playerid));
					SendClientMessage(plid, Vermelho, string);

					SendClientMessage(playerid, COLOR_GREEN, "Armas apreendidas com sucesso.");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Chegue mais perto para apreender as armas.");
				}
			}
		}
		else if(DOF2_GetInt(file, "Profissao") == Exercito || DOF2_GetInt(file, "Profissao") == Policial_R || DOF2_GetInt(file, "Profissao") == ExercitoMilitar || DOF2_GetInt(file, "Profissao") == ExercitoAero || DOF2_GetInt(file, "Profissao") == FuzileiroMilitar || DOF2_GetInt(file, "Profissao") == General || DOF2_GetInt(file, "Profissao") == Major || DOF2_GetInt(file, "Profissao") == Marechal || DOF2_GetInt(file, "Profissao") == Tenente || DOF2_GetInt(file, "Profissao") == Guarda)
		{
			new plid;

			if(sscanf(cmdtext, "s[12]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Use: /pegararmas [id]");
				return 1;
			}
			if(IsPlayerInAnyVehicle(plid) || IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "Alguem está dentro de um carro.");
				return 1 ;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode fazer isto com você mesmo.");
				return 1 ;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado.");
			}
			else
			{
				if(GetDistanceBetweenPlayers(plid, playerid) < 10)
				{
					ResetPlayerWeapons(plid);

					format(string, sizeof(string), "O(A) policial %s prendeu suas armas, elas foram levadas para delegacia.", GetPlayerNameEx(playerid));
					SendClientMessage(plid, Vermelho, string);

					SendClientMessage(playerid, COLOR_GREEN, "Armas apreendidas com sucesso.");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Chegue mais perto para apreender as armas.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid,Vermelho, "Apenas policiais podem apreender armas.");
		}
		return 1;
	}

	if(strcmp(cmd, "/paradoai", true) == 0)
	{
        if(IsACop(playerid))
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Use: /paradoai [id]");
				return 1;
			}
			if(IsPlayerInAnyVehicle(plid) || IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Alguem está dentro de um carro.");
				return 1 ;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode ultilizar este comandos com você mesmo.");
				return 1 ;
			}
			if(pAdmin[plid] > 0)
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode pode abordar um {FFFFFF}ADM{FF0000}.");
				return 1;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}O(A) jogador(a) não está conectado.");
			}
			else
			{
				if(Procurados[plid] == 1 || infratores[plid] == 1)
				{
					if(BaterCartao[playerid] == 1)
        			{
						if(GetDistanceBetweenPlayers(plid, playerid) < 10)
						{
							SetPlayerSpecialAction(plid, SPECIAL_ACTION_HANDSUP);

							format(string, sizeof(string), "O(A) policial %s te deu voz de prisão, portanto fique parado e escute ele.", GetPlayerNameEx(playerid));
							SendClientMessage(plid, Blue, string);

							SendClientMessage(playerid, COLOR_GREEN, "Comando efetuado com sucesso.");
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Chegue mais perto para dar voz de prisao.");
						}
					}
					else
					{
						SendClientMessage(playerid, 0x6495EDAA, "Você prescisa bater cartão para abordar alguém.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Não pode parar uma pessoa que não tenha cometido crimes.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Apenas policiais podem ultilizar este comando.");
		}
		return 1;
	}

	if(strcmp(cmd, "/algemar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(IsACop(playerid))
		{
			new plid;

			if(sscanf(cmdtext, "s[9]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Use: /algemar [id]");
				return 1;
			}
			if(IsPlayerInAnyVehicle(plid) || IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Alguem está dentro de um carro.");
				return 1 ;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode algemar você mesmo.");
				return 1 ;
			}
			if(pAdmin[plid] > 0)
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode pode algemar um {FFFFFF}ADM{FF0000}.");
				return 1;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}O(A) jogador(a) não está conectado.");
			}
			else
			{
				if(Procurados[plid] == 1 || infratores[plid] == 1)
				{
					if(BaterCartao[playerid] == 1)
        			{
						if(GetDistanceBetweenPlayers(plid, playerid) < 10)
						{
							algemado[plid] = 1;
							TogglePlayerControllable(plid, 0);

							format(string, sizeof(string), "%s te algemou.", GetPlayerNameEx(playerid));
							SendClientMessage(plid, Blue, string);

							SendClientMessage(playerid, COLOR_GREEN, "Algemado com sucesso.");
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "Chegue mais perto para algemar.");
						}
					}
					else
					{
						SendClientMessage(playerid, 0x6495EDAA, "Você prescisa bater cartão para algemar alguém.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Não pode algemar uma pessoa que não tenha cometido crimes.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Apenas policiais podem usar este comando.");
		}
		return 1;
	}

	if(strcmp(cmd, "/desalgemar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(IsACop(playerid))
		{
			new plid;

			if(sscanf(cmdtext, "s[12]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Use: /desalgemar [id]");
				return 1;
			}
			if(IsPlayerInAnyVehicle(plid) || IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Alguem está dentro de um carro.");
				return 1 ;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode tirar algemas de você mesmo.");
				return 1 ;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}O(A) jogador(a) não está conectado.");
			}
			else
			{
				if(algemado[plid] == 1)
				{
					if(GetDistanceBetweenPlayers(plid, playerid) < 10)
					{
						algemado[plid] = 0;
						TogglePlayerControllable(plid, 1);

						format(string, sizeof(string), "%s te tirou a algema.", GetPlayerNameEx(playerid));
						SendClientMessage(plid, Blue, string);

						SendClientMessage(playerid, COLOR_GREEN, "Desalgemado com sucesso.");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Chegue mais perto para desalgemar.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Essa pessoa não está algemada.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Apenas policiais podem usar este comando.");
		}
		return 1;
	}

	if(strcmp(cmd, "/prender", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(IsACop(playerid))
		{
			new plid;

			if(sscanf(cmdtext, "s[9]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Use: /prender [id]");
				return 1;
			}
			if(IsPlayerInAnyVehicle(plid) || IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Alguem está dentro de um carro.");
				return 1 ;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode fazer isto com si mesmo.");
				return 1 ;
			}
			if(pAdmin[plid] > 0)
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode pode prender um {FFFFFF}ADM{FF0000}.");
				return 1;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado.");
			}
			else
			{
   				if(BaterCartao[playerid] == 1)
        		{
					if(GetDistanceBetweenPlayers(plid, playerid) < 10)
					{
						if(Procurados[plid] == 1)
						{
							PrenderPlayer(plid);
							GivePlayerGrana(playerid, 5000);

							format(string, sizeof(string), "%s te prendeu. Você estava sendo procurado(a).", GetPlayerNameEx(playerid));
							SendClientMessage(plid, Blue, string);

							SendClientMessage(playerid, 0x6495EDAA, "Você prendeu um(a) jogador(a) procurado(a) e ganhou 5 mil!");
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode prender alguem que não esteja sendo procurado!");
						}
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Chegue mais perto para prender!");
					}
				}
				else
				{
					SendClientMessage(playerid, 0x6495EDAA, "Você prescisa bater cartão para prender alguém.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Apenas policiais podem usar este comando!");
		}
		return 1;
	}

	if(strcmp(cmd, "/venderhotdog", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Hotdog)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}/venderhotdog [id]");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode vender para você mesmo.");
				return 1 ;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}O(A) jogador(a) não está conectado.");
			}
			else
			{
				if(GetDistanceBetweenPlayers(plid, playerid) < 10)
				{

					format(string, sizeof(string), " %s te vendeu um hot dog !.", GetPlayerNameEx(playerid));
					SendClientMessage(plid, Vermelho, string);

					SendClientMessage(playerid, COLOR_GREEN, "Hotdog  Vendido!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Chegue mais perto para Vender!");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Apenas traficantes de armas podem usar este comando!");
		}
		return 1;
	}

	if(strcmp(cmd, "/acg", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == ACG  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada do {FF0000}Atlético Goianiense!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

    if(strcmp(cmd, "/cam", true) == 0)
	{
        format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == CAM  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada do {FF0000}Atlético Mineiro!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

    if(strcmp(cmd, "/cap", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == CAP  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada do {FF0000}Atlético Paranaense!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

    if(strcmp(cmd, "/ava", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == AVA  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada do {FF0000}Avaí!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

    if(strcmp(cmd, "/bah", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == BAH  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada do {FF0000}Bahia!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

    if(strcmp(cmd, "/bot", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == BOT  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada do {FF0000}Botafogo!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

    if(strcmp(cmd, "/cha", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == CHA  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada da {FF0000}Chapecoense!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}
    if(strcmp(cmd, "/cor", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == COR  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada do {FF0000}Corinthians!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

    if(strcmp(cmd, "/cfc", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == CFC  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada do {FF0000}Coritiba!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

	if(strcmp(cmd, "/cru", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == CRU  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada do {FF0000}Cruzeiro!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

	if(strcmp(cmd, "/fla", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == FLA  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada do {FF0000}Flamengo!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

	if(strcmp(cmd, "/flu", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == FLU  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada do {FF0000}Fluminense!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

	if(strcmp(cmd, "/gre", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == GRE  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada do {FF0000}Grêmio!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

	if(strcmp(cmd, "/int", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == INT  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada do {FF0000}Internacional!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

	if(strcmp(cmd, "/pal", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == PAL  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada do {FF0000}Palmeiras!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

	if(strcmp(cmd, "/pon", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == PON  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada da {FF0000}Ponte Preta!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

	if(strcmp(cmd, "/san", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == SAN  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada da {FF0000}Santos!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

	if(strcmp(cmd, "/sao", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == SAO  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada da {FF0000}Sao Paulo!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

	if(strcmp(cmd, "/spo", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == SPO  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada da {FF0000}Sport!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

	if(strcmp(cmd, "/vit", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == VIT  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			format(string, sizeof(string), "{2F4F4F}Eu %s sou da Torcida Organizada da {FF0000}Vitoria!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Vermelho, string);
		}
		return 1;
	}

	if(strcmp(cmd, "/donom", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == DonoM  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[3]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}/donom [texto]");
			}
			else
			{
				format(msg, sizeof(msg), "{52FA46}O(A) Dono do Morro {FFFFFF} %s {52FA46} Diz: {FFFFFF}%s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(C_DonoM, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/venderak", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == TraficanteD || DOF2_GetInt(file, "Profissao") == YKZ || DOF2_GetInt(file, "Profissao") == Mafia || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "/venderak [id]");
				return 1;
			}
			if(IsPlayerInAnyVehicle(plid) || IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "Alguem está dentro de um carro.");
				return 1 ;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode vender uma arma para você mesmo.");
				return 1 ;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado.");
			}
			else
			{
				if(GetDistanceBetweenPlayers(plid, playerid) < 10)
				{
					GivePlayerWeapon(plid, 30, 150);

					format(string, sizeof(string), "Um traficante de armas %s te vendeu uma AK-47, não faça DM fora da Favela.", GetPlayerNameEx(playerid));
					SendClientMessage(plid, Vermelho, string);

					SendClientMessage(playerid, COLOR_GREEN, "Ak 47 Vendida!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Chegue mais perto para Vender!");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Apenas traficantes de armas podem usar este comando!");
		}
		return 1;
	}

	if(strcmp(cmd, "/vendersniper", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == TraficanteD || DOF2_GetInt(file, "Profissao") == YKZ || DOF2_GetInt(file, "Profissao") == Mafia || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[14]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "/vendersniper [id]");
				return 1;
			}
			if(IsPlayerInAnyVehicle(plid) || IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "Alguem está dentro de um carro.");
				return 1 ;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode vender uma arma para você mesmo.");
				return 1 ;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado.");
			}
			else
			{
				if(GetDistanceBetweenPlayers(plid, playerid) < 10)
				{
					GivePlayerWeapon(plid, 34, 25);

					format(string, sizeof(string), "Um traficante de armas %s te vendeu uma Sniper, não faça DM fora da Favela.", GetPlayerNameEx(playerid));
					SendClientMessage(plid, Vermelho, string);

					SendClientMessage(playerid, COLOR_GREEN, "Sniper Vendida!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Chegue mais perto para vender uma Sniper!");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Apenas traficantes de armas podem usar este comando!");
		}
		return 1;
	}

	if(strcmp(cmd, "/venderm4", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == TraficanteD || DOF2_GetInt(file, "Profissao") == YKZ || DOF2_GetInt(file, "Profissao") == Mafia || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "/venderm4 [id]");
				return 1;
			}
			if(IsPlayerInAnyVehicle(plid) || IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "Alguem está dentro de um carro.");
				return 1 ;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode vender uma arma para você mesmo.");
				return 1 ;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado.");
			}
			else
			{
				if(GetDistanceBetweenPlayers(plid, playerid) < 10)
				{
					GivePlayerWeapon(plid, 31, 150);

					format(string, sizeof(string), "Um traficante de armas %s te vendeu uma M4, não faça DM fora da Favela.", GetPlayerNameEx(playerid));
					SendClientMessage(plid, Vermelho, string);

					SendClientMessage(playerid, COLOR_GREEN, "M4 Vendida!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Chegue mais perto para vender um M4!");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Apenas traficantes de armas podem usar este comando!");
		}
		return 1;
	}

	if(strcmp(cmd, "/venderswanoff", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == TraficanteD || DOF2_GetInt(file, "Profissao") == YKZ || DOF2_GetInt(file, "Profissao") == Mafia || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[15]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "/venderswanoff [id]");
				return 1;
			}
			if(IsPlayerInAnyVehicle(plid) || IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "Alguem está dentro de um carro.");
				return 1 ;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode vender uma arma para você mesmo.");
				return 1 ;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado.");
			}
			else
			{
				if(GetDistanceBetweenPlayers(plid, playerid) < 10)
				{
					GivePlayerWeapon(plid, 26, 35);

					format(string, sizeof(string), "Um traficante de armas %s te vendeu uma Swan Off, não faça DM fora da Favela.", GetPlayerNameEx(playerid));
					SendClientMessage(plid, Vermelho, string);

					SendClientMessage(playerid, COLOR_GREEN, "Swan Off Vendida!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Chegue mais perto para vender uma Swan Off!");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Apenas traficantes de armas podem usar este comando!");
		}
		return 1;
	}

	if(strcmp(cmd, "/vendertec", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == TraficanteD || DOF2_GetInt(file, "Profissao") == YKZ || DOF2_GetInt(file, "Profissao") == Mafia || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[11]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "/vendertec [id]");
				return 1;
			}
			if(IsPlayerInAnyVehicle(plid) || IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "Alguem está dentro de um carro.");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode fazer isto com si mesmo.");
				return 1;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado.");
			}
			else
			{
				if(GetDistanceBetweenPlayers(plid, playerid) < 10)
				{
					GivePlayerWeapon(plid, 32, 150);

					format(string, sizeof(string), "Um traficante de armas %s te vendeu uma Tec, não faça DM fora da Favela.", GetPlayerNameEx(playerid));
					SendClientMessage(plid, Vermelho, string);

					SendClientMessage(playerid, COLOR_GREEN, "Tec Vendida!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Chegue mais perto para vender uma Tec!");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Apenas traficantes de armas podem usar este comando!");
		}
		return 1;
	}

	if(strcmp(cmd, "/transferir", true) == 0)
	{
		new plid, quantia;

		if(sscanf(cmdtext, "s[12]ud", cmd, plid, quantia))
		{
			SendClientMessage(playerid, Vermelho, "Use: /transferir [id] [quantidade]");
			return 1;
		}
		if(IsPlayerConnected(plid))
		{
			if(quantia > 0 && GetPlayerGrana(playerid) >= quantia)
			{
				GivePlayerGrana(playerid, -quantia);
				GivePlayerGrana(plid, quantia);

				format(string, sizeof(string), "Você transferiu para %s (ID: %d) a importância de $%d.", GetPlayerNameEx(plid), plid, quantia);
				SendClientMessage(playerid, Amarelo, string);

				format(string, sizeof(string), "Você recebeu $%d de %s (ID: %d).", quantia, GetPlayerNameEx(playerid), playerid);
				SendClientMessage(plid, Amarelo, string);
			}
			else
			{
				SendClientMessage(playerid, Amarelo, "Valor inválido.");
			}
		}
		else
		{
			SendClientMessage(playerid, Amarelo, "ID inválido, tente novamente.");
		}
		return 1;
	}

	if(strcmp(cmd, "/rimar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Rapper  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[7]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Use: /rimar [texto]");
			}
			else
			{
				format(msg, sizeof(msg), "O(a) Rapper %s faz uma rima: %s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(C_Rapper, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/cantar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Cantor)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[8]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "Use: /cantar [texto]");
			}
			else
			{
				format(msg, sizeof(msg), "O(a) Cantor(a) %s canta: %s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(C_Cantor, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/poema", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Poeta)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[7]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "/poeta [poema]");
			}
			else
			{
				format(msg, sizeof(msg), "O(a) Poeta %s recita o poema: %s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(C_Rapper, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/corrida", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[9]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "/corrida [texto]");
			}
			else
			{
				format(msg, sizeof(msg), "O(a) Corredor(a) %s marca um racha: %s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(Azul, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/dk", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Drifter || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[3]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "/dk [texto]");
			}
			else
			{
				format(msg, sizeof(msg), "O(a) Drifter King %s anuncia: %s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(C_Rapper, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/na", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Ninja  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[3]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "/na [texto]");
			}
			else
			{
				format(msg, sizeof(msg), "O(a) Ninja %s anuncia: %s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(C_Ninja, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/chamas", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == MotoqueiroFantasma  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
  	    	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, 0xFF0000AA, "Você tem que estar em uma freeway!");
  	    	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, 0xFF0000AA, "Você deve ser o motorista!");
  	    	if(crioucarro[playerid] == 1) return SendClientMessage(playerid, 0xFF0000AA, "Você nao pode usar esse comando em um /cv");
  	    	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 463) return SendClientMessage(playerid, 0xFF0000AA, "Você tem que estar em uma freeway!");
			if(grider[playerid][0])
			{
	    		DestroyObject(grider[playerid][0]);
	    		DestroyObject(grider[playerid][1]);
	    		DestroyObject(grider[playerid][2]);
	    		grider[playerid][0] = 0;
	    		return 1;
			}
			new Float:vh;
			GetVehicleHealth(GetPlayerVehicleID(playerid), vh);
			if(vh < 250) return SendClientMessage(playerid, 0xFF0000AA, "Repare sua moto antes!");
  	    	grider[playerid][0] = CreateObject(18689, 0.0, 0.0, 0.0, 0.0, 0.0, 256.0);
  	    	grider[playerid][1] = CreateObject(18689, 0.0, 0.0, 0.0, 0.0, 0.0, 256.0);
  	    	grider[playerid][2] = CreateObject(18693, 0.0, 0.0, 0.0, 0.0, 0.0, 256.0);
  	    	AttachObjectToVehicle(grider[playerid][0], GetPlayerVehicleID(playerid), 0.0, 0.6, -1.7, 0.0, 0.0, 0.0);
  	    	AttachObjectToVehicle(grider[playerid][1], GetPlayerVehicleID(playerid), 0.0, -1.4, -1.7, 0.0, 0.0, 0.0);
  	    	AttachObjectToPlayer(grider[playerid][2], playerid, 0.0, -0.01, -0.9, 0.0, 0.0, 0.0);
  	    	ChangeVehicleColor(GetPlayerVehicleID(playerid), 0, 0);
  	    	return 1;
  	    }
	}
	
	if(strcmp("/batercartao", cmd, true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(IsACop(playerid))
		{
			if(!PlayerToPoint(2.0,playerid, 257.0632,69.5435,1003.6406)) return SendClientMessage(playerid,Vermelho,"-> Você não está no ponto para bater cartão.");
	        if(BaterCartao[playerid] == 0)
	        {
	            format(string, sizeof(string), "{75EA00}O(A) Oficial {FFFFFF}%s {75EA00}bateu o cartão e agora está em serviço.", GetPlayerNameEx(playerid));
	            SendClientMessageToAll(-1, string);
	            ResetPlayerWeapons(playerid);
	            SetPlayerArmour(playerid, 100);
	            GivePlayerWeapon(playerid, 3, 1);
	            GivePlayerWeapon(playerid, 24, 200);
	            GivePlayerWeapon(playerid, 25, 300);
	            GivePlayerWeapon(playerid, 29, 500);
	            GivePlayerWeapon(playerid, 31, 200);
	            GivePlayerWeapon(playerid, 34, 40);
	            BaterCartao[playerid] = 1;
	        }
   			else if(BaterCartao[playerid] == 1)
	        {
		        format(string, sizeof(string), "{75EA00}O(A) Oficial {FFFFFF}%s {75EA00}não está em serviço hoje.", GetPlayerNameEx(playerid));
		        SendClientMessageToAll(-1, string);
		        ResetPlayerWeapons(playerid);
		        SendClientMessage(playerid, Vermelho, "-> Você não está em serviço e suas armas foram retiradas.");
		        BaterCartao[playerid] = 0;
	        }
        }
		return 1;
	}

	if(strcmp(cmd, "/escudo", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(IsACop(playerid))

        SetPlayerAttachedObject(playerid,3,18637,13,0.35,0.0,0.0,0.0,0.0,180.0);
        return 1;
    }

	if(strcmp(cmd, "/rescudo", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(IsACop(playerid))

        RemovePlayerAttachedObject(playerid,3);
        return 1;
   	}

 	if(strcmp("/patrulha", cmd, true) == 0)
	{
     	format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
     	if(DOF2_GetInt(file, "fezpatrulha") == 0)
		{
		 	if(IsACop(playerid))
		 	{
       			if(!IsVehicleOccupied(VehiclesFix[103]))
    			{
     				patrulhap[playerid] = 1;
     				new p[256];
					DOF2_SetInt(file, "fezpatrulha", 1);
     				SetPlayerInterior(playerid, 0);
     				PutPlayerInVehicle(playerid, VehiclesFix[103], 0);

     				InRacePatrulha[playerid] = 1;
					CreatePlayerPistaRacePatrulha(playerid);

     				ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Aviso", "{FFFFFF}Seja Bem-Vindo Policial, Agora Você Começará uma Patrulha\n{FFFFFF}Siga os CheckPoints {FF0000}vermelhos {FFFFFF}que se localizam no mapa.\n{FF0000}Boa Sorte e que a Sorte sempre esteje ao seu Favor!\n\n", "Fechar", "");

     				format(p, sizeof(p), "{FF0000}%s {FFFFFF}Iniciou uma {FF0000}Patrulha {FFFFFF}por Toda a {FF0000}Los Santos{FFFFFF}.", GetPlayerNameEx(playerid));
     				SendClientMessageToAll(Branco, p);

				 	return 1;
    			}
    			if(!IsVehicleOccupied(VehiclesFix[104]))
    			{
					new p[256];

     				DOF2_SetInt(file, "fezpatrulha", 1);
     				SetPlayerInterior(playerid, 0);
     				PutPlayerInVehicle(playerid, VehiclesFix[104], 0);

     				InRacePatrulha[playerid] = 1;
     				CreatePlayerPistaRacePatrulha(playerid);

     				ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Aviso", "{FFFFFF}Seja Bem-Vindo Policial, Agora Você Começará uma Patrulha\n{FFFFFF}Siga os CheckPoints {FF0000}vermelhos {FFFFFF}que se localizam no mapa.\n{FF0000}Boa Sorte e que a Sorte sempre esteje ao seu Favor!\n\n", "Fechar", "");

     				format(p, sizeof(p), "{FF0000}%s {FFFFFF}Iniciou uma {FF0000}Patrulha {FFFFFF}por Toda a {FF0000}Los Santos{FFFFFF}.", GetPlayerNameEx(playerid));
     				SendClientMessageToAll(Branco, p);

     				return 1;
    			}
    			else
    			{
        			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Aviso", "{FFFFFF}No momento Contém Vários Policiais Utilizando todas as nossas Viaturas\n{FFFFFF}Aguarde um Tempo e Volte Para Começar sua Patrulha.\n{FF0000}E Lembre-se Você é o Melhor !\n\n", "Fechar","");
    			}
			}
   			else
   			{
				SendClientMessage(playerid, -1, "{FF0000}Você não é um Policial UP e Consiga o Emprego certo!");
    		}
  		}
		else
		{
				SendClientMessage(playerid, Vermelho, "{FF0000}Olá Policial, Você Já fez uma Patrulha. Aguarde Você Upar!");
		}
  		return 1;
    }

	if(strcmp(cmdtext, "/equipar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(IsACop(playerid))
		{
			ResetPlayerWeapons(playerid);
  			GivePlayerWeapon(playerid, 3,1);
            GivePlayerWeapon(playerid, 17,30);
            GivePlayerWeapon(playerid, 24,100);
            GivePlayerWeapon(playerid, 25,100);
            GivePlayerWeapon(playerid, 29,600);
            GivePlayerWeapon(playerid, 31,600);
            GivePlayerWeapon(playerid, 34,100);
            GivePlayerWeapon(playerid, 41,1200);
            GivePlayerWeapon(playerid, 46,1);
            SetPlayerArmour(playerid, 100);
            SetPlayerHealth(playerid, 100);
            SendClientMessage(playerid, Amarelo, "{1E90FF}Parabéns você pegou equipamentos Policiais na Delegacia.");
            GameTextForPlayer(playerid, "~w~Voce ~b~equipou ~w~com sucesso", 5000, 1);
		}
		else
		{
		    SendClientMessage(playerid, Amarelo, "{1E90FF}Voce Não Esta no Lugar Para se Equipar.");
		}
		return 1;
	}

    if(strcmp(cmdtext, "/bandana", true) == 0)
    {
       ShowPlayerDialog(playerid,bandana,DIALOG_STYLE_LIST,"Bandana","Bandana 1\nBandana 2\nBandana 3\nBandana 4\nBandana 5\nBandana 6\nBandana 7\nBandana 8\nBandana 9\nBandana 10\nRemover Bandana","OK","Cancelar");
	   return 1;
	}

    if(strcmp(cmdtext,"/cores",true)==0)
	{
       new cores[1000]; //
       strins(cores,"{228B22}/verde, {1E90FF}/azul, {FF0000}/vermelho, {000000}/preto, {FFA500}/laranja, {F673B5}/rosa, {A020F0}/roxo, {FFFFFF}/branco, {FFFF00}/amarelo\n",strlen(cores));
       strins(cores,"\n",strlen(cores));
       ShowPlayerDialog(playerid,8439, DIALOG_STYLE_MSGBOX, "{F60000} CORES ",cores, "Fechar", "");
	   return 1;
	}
	///===================================================================================
	if (strcmp("/verde", cmdtext, true, 10) == 0)
	{
       new pname[MAX_PLAYER_NAME];
       GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	   SetPlayerColor(playerid, 0x228B22AA);
	   PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	   return 1;
	}
	if (strcmp("/azul", cmdtext, true, 10) == 0)
	{
       new pname[MAX_PLAYER_NAME];
       GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	   SetPlayerColor(playerid, 0x1E90FFAA);
	   PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	   return 1;
	}
	if (strcmp("/vermelho", cmdtext, true, 10) == 0)
	{
       new pname[MAX_PLAYER_NAME];
       GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	   SetPlayerColor(playerid, 0xFF0000AA);
	   PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	   return 1;
	}
    if (strcmp("/preto", cmdtext, true, 10) == 0)
	{
       new pname[MAX_PLAYER_NAME];
       GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	   SetPlayerColor(playerid, 0x000000AA);
	   PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	   return 1;
	}
    if (strcmp("/laranjado", cmdtext, true, 10) == 0)
	{
       new pname[MAX_PLAYER_NAME];
       GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	   SetPlayerColor(playerid, 0xFFA500AA);
	   PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	   return 1;
	}
    if (strcmp("/rosa", cmdtext, true, 10) == 0)
	{
       new pname[MAX_PLAYER_NAME];
       GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	   SetPlayerColor(playerid, 0xF6A9F6AA);
	   PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	   return 1;
	}
	if (strcmp("/roxo", cmdtext, true, 10) == 0)
	{
       new pname[MAX_PLAYER_NAME];
       GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	   SetPlayerColor(playerid, 0xA020F0AA);
	   PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	   return 1;
	}
    if (strcmp("/branco", cmdtext, true, 10) == 0)
	{
       new pname[MAX_PLAYER_NAME];
       GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	   SetPlayerColor(playerid, 0xFFFFFFAA);
	   PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	   return 1;
	}
	if (strcmp("/amarelo", cmdtext, true, 10) == 0)
	{
       new pname[MAX_PLAYER_NAME];
       GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	   SetPlayerColor(playerid, 0xFFFF00AA);
	   PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	   return 1;
	}

    if(strcmp(cmd, "/eusouftsa", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == FTSA  || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "{808080}Eu {FFFFFF}%s Sou da {808080}Força Tática de San Andreas e Protejo a cidade do Crime.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_FTSA, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não é um Agente da FTSA.");
		}
		return 1;
	}

	if(strcmp(cmd, "/ftsa", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file, "aAdmin") == 5 || PlayerInfo[playerid][SCON] == true)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[10]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "/ftsa [texto]");
			}
			else
			{
				format(msg, sizeof(msg), "O(a) Agente da [FTSA] %s publica: %s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(C_Reporter, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não é um Agente da [FTSA]!");
		}
		return 1;
	}

	if(strcmp(cmd, "/curar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Medico || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Use: /curar [id]");
				return 1;
			}
			if(IsPlayerInAnyVehicle(plid) || IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, Vermelho, "Alguem está dentro de um carro.");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não consegue curar você mesmo.");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(GetDistanceBetweenPlayers(plid, playerid) < 50)
				{
					SetPlayerHealth(plid, 100.0);
					SendClientMessage(playerid, COLOR_GREEN, "Parabéns, Você Salvou A Vida De Um Player");
					SendClientMessage(plid, COLOR_WHITE, "Um Médico VIP aplicou uma injeção de netanfetamina e você melhorou!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Chegue mais perto para aplicar seus cuidados VIP!");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Apenas Médicos VIP's Podem Usar Esse Comando!");
		}
		return 1;
	}

	if(strcmp(cmd, "/labia", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Cafetão  || DOF2_GetInt(file, "aAdmin") == 0 || PlayerInfo[playerid][SCON] == true)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[7]s[128]", cmd, texto))
			{
				format(msg, sizeof(msg), "Iae gata, vem comigo que eu %s te faço ficar rica.", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(C_Cafetão, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/empresa", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Empresarial || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "{FF0000}Eu {ffffff}%s {FF0000}sou um(a) Advogado(a) Empresarial.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Empresarial, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/vovo", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Noel || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "{FFFFFF}Eu %s {FFFF00}Sou o Papai Noel.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Noel, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/recursos", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Recursos || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "{FFFFFF}Eu %s {FFFF00}Sou o Diretor do RH.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Recursos, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/Consultor", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Consultor || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "{FFFFFF}Eu %s {FFFF00}Sou um Consultor Finaceiro.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Consultor, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/nagovernador", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == GovernadorSergipe  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um(a) Governador(a) De Sergipe.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_GovernadorSergipe, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/naVigilante", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Vigilante  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um Vigilante.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Vigilante, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/analfabeto", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Analfabeto  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um Analfabeto.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Analfabeto, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/tec", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == TEC  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou da TEC - Torcida Esquadrão Colorado.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_TEC, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/Naluguel", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Marido  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um Marido de Aluguel me Contratem !", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Marido, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/desgrassa", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Ministro  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um Ministro da Desgraça. !", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Ministro, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/PT", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == AgenteDoPT  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um(a) Agente do PT - Partido Trabalhista.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Macumbeiro, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/tta", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == TTA  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou da TTA - Torcida Organizada Trovão Azul.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_TTA, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

    if(strcmp(cmd, "/ffr", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == FFR  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "{808080}Eu {FFFFFF}%s {808080}Sou Da {FF0000}Family {FFFF00}For {008B00}Reggae.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_FFR, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão.");
		}
		return 1;
	}

    if(strcmp(cmd, "/op", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == OP  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "{808080}Eu {FFFFFF}%s {808080}Sou Da Gang {FF0000}Os Pira.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_OP, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão.");
		}
		return 1;
	}

    if(strcmp(cmd, "/FTSA", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == FTSA  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "{808080}Eu {FFFFFF}%s Sou da {808080}Força Tática de San Andreas e Protejo a cidade do Crime.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_FTSA, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/naBSL", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == VagabundoBVL  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um(a) Vagabundo(a) [BSL].", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_VagabundoBVL, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/Wolverine", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Wolverine  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou o Wolverine.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Wolverine, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/Robin", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Robin || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou o Robin Wood", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Robin, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/Lanterna", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == LanternaV || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou o Lanterna Verde", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_LanternaV, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/Capitao", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == CapitaoA  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou o Capitão América", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_CapitaoA, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/hulk", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Hulk  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou o Incrivél Hulk", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Hulk, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/Patata", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Patata  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou o Patata.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Patata, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/10", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Ben10  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s digo que é a hora do herói, Porque sou o Ben 10.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Ben10, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/Mask", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Mascara  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou o Mascará.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Mascara, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/Thor", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Thor  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou o Thor.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Thor, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/flash", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Flash  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou o Flash.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Flash, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/Governar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Governador  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou o Governador De Los Santos.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Governador, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/morcego", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Batman  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou o Batman.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Batman, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/familia", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == PaiFamilia  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um Pai de Familía tenham pena de min.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_PaiFamilia, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/nagringo", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Gringo  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um Gringo.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Gringo, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/Mine", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == JogadorMine  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um Jogador de Minecraft.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_JogadorMine, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/Samp", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == JogadorSamp  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um Jogador de SAMP.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_JogadorSamp, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/najuiz", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Juiz  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um Juiz Federal.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Juiz, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/obras", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Obras  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um Mestre em Obras.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_Obras, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(strcmp(cmd, "/tecnico", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == TécnicoInformática  || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "Eu %s sou um Técnico Em Informática.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_TécnicoInformática, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BSL - INFO] Você não tem permissão..");
		}
		return 1;
	}

	if(!strcmp(cmd, "/Anuncio", true))
	{
		format(STRX, sizeof(STRX), "Mecanico\nAgente Imobiliario\nEmpresario\nMotorista Particular\nTaxista\nUber\nMotorista de Onibus");
		ShowPlayerDialog(playerid, annuncios, DIALOG_STYLE_LIST, "Anuncios", STRX, "OK", "Cancelar");
		return 1;
	}

	if(strcmp(cmd, "/noticiar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Jornalista || DOF2_GetInt(file, "Profissao") == Reporter || DOF2_GetInt(file, "Profissao") == Ancora || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[10]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "/noticiar [texto]");
			}
			else
			{
				format(msg, sizeof(msg), "O(a) Jornalista %s publica uma notícia: %s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(C_Reporter, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/publicar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Correios)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[10]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "/publicar [texto]");
			}
			else
			{
				format(msg,sizeof(msg), "O(a) Jornalista %s publica uma carta: %s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(C_Reporter, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/discurso", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(PlayerInfo[playerid][SCON] == true)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[10]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "/discurso [texto]");
			}
			else
			{
				format(msg, sizeof(msg), "O(a) Prefeito %s discursa: %s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(Azul, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/discursar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Vereador || PlayerInfo[playerid][SCON] == true)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[11]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "/discursar [texto]");
			}
			else
			{
				format(msg, sizeof(msg), "{52FA46}O(A) Vereador(A){FFFFFF}%s {52FA46}discursa: {FFFFFF}%s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(C_Vereador, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/terror", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Terrorista || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[8]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "/terror [texto]");
			}
			else
			{
				format(msg, sizeof(msg), "O(a) Terrorista %s ameaça: %s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(C_Terrorista, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/festa", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new texto[128], msg[128];

			if(sscanf(cmdtext, "s[7]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "/festa [texto]");
			}
			else
			{
				format(msg, sizeof(msg), "O(a) Festeiro %s anuncia uma festa: %s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(Azul, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/reparar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Mecanico || IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid) || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
				RepairVehicle(GetPlayerVehicleID(playerid));

				SendClientMessage(playerid, Blue, "[INFO] {FFFFFF}Você consertou um carro");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não está em um veículo para consertar.");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/concertar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		{
			if(DOF2_GetInt(file, "Concerto") == 1)
			{
				RepairVehicle(GetPlayerVehicleID(playerid));
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não tem um Kit de Missil");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/vcontrole", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Mecanico || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			#if defined VControleUser
			if(!IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, 0xCC0000FF, "Você precisa estar em um veículo para usar este comando.");
			}
			else
			{
				ShowPlayerDialog(playerid, vcontrole, DIALOG_STYLE_LIST, "Controle", "{FF0000}Luzes\n{0800FF}Abrir/Fechar Capo\n{00FF08}Abrir/Fechar Boot\n{FFFF00}Motor\n{AE00FF}Alarme", "Confirmar", "Cancelar");
			}
			#else
			SendClientMessage(playerid, LARANJA, "Comando desativado temporáriamente.");
			#endif
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

	if(strcmp("/tunar", cmd, true) == 0)
	{
        if(NaCorrida[playerid] == true) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}[ATENÇÃO]{FFFFFF}: Comando Bloqueado em Eventos Devido ao uso abusivo do {FF0000}Missil{FFFFFF}! .");
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid) ||  DOF2_GetInt(file, "Profissao") == Mecanico || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, 0xCC0000FF, "Você precisa estar em um veículo para usar este comando.");
			}
			else
			{
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

	if(strcmp(cmd, "/pintar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Mecanico || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new cor1, cor2;

			if(sscanf(cmdtext, "s[8]dd", cmd, cor1, cor2))
			{
				SendClientMessage(playerid, Vermelho, "/pintar [cor1] [cor2]");
				return 1;
			}
			if(IsPlayerInVehicle(playerid, GetPlayerVehicleID(playerid)))
			{
				ChangeVehicleColor(GetPlayerVehicleID(playerid), cor1, cor2);
				SendClientMessage(playerid, Blue, "Você pintou o carro, cobre pelo serviço.");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

	if(strcmp(cmd, "/comandospremium", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsPlayerVIPT(playerid))
			{
				strcat(string, "{FFFFFF}/tunar /comemorar /armas \n");
				strcat(string, "{FFFFFF}/cvip /cv /godcar /jetpack /hydra /mudarcor \n", sizeof(string));
				strcat(string, "{FFFFFF}/kitvip /vida /tagpreon /tagpreoff \n", sizeof(string));
				strcat(string, "{FFFFFF}/virar /hydra \n", sizeof(string));
				strcat(string, "{EE5C42}Teles: {FFFFFF}/Avenidalv /Avenidals /AvenidaSF /Vinewood\n", sizeof(string));
				ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, ".:: - Comandos VIP Premium - ::.", string, "OK", "");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/comandosprestige", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsPlayerVIPMT(playerid))
			{
				strcat(string, "{FFFFFF} /tunar /comemorar /armas /godcar \n", sizeof(string));
				strcat(string, "{FFFFFF} /cvip /cv /godcar /jetpack  /hunter /rhino /mudarcor - /tagpoff\n", sizeof(string));
				strcat(string, "{FFFFFF} /imortal /kitvipm /vida /tagvon /tagpon\n", sizeof(string));
				strcat(string, "{FFFFFF} /virar /virarp /colissao /hydra /anp\n", sizeof(string));
				strcat(string, "{EE5C42} Teleportes:{FFFFFF}/Avenidalv /Avenidals /AvenidaSF /Vinewood", sizeof(string));
				ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, ".:: - Comandos VIP $Prestige$ - ::.", string, "OK", "");
			}
		}
		return 1;
	}
	
	if(strcmp("/anp", cmd, true) == 0)
	{
		if(IsPlayerVIPMT(playerid))
		{
			new texto[128];

			if(sscanf(cmdtext, "s[4]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Digite: /anp [texto]");
			}
			else
			{
				format(string, sizeof(string), "O(A) VIP $Prestige$ {FFFFFF} %s Diz: {FFFF00}%s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(Amarelo, string);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}{FF0000}(ERRO){FFFFFF} Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/cmdsdj", cmd, true) == 0)
	{
		new strcmd[900];

		strcat(strcmd, "{FF0000}-{FFFFFF} /Mp3Todos\n", sizeof(strcmd));
		strcat(strcmd, "{FF0000}-{00FF00} Como colocar música\n", sizeof(strcmd));
		strcat(strcmd, "{FF0000}-{FFFFFF} Pega link do youtube converte no site abaixo\n", sizeof(strcmd));
		strcat(strcmd, "{FF0000}-{FFFFFF} onlinevideoconverter.com/pt/mp3-converter\n", sizeof(strcmd));
		strcat(strcmd, "{FF0000}-{FFFFFF} Depois de converter onde está baixar\n", sizeof(strcmd));
		strcat(strcmd, "{FF0000}-{FFFFFF} Clique com botão direito e copie depois só colar link!\n", sizeof(strcmd));
        strcat(strcmd, "{FF0000}-{00FF00} Para falar no Chat dj use: /cdj\n", sizeof(strcmd));
        strcat(strcmd, "{FF0000}-{00FF00} /musicast para colocar musicas ja prontas", sizeof(strcmd));
		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, ".:: - Comandos Úteis - ::.", strcmd, "OK", "");
		return 1;
	}

	if(strcmp(cmd, "/darterrestre", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[14]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /darterrestre [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file2, "HabTerrestre", 1);

				format(string, sizeof(string), "Comando efetuado com sucesso!", GetPlayerNameEx(plid));
				SendClientMessage(playerid, 0x6495EDAA, string);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}te deu uma carteira terrestre.", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

 	if(strcmp(cmd, "/dartodas", true) == 0)
	{
	    new aname[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
	    format(file, sizeof(file), PASTA_CONTAS, aname);
	    if(pAdmin[playerid] > 4)
		{
	        new tmp[256];
	        new plid;
	        tmp = strtok(cmdtext, idx);
	        if (!strlen(tmp)) {
	            SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Digite: /dartodas [id]");
	            return 1;
	        }
	        plid = strval(tmp);
	        new pname[MAX_PLAYER_NAME];
	        GetPlayerName(plid, pname, MAX_PLAYER_NAME);
	        format(file2, sizeof(file2), PASTA_CONTAS, pname);
	        if (IsPlayerConnected(plid))
			{
	            DOF2_SetInt(file2, "Carteira", 1);
	            DOF2_SetInt(file2, "HabTerrestre", 1);
	            DOF2_SetInt(file2, "HabAerea", 1);
	            DOF2_SetInt(file2, "HabNautica", 1);
	            DOF2_SetInt(file2, "Porte", 1);
	            format(string, sizeof(string), "{FF0000}|INFO|{00BFFF} Você deu Todas as Carteiras a %s.", pname);
	            SendClientMessage(playerid, Blue, string);
	            format(string, sizeof(string), "[INFO]{FFFFFF}O Administrador {6666ff}%s (%d) {FFFFFF}te deu todas as licencas.", aname, playerid);
	            SendClientMessage(plid, tcadm, string);
	            return 1;
	        } else {
	            SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}{FF0000}|INFO|{00BFFF} ID inválido");
	            return 1;
	        }
	    }
	}

	if(strcmp(cmd, "/daraerea", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /daraerea [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file2, "HabAerea", 1);

				format(string, sizeof(string), "Comando efetuado com sucesso!", GetPlayerNameEx(plid));
				SendClientMessage(playerid, 0x6495EDAA, string);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}te deu uma carteira aérea.", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

	if(strcmp(cmd, "/darnautica", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[12]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /darnautica [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file2, "HabNautica", 1);

				format(string, sizeof(string), "Comando efetuado com sucesso!", GetPlayerNameEx(plid));
				SendClientMessage(playerid, 0x6495EDAA, string);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}te deu uma carteira náutica.", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

	if(strcmp(cmd, "/darcarteira", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[13]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /darcarteira [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file2, "Carteira", 1);

				format(string, sizeof(string), "Comando efetuado com sucesso!", GetPlayerNameEx(plid));
				SendClientMessage(playerid, 0x6495EDAA, string);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}te deu uma carteira de trabalho.", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

	if(strcmp(cmd, "/darporte", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[10]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /darporte [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file2, "Porte", 1);

				format(string, sizeof(string), "Comando efetuado com sucesso!", GetPlayerNameEx(plid));
				SendClientMessage(playerid, 0x6495EDAA, string);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}te deu porte de armas.", GetPlayerNameEx(playerid));
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

	if(strcmp(cmd, "/criarchao", true) == 0)
	{
		new modelo, Float:pX, Float:pY, Float:pZ;

		if(sscanf(cmdtext, "s[13]d", cmd, modelo))
		{
			SendClientMessage(playerid, Vermelho, "Use: /criachao [modelo]");
			SendClientMessage(playerid, 0x6495EDAA, "Modelos permitidos: 969, 971, 975, 976, 980, 988, 989, 2990, 8378, 16775, 10671, 13187, 16773");
			return 1;
		}
		if(!(modelo ==969 || modelo ==971 || modelo ==975 || modelo ==976 || modelo ==980 || modelo ==988 || modelo ==989 || modelo ==2990 || modelo==8378 || modelo==16775 || modelo==10671 || modelo==13187 || modelo==16773))
		{
			SendClientMessage(playerid, Vermelho, "Use um modelo válido! | Modelos: 969, 971, 975, 976, 980, 988, 989, 2990, 8378, 16775, 10671, 13187, 16773");
			return 1;
		}
		if(pAdmin[playerid] > 6)
		{
			GetPlayerPos(playerid, pX, pY, pZ);
			PlayerCreateSamuGay(playerid, modelo, pX, pY, pZ, GetPlayerInterior(playerid));
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/deletarchao", true) == 0)
	{
		new samuid;

		if(sscanf(cmdtext, "s[15]d", cmd, samuid))
		{
			SendClientMessage(playerid, Vermelho, "/deletarchao [id]");
			return 1;
		}
		if(pAdmin[playerid] > 6)
		{
			format(string, sizeof(string), PASTA_SAMUGAY, samuid);
			if(DOF2_FileExists(string))
			{
				if(DOF2_GetInt(string, "TDono") == 3)
				{
					SendClientMessage(playerid, Vermelho, "Este id já foi deletado!");
				}
				else
				{
					DestroyObject(DOF2_GetInt(string, "Id"));

					DOF2_SetInt(string, "TDono", 3);
					DOF2_SetString(string, "Dono", "Ninguem");

					DOF2_SetString(string, "Convidado1", "Ninguem");
					DOF2_SetString(string, "Convidado2", "Ninguem");
					DOF2_SetString(string, "Convidado3", "Ninguem");

					DOF2_SetInt(string, "Id", INVALID_OBJECT_ID);
					SendClientMessage(playerid, roxo, "Chão deletado com sucesso!");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	// P.
	if(strcmp(cmd, "/criarportao", true) == 0)
	{
    	if(islucio(playerid) == 1) return SendClientMessage(playerid, Vermelho, "Você não pode criar portão não seu portugues filha da puta");
		if(pAdmin[playerid] == 7)
		{
			ShowPlayerDialog(playerid, CriarPortao, DIALOG_STYLE_INPUT, "Criar Portão", "{FFFFFF}Digite o ID do portão que deseja criar:\n", "Criar", "Fechar");
		    SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Modelos permitidos:{FFFFFF} 969, 971, 975, 976, 980, 988, 989, 2990, 8378, 16775, 10671, 13187, 16773");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/liberarportao", true) == 0)
	{
		if(pAdmin[playerid] < 2) return 1;
		new id, F[90];
		if(sscanf(cmdtext, "s[7]d", cmd, id)) return SendClientMessage(playerid, Vermelho, "Uso correto: /liberarportao [id]");
		format(F, sizeof(F), PASTA_PORTOES, id);
		if(!DOF2_FileExists(F)) return SendClientMessage(playerid, Vermelho, "Portão inexistente.");
		LiberarPortao(playerid, id);
		return 1;
	}

	if(strcmp(cmd, "/darchave", true) == 0)
	{
		if(pAdmin[playerid] < 0) return 1;
		new id, p;
		if(sscanf(cmdtext, "s[7]dd", cmd, p, id)) return SendClientMessage(playerid, Vermelho, "Uso correto: /darchave [player id] [portão id]");
		new F[90];
		format(F, sizeof(F), PASTA_PORTOES, id);
		if(!DOF2_FileExists(F)) return SendClientMessage(playerid, Vermelho, "Portão inexistente.");
		LiberarPortao(-1, id);
		DOF2_SetString(F, "Dono", GetPlayerNameEx(p));

		new msg[144];
		format(msg, sizeof(msg), "-> %s lhe deu a chave do portão ID: %d.", GetPlayerNameEx(playerid), id);
		SendClientMessage(p, -1, msg);

		format(msg, sizeof(msg), "Você deu a chave do portão ID: %d para o jogador: %s.", id, GetPlayerNameEx(p));
		SendClientMessage(playerid, Vermelho, msg);
		return 1;
	}

	if(strcmp(cmd, "/darcopia", true) == 0)
	{
		new id, plid;
		if(sscanf(cmdtext, "s[7]dd", cmd, plid, id)) return SendClientMessage(playerid, Vermelho, "Uso correto: /darcopia [player id] [portão id]");
		new F[90], msg[144];
		format(F, sizeof(F), PASTA_PORTOES, id);
		if(!DOF2_FileExists(F)) return SendClientMessage(playerid, Vermelho, "Portão inexistente.");
		if(!IsPlayerConnected(plid)) return SendClientMessage(playerid, Vermelho, "Jogador não conectado.");
		if(strcmp(DOF2_GetString(F, "Dono"), GetPlayerNameEx(playerid)) && pAdmin[playerid] <= 3) return SendClientMessage(playerid, Vermelho, "Você não é dono deste portão.");

	    if(!strcmp(DOF2_GetString(F, "Chave1"), "Ninguem"))
		{
		    DOF2_SetString(F, "Chave1", GetPlayerNameEx(plid));
		    format(msg, sizeof(msg), "{EEC900}Você deu a copia da chave do portão {FFFFFF}%d {EEC900}para {FFFFFF}%s{EEC900}.", id, GetPlayerNameEx(plid));
		    SendClientMessage(playerid, -1, msg);
		    format(msg, sizeof(msg), "{EEC900}{FFFFFF}%s {EEC900}lhe deu uma copia da chave do portão {FFFFFF}%d{EEC900}.", GetPlayerNameEx(playerid), id);
		    SendClientMessage(plid, -1, msg);
		}
		else if(!strcmp(DOF2_GetString(F, "Chave2"), "Ninguem"))
		{
		    DOF2_SetString(F, "Chave2", GetPlayerNameEx(plid));
		    format(msg, sizeof(msg), "{EEC900}Você deu a copia da chave do portão {FFFFFF}%d {EEC900}para {FFFFFF}%s{EEC900}.", id, GetPlayerNameEx(plid));
		    SendClientMessage(playerid, -1, msg);
		    format(msg, sizeof(msg), "{EEC900}{FFFFFF}%s {EEC900}lhe deu uma copia da chave do portão {FFFFFF}%d{EEC900}.", GetPlayerNameEx(playerid), id);
		    SendClientMessage(plid, -1, msg);
		}
		else if(!strcmp(DOF2_GetString(F, "Chave3"), "Ninguem"))
		{
		    DOF2_SetString(F, "Chave3", GetPlayerNameEx(plid));
			format(msg, sizeof(msg), "{EEC900}Você deu a copia da chave do portão {FFFFFF}%d {EEC900}para {FFFFFF}%s{EEC900}.", id, GetPlayerNameEx(plid));
		    SendClientMessage(playerid, -1, msg);
		    format(msg, sizeof(msg), "{EEC900}{FFFFFF}%s {EEC900}lhe deu uma copia da chave do portão {FFFFFF}%d{EEC900}.", GetPlayerNameEx(playerid), id);
		    SendClientMessage(plid, -1, msg);
		}
		else if(!strcmp(DOF2_GetString(F, "Chave4"), "Ninguem"))
		{
		    DOF2_SetString(F, "Chave4", GetPlayerNameEx(plid));
		  	format(msg, sizeof(msg), "{EEC900}Você deu a copia da chave do portão {FFFFFF}%d {EEC900}para {FFFFFF}%s{EEC900}.", id, GetPlayerNameEx(plid));
		    SendClientMessage(playerid, -1, msg);
		    format(msg, sizeof(msg), "{EEC900}{FFFFFF}%s {EEC900}lhe deu uma copia da chave do portão {FFFFFF}%d{EEC900}.", GetPlayerNameEx(playerid), id);
		    SendClientMessage(plid, -1, msg);
		}
		else if(!strcmp(DOF2_GetString(F, "Chave5"), "Ninguem"))
		{
		    DOF2_SetString(F, "Chave5", GetPlayerNameEx(plid));
		   	format(msg, sizeof(msg), "{EEC900}Você deu a copia da chave do portão {FFFFFF}%d {EEC900}para {FFFFFF}%s{EEC900}.", id, GetPlayerNameEx(plid));
		    SendClientMessage(playerid, -1, msg);
		    format(msg, sizeof(msg), "{EEC900}{FFFFFF}%s {EEC900}lhe deu uma copia da chave do portão {FFFFFF}%d{EEC900}.", GetPlayerNameEx(playerid), id);
		    SendClientMessage(plid, -1, msg);
		}
		else SendClientMessage(playerid, Vermelho, "Este portão já exedeu o limite de cópias.");
		return 1;
	}

	if(strcmp(cmd, "/tomarchave", true) == 0)
	{
		new Nick[MAX_PLAYER_NAME], id;
		if(sscanf(cmdtext, "s[7]dd", cmd, Nick, id)) return SendClientMessage(playerid, Vermelho, "Uso correto: /tomarchave [Nick] [portão id]");
		new F[90], msg[144];
		format(F, sizeof(F), PASTA_CONTAS, Nick);
		if(!DOF2_FileExists(F)) return SendClientMessage(playerid, Vermelho, "Usuario inexistente.");
		format(F, sizeof(F), PASTA_PORTOES, id);
		if(!DOF2_FileExists(F)) return SendClientMessage(playerid, Vermelho, "Portão inexistente.");

		if(!strcmp(DOF2_GetString(F, "Chave1"), Nick))
		{
		    DOF2_SetString(F, "Chave1", "Ninguem");
			format(msg, sizeof(msg), "{EEC900}Você tomou a chave do {FFFFFF}%s{EEC900}.", Nick);
			SendClientMessage(playerid, -1, msg);
		}
		else if(!strcmp(DOF2_GetString(F, "Chave2"), Nick))
		{
		    DOF2_SetString(F, "Chave2", "Ninguem");
			format(msg, sizeof(msg), "{EEC900}Você tomou a chave do {FFFFFF}%s{EEC900}.", Nick);
			SendClientMessage(playerid, -1, msg);
		}
		else if(!strcmp(DOF2_GetString(F, "Chave3"), Nick))
		{
		    DOF2_SetString(F, "Chave3", "Ninguem");
			format(msg, sizeof(msg), "{EEC900}Você tomou a chave do {FFFFFF}%s{EEC900}.", Nick);
			SendClientMessage(playerid, -1, msg);
		}
		else if(!strcmp(DOF2_GetString(F, "Chave4"), Nick))
		{
		    DOF2_SetString(F, "Chave4", "Ninguem");
			format(msg, sizeof(msg), "{EEC900}Você tomou a chave do {FFFFFF}%s{EEC900}.", Nick);
			SendClientMessage(playerid, -1, msg);
		}
		else if(!strcmp(DOF2_GetString(F, "Chave5"), Nick))
		{
		    DOF2_SetString(F, "Chave5", "Ninguem");
			format(msg, sizeof(msg), "{EEC900}Você tomou a chave do {FFFFFF}%s{EEC900}.", Nick);
			SendClientMessage(playerid, -1, msg);
		}
		else SendClientMessage(playerid, Vermelho, "Este jogador não possui a chave deste portão.");
		return 1;
	}

	if(strcmp(cmd, "/deletarportao", true) == 0)
	{
		if(pAdmin[playerid] < 3) return 1;
		new id;
		if(sscanf(cmdtext, "s[7]d", cmd, id)) return SendClientMessage(playerid, Vermelho, "Uso correto: /deletarportao [id]");
		new F[90];
		format(F, sizeof(F), PASTA_PORTOES, id);
		if(!DOF2_FileExists(F)) return SendClientMessage(playerid, Vermelho, "Portão inexistente.");

		DOF2_RemoveFile(F);
		DestroyDynamicObject(_Portao[id]);
		DestroyDynamic3DTextLabel(_TextPortao[id]);

		new msg[80];
		format(msg, sizeof(msg), "O(A) Administrador %s deletou o portão ID: %d.", GetPlayerNameEx(playerid), id);
		SendClientMessageToAll(Azul, msg);
		return 1;
	}

	if(strcmp(cmd, "/deletportoes", true) == 0)
	{
		if(pAdmin[playerid] <= 6) return 1;
		ShowPlayerDialog(playerid, DeletarAll, DIALOG_STYLE_MSGBOX, "Atenção", "{FF0000}Você tem certeza que deseja fazer isto?\nEste comando irá deletar todos os portões do servidor!\n", "Sim", "Nao");
		return 1;
	}

	if(strcmp(cmd, "/libtodospt", true) == 0)
	{
		if(pAdmin[playerid] <= 6) return 1;
		ShowPlayerDialog(playerid, LiberarAll, DIALOG_STYLE_MSGBOX, "Atenção", "{FF0000}Você tem certeza que deseja fazer isto?\nEste comando irá liberar todos os portões do servidor!\n", "Sim", "Nao");
		return 1;
	}

	if(strcmp(cmd, "/infoportao", true) == 0)
	{
		new id;
		if(sscanf(cmdtext, "s[7]d", cmd, id)) return SendClientMessage(playerid, Vermelho, "Uso correto: /infoportao [id]");
		new F[90];
		format(F, sizeof(F), PASTA_PORTOES, id);
		if(!DOF2_FileExists(F)) return SendClientMessage(playerid, Vermelho, "Portão inexistente.");

		new msg[144], strcmd[200];
		format(msg, sizeof(msg), "{EEC900}Portão ID: %d - Dono: %s\n", id, DOF2_GetString(F, "Dono"));
		strcat(strcmd, msg, sizeof(strcmd));
		format(msg, sizeof(msg), "Chave 1: %s - Chave 2: %s - Chave 3: %s\n", DOF2_GetString(F, "Chave1"), DOF2_GetString(F, "Chave2"), DOF2_GetString(F, "Chave3"));
		strcat(strcmd, msg, sizeof(strcmd));
		format(msg, sizeof(msg), "Chave 4: %s - Chave 5: %s\n", DOF2_GetString(F, "Chave4"), DOF2_GetString(F, "Chave5"));
		strcat(strcmd, msg, sizeof(strcmd));
		ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "Info Portão", strcmd, "Fechar", "");
		return 1;
	}

	if(strcmp(cmd, "/irportao", true) == 0)
	{
		if(pAdmin[playerid] <= 3) return 1;
		new id;
		if(sscanf(cmdtext, "s[7]d", cmd, id)) return SendClientMessage(playerid, Vermelho, "Uso correto: /irportao [id]");
		new F[90];
		format(F, sizeof(F), PASTA_PORTOES, id);
		if(!DOF2_FileExists(F)) return SendClientMessage(playerid, Vermelho, "Portão inexistente.");
		SetPlayerPos(playerid, DOF2_GetFloat(F, "PosX")+2, DOF2_GetFloat(F, "PosY")+2, DOF2_GetFloat(F, "PosZ"));
		SetPlayerInterior(playerid, 0);
		return 1;
	}

	if(strcmp(cmd, "/recarregarportoes", true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true) return 1;
		DestruirPortoes();
		SetTimer("RecarregarP", 3000, 0);
		SendClientMessage(playerid, Vermelho, "Recarregando portões...");
		return 1;
	}

	if(strcmp(cmd, "/liberartodosportoes", true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			for(new portao = 0; portao < MAX_PORTOES; portao++)
			{
				format(string, sizeof(string), PASTA_PORTOES, portao);
				if(DOF2_FileExists(string))
				{
					if(DOF2_GetInt(string, "TDono") == 1)
					{
						DOF2_SetString(string, "Dono", "Ninguem");
						DOF2_SetString(string, "Convidado1", "Ninguem");
						DOF2_SetString(string, "Convidado2", "Ninguem");
						DOF2_SetString(string, "Convidado3", "Ninguem");
						DOF2_SetInt(string, "TDono", 0);
					}
				}
			}
			SendClientMessage(playerid, Amarelo, "Todos portões foram liberados.");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/tagpon", cmd, true) == 0)       //tag prestige on
	{
	    if(noevento[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Não é permitido usar este comando em um evento.");
     	if(IsPlayerVIPMT(playerid) || DOF2_GetInt(file, "aAdmin") >= 1)
		{
            if(pAdmin[playerid] == 1 || pAdmin[playerid] == 2 || pAdmin[playerid] == 3 || pAdmin[playerid] == 4 || pAdmin[playerid] == 5) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode usar isto enquanto é um membro da equipe.");

            format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
 			if(DOF2_GetInt(file, "Tag") == 1)
   			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Use: /tagpoff para remover sua tag.");
				DOF2_SetInt(file, "Tag", 0);
    		}
   			else SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você já está com a tag on.");
  		}
		else SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Permissão negada.");
  		return 1;
	}

 	if(strcmp("/tagpoff", cmd, true) == 0)     //tag prestige off
	{
	    if(noevento[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Não é permitido usar este comando em um evento.");
     	if(IsPlayerVIPMT(playerid) || DOF2_GetInt(file, "aAdmin") >= 1)
		{
            if(pAdmin[playerid] == 1 || pAdmin[playerid] == 2 || pAdmin[playerid] == 3 || pAdmin[playerid] == 4 || pAdmin[playerid] == 5) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode usar isto enquanto é um membro da equipe.");

            format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
 			if(DOF2_GetInt(file, "Tag") == 0)
   			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Use: /tagpon para voltar ao normal.");
				DOF2_SetInt(file, "Tag", 1);
    		}
   			else SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você já está com a tag off.");
  		}
		else SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Permissão negada.");
  		return 1;
   	}

	if(strcmp("/tagpreon", cmd, true) == 0)    //tag premium on
	{
	    if(noevento[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Não é permitido usar este comando em um evento.");
     	if(IsPlayerVIPT(playerid) || DOF2_GetInt(file, "aAdmin") >= 1)
		{
            if(pAdmin[playerid] == 1 || pAdmin[playerid] == 2 || pAdmin[playerid] == 3 || pAdmin[playerid] == 4 || pAdmin[playerid] == 5) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode usar isto enquanto é um membro da equipe.");

            format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
 			if(DOF2_GetInt(file, "Tag") == 1)
   			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Use: /tagpreoff para remover sua tag.");
				DOF2_SetInt(file, "Tag", 0);
    		}
   			else SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você já está com a tag on.");
  		}
		else SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Permissão negada.");
  		return 1;
	}

 	if(strcmp("/tagpreoff", cmd, true) == 0)      //tag premium off
	{
	    if(noevento[playerid] == 1) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Não é permitido usar este comando em um evento.");
     	if(IsPlayerVIPT(playerid) || DOF2_GetInt(file, "aAdmin") >= 1)
		{
            if(pAdmin[playerid] == 1 || pAdmin[playerid] == 2 || pAdmin[playerid] == 3 || pAdmin[playerid] == 4 || pAdmin[playerid] == 5) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode usar isto enquanto é um membro da equipe.");

            format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
 			if(DOF2_GetInt(file, "Tag") == 0)
   			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Use: /tagpreon para voltar ao normal.");
				DOF2_SetInt(file, "Tag", 1);
    		}
   			else SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você já está com a  tag off.");
  		}
		else SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Permissão negada.");
  		return 1;
   	}

	if(strcmp("/tagvip", cmd, true) == 0)
	{
		if(!IsPlayerVIP(playerid)) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não é um jogador VIP.");
  		ShowPlayerDialog(playerid, cortagg, DIALOG_STYLE_LIST, "VIP", "{FF1493}Rosa\n{FF0000}Vermelho\n{FFF000}Amarelo\n{00FF00}Verde\n{DF01D7}Rosa", "Alterar", "Sair");
		return 1;
	}

	if(strcmp("/tagpremium", cmd, true) == 0)
	{
		if(!IsPlayerVIPT(playerid)) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não é um jogador VIP PREMIUM.");
  		ShowPlayerDialog(playerid, tagtopp, DIALOG_STYLE_LIST, "VIP", "{FF1493}Rosa\n{FF0000}Vermelho\n{FFF000}Amarelo\n{00FF00}Verde\n{66FFFF}Azul", "Alterar", "Sair");
		return 1;
	}

 	if(strcmp("/tagon", cmd, true) == 0)
	{
     	if(pAdmin[playerid] > 0)
		{
            format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
 			if(DOF2_GetInt(file, "Tag") == 1)
   			{
			     SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso.");
			     DOF2_SetInt(file, "Tag", 0);
    		}
   			else
   			{
				SendClientMessage(playerid, Vermelho, "Você já está com a tagon.");
    		}
  		}
		else
		{
				SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
  		return 1;
     }

 	if(strcmp("/tagoff", cmd, true) == 0)
	{
     	if(pAdmin[playerid] > 0)
		{
            format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
 			if(DOF2_GetInt(file, "Tag") == 0)
   			{
			    SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso.");
			    DOF2_SetInt(file, "Tag", 1);
    		}
   			else
   			{
				SendClientMessage(playerid, Vermelho, "Você já está com a tagoff.");
    		}
  		}
		else
		{
				SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
  		return 1;
     }

	if(strcmp(cmd, "/venderskin", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid, skin;

			if(sscanf(cmdtext, "s[12]ud", cmd, plid, skin))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /venderskin [id] [skin]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(skin >= 0 && skin < 299)
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));

					SetPlayerSkin(plid, skin);
					DOF2_SetInt(file2, "Skin", skin);

					format(string, sizeof(string), "{6959CD}O(a) Vendedor(a) de Skin {FFFFFF}%s {6959CD}te vendeu uma nova roupa ID: {FFFFFF}%d", GetPlayerNameEx(playerid), skin);
					SendClientMessage(plid, Blue, string);

					format(string, sizeof(string), "{6959CD}Você vendeu ao {FFFFFF}%s {6959CD}a roupa ID: {FFFFFF}%d", GetPlayerNameEx(plid), skin);
					SendClientMessage(playerid, Blue, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente! | ID's = 0-299");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

	if(strcmp(cmd, "/dargrana", true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid, grana;

			if(sscanf(cmdtext, "s[10]ud", cmd, plid, grana))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /dargrana [id] [grana]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				GivePlayerGrana(plid, grana);

				format(string, sizeof(string), "Comando efetuado com sucesso!", grana, GetPlayerNameEx(plid));
				SendClientMessage(playerid, 0x6495EDAA, string);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}te deu {FFFFFF}$%d", GetPlayerNameEx(playerid), grana);
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado!");
			}
		}
		return 1;
	}

 	if(strcmp("/comandosrcon", cmd, true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][SCON] == true)
            {
                new texto[1000];
                strcat(texto, "{FFFFFF} /cr /dargrana /setarvip /setarpremium /setarprestige /darlevel\n");
                strcat(texto, "{FFFFFF} /tirarvip /tirarpremium /tirarprestige /crashar /darcash\n");
                strcat(texto, "{FFFFFF} /setlevel /darestudo /setestudo /sendcmd /sendchat /ccar\n");
                strcat(texto, "{FFFFFF} /recarregarportoes /recarregarmapas /resetarmortes /setadmin\n");
                strcat(texto, "{FFFFFF} /setaryt /tiraryt\n");
                strcat(texto, "{FFFFFF} Escrever algo aqui\n");
                strcat(texto, "{FFFFFF} Escrever algo aqui\n");
                ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FF0000}Rcon Comandos", texto, "Fechar", "");
            }
        }
        return 1;
    }
    
	if(strcmp("/crashar", cmd, true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[6]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /crashar [id]");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode fazer isto com si mesmo.");
				return 1 ;
			}
			if(IsPlayerConnected(plid))
			{
				GameTextForPlayer(plid, "~k~n~", 10000, 4);

				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/imissil", true) == 0)
	{
	    if(NaCorrida[playerid] == true) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}[ATENÇÃO]{FFFFFF}: Comando Bloqueado em Eventos Devido ao uso abusivo do {FF0000}Missil{FFFFFF}! .");
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		{
			if(DOF2_GetInt(file, "CartaoTelefonico") == 1)
			{
				AddVehicleMissiles(GetPlayerVehicleID(playerid), 1.1, -0.2);
		    	GameTextForPlayer(playerid, "~r~Missil instalado(s)!", 3500, 5);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não tem um Kit de Missil");
			}
		}
		return 1;
	}
	
	if(strcmp("/cavar", cmd, true) == 0)
	{
		if(IsPlayerInRangeOfPoint(playerid, 30.0, 882.9317, -1077.3367, 23.8973))
		{
		SetTimer("fecharcova", 5000, false);
		MoveObject (coveiro,892.85437, -1077.65808, 23.19150, 1);
		}
		return 1;
	}
	
	if(strcmp("/jardineiro", cmd, true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Jardineiro  || PlayerInfo[playerid][SCON] == true)
		{

			if(sscanf(cmdtext, "s[4]s[128]", cmd))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /jardineiro");
			}
			else
			{
				format(string, sizeof(string), "O (A) Jardineiro %s anuncia seu trabalho, entre em contato com ele caso haja interesse.", GetPlayerNameEx(playerid));
				SendClientMessageToAll(C_Jardineiro, string);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/ssj", cmd, true) == 0)
	{
		if(gettime() - GetPVarInt(playerid, "IMTempo") < 480) return SendClientMessage(playerid, Vermelho, "Este Comando ja foi utilizado recentemente aguarde alguns minutos.");
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Goku)
		{
			if(ssj[playerid] == 0)
	        {
	            gmod[playerid] = 1;
	        	SetPlayerHealth(playerid, 999999.0);
	        	Pauletti[playerid][0] = CreateObject(18693, 0.0, 0.0, 0.0, 0.0, 0.0, 256.0);
  	    	  	AttachObjectToPlayer(Pauletti[playerid][0], playerid, 0.0, -0.01, -0.9, 0.0, 0.0, 0.0);
	            ssj[playerid] = 0;
	            SendClientMessage(playerid, COLOR_GREEN, "{FFFFFF}Agora você tem {6959CD}5 {FFFFFF}minutos de {6959CD}Ki");
	        	SetTimerEx("imortal", 300000, false, "i", playerid);
	        }
   			else if(ssj[playerid] == 1)
	        {
	        	RemovePlayerAttachedObject(playerid, 1);
	            ssj[playerid] = 1;
	        }
		}
		SetPVarInt(playerid, "IMTempo", gettime());
		return 1;
	}
	
    if(strcmp(cmd, "/eusougoku", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Goku  || PlayerInfo[playerid][SCON] == true)
		{
			new msg[128];

			format(msg, sizeof(msg), "{808080}Oi eu {FFFFFF}%s {808080}Sou o Goku.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(C_FTSA, msg);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BVL - INFO] Você não é o Goku otario.");
		}
		return 1;
	}

	if(strcmp(cmd, "/lembrete", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Bloco") == 1)
		{
			new texto[128];

			if(sscanf(cmdtext, "s[10]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, COLOR_GREEN, "Use /lembrete [texto]");
				return 1;
			}
			if(IsPlayerConnected(playerid))
			{
				DOF2_SetString(file, "Lembrete", texto);
				SendClientMessage(playerid, 0xFF0000AA, "Lembrete anotado!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não tem um bloco de lembretes.");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/darcomb", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Frentista || PlayerInfo[playerid][SCON] == true || pAdmin[playerid] > 3)
		{
			new msg[256], petroleo, plid, comb;

			if(sscanf(cmdtext, "s[9]ud", cmd, plid, comb))
			{
				SendClientMessage(playerid, Vermelho, "/darcomb [id] [quantidade]");
				return 1;
			}
			if(comb > MAX_COMB || comb <= 0)
			{
				SendClientMessage(playerid, Vermelho, "Quantidade inválida. Os valores devem ser de 1 à "#MAX_COMB".");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(IsPlayerInAnyVehicle(plid) == 1)
				{
					for(new carro = 0; carro < MAX_CONCES; carro++)
					{
						format(file2, sizeof(file2), PASTA_CONCE, carro);
						if(DOF2_FileExists(file2))
						{
							if(GetPlayerVehicleID(plid) == DOF2_GetInt(file2, "Id"))
							{
								if((DOF2_GetInt(file2, "Combustivel")+comb) < MAX_COMB)
								{
									petroleo = DOF2_GetInt(file2, "Combustivel")+comb;
									DOF2_SetInt(file2, "Combustivel", petroleo);

									new engine, lights, alarm, doors, bonnet, boot, objective;
									GetVehicleParamsEx(DOF2_GetInt(file2, "Id"), engine, lights, alarm, doors, bonnet, boot, objective);
									SetVehicleParamsEx(DOF2_GetInt(file2, "Id"), VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);

									format(msg, sizeof(msg), "Um frentista colocou %d L de combustível em seu tanque. Total: %d L", comb, petroleo);
									SendClientMessage(plid, COLOR_GREEN, msg);

									SendClientMessage(playerid, COLOR_GREEN, "Combustível fornecido com sucesso!");
								}
								else if((DOF2_GetInt(file2, "Combustivel")+comb) >= MAX_COMB)
								{
									petroleo = MAX_COMB-DOF2_GetInt(file2, "Combustivel");
									DOF2_SetInt(file2, "Combustivel", MAX_COMB);

									new engine, lights, alarm, doors, bonnet, boot, objective;
									GetVehicleParamsEx(DOF2_GetInt(file2, "Id"), engine, lights, alarm, doors, bonnet, boot, objective);
									SetVehicleParamsEx(DOF2_GetInt(file2, "Id"), VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);

									format(msg, sizeof(msg), "Um frentista completou seu tanque colocando %d L.", petroleo);
									SendClientMessage(plid, COLOR_GREEN, msg);

									SendClientMessage(playerid, COLOR_GREEN, "Combustível fornecido com sucesso!");
								}
								return 1;
							}
						}
					}
					format(string, sizeof(string), "%s não está em um veículo da Conce.", GetPlayerNameEx(plid));
					SendClientMessage(playerid, COLOR_RED, string);
				}
				else
				{
					format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(plid));
					if((DOF2_GetInt(file, "Combustivel")+comb) < MAX_COMB)
					{
						petroleo = DOF2_GetInt(file, "Combustivel")+comb;
						DOF2_SetInt(file, "Combustivel", petroleo);

						format(msg, sizeof(msg), "Um frentista colocou %d L de combustível em seus galões. Total: %d L", comb, petroleo);
						SendClientMessage(plid, COLOR_GREEN, msg);

						SendClientMessage(playerid, COLOR_GREEN, "Combustível fornecido com sucesso!");
					}
					else if((DOF2_GetInt(file, "Combustivel")+comb) >= MAX_COMB)
					{
						petroleo = MAX_COMB-DOF2_GetInt(file, "Combustivel");
						DOF2_SetInt(file, "Combustivel", MAX_COMB);

						format(msg, sizeof(msg), "Um frentista completou seus galões colocando %d L.", petroleo);
						SendClientMessage(plid, COLOR_GREEN, msg);

						SendClientMessage(playerid, COLOR_GREEN, "Combustível fornecido com sucesso!");
					}
					ShowPlayerDialog(plid, playersimp, DIALOG_STYLE_MSGBOX, "Frentistas", "{FFFF00}Você não está em um veículo.\n{FFFFFF}Enchemos galões de combustível para você.\n{FF33FF}Vá até seu carro e use /enchertanque para colocar este combustível.", "OK", "");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado/logado.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/AreasDm", cmd, true) == 0)
	{
		new strcmd[1000], strurl[128];
		format(strurl, sizeof(strurl), "\t {FFFFFF}-=-=-=-=-=-| {6666ff}Areas D M {FFFFFF}|-=-=-=-=-=- \n", weburl);

		strcat(strcmd, "{6666ff} /skate /rocinha /naviodm /swatdm /arenadm\n\n", sizeof(strcmd));

		ShowPlayerDialog(playerid, Creditos, DIALOG_STYLE_MSGBOX, "Teleportes", strcmd, "OK", "");
		return 1;
	}
	if(strcmp(cmd, "/setaryt", true) == 0)
	{
		new aname[MAX_PLAYER_NAME];
        GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
        format(file, sizeof(file), PASTA_CONTAS, aname);
		if(PlayerInfo[playerid][SCON] == true)             //if(DOF2_GetInt(file, "Admin") == 6 || PlayerInfo[playerid][SCON] == true) > antigo
		{
			new plid;

			if(sscanf(cmdtext, "s[14]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Digite: /setaryt [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file, "youtuber", 1);

				format(string, sizeof(string), "{FFFFFF}Permissão dada com sucesso.", GetPlayerNameEx(plid));
				SendClientMessage(playerid, Blue, string);

    			format(string, sizeof(string), "{6959CD}O(a) ADM RCON {FFFFFF}%s {6959CD}lhe deu permissão para ser um sócio player youtube.", GetPlayerNameEx(plid));
				SendClientMessage(plid, Vermelho, string);
				SendClientMessage(plid, Amarelo, "Em breve o link do seu canal será adicionado ao /socios!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/tiraryt", true) == 0)
	{
		new aname[MAX_PLAYER_NAME];
        GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
        format(file, sizeof(file), PASTA_CONTAS, aname);
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[14]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Digite: /tiraryt [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file, "youtuber", 0);

				format(string, sizeof(string), "{FFFFFF}Permissão tirada com sucesso.", GetPlayerNameEx(plid));
				SendClientMessage(playerid, Vermelho, string);

				format(string, sizeof(string), "{6959CD}O(a) ADM RCON {FFFFFF}%s {6959CD}removeu você do sócio player youtube.", GetPlayerNameEx(playerid));
				SendClientMessage(plid, Amarelo, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Valor inválido, tente novamente!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/pedirmusica", true) == 0)
	{
		new texto[128];
		if(sscanf(cmdtext, "s[5]s[128]", cmd, texto)) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Use: /pedirmusica [Nome]");
        if(gettime() - GetPVarInt(playerid, "DJTempo") < 300) return SendClientMessage(playerid, Vermelho, "Você só poderá usar este comando novamente dentre 5 minutos.");
		else
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(i));
					if(DOF2_GetInt(file, "musica") == 1 || IsPlayerDJ(i))
					{
						format(string, sizeof(string), "[ATENÇÃO] {FFFFFF} %s {52FA46}Pediu uma Musica Nome : {FFFFFF}%s {52FA46}(») ", GetPlayerNameEx(playerid), texto);
						SendClientMessage(i, Blue, string);
					}
				}
			}
			SetPVarInt(playerid, "DJTempo", gettime());
			SendClientMessage(playerid, Blue, "[ATENÇÃO] {FFFFFF}Os DJs foram informados, aguarde!");
		}
		return 1;
	}
	
	if(strcmp("/dardj2", cmd, true) == 0)
	{
        if(PlayerInfo[playerid][SCON] == true)
		{
			new plid, dias;
			if(sscanf(cmdtext, "s[10]ud", cmd, plid, dias)) return SendClientMessage(playerid, 0x008040AA, "Use: /setardj2 [id] [quantidade-de-dias]");

			if(IsPlayerConnected(plid))
			{
				if(dias > 30 || dias < 1) SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Não pode setar mais de 30 dias ou menos de 1 dia!");
				else
				{
					if(GetDJDays(plid) > 5)
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Este jogador ainda tem mais de 5 dias VIP.");
					}
					else
					{
						SetPlayerDJ(plid, dias);
						format(string, sizeof(string), "{6666ff}| INFO | {FFFFFF}O(A) Player {6666ff}%s(%d) {FFFFFF}Ativou o pacote{6666ff} DJ  {FFFFFF}(») Por {6666ff}%d {FFFFFF}dia(s)!",GetPlayerNameEx(plid), plid, dias);
						SendClientMessageToAll(tcadm, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Valor inválido, tente novamente!");
			}
		}
		return 1;
	}
	if(strcmp("/tirardj2", cmd, true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid;
			if(sscanf(cmdtext, "s[10]u", cmd, plid)) return SendClientMessage(playerid, 0x008040AA, "Use: /tirarDJ2[id]");

			if(IsPlayerConnected(plid))
			{
				UnsetPlayerDJ(plid);
				format(string, sizeof(string), "{6666ff}%s (%d) {FFFFFF}Retirou o DJ do(a): {6666ff}%s (%d)", GetPlayerNameEx(playerid), playerid, GetPlayerNameEx(plid), plid);
				SendClientMessageToAll(tcadm, string);
			}
			else SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
		}
		return 1;
	}


	if(strcmp(cmd, "/dardj", true) == 0)
	{
		new aname[MAX_PLAYER_NAME];
        GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
        format(file, sizeof(file), PASTA_CONTAS, aname);
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[14]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /dardj [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file, "musica", 1);

				format(string, sizeof(string), "{6959CD}Você deu o cargo de DJ para: {FFFFFF}%s", GetPlayerNameEx(plid));
				SendClientMessage(playerid, Blue, string);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s (%d) {6959CD}te deu o cargo de DJ.", GetPlayerNameEx(playerid), playerid);
				SendClientMessage(plid, tcadm, string);
				SendClientMessage(plid, Vermelho, "{FFFFFF}digite {ff0000}/cmdsdj.");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/tirardj", true) == 0)
	{
		new aname[MAX_PLAYER_NAME];
        GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
        format(file, sizeof(file), PASTA_CONTAS, aname);
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[14]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /tirardj [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file, "musica", 0);

				format(string, sizeof(string), "{6959CD}Você tirou o cargo de DJ do: {FFFFFF}%s.", GetPlayerNameEx(plid));
				SendClientMessage(playerid, Blue, string);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s (%d) {6959CD}te tirou o cargo de DJ.", GetPlayerNameEx(playerid), playerid);
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp("/setarprestige", cmd, true) == 0)
	{
        if(PlayerInfo[playerid][SCON] == true)
		{
			new plid, dias;
			if(sscanf(cmdtext, "s[10]ud", cmd, plid, dias)) return SendClientMessage(playerid, 0x008040AA, "Use: /setarprestige [id] [quantidade-de-dias]");

			if(IsPlayerConnected(plid))
			{
                SetPlayerVIPMT(plid, dias);
                format(string, sizeof(string), "{6959CD}O(a) ADM RCON {FFFFFF}%s {6959CD}te deu {FFFFFF}%d {6959CD}dias VIP $Prestige$!", GetPlayerNameEx(playerid), dias);
				SendClientMessage(plid, tcadm, string);
				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp("/setarpremium", cmd, true) == 0)
	{
        if(PlayerInfo[playerid][SCON] == true)
		{
			new plid, dias;
			if(sscanf(cmdtext, "s[10]ud", cmd, plid, dias)) return SendClientMessage(playerid, 0x008040AA, "Use: /setarpremium [id] [quantidade-de-dias]");

			if(IsPlayerConnected(plid))
			{
                SetPlayerVIPT(plid, dias);
				format(string, sizeof(string), "{6959CD}O(a) ADM RCON {FFFFFF}%s {6959CD}te deu {FFFFFF}%d {6959CD}dias VIP PREMIUM!", GetPlayerNameEx(playerid), dias);
				SendClientMessage(plid, tcadm, string);
				SendClientMessage(playerid, 0x6495EDAA, "Comando efetuado com sucesso!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp("/tirarpremium", cmd, true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid;
			if(sscanf(cmdtext, "s[10]u", cmd, plid)) return SendClientMessage(playerid, 0x008040AA, "Use: /tirarpremium [id]");

			if(IsPlayerConnected(plid))
			{
				UnsetPlayerVIPT(plid);
				format(string, sizeof(string), "{6959CD}O(a) ADM RCON {FFFFFF}%s (%d) {6959CD}Retirou o seu VIP PREMIUM.", GetPlayerNameEx(playerid), playerid);
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp("/tirarprestige", cmd, true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid;
			if(sscanf(cmdtext, "s[10]u", cmd, plid)) return SendClientMessage(playerid, 0x008040AA, "Use: /tirarprestige [id]");

			if(IsPlayerConnected(plid))
			{
				UnsetPlayerVIPMT(plid);
				format(string, sizeof(string), "{6959CD}O(a) ADM RCON {FFFFFF}%s (%d) {6959CD}retirou o seu VIP $Prestige$.", GetPlayerNameEx(playerid), playerid);
				SendClientMessage(plid, tcadm, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/darcash", true) == 0)
	{
        format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid, level;

			if(sscanf(cmdtext, "s[10]ud", cmd, plid, level))
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Digite: /darcash [id] [level]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(level < MAX_PLAYER_CASH-1)
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
					if(DOF2_GetInt(file2, "CASH") < MAX_PLAYER_CASH-1)
					{
						DOF2_SetInt(file2, "CASH", DOF2_GetInt(file2, "CASH")+level);

						format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s (%d) {6959CD}te deu cash(s).", GetPlayerNameEx(playerid), playerid);
						SendClientMessage(plid, tcadm, string);

						format(string, sizeof(string), "{6959CD}Você deu a {FFFFFF}%s (%d) {6959CD}cash(s).", GetPlayerNameEx(plid), plid);
						SendClientMessage(playerid, Blue, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Este jogador já alcançou o limite de cash(s).");
					}
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Não é permitido dar mais de {1E90FF}%d {FFFFFF}level(s).", MAX_PLAYER_CASH);
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Jogador não conectado!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/darlevel", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid, level;

			if(sscanf(cmdtext, "s[10]ud", cmd, plid, level))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /darlevel [id] [level]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(level < MAX_PLAYER_LEVEL-1)
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
					if(DOF2_GetInt(file2, "Level") < MAX_PLAYER_LEVEL-1)
					{
						DOF2_SetInt(file2, "Level", DOF2_GetInt(file2, "Level")+level);

						format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}te deu {FFFFFF}%d {6959CD}de level.", GetPlayerNameEx(playerid), level);
						SendClientMessage(plid, tcadm, string);

						format(string, sizeof(string), "Comando efetuado com sucesso!", GetPlayerNameEx(plid), level);
						SendClientMessage(playerid, 0x6495EDAA, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Este jogador já alcançou o limite de level(s).");
					}
				}
				else
				{
					format(string, sizeof(string), "Não é permitido dar mais de %d level(s).", MAX_PLAYER_LEVEL);
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

	if(strcmp(cmd, "/setlevel", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid, level;

			if(sscanf(cmdtext, "s[10]ud", cmd, plid, level))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /setlevel [id] [level]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(level < MAX_PLAYER_LEVEL-1)
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
					if(DOF2_GetInt(file2, "Level") < MAX_PLAYER_LEVEL-1)
					{
						DOF2_SetInt(file2, "Level", level);

						format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}setou a você {FFFFFF}%d {6959CD}de level.", GetPlayerNameEx(playerid), level);
						SendClientMessage(plid, tcadm, string);

						format(string, sizeof(string), "Comando efetuado com sucesso!", GetPlayerNameEx(plid), level);
						SendClientMessage(playerid, 0x6495EDAA, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Este jogador já alcançou o limite de level(s).");
					}
				}
				else
				{
					format(string, sizeof(string), "Não é permitido setar mais de %d level(s).", MAX_PLAYER_LEVEL);
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissão!");
		}
		return 1;
	}

	if(strcmp(cmd, "/darestudo", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid, estudo;

			if(sscanf(cmdtext, "s[10]ud", cmd, plid, estudo))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /darestudo [id] [estudo]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(estudo < MAX_PLAYER_ESTUDO-1)
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
					if(DOF2_GetInt(file2, "Faculdade") < MAX_PLAYER_ESTUDO-1)
					{
						if(DOF2_GetInt(file, "Profissao") == Professor)
						{
							if(estudo > 5)
							{
								SendClientMessage(playerid, Blue, "Você não pode dar mais de 5 estudos de uma vez.");
								return 1;
							}
						}
						DOF2_SetInt(file2, "Faculdade", DOF2_GetInt(file2, "Faculdade")+estudo);

						format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}te deu {FFFFFF}%d {6959CD}de estudo.", GetPlayerNameEx(playerid), estudo);
						SendClientMessage(plid, tcadm, string);

						format(string, sizeof(string), "Comando efetuado com sucesso!", GetPlayerNameEx(plid), estudo);
						SendClientMessage(playerid, 0x6495EDAA, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Este jogador já alcançou o limite de estudo(s).");
					}
				}
				else
				{
					format(string, sizeof(string), "Não é permitido dar mais de %d estudo(s).", MAX_PLAYER_ESTUDO);
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não é um professor!");
		}
		return 1;
	}

	if(strcmp(cmd, "/setestudo", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid, estudo;

			if(sscanf(cmdtext, "s[11]ud", cmd, plid, estudo))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /setestudo [id] [level]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(estudo < MAX_PLAYER_ESTUDO-1)
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
					if(DOF2_GetInt(file2, "Faculdade") < MAX_PLAYER_ESTUDO-1)
					{
						DOF2_SetInt(file2, "Faculdade", estudo);

						format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}te setou {FFFFFF}%d {6959CD}de estudo.", GetPlayerNameEx(playerid), estudo);
						SendClientMessage(plid, tcadm, string);

						format(string, sizeof(string), "Comando efetuado com sucesso!", GetPlayerNameEx(plid), estudo);
						SendClientMessage(playerid, 0x6495EDAA, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Este jogador já alcançou o limite de estudo(s).");
					}
				}
				else
				{
					format(string, sizeof(string), "Não é permitido setar mais de %d estudo(s).", MAX_PLAYER_ESTUDO);
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

	if(strcmp(cmd, "/setprof", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(pAdmin[playerid] == 7)
		{
			new plid, prof;

			if(sscanf(cmdtext, "s[9]ud", cmd, plid, prof))
			{
				SendClientMessage(playerid, Vermelho, "Digite: /setprof [id] [prof]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				if(prof == MOD)
				{
					if(pAdmin[playerid] != 7)
					{
						SendClientMessage(playerid, Vermelho, "Você não tem permissão para setar esta profissão.");
						return 1;
					}
				}
				format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file2, "Profissao", prof);
				SpawnPlayer(plid);

				format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}te deu um emprego ID: {FFFFFF}%d", GetPlayerNameEx(playerid), prof);
				SendClientMessage(plid, tcadm, string);

				format(string, sizeof(string), "{6959CD}Você deu a {FFFFFF}%s {6959CD}um emprego ID: {FFFFFF}%d", GetPlayerNameEx(plid), prof);
				SendClientMessage(playerid, Blue, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não é um empregador!");
		}
		return 1;
	}

	if(strcmp("/verlevel", cmd, true) == 0)
	{
		new strcmd[1000];

		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));

		format(string, sizeof(string), "{00FF00}» Tempo Respeito: %d/%d     {CCFF00}» Seu Level: %d\n", DOF2_GetInt(file, "Tempo"), TEMPO_EXP, PlayerInfo[playerid][_Level]);
		strcat(strcmd, string, sizeof(strcmd));

		format(string, sizeof(string), "{00FF00}» Respeito: %d  {CCFF00}» Seu Estudo: %d\n", PlayerInfo[playerid][_EXP], PlayerInfo[playerid][_Faculdade]);
		strcat(strcmd, string, sizeof(strcmd));

		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, ".:: - Level(s) - ::.", strcmd, "OK", "");
		return 1;
	}
	if(strcmp("/status", cmd, true) == 0)
	{
		new plid;

		if(sscanf(cmdtext, "s[8]u", cmd, plid))
		{
			SendClientMessage(playerid, COLOR_GREEN, "{FFFFFF}Use /status [id]");
			return 1;
		}
		if(IsPlayerConnected(plid))
		{
			new strcmd[1000];

			format(string, sizeof(string), "	 {4285F4}- {FFFFFF}%s: {4285F4}[{FFFFFF}ID: %d{4285F4}] - 	 		\n\n", GetPlayerNameEx(plid), plid);
			strcat(strcmd, string, sizeof(strcmd));

   			format(string, sizeof(string), "{FFFFFF} EXP: {4285F4}%d/{4285F4}%d        {FFFFFF}Grana na Mão: {4285F4}$%d\n", PlayerInfo[plid][_EXP], MAX_PLAYER_EXP, GetPlayerGrana(plid));
			strcat(strcmd, string, sizeof(strcmd));

			format(string, sizeof(string), "{FFFFFF} Level: {4285F4}%d/{4285F4}%d      {FFFFFF}Saldo Bancário: {4285F4}$%d\n", PlayerInfo[plid][_Level], MAX_PLAYER_LEVEL, PlayerInfo[plid][_SaldoBancario]);
			strcat(strcmd, string, sizeof(strcmd));

			format(string, sizeof(string), "{FFFFFF} Estudo: {4285F4}%d/{4285F4}%d     {FFFFFF}Casou Com: {4285F4}%s\n", PlayerInfo[plid][_Faculdade], MAX_PLAYER_ESTUDO, PlayerInfo[plid][_CasouCom]);
			strcat(strcmd, string, sizeof(strcmd));

			format(string, sizeof(string), "{FFFFFF} Profissão ID: {4285F4}%d  {FFFFFF}Skin ID: {4285F4}%d\n", PlayerInfo[plid][_Profissao], PlayerInfo[plid][_Skin]);
			strcat(strcmd, string, sizeof(strcmd));

			format(string, sizeof(string), "{FFFFFF} Matou: {4285F4}%d         {FFFFFF} Morreu: {4285F4}%d\n", matou[plid], morreu[plid]);
			strcat(strcmd, string, sizeof(strcmd));

			format(string, sizeof(string), "{FFFFFF}%s{4285F4} está vendo seu status{FFFFFF}. {4285F4}({FFFFFF} /status{4285F4} )", GetPlayerNameEx(playerid));
			SendClientMessage(plid, COLOR_GREEN, string);

			ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Status", strcmd, "OK", "");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Valor inválido, tente novamente!");
		}
		return 1;
	}
	
	if(strcmp("/rg", cmd, true) == 0)
	{
		new strcmd[1000];

		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));

  		format(string, sizeof(string), "	 {4285F4}- {FFFFFF}%s: {4285F4}[{FFFFFF}ID: %d{4285F4}] - 	 		\n\n", GetPlayerNameEx(playerid), playerid);
		strcat(strcmd, string, sizeof(strcmd));

		format(string, sizeof(string), "{FFFFFF} EXP: {4285F4}%d/{4285F4}%d        {FFFFFF}Grana na Mão: {4285F4}$%d\n", PlayerInfo[playerid][_EXP], MAX_PLAYER_EXP, GetPlayerGrana(playerid));
		strcat(strcmd, string, sizeof(strcmd));

		format(string, sizeof(string), "{FFFFFF} Level: {4285F4}%d/{4285F4}%d      {FFFFFF}Saldo Bancário: {4285F4}$%d\n", PlayerInfo[playerid][_Level], MAX_PLAYER_LEVEL, PlayerInfo[playerid][_SaldoBancario]);
		strcat(strcmd, string, sizeof(strcmd));

		format(string, sizeof(string), "{FFFFFF} Estudo: {4285F4}%d/{4285F4}%d     {FFFFFF}Casou Com: {4285F4}%s\n", PlayerInfo[playerid][_Faculdade], MAX_PLAYER_ESTUDO, PlayerInfo[playerid][_CasouCom]);
		strcat(strcmd, string, sizeof(strcmd));

		format(string, sizeof(string), "{FFFFFF} Profissão ID: {4285F4}%d  {FFFFFF}Skin ID: {4285F4}%d\n", PlayerInfo[playerid][_Profissao], PlayerInfo[playerid][_Skin]);
		strcat(strcmd, string, sizeof(strcmd));

		format(string, sizeof(string), "{FFFFFF} Matou: {4285F4}%d         {FFFFFF} Morreu: {4285F4}%d\n", matou[playerid], morreu[playerid]);
		strcat(strcmd, string, sizeof(strcmd));

		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Seu {4285F4}RG", strcmd, "OK", "");
		return 1;
	}
	
	if(strcmp(cmd, "/saldocell", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Celular") == 1)
		{
			if(DOF2_GetInt(file, "ContaBancaria") == 1)
			{
				format(string, sizeof(string), "[TORPEDO]: Você tem depositado no banco $%d.", DOF2_GetInt(file, "SaldoBancario"));
				SendClientMessage(playerid, 0x6495EDAA, string);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não tem uma conta bancária.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem celular.");
		}
		return 1;
	}

	if(strcmp("/sendchat", cmd, true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid, mensagem[256];

			if(sscanf(cmdtext, "s[9]us[256]", cmd, plid, mensagem))
			{
				SendClientMessage(playerid, Vermelho, "Use /sendchat [id] [mensagem]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				OnPlayerText(plid, mensagem);
				SendClientMessage(playerid, COLOR_GREEN, "Mensagem enviada!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/sendcmd", cmd, true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new plid, comando[256];

			if(sscanf(cmdtext, "s[9]us[256]", cmd, plid, comando))
			{
				SendClientMessage(playerid, Vermelho, "Use /sendcmd [id] [comando]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				OnPlayerCommandText(plid, comando);
				SendClientMessage(playerid, COLOR_GREEN, "Comando enviado!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Jogador não conectado!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/ttaxi", true) == 0 && IsPlayerConnected(playerid)) {
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") != Taxista) return 1;
		new plid;
		if(sscanf(cmdtext, "s[7]u", cmd, plid)) return SendClientMessage(playerid, Vermelho, "/ttaxi [id]");
		if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(plid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			Taximetro[plid][0] = 1;
			Taximetro[plid][1] = playerid;
			SetTimerEx("Taxi", 9000, false, "u", plid);
			GivePlayerGrana(playerid, 5);
			GivePlayerGrana(plid, 5);
			SendClientMessage(plid, COLOR_GREEN, "O taximêtro foi ligado, você pagará $5 cada metro.");
			SendClientMessage(playerid, COLOR_GREEN, "O taximêtro foi ligado, você receberá $5 cada metro.");
		} else SendClientMessage(playerid, Vermelho, "O passageiro não está dentro do seu taxi ou você está fora.");
		return 1;
	}

	if(strcmp(cmd, "/corrida", true) == 0 && IsPlayerConnected(playerid)) {
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") != Uber) return 1;
		new plid;
		if(sscanf(cmdtext, "s[7]u", cmd, plid)) return SendClientMessage(playerid, Vermelho, "/corrida [id]");
		if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(plid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			Taximetro[plid][0] = 1;
			Taximetro[plid][1] = playerid;
			SetTimerEx("Taxi", 9000, false, "u", plid);
			GivePlayerGrana(playerid, 5);
			GivePlayerGrana(plid, 5);
			SendClientMessage(plid, COLOR_GREEN, "O Cronomêtro foi ligado, você pagará $5 cada metro.");
			SendClientMessage(playerid, COLOR_GREEN, "O Cronomêtro ligado, você receberá $5 cada metro.");
		} else SendClientMessage(playerid, Vermelho, "O Cronomêtro não está dentro do seu onibus ou você está fora.");
		return 1;
	}
	
	if(strcmp("/setcar", cmd, true) == 0)
	{
		if(PlayerInfo[playerid][SCON] == true)
		{
			new modelo, cor1, cor2;

			if(sscanf(cmdtext, "s[8]dD(-1)D(-1)", cmd, modelo, cor1, cor2))
			{
				SendClientMessage(playerid, tcadm, "Use: /setcar [modelo] [cor1] [cor2]");
				return 1;
			}
			if(modelo >= 400 && modelo <= 611)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					if(modelo == 577 || modelo == 592)
					{
						SendClientMessage(playerid, tcadm, "Veículo proibido, tente outro! | ID's = 400-611");
						return 1;
					}

					new playerip[64], gString[256], File:temp,
						Float:X, Float:Y, Float:Z,
						Float:ang;

					GetPlayerPos(playerid, X, Y, Z);
					GetVehicleZAngle(GetPlayerVehicleID(playerid), ang);
					GetPlayerIp(playerid, playerip, sizeof(playerip));

					format(gString, sizeof(gString), "%d,%f,%f,%f,%f,%d,%d ; // Setado por %s (IP: %s)\r\n", modelo, X, Y, Z, ang, GetPlayerNameEx(playerid), playerip, cor1, cor2);
					temp = fopen("Conce/setados.txt", io_append);
					fwrite(temp, gString);
					fclose(temp);

					SetTimerEx("CriarVeiculo", 5000, false, "dffffdd", modelo, X, Y, Z, ang, cor1, cor2);
					printf("%s (%d) - Setou um carro!", GetPlayerNameEx(playerid), playerid);

					SendClientMessage(playerid, COLOR_GREEN, "Veículo setado com sucesso!");
					SendClientMessage(playerid, Amarelo, "O veículo aparecerá em instantes!");
				}
				else
				{
					SendClientMessage(playerid, tcadm, "Você não está em um veículo e assim não pode setar outro.");
				}
			}
			else
			{
				SendClientMessage(playerid, tcadm, "ID fora do normal! | ID's = 400-611");
			}
		}
		else
		{
			SendClientMessage(playerid, tcadm, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp(cmd, "/ad", true) == 0)
	{
		new portao;

		if(sscanf(cmdtext, "s[9]i", cmd, portao))
		{
			if(IsPlayerInRangeOfPoint(playerid, 50.0, 1541.9384765625, -1627.7314453125, 15.156204223633))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "Profissao") == Policial_M || DOF2_GetInt(file, "Profissao") == Policial_C || DOF2_GetInt(file, "Profissao") == Policial_F || DOF2_GetInt(file, "Profissao") == Delegado || DOF2_GetInt(file, "Profissao") == Bope || DOF2_GetInt(file, "Profissao") == Swat || DOF2_GetInt(file, "Profissao") == Narcoticos || DOF2_GetInt(file, "Profissao") == FBI || DOF2_GetInt(file, "Profissao") == Interpol || DOF2_GetInt(file, "Profissao") == LSPD || DOF2_GetInt(file, "aAdmin") == 1)
				{
					MoveDynamicObject(ObjectsFix[19], 1541.9780273438, -1639.4814453125, 15.156204223633, 3.0);
					SendClientMessage(playerid, 0xFFFFFFAA, "[PORTEIRO] O portão principal da DP foi aberto!");
				}
				else if(DOF2_GetInt(file, "Profissao") == Exercito || DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file, "Profissao") == ExercitoMilitar || DOF2_GetInt(file, "Profissao") == ExercitoAero || DOF2_GetInt(file, "Profissao") == FuzileiroMilitar || DOF2_GetInt(file, "Profissao") == General || DOF2_GetInt(file, "Profissao") == Major || DOF2_GetInt(file, "Profissao") == Marechal || DOF2_GetInt(file, "Profissao") == Tenente)
				{
					MoveDynamicObject(ObjectsFix[19], 1541.9780273438, -1639.4814453125, 15.156204223633, 3.0);
					SendClientMessage(playerid, 0xFFFFFFAA, "[PORTEIRO] O portão principal da DP foi aberto!");
				}
				else
				{
					SendClientMessage(playerid, Azul, "Você não é um militar!");
				}
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000AA, "Você está muito longe do portão!");
			}
			return 1;
		}
		if(portao == 1)
		{
			if(IsPlayerInRangeOfPoint(playerid, 50.0, 1541.9384765625, -1627.7314453125, 15.156204223633))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "Profissao") == Policial_M || DOF2_GetInt(file, "Profissao") == Policial_C || DOF2_GetInt(file, "Profissao") == Policial_F || DOF2_GetInt(file, "Profissao") == Delegado || DOF2_GetInt(file, "Profissao") == Bope || DOF2_GetInt(file, "Profissao") == Swat || DOF2_GetInt(file, "Profissao") == Narcoticos || DOF2_GetInt(file, "Profissao") == FBI || DOF2_GetInt(file, "Profissao") == Interpol || DOF2_GetInt(file, "Profissao") == LSPD || DOF2_GetInt(file, "aAdmin") == 1)
				{
					MoveDynamicObject(ObjectsFix[19], 1541.9780273438, -1639.4814453125, 15.156204223633, 3.0);
					SendClientMessage(playerid, 0xFFFFFFAA, "[PORTEIRO] O portão principal da DP foi aberto!");
				}
				else if(DOF2_GetInt(file, "Profissao") == Exercito || DOF2_GetInt(file, "Profissao") == ExercitoMilitar || DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file, "Profissao") == ExercitoAero || DOF2_GetInt(file, "Profissao") == FuzileiroMilitar || DOF2_GetInt(file, "Profissao") == General || DOF2_GetInt(file, "Profissao") == Major || DOF2_GetInt(file, "Profissao") == Marechal || DOF2_GetInt(file, "Profissao") == Tenente)
				{
					MoveDynamicObject(ObjectsFix[19], 1541.9780273438, -1639.4814453125, 15.156204223633, 3.0);
					SendClientMessage(playerid, 0xFFFFFFAA, "[PORTEIRO] O portão principal da DP foi aberto!");
				}
				else
				{
					SendClientMessage(playerid, Azul, "Você não é um militar!");
				}
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000AA, "Você está muito longe do portão!");
			}
		}
		else if(portao == 2)
		{
			if(IsPlayerInRangeOfPoint(playerid, 50.0, 1588.0791015625, -1638.140625, 15.172611236572))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "Profissao") == Policial_M || DOF2_GetInt(file, "Profissao") == Policial_C || DOF2_GetInt(file, "Profissao") == Policial_F || DOF2_GetInt(file, "Profissao") == Delegado || DOF2_GetInt(file, "Profissao") == Bope || DOF2_GetInt(file, "Profissao") == Swat || DOF2_GetInt(file, "Profissao") == Narcoticos || DOF2_GetInt(file, "Profissao") == FBI || DOF2_GetInt(file, "Profissao") == Interpol || DOF2_GetInt(file, "Profissao") == LSPD || DOF2_GetInt(file, "aAdmin") == 1)
				{
					MoveDynamicObject(ObjectsFix[20], 1598.3291015625, -1638.1206054688, 15.172611236572, 3.0);
					SendClientMessage(playerid, 0xFFFFFFAA, "[PORTEIRO] O portão secundário da DP foi aberto!");
				}
				else if(DOF2_GetInt(file, "Profissao") == Exercito || DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file, "Profissao") == ExercitoMilitar || DOF2_GetInt(file, "Profissao") == ExercitoAero || DOF2_GetInt(file, "Profissao") == FuzileiroMilitar || DOF2_GetInt(file, "Profissao") == General || DOF2_GetInt(file, "Profissao") == Major || DOF2_GetInt(file, "Profissao") == Marechal || DOF2_GetInt(file, "Profissao") == Tenente)
				{
					MoveDynamicObject(ObjectsFix[20], 1598.3291015625, -1638.1206054688, 15.172611236572, 3.0);
					SendClientMessage(playerid, 0xFFFFFFAA, "[PORTEIRO] O portão secundário da DP foi aberto!");
				}
				else
				{
					SendClientMessage(playerid, Azul, "Você não é um militar!");
				}
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000AA, "Você está muito longe do portão!");
			}
		}
		else
		{
		    SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente! | ID's = 1-2");
		}
		return 1;
	}

	if(strcmp(cmd, "/fd", true) == 0)
	{
		new portao;

		if(sscanf(cmdtext, "s[9]i", cmd, portao))
		{
			if(IsPlayerInRangeOfPoint(playerid, 50.0, 1541.9384765625, -1627.7314453125, 15.156204223633))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "Profissao") == Policial_M || DOF2_GetInt(file, "Profissao") == Policial_C || DOF2_GetInt(file, "Profissao") == Policial_F || DOF2_GetInt(file, "Profissao") == Delegado || DOF2_GetInt(file, "Profissao") == Bope || DOF2_GetInt(file, "Profissao") == Swat || DOF2_GetInt(file, "Profissao") == Narcoticos || DOF2_GetInt(file, "Profissao") == FBI || DOF2_GetInt(file, "Profissao") == Interpol || DOF2_GetInt(file, "Profissao") == LSPD || DOF2_GetInt(file, "aAdmin") == 1)
				{
					MoveDynamicObject(ObjectsFix[19], 1541.9384765625, -1627.7314453125, 15.156204223633, 3.0);
					SendClientMessage(playerid, 0xFFFFFFAA, "[PORTEIRO] O portão principal da DP foi fechado!");
				}
				else if(DOF2_GetInt(file, "Profissao") == Exercito || DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file, "Profissao") == ExercitoMilitar || DOF2_GetInt(file, "Profissao") == ExercitoAero || DOF2_GetInt(file, "Profissao") == FuzileiroMilitar || DOF2_GetInt(file, "Profissao") == General || DOF2_GetInt(file, "Profissao") == Major || DOF2_GetInt(file, "Profissao") == Marechal || DOF2_GetInt(file, "Profissao") == Tenente)
				{
					MoveDynamicObject(ObjectsFix[19], 1541.9384765625, -1627.7314453125, 15.156204223633, 3.0);
					SendClientMessage(playerid, 0xFFFFFFAA, "[PORTEIRO] O portão principal da DP foi fechado!");
				}
				else
				{
					SendClientMessage(playerid, Azul, "Você não é um militar!");
				}
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000AA, "Você está muito longe do portão!");
			}
			return 1;
		}
		if(portao == 1)
		{
			if(IsPlayerInRangeOfPoint(playerid, 50.0, 1541.9384765625, -1627.7314453125, 15.156204223633))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "Profissao") == Policial_M || DOF2_GetInt(file, "Profissao") == Policial_C || DOF2_GetInt(file, "Profissao") == Policial_F || DOF2_GetInt(file, "Profissao") == Delegado || DOF2_GetInt(file, "Profissao") == Bope || DOF2_GetInt(file, "Profissao") == Swat || DOF2_GetInt(file, "Profissao") == Narcoticos || DOF2_GetInt(file, "Profissao") == FBI || DOF2_GetInt(file, "Profissao") == Interpol || DOF2_GetInt(file, "Profissao") == LSPD || DOF2_GetInt(file, "aAdmin") == 1)
				{
					MoveDynamicObject(ObjectsFix[19], 1541.9384765625, -1627.7314453125, 15.156204223633, 3.0);
					SendClientMessage(playerid, 0xFFFFFFAA, "[PORTEIRO] O portão principal da DP foi fechado!");
				}
				else if(DOF2_GetInt(file, "Profissao") == Exercito || DOF2_GetInt(file, "Profissao") == ExercitoMilitar || DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file, "Profissao") == ExercitoAero || DOF2_GetInt(file, "Profissao") == FuzileiroMilitar || DOF2_GetInt(file, "Profissao") == General || DOF2_GetInt(file, "Profissao") == Major || DOF2_GetInt(file, "Profissao") == Marechal || DOF2_GetInt(file, "Profissao") == Tenente)
				{
					MoveDynamicObject(ObjectsFix[19], 1541.9384765625, -1627.7314453125, 15.156204223633, 3.0);
					SendClientMessage(playerid, 0xFFFFFFAA, "[PORTEIRO] O portão principal da DP foi fechado!");
				}
				else
				{
					SendClientMessage(playerid, Azul, "Você não é um militar!");
				}
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000AA, "Você está muito longe do portão!");
			}
		}
		else if(portao == 2)
		{
			if(IsPlayerInRangeOfPoint(playerid, 50.0, 1588.0791015625, -1638.140625, 15.172611236572))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "Profissao") == Policial_M || DOF2_GetInt(file, "Profissao") == Policial_C || DOF2_GetInt(file, "Profissao") == Policial_F || DOF2_GetInt(file, "Profissao") == Delegado || DOF2_GetInt(file, "Profissao") == Bope || DOF2_GetInt(file, "Profissao") == Swat || DOF2_GetInt(file, "Profissao") == Narcoticos || DOF2_GetInt(file, "Profissao") == FBI || DOF2_GetInt(file, "Profissao") == Interpol || DOF2_GetInt(file, "Profissao") == LSPD || DOF2_GetInt(file, "aAdmin") == 1)
				{
					MoveDynamicObject(ObjectsFix[20], 1588.0791015625, -1638.140625, 15.172611236572, 3.0);
					SendClientMessage(playerid, 0xFFFFFFAA, "[PORTEIRO] O portão secundário da DP foi fechado!");
				}
				else if(DOF2_GetInt(file, "Profissao") == Exercito || DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file, "Profissao") == ExercitoMilitar || DOF2_GetInt(file, "Profissao") == ExercitoAero || DOF2_GetInt(file, "Profissao") == FuzileiroMilitar || DOF2_GetInt(file, "Profissao") == General || DOF2_GetInt(file, "Profissao") == Major || DOF2_GetInt(file, "Profissao") == Marechal || DOF2_GetInt(file, "Profissao") == Tenente)
				{
					MoveDynamicObject(ObjectsFix[20], 1588.0791015625, -1638.140625, 15.172611236572, 3.0);
					SendClientMessage(playerid, 0xFFFFFFAA, "[PORTEIRO] O portão secundário da DP foi fechado!");
				}
				else
				{
					SendClientMessage(playerid, Azul, "Você não é um militar!");
				}
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000AA, "Você está muito longe do portão!");
			}
		}
		else
		{
		    SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente! | ID's = 1-2");
		}
		return 1;
	}

	if(strcmp(cmd, "/ad2", true) == 0)
	{
        SendClientMessage(playerid, 0xFFFFFFAA, "{FF0000}Comando alterado para {00FF00}/ad 2 {0000FF}(com espaço){FF0000}!");
		return 1;
	}

	if(strcmp(cmd, "/fd2", true) == 0)
	{
        SendClientMessage(playerid, 0xFFFFFFAA, "{FF0000}Comando alterado para {00FF00}/fd 2 {0000FF}(com espaço){FF0000}!");
		return 1;
	}

	if(strcmp(cmd, "/abrirbi", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Bibliotecario || DOF2_GetInt(file, "Profissao") == Professor || pAdmin[playerid] > 3)
		{
			Faculdade2 = 1;

			MoveDynamicObject(ObjectsFix[21], 1214.0789794922, -1842.5186767578, 20.415674209595, 4.0);
			MoveDynamicObject(ObjectsFix[22], 1269.8895263672, -1842.5379638672, 20.511180877686, 4.0);

			format(string, sizeof(string), "O(a) Bibliotecário %s abriu a faculdade e a biblioteca.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(0xCFCFCFAA, string);

			SendClientMessage(playerid, 0x607840AA, "Você abriu a faculdade e a biblioteca!");
			GameTextForAll("~w~Faculdade ~g~Aberta!", 6000, 1);
		}
		return 1;
	}

	if(strcmp(cmd, "/fecharbi", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Bibliotecario || DOF2_GetInt(file, "Profissao") == Professor || pAdmin[playerid] > 3)
		{
			Faculdade2 = 0;

			MoveDynamicObject(ObjectsFix[21], 1213.7843017578, -1842.4782714844, 15.156204223633, 4.0);
			MoveDynamicObject(ObjectsFix[22], 1270.2001953125, -1842.5798339844, 15.156204223633, 4.0);

			format(string, sizeof(string), "O(A) bibliotecário(a) %s fechou a faculdade e a biblioteca.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(0xCFCFCFAA, string);

			SendClientMessage(playerid, 0x607840AA, "Você fechou a faculdade e a biblioteca!");
			GameTextForAll("~w~Faculdade ~r~Fechada!", 6000, 1);
		}
		return 1;
	}

	if(strcmp(cmd, "/previsao", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Meteorologista || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new msg[256], texto[128];

			if(sscanf(cmdtext, "s[10]s[128]", cmd, texto))
			{
				SendClientMessage(playerid, Vermelho, "/previsao [texto]");
			}
			else
			{
				format(msg, sizeof(msg), "%s preve o clima: %s", GetPlayerNameEx(playerid), texto);
				SendClientMessageToAll(Verde, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	if(strcmp("/carregar", cmd, true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
	    if(DOF2_GetInt(file, "Carregado") == 1)
		{
			SendClientMessage(playerid,Vermelho,"Você ja está carregado !");
			return 1;
		}
		if(!IsATruk(GetPlayerVehicleID(playerid)) && !IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, Vermelho, "Você não está com a carreta engatada.");
		if(!IsPlayerInRangeOfPoint(playerid, 200.0, -1040.8118,-606.0070,32.0078)) return SendClientMessage(playerid, Vermelho, "Você não está no local correto.");
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Caminhoneiro)
		{
		ShowPlayerDialog(playerid, carg, DIALOG_STYLE_LIST, "Petroleiro", "{FFFFFF}D. Alimentos [LV] {00FF00}Frete : 1050R$\n{FFFFFF}Deposito [SF] {00FF00}Frete: 750R$\n{FFFFFF}Deposito [LS] {00FF00}Frete: 1550R$", "Entregar", "Sair");
		}
		else
		{
			SendClientMessage(playerid, C_Caminhoneiro, "Você não é um Caminhoneiro");
		}
		return 1;
	}

	if(strcmp("/carregarp", cmd, true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
	    if(DOF2_GetInt(file, "Carregadop") == 1)
		{
			SendClientMessage(playerid,Vermelho,"Você ja está carregado !");
			return 1;
		}
		if(!IsATruk(GetPlayerVehicleID(playerid)) && !IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, Vermelho, "Você não está com a carreta engatada.");
		if(!IsPlayerInRangeOfPoint(playerid, 200.0, 211.1968,1382.8523,10.5859)) return SendClientMessage(playerid, Vermelho, "Você não está no local correto.");
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Petroleiro)
		{
		ShowPlayerDialog(playerid, petr, DIALOG_STYLE_LIST, "Petroleiro", "{FFFFFF}Posto Avenida Lv {00FF00}Frete : 500R$\n{FFFFFF}Posto perto HQ {00FF00}Frete: 150R$\n{FFFFFF}Posto Vinewood {00FF00}Frete: 950R$\n{FFFFFF}Posto Los Santos {00FF00}Frete: 1050R$", "Entregar", "Sair");
		}
		else
		{
			SendClientMessage(playerid, C_Petroleiro, "Você não é um petroleiro");
		}
		return 1;
	}
	if(strcmp("/Carregarvb", cmd, true) == 0)
	{
 		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
	    if(DOF2_GetInt(file, "Verba") == 1)
		{
			SendClientMessage(playerid,Vermelho,"Você ja está carregado !");
			return 1;
		}
		if(GetPlayerGrana(playerid) > 199)
		{
			if(IsPlayerInDynamicCP(playerid, CheckpointsFix[108]))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "Profissao") == Mcarroforte)
				{
 				GivePlayerGrana(playerid, -200);
 				ShowPlayerLocationFromGPS(playerid, "Descarregarmento", -2166.5186,249.2658,35.3203);
 				SetPlayerMapIcon(playerid, 24, -2166.5186,249.2658,35.3203, 52, 0);
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				DOF2_SetInt(file, "Verba", 1);
				SendClientMessage(playerid, C_Mcarroforte, "Você carregou o veiculo e pagou 200$ pela licença de transporte.");
				}
				else
				{
					SendClientMessage(playerid, C_Mcarroforte, "Você não é um motorista de Carro Forte");
				}
			}
			else
			{
				SendClientMessage(playerid, C_Mcarroforte, "Você não está na area de carregar dogras");
			}
		}
		else
		{
			SendClientMessage(playerid, C_Mcarroforte, "Você não tem dinheiro suficiente para comprar a carga. ($200)");
		}
		return 1;
	}

	if(strcmp("/Dverba", cmd, true) == 0)
	{
		if(IsPlayerInDynamicCP(playerid, CheckpointsFix[109]))
		{
 			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
	    	if(DOF2_GetInt(file, "Verba") == 0)
		{
			SendClientMessage(playerid,Vermelho,"Você não esta carregado !");
			return 1;
		}
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(DOF2_GetInt(file, "Profissao") == Mcarroforte)
		{
			GivePlayerGrana(playerid, 1000);
			RemovePlayerMapIcon(playerid, 24);
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			DOF2_SetInt(file, "Verba", 0);
			SendClientMessage(playerid, C_Mcarroforte, "Você descarregou e recebeu +1000$ pelo seu trabalho.");
		}
			else
			{
				SendClientMessage(playerid, C_Mcarroforte, "Você não é não faz parte do contrabando");
			}
		}
		return 1;
	}

	if(strcmp("/Carregarcb", cmd, true) == 0)
	{
 		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
	    if(DOF2_GetInt(file, "CDB") == 1)
		{
			SendClientMessage(playerid,Vermelho,"Você ja está carregado !");
			return 1;
		}
		if(GetPlayerGrana(playerid) > 199)
		{
			if(IsPlayerInDynamicCP(playerid, CheckpointsFix[107]))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "Profissao") == Contrabando)
				{
 				GivePlayerGrana(playerid, -200);
				ShowPlayerLocationFromGPS(playerid, "Contrabando", 2585.7415,-960.6851,81.3516); // Lv
				SetPlayerMapIcon(playerid, 24, 2585.7415,-960.6851,81.3516, 52, 0);
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				DOF2_SetInt(file, "CDB", 1);
				SendClientMessage(playerid, C_Contrabando, "Você carregou o veiculo e pagou 200$ pela carga.");
				}
				else
				{
					SendClientMessage(playerid, C_Contrabando, "Você não é não faz parte do contrabando");
				}
			}
			else
			{
				SendClientMessage(playerid, C_Contrabando, "Você não está na area de carregar dogras");
			}
		}
		else
		{
			SendClientMessage(playerid, C_Contrabando, "Você não tem dinheiro suficiente para comprar a carga. ($200)");
		}
		return 1;
	}

	if(strcmp("/ccarregar", cmd, true) == 0)
	{
 		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
	    if(DOF2_GetInt(file, "Correio") == 1)
		{
			SendClientMessage(playerid,Vermelho,"Você ja está carregado !");
			return 1;
		}
		if(IsPlayerInDynamicCP(playerid, CheckpointsFix[111]))
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "Profissao") == Correios)
				{
				ShowPlayerLocationFromGPS(playerid, "Correio", 1172.9928,1348.9263,10.9219); // Lv
				SetPlayerMapIcon(playerid, 24, 1172.9928,1348.9263,10.9219, 52, 0);
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				DOF2_SetInt(file, "Correio", 1);
				SendClientMessage(playerid, C_Correios, "Você não é não faz parte do Correio");
				}
				else
				{
					SendClientMessage(playerid, C_Correios, "Você não está na area para carregar");
				}
			}
		return 1;
	}

	if(strcmp("/Dcorreio", cmd, true) == 0)
	{
		if(IsPlayerInDynamicCP(playerid, CheckpointsFix[110]))
		{
 			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
	    	if(DOF2_GetInt(file, "Correio") == 0)
		{
			SendClientMessage(playerid,Vermelho,"Você não está carregado!");
			return 1;
		}
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(DOF2_GetInt(file, "Profissao") == Correios)
		{
			GivePlayerGrana(playerid, 800);
			RemovePlayerMapIcon(playerid, 24);
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			DOF2_SetInt(file, "Correio", 0);
			SendClientMessage(playerid, C_Correios, "Você descarregou e recebeu +800$ pelo seu trabalho.");
		}
			else
			{
				SendClientMessage(playerid, C_Correios, "Você não é não faz parte do correios");
			}
		}
		return 1;
	}

	if(strcmp("/Dcontrabando", cmd, true) == 0)
	{
		if(IsPlayerInDynamicCP(playerid, CheckpointsFix[106]))
		{
 			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
	    	if(DOF2_GetInt(file, "CDB") == 0)
		{
			SendClientMessage(playerid,Vermelho,"Você não está carregado de contrabando");
			return 1;
		}
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(DOF2_GetInt(file, "Profissao") == Contrabando)
		{
			GivePlayerGrana(playerid, 800);
			RemovePlayerMapIcon(playerid, 24);
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			DOF2_SetInt(file, "CDB", 0);
			SendClientMessage(playerid, C_Contrabando, "Você descarregou e recebeu +800$ pelo seu trabalho.");
		}
			else
			{
				SendClientMessage(playerid, C_Contrabando, "Você não é não faz parte do contrabando");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/pescar", true) == 0)
	{
		if(IsPlayerInDynamicCP(playerid, CheckpointsFix[19]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[20]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[21]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[22]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[23]))
		{
			if(PescaInProgress[playerid] == 1)
			{
				SendClientMessage(playerid, Vermelho, "Você já lançou a vara aguarde até pegar um peixe.");
				return 1;
			}
			if(PescaInProgress[playerid] == 0)
			{
  				PescaInProgress[playerid] = 1;
				SetTimer("Pesca", 36000, false);

				SendClientMessage(playerid, 0x0080FFAA, "Você arremessou a vara. Espere até que o peixe morda a isca.");
				SendClientMessage(playerid, 0x0080FFAA, "Enquanto o peixe não morde, fique apreciando o ponto de pesca.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não está no ponto de pesca.");
		}
		return 1;
	}

	if(strcmp(cmd, "/venderpeixe", true) == 0)
	{
		if(IsPlayerInDynamicCP(playerid, CheckpointsFix[24]))
		{
			new msg[256], quantia;

			if(QtPescas[playerid] == 0)
			{
				SendClientMessage(playerid, Vermelho, "Você não pescou nada hoje, como quer vender?");
			}
			else
			{
				quantia = QtPescas[playerid]*50;
				GivePlayerGrana(playerid, quantia);
				QtPescas[playerid] = 0;

				format(msg, sizeof(msg), "Você vendeu %d peixe(s) por $50 cada um e recebeu $%d com a venda.", QtPescas[playerid], quantia);
				SendClientMessage(playerid, 0xFF0000AA, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não está no local de vender peixes.");
		}
		return 1;
	}

	if(strcmp(cmd, "/cortar", true) == 0)
	{
		if(IsPlayerInDynamicCP(playerid, CheckpointsFix[26]))
		{
			SetPlayerWantedLevel(playerid, 6);
			DOF2_SetInt(file, "Procurado", 1);
			Procurados[playerid] = 1;

			format(string, sizeof(string), "%s está cortando madeiras ilegais, e está sendo procurado(a)!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(msgdm, string);

			if(cacando[playerid] == 1)
			{
				SendClientMessage(playerid, Vermelho, "Espere um pouco, você está cortando uma arvore com uma moto-serra nhennrnnnrnnnrnn.");
				return 1;
			}
			if(cacando[playerid] == 0)
			{
				cacando[playerid] = 1;
				SetTimer("cacas", 20000, false);

				SendClientMessage(playerid, 0x4E9C9CAA, "Você cortou uma grande arvore espere ela cair.");
				SendClientMessage(playerid, 0x4E9C9CAA, "Madeiiiiiiiiiiiiiiiraaaaa! aguarde alguns minutos até ela cair totalmente.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não está no check de cortar madeira.");
		}
		return 1;
	}

	if(strcmp(cmd, "/vendermadeira", true) == 0)
	{
		if(IsPlayerInDynamicCP(playerid, CheckpointsFix[27]))
		{
			new msg[256], quantia;

			if(Qtcacas[playerid] == 0)
			{
				SendClientMessage(playerid, Vermelho, "Você não cortou nenhuma madeira, como poderá vender?");
			}
			else
			{
				quantia = Qtcacas[playerid]*80;
				GivePlayerGrana(playerid, quantia);
				Qtcacas[playerid] = 0;

				format(msg, sizeof(msg), "Você vendeu %d madeira(s) ilegalmente por $80 cada uma e faturou $%d com a venda.", Qtcacas[playerid], quantia);
				SendClientMessage(playerid, COLOR_GREEN, msg);
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não está no check de vender a madeira ilegal.");
		}
		return 1;
	}

	if(strcmp(cmd, "/entregarpizza", true) == 0)
	{
		if(IsPlayerInDynamicCP(playerid, CheckpointsFix[18]))
		{
			if(Carregamento[playerid] == 0)
			{
				SendClientMessage(playerid, Vermelho, "Seu veículo não está carregado com uma pizza!");
			}
			else
			{
				Carregamento[playerid] = 0;
				GivePlayerGrana(playerid, 500);
				SendClientMessage(playerid, COLOR_GREEN, "Seu veículo foi descarregado e você ganhou $500.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não está no ponto de entregar pizza.");
		}
		return 1;
	}

	if(strcmp(cmd, "/pegarpizza", true) == 0)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 448)
		{
			if(IsPlayerInDynamicCP(playerid, CheckpointsFix[12]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[13]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[14]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[15]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[16]) || IsPlayerInDynamicCP(playerid, CheckpointsFix[17]))
			{
				if(Carregamento[playerid] == 0)
				{
					Carregamento[playerid] = 1;
					ShowPlayerLocationFromGPS(playerid, "Entrega de Pizza", 2818.4600, -1620.4865, 11.0851);
					SendClientMessage(playerid, COLOR_GREEN, "Pizza pega!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Sua moto já está carregada!");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Você não está no check de pegar pizza!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não está em uma moto de entregar pizza.");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/multar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Policial_R || DOF2_GetInt(file, "Profissao") == Policial_F || DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file, "Profissao") == Bope || DOF2_GetInt(file, "Profissao") == Swat || DOF2_GetInt(file, "Profissao") == Narcoticos
	 || DOF2_GetInt(file, "Profissao") == Policial_M || DOF2_GetInt(file, "Profissao") == FBI || DOF2_GetInt(file, "Profissao") == Interpol || DOF2_GetInt(file, "Profissao") == LSPD || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid, quant;

			if(sscanf(cmdtext, "s[8]ud", cmd, plid, quant))
			{
				SendClientMessage(playerid, Vermelho, "/multar [id] [valor]");
				return 1;
			}
			if(quant > 150 || quant <= 0)
			{
				SendClientMessage(playerid, Vermelho, "Você não está multando de forma injusta, máximo $150");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode fazer isto com si mesmo.");
				return 1 ;
			}
			if(IsPlayerConnected(plid))
			{
				if(infratores[plid] == 1)
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));

					infratores[plid] = 0;
					DOF2_SetInt(file2, "SaldoBancario", DOF2_GetInt(file2, "SaldoBancario")-quant);

					format(string, sizeof(string), "%s te deu uma multa no valor de $%d. O dinheiro foi retirado no banco.", GetPlayerNameEx(playerid), quant);
					SendClientMessage(plid, COLOR_GREEN, string);

					SendClientMessage(playerid, COLOR_GREEN, "Multa efetuada com sucesso!");
				}
				else
				{
					format(string, sizeof(string), "%s não é um(a) infrator(a) e não pode ser multado(a).", GetPlayerNameEx(plid));
					SendClientMessage(playerid, COLOR_RED, string);
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado!");
			}
		}
		else if(DOF2_GetInt(file, "Profissao") == Exercito || DOF2_GetInt(file, "Profissao") == ExercitoMilitar || DOF2_GetInt(file, "Profissao") == ExercitoAero || DOF2_GetInt(file, "Profissao") == FuzileiroMilitar || DOF2_GetInt(file, "Profissao") == General || DOF2_GetInt(file, "Profissao") == Major || DOF2_GetInt(file, "Profissao") == Marechal || DOF2_GetInt(file, "Profissao") == Tenente)
		{
			new plid, quant;

			if(sscanf(cmdtext, "s[8]ud", cmd, plid, quant))
			{
				SendClientMessage(playerid, Vermelho, "/multar [id] [valor]");
				return 1;
			}
			if(quant > 150 || quant <= 0)
			{
				SendClientMessage(playerid, Vermelho, "Você não está multando de forma justa.");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode fazer isto com si mesmo.");
				return 1 ;
			}
			if(IsPlayerConnected(plid))
			{
				if(infratores[plid] == 1)
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));

					infratores[plid] = 0;
					DOF2_SetInt(file2, "SaldoBancario", DOF2_GetInt(file2, "SaldoBancario")-quant);

					format(string, sizeof(string), "%s te deu uma multa no valor de $%d. O dinheiro foi retirado no banco.", GetPlayerNameEx(playerid), quant);
					SendClientMessage(plid, COLOR_GREEN, string);

					SendClientMessage(playerid, COLOR_GREEN, "Multa efetuada com sucesso!");
				}
				else
				{
					format(string, sizeof(string), "%s não é um(a) infrator(a) e não pode ser multado(a).", GetPlayerNameEx(plid));
					SendClientMessage(playerid, COLOR_RED, string);
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado!");
			}
		}
		else
		{
			SendClientMessage(playerid, Azul, "Você não é um militar!");
		}
		return 1;
	}

	if(strcmp(cmd, "/convidarent", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Profissao") == Empregador || DOF2_GetInt(file, "Profissao") == Jornalista || DOF2_GetInt(file, "Profissao") == Reporter || DOF2_GetInt(file, "Profissao") == Ancora || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[13]u", cmd, plid))
			{
				SendClientMessage(playerid, COLOR_GREEN, "Use /convidarent [id]");
				return 1;
			}
			if(IsPlayerConnected(plid))
			{
				format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(plid));
				DOF2_SetInt(file2, "convitent", 1);

				format(string, sizeof(string), "%s (ID: %d) convidou você para participar de uma entrevista.", GetPlayerNameEx(playerid), playerid);
				SendClientMessage(plid, Blue, string);

				SendClientMessage(plid, Amarelo, "Para aceitar a entrevista digite /aceitar e para recusar a entrevista digite /recusar.");
				SendClientMessage(playerid, 0x6495EDAA, "Convite enviado!");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não tem permissao!");
		}
		return 1;
	}

	if(strcmp(cmd, "/amarrar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[9]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, " /amarrar [id]");
				return 1;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado.");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode fazer isto com si mesmo.");
				return 1 ;
			}
			if(IsPlayerInAnyVehicle(plid) == 1 || IsPlayerInAnyVehicle(playerid) == 1)
			{
				SendClientMessage(playerid, Vermelho, "Alguem está dentro de um carro.");
			}
			else
			{
				if(GetDistanceBetweenPlayers(plid, playerid) < 10)
				{
					algemado[plid] = 1;
					TogglePlayerControllable(plid, 0);

					format(string, sizeof(string), "%s te amarrou.", GetPlayerNameEx(playerid));
					SendClientMessage(plid, Blue, string);

					SendClientMessage(playerid, COLOR_GREEN, "Amarrado com sucesso.");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Chegue mais perto para amarrar.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Apenas gangster pode fazer isso.");
		}
		return 1;
	}

	if(strcmp(cmd, "/desamarrar", true) == 0)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
		{
			new plid;

			if(sscanf(cmdtext, "s[12]u", cmd, plid))
			{
				SendClientMessage(playerid, Vermelho, "/desamarrar [id]");
				return 1;
			}
			if(!IsPlayerConnected(plid))
			{
				SendClientMessage(playerid, Vermelho, "O(A) jogador(a) não está conectado.");
				return 1;
			}
			if(plid == playerid)
			{
				SendClientMessage(playerid, Vermelho, "Você não pode fazer isto com si mesmo.");
				return 1;
			}
			if(IsPlayerInAnyVehicle(plid) == 1 || IsPlayerInAnyVehicle(playerid) == 1)
			{
				SendClientMessage(playerid, Vermelho, "Alguem está dentro de um carro.");
			}
			else
			{
				if(GetDistanceBetweenPlayers(plid, playerid) < 10)
				{
					algemado[plid] = 0;
					TogglePlayerControllable(plid, 1);

					format(string, sizeof(string), "%s te desamarrou.", GetPlayerNameEx(playerid));
					SendClientMessage(plid, Blue, string);

					SendClientMessage(playerid, COLOR_GREEN, "Desamarrado com sucesso.");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Chegue mais perto para desamarrar.");
				}
     		}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Apenas gangster pode fazer isso.");
		}
		return 1;
	}

	if(strcmp(cmd, "/trancar", true) == 0)
	{
		new Float:X, Float:Y, Float:Z;

		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		{
			SendClientMessage(playerid, Vermelho, "Você só pode trancar o carro se estiver dirigindo.");
			return 1;
		}
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(i != playerid)
				{
					SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid), i, 0, 1);
				}
			}
		}
		GetPlayerPos(playerid, X, Y, Z);
		PlayerPlaySound(playerid, 1056, X, Y, Z);
		GameTextForPlayer(playerid, "~y~Veiculo ~r~Trancado", 5000, 6);
		return 1;
	}

	if(strcmp(cmd, "/destrancar", true) == 0)
	{
		new Float:X, Float:Y, Float:Z;

		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		{
			SendClientMessage(playerid, Vermelho, "Você só pode destrancar o carro se estiver dirigindo.");
			return 1;
		}
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid), i, 0, 0);
			}
		}
		GetPlayerPos(playerid, X, Y, Z);
		PlayerPlaySound(playerid, 1057, X, Y, Z);
		GameTextForPlayer(playerid, "~y~Veiculo ~g~Destrancado", 5000, 6);
		return 1;
	}

	if(strcmp(cmd, "/p", true) == 0)
	{
		new texto[128];

		if(sscanf(cmdtext, "s[3]s[128]", cmd, texto))
		{
			SendClientMessage(playerid, Vermelho, "/p [texto]");
			return 1;
		}
		ChatProximo(playerid, texto);
		return 1;
	}

	if(strcmp(cmd, "/infratores", true) == 0)
	{
		new count = 0, msg[1000];

		SendClientMessage(playerid, 0x008000AA, "{FFFFFF}Jogadores {FF0000}Infratores");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && infratores[i])
			{
				format(msg, sizeof(msg), "%s (ID: %d)", GetPlayerNameEx(i), i);
				SendClientMessage(playerid, 0x0088CAAA, msg);
				count++;
			}
		}
		if(count == 0)
		{
			SendClientMessage(playerid, 0xFF0000AA, "Ninguém online cometeu infração!");
		}
		return 1;
	}

	if(strcmp(cmd, "/procurados", true) == 0)
	{
		new count = 0, msg[1000];

		SendClientMessage(playerid, 0x008000AA, "{FFFFFF}Jogadores {FF0000}Procurados");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && Procurados[i])
			{
				format(msg, sizeof(msg), "%s (ID: %d)", GetPlayerNameEx(i), i);
				SendClientMessage(playerid, 0x0088CAAA, msg);
				count++;
			}
		}
		if(count == 0)
		{
			SendClientMessage(playerid, 0xFF0000AA, "Ninguém online está sendo procurado!");
		}
		return 1;
	}

	if(!strcmp(cmd, "/minhacasa", true))
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Casa") == 1)
		{
			format(STRX, sizeof(STRX), "{0000FF}Ir/Entrar\n{00FF00}Trancar/Destrancar\n{FFFF00}Convidar Morador\n{FF00DD}Expulsar Morador\n{FF0000}Vender Casa");
			ShowPlayerDialog(playerid, casaopt, DIALOG_STYLE_LIST, "Minha Casa", STRX, "OK", "Cancelar");
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000AA, "Você não tem uma casa!");
		}
		return 1;
	}

	if(!strcmp(cmd, "/minhaempresa", true))
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Prop") == 1)
		{
			format(STRX, sizeof(STRX), "{0000FF}Ir/Entrar\n{00FF00}Sacar Renda\n{FFFF00}Mudar Nome\n{FF0000}Vender Empresa");
			ShowPlayerDialog(playerid, propopt, DIALOG_STYLE_LIST, "Minha Empresa", STRX, "OK", "Cancelar");
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000AA, "Você não tem uma empresa!");
		}
		return 1;
	}
    
/*	if(!strcmp(cmd, "/minhaemp", true))
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "Emp") == 1)
		{
			format(STRX, sizeof(STRX), "Ir\nSacar Renda\nValor Entrada\nVender empresa");
			ShowPlayerDialog(playerid, emplist, DIALOG_STYLE_LIST, "Minha empresa", STRX, "OK", "Cancelar");
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000AA, "{FF0000}[ATENÇÃO]{FFFFFF} Use /minhaempresa");
		}
		return 1;
	}
*/
	if(strcmp("/irpos", cmd, true) == 0)
	{
		if(pAdmin[playerid] > 0 || IsPlayerVIP(playerid))
		{
			new string2[256], Float:CorX, Float:CorY, Float:CorZ, xInterior;

			if(sscanf(cmdtext, "s[7]p<,>fffd", cmd, CorX, CorY, CorZ, xInterior))
			{
				SendClientMessage(playerid, Vermelho, "Use /irpos [x,y,z,i]");
				ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Ajuda /irpos", "{00FFFF}Veja o exemplo de como proceder com uso deste comando:\n\n{FFFFFF}/irpos {FF0000}271.884979{FFFFFF},{0000FF}306.631988{FFFFFF},{00FF00}999.148437{FFFFFF},{FFFF00}2\n\n{00FFFF}Legenda:\n\n{FFFFFF}x = {FF0000}Posição X\n{FFFFFF}y = {0000FF}Posição Y\n{FFFFFF}z = {00FF00}Posição Z\n{FFFFFF}i = {FFFF00}Universo ID", "OK", "");
				return 1;
			}
			SetPlayerInterior(playerid, xInterior);
			SetPlayerPos(playerid, CorX, CorY, CorZ);
			SendClientMessage(playerid, -1, "Você foi até a posição:");
			format(string2, sizeof(string2), "{FF0000}%f{FFFFFF},{0000FF}%f{FFFFFF},{00FF00}%f{FFFFFF},{FFFF00}%d", CorX, CorY, CorZ, xInterior);
			SendClientMessage(playerid, -1, string2);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "Você não tem permissão.");
		}
		return 1;
	}

	new string2[256];
	format(string2, sizeof(string2), "{FF1493}Você Digitou {FFFFFF}%s {FF1493}esse Comando é {FFFFFF}inválido", cmdtext);
	SendClientMessage(playerid, Vermelho, string2);
	return 1;
}

new Float:PFloat[MAX_PLAYERS][4];
dcmd_terri(playerid,params[])
{
	if(PlayerInfo[playerid][SCON] == false) return SendClientMessage(playerid,amarelo,"[TERRI] Você precisa ser Admin RCON para isso.");
	if(strlen(params)==0) return SendClientMessage(playerid,amarelo,"USO: /terri [pos1/pos2/criar/deletar/editar]");
	if(!strcmp(params,"pos1"))
	{
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		PFloat[playerid][0]=X;
		PFloat[playerid][2]=Y;
		SendClientMessage(playerid,amarelo,"[TERRI] Pos1 adicionada com sucesso!");
	}
	else if(!strcmp(params,"pos2"))
	{
	    new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		PFloat[playerid][1]=X;
		PFloat[playerid][3]=Y;
		SendClientMessage(playerid,amarelo,"[TERRI] Pos2 adicionada com sucesso!");
	}
	else if(!strcmp(params,"criar"))
	{
	    ShowPlayerDialog(playerid,500,DIALOG_STYLE_INPUT,"Territorio - Criar","Digite o nome desse território:\nObs: Tenha certeza de ter marcado Pos1 e Pos2 corretamente!","Continuar","Sair");
	}
	else if(!strcmp(params,"deletar"))
	{
	    new terrid=GetPlayerTerri(playerid);
	    if(terrid==-1) return SendClientMessage(playerid,amarelo,"Você não está em um território!");
	    new fmg[128];format(fmg,128,"Tem certeza que quer deletar o território: %s ?",DOF2_GetString(FormatTerri(terrid),"Nome"));
	    ShowPlayerDialog(playerid,501,DIALOG_STYLE_MSGBOX,"Territorio - Deletar",fmg,"Deletar","Sair");
	}
	else if(!strcmp(params,"editar"))
	{
	    if(GetPlayerTerri(playerid)==-1) return SendClientMessage(playerid,amarelo,"Você não está em um território!");
	    ShowPlayerDialog(playerid,503,DIALOG_STYLE_INPUT,"Territorio - Editar","Digite o novo valor do lucro deste território:","Mudar","Sair");
	}
	return 1;
}

stock ShowPlayerLocationFromGPS(playerid, localname[], Float:PosX, Float:PosY, Float:PosZ)
{
	#if defined FGPSUser
	if(GetPVarInt(playerid, "YEAH") == 0)
	{
		new string2[128];

		SetPVarInt(playerid, "YEAH", 1);
		SetPVarFloat(playerid, "Spongebob", PosX);
		SetPVarFloat(playerid, "Mario", PosY);
		SetPVarFloat(playerid, "SpiderPig", PosZ);
		SetPVarString(playerid, "FAIL", localname);

		PlayerInfo[playerid][FGPS_RCP] = CreateDynamicRaceCP(2, PosX, PosY, PosZ, 0.0, 0.0, 0.0, 10.0, -1, -1, playerid, 100.0);
		PlayerInfo[playerid][FGPSObject] = CreateDynamicObject(1318, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, playerid, 50.0);

		format(string2, sizeof(string2), "{FFFFFF}Você esta indo para: {00FF33}%s{FFFFFF}.", localname);
		SendClientMessage(playerid, -1, string2);

		#if defined UseTd
		PlayerInfo[playerid][F_GPSTD] = CreatePlayerTextDraw(playerid, 37.000000, 290.000000, "~n~");
		PlayerTextDrawBackgroundColor(playerid, PlayerInfo[playerid][F_GPSTD], 255);
		PlayerTextDrawFont(playerid, PlayerInfo[playerid][F_GPSTD], 1);
		PlayerTextDrawLetterSize(playerid, PlayerInfo[playerid][F_GPSTD], 0.509999, 1.300000);
		PlayerTextDrawColor(playerid, PlayerInfo[playerid][F_GPSTD], -1);
		PlayerTextDrawSetOutline(playerid, PlayerInfo[playerid][F_GPSTD], 1);
		PlayerTextDrawSetProportional(playerid, PlayerInfo[playerid][F_GPSTD], 1);
		PlayerTextDrawShow(playerid, PlayerInfo[playerid][F_GPSTD]);
		#endif
	}
	#else
		#pragma unused playerid
		#pragma unused localname
		#pragma unused PosX
		#pragma unused PosY
		#pragma unused PosZ
	#endif

	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
    if(NaCorrida[playerid] == true)
    {
		if(CPProgesso[playerid] == TotalCP -1)
		{
			new TimeStamp, TotalRaceTime, string[128], arquivo[90], pName[MAX_PLAYER_NAME], rTime[3], Prize[2], TempTotalTime, TempTime[3];
			Posicao++;
			GetPlayerName(playerid, pName, sizeof(pName));
			SetVehicleHealth(GetPlayerVehicleID(playerid), 999999);
			TimeStamp = GetTickCount();
			TotalRaceTime = TimeStamp - CorridaTick;
			ConvertTime(var, TotalRaceTime, rTime[0], rTime[1], rTime[2]);
			switch(Posicao)
			{
				case 1: Prize[0] = (random(random(5000)) + 10000), Prize[1] = 10;
				case 2: Prize[0] = (random(random(4500)) + 9000), Prize[1] = 9;
				case 3: Prize[0] = (random(random(4000)) + 8000), Prize[1] = 8;
				case 4: Prize[0] = (random(random(3500)) + 7000), Prize[1] = 7;
				case 5: Prize[0] = (random(random(3000)) + 6000), Prize[1] = 6;
				case 6: Prize[0] = (random(random(2500)) + 5000), Prize[1] = 5;
				case 7: Prize[0] = (random(random(2000)) + 4000), Prize[1] = 4;
				case 8: Prize[0] = (random(random(1500)) + 3000), Prize[1] = 3;
				case 9: Prize[0] = (random(random(1000)) + 2000), Prize[1] = 2;
				default: Prize[0] = random(random(1000)), Prize[1] = 1;
			}

			format(string, sizeof(string), "%s {FF0000}venceu uma corrida em {FFFFFF}%d {FF0000}lugar. Prêmio: {FFFFFF}R$%d e %d Leveis!", pName, Posicao, Prize[0], Prize[1]);
			SendClientMessageToAll(-1, string);

			GameTextForPlayer(playerid, "~g~] FIM!!! ]", 3000, 4);

			if(FinishCount <= 5)
			{
				format(arquivo, sizeof(arquivo), DIRETORIO_CORRIDAS, NomeCorrida);
				format(string, sizeof(string), "MelhorTempoCorrida-%d", TempoProgresso);
				TempTotalTime = DOF2_GetInt(arquivo, string);
				ConvertTime(var1, TempTotalTime, TempTime[0], TempTime[1], TempTime[2]);
				if(TotalRaceTime <= DOF2_GetInt(arquivo, string) || TempTotalTime == 0)
				{
					DOF2_SetInt(arquivo, string, TotalRaceTime);

					format(string, sizeof(string), "MelhorCorrida-%d", TempoProgresso);
					DOF2_SetString(arquivo, string, pName);
					TempoProgresso++;
				}
			}

			FinishCount++;
			GivePlayerGrana(playerid, Prize[0]);
			GivePlayerLevel(playerid, Prize[1]);

	        SairCorrida(playerid);
	        DisableRemoteVehicleCollisions(playerid, 0);

			DisablePlayerRaceCheckpoint(playerid);
			CPProgesso[playerid]++;
			if(FinishCount >= JoinCount) return StopRace(), SendClientMessageToAll(VERMELHO, ">> O Administrador {FFFFFF}Bot {FF0000}fechou a corrida atual!");
		}
		else
		{
			CPProgesso[playerid]++;
			CPCoords[CPProgesso[playerid]][3]++;
			Colocacao[playerid] = floatround(CPCoords[CPProgesso[playerid]][3], floatround_floor);
			SetCP(playerid, CPProgesso[playerid], CPProgesso[playerid]+1, TotalCP, CorridaTipo);
			PlayerPlaySound(playerid, 1137, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~r~] CHECK!!! ]", 3000, 4);
		}
	}
	return 1;
}


public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	new file[128];
	new string[128], vid, grana;
	format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));

	if(checkpointid == CheckpointsFix[91])
	{
		if(autoescola[playerid] == 0) SendClientMessage(playerid, Amarelo, "Você não está em um teste da Auto-Escola!");
		else
		{
			autoescola[playerid] = 0;
			infratores[playerid] = 0;
			DOF2_SetInt(file, "HabTerrestre", 1);
			if(IsPlayerInAnyVehicle(playerid)) SetVehicleToRespawn(GetPlayerVehicleID(playerid));

			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1106.2595,-1842.8009,13.5478);
			SendClientMessage(playerid, 0x6495EDAA, "|___| Auto-Escola |___|");
			SendClientMessage(playerid, Amarelo, "-> Você concluiu o teste de transito!");
 			SendClientMessage(playerid, Vermelho, "Agora você é um motorista legal!");
 		}
		return 1;
	}
	if(checkpointid == CheckpointsFix[29])
	{
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Mudanças ~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, "Escolha uma cidade para você fazer a mudança!");
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Mudanças ~~~~~~~~~~~~~~~");
		if(DOF2_GetInt(file, "Casa") == 0)
		{
			ShowPlayerDialog(playerid, cidades, DIALOG_STYLE_LIST, "Escolha a Cidade", "{FF0000}Los Santos\n{33FF00}San Fierro\n{00FFDD}Las Venturas\n{0000FF}Fort Carson", "Morar", "Cancelar");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Antes de mudar venda sua atual casa.");
		}
		return 1;
	}
	if(checkpointid == CheckpointsFix[63])
	{
		SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}Olá, Seja Bem-Vindo(a) a Delegacia de {9370DB}LS{FFFFFF}!");
		SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Escolha o serviço desejado e clique em '{9370DB}Comprar{FFFFFF}'.");
		ShowPlayerDialog(playerid, DP, DIALOG_STYLE_LIST, "Delegacia", STRD_DP, "Comprar", "Cancelar");
		return 1;
	}
	if(checkpointid == CheckpointsFix[106])
	{
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Descarregamento de Dogras ~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, "Para descarregar drogas digite /dcontrabando");
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Descarregamento de Dogras ~~~~~~~~~~~~~~~");
		return 1;
	}
	if(checkpointid == CheckpointsFix[108])
	{
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Carregamento de Verba  ~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, "Para Carregar verbas digite /Carregarvb");
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Carregamento de Verbas ~~~~~~~~~~~~~~~");
		return 1;
	}
	if(checkpointid == CheckpointsFix[109])
	{
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Descarregamento de Verbas Publicas ~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, "Para descarregar verbas digite /dverba");
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Descarregamento de Verbas Publicas~~~~~~~~~~~~~~~");
		return 1;
	}
	if(checkpointid == CheckpointsFix[110])
	{
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Correios ~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, "Para descarregar cartas digite /dcorreio");
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Correios ~~~~~~~~~~~~~~~");
		return 1;
	}
	if(checkpointid == CheckpointsFix[111])
	{
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Correios ~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, "Para carregar cartas digite /ccarregar");
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Correios ~~~~~~~~~~~~~~~");
		return 1;
	}
	if(checkpointid == CheckpointsFix[107])
	{
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Carregamento de Dogras ~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, "Para Carregar drogas digite /Carregarcb");
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Carregamento de Dogras ~~~~~~~~~~~~~~~");
		return 1;
	}
	if(checkpointid == CheckpointsFix[66] || checkpointid == CheckpointsFix[67])
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, 0x6495EDAA, "=============== Oficina ===============");
			SendClientMessage(playerid, COLOR_WHITE, "Selecione o serviço e clique em OK.");
			SendClientMessage(playerid, 0x6495EDAA, "=============== Oficina ===============");
			ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não está em um carro!");
		}
		return 1;
	}
	if(checkpointid == CheckpointsFix[57] || checkpointid == CheckpointsFix[58] || checkpointid == CheckpointsFix[59] || checkpointid == CheckpointsFix[60])
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			grana = GetPlayerGrana(playerid);
			vid = GetPlayerVehicleID(playerid);
			if(grana > 49)
			{
				GivePlayerGrana(playerid, -50);
				RepairVehicle(vid);

				SendClientMessage(playerid, 0x6495EDAA, "=============== Lava jato ===============");
				SendClientMessage(playerid, COLOR_WHITE, "Lavando o seu veículo - $50");
				SendClientMessage(playerid, 0x6495EDAA, "=============== Lava jato ===============");
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem $50.");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não está em um carro!");
		}
		return 1;
	}
	if(checkpointid == CheckpointsFix[36] || checkpointid == CheckpointsFix[37] || checkpointid == CheckpointsFix[38] || checkpointid == CheckpointsFix[39] || checkpointid == CheckpointsFix[40] || checkpointid == CheckpointsFix[41] || checkpointid == CheckpointsFix[42] || checkpointid == CheckpointsFix[43]
		|| checkpointid == CheckpointsFix[52] || checkpointid == CheckpointsFix[53] || checkpointid == CheckpointsFix[54] || checkpointid == CheckpointsFix[55] || checkpointid == CheckpointsFix[56])
	{
		SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}Olá Cliente, Bem Vindo ao Caixa Eletrônico.");
		SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}{FFFFFF}Digite: {FF6347}/abrirconta para abrir uma conta.");
		SendClientMessage(playerid, Blue, "{FFFFFF}Digite: {FF6347}/depositar para depositar.");
		SendClientMessage(playerid, Blue, "{FFFFFF}Digite: {FF6347}/sacar para sacar.");
		SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Digite: {FF6347}/saldo para ver seu saldo.");
		SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Digite: {FF6347}/saldocell para ver seu saldo por telefone.");
		return 1;
	}
	if(checkpointid == CheckpointsFix[3])
	{
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Boca de Fumo ~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, "Para pegar drogas digite /pegardrogas");
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Boca de Fumo ~~~~~~~~~~~~~~~");
		return 1;
	}
	if(checkpointid == CheckpointsFix[56])
	{
		SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}Olá Cliente, Bem Vindo ao Caixa Eletrônico.");
		SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}{FFFFFF}Digite: {FF6347}/abrirconta para abrir uma conta.");
		SendClientMessage(playerid, Blue, "{FFFFFF}Digite: {FF6347}/depositar para depositar.");
		SendClientMessage(playerid, Blue, "{FFFFFF}Digite: {FF6347}/sacar para sacar.");
		SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Digite: {FF6347}/saldo para ver seu saldo.");
		SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Digite: {FF6347}/saldocell para ver seu saldo por telefone.");
		return 1;
	}
	if(checkpointid == CheckpointsFix[4])
	{
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Lanches ~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, Branco, "Escolha a comida e clique em comprar!");
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Lanches ~~~~~~~~~~~~~~~");
		ShowPlayerDialog(playerid, comidas, DIALOG_STYLE_LIST, "Comidas", "Hamburger - Preço 7 - Vida - 100\nDuplo Hambuger - Preço 10 - Vida - 100\nPizza - Preço 21 - Vida - 100\nFrango - Preço 2 - Vida - 100\nCoca-Cola - Preço 2 - Vida - 100\nAgua - Preço 1 - Vida - 100", "Comprar", "Cancelar");
		return 1;
	}
	if(checkpointid == CheckpointsFix[0])
	{
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Aeroporto - Los Santos ~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, Branco, "Escolha a cidade para viagem e clique em comprar!");
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Aeroporto - Los Santos ~~~~~~~~~~~~~~~");
		ShowPlayerDialog(playerid, viagens, DIALOG_STYLE_LIST, "Viagens", "Los Santos\nSan Fierro\nLas Venturas\nAero Abandonado\nBayside\nEl quebrados\nLas Payasadas\nArea 51\nLas Barrancas\nFort Carson\nMonte Gomery", "Comprar", "Cancelar");
		return 1;
	}
	if(checkpointid == CheckpointsFix[1])
	{
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Aeroporto - San Fierro ~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, Branco, "Escolha a cidade para viagem e clique em comprar!");
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Aeroporto - San Fierro ~~~~~~~~~~~~~~~");
		ShowPlayerDialog(playerid, viagens, DIALOG_STYLE_LIST, "Viagens", "Los Santos\nSan Fierro\nLas Venturas\nAero Abandonado\nBayside\nEl quebrados\nLas Payasadas\nArea 51\nLas Barrancas\nFort Carson\nMonte Gomery", "Comprar", "Cancelar");
		return 1;
	}
	if(checkpointid == CheckpointsFix[2])
	{
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Aeroporto - Lav Venturas ~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, Branco, "Escolha a cidade para viagem e clique em comprar!");
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Aeroporto - Lav Venturas ~~~~~~~~~~~~~~~");
		ShowPlayerDialog(playerid, viagens, DIALOG_STYLE_LIST, "Viagens", "Los Santos\nSan Fierro\nLas Venturas\nAero Abandonado\nBayside\nEl quebrados\nLas Payasadas\nArea 51\nLas Barrancas\nFort Carson\nMonte Gomery", "Comprar", "Cancelar");
		return 1;
	}
	if(checkpointid == CheckpointsFix[33] || checkpointid == CheckpointsFix[34] || checkpointid == CheckpointsFix[32] || checkpointid == CheckpointsFix[35])
	{
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Academia ~~~~~~~~~~~~~~~");
		SendClientMessage(playerid, COLOR_WHITE, "Para todas lutas o preço é $50 mensais, escolha sua luta!");
		SendClientMessage(playerid, 0x6495EDAA, "~~~~~~~~~~~~~~~ Academia ~~~~~~~~~~~~~~~");
		ShowPlayerDialog(playerid, Mudouluta, DIALOG_STYLE_LIST, "Estilos de Lutas", "Luta com as Mãos\nKing-Boxe\nAgarrar e Chutar\nBriga de Rua\nKung-Fu\nNormal", "Selecionar", "Cancelar");
		return 1;
	}
	// =================================================================================
	if(checkpointid == CheckpointsFix[18])
	{
		SendClientMessage(playerid, 0x6495EDAA, "$$$$$$$$$$$$$$$$ Entrega da PIZZA $$$$$$$$$$$$$$$$");
		SendClientMessage(playerid, COLOR_WHITE, "Entregue a pizza digitando /entregarpizza");
		SendClientMessage(playerid, 0x6495EDAA, "$$$$$$$$$$$$$$$$ Entrega da PIZZA $$$$$$$$$$$$$$$$");
		return 1;
	}
	// =================================================================================
	if(checkpointid == CheckpointsFix[12] || checkpointid == CheckpointsFix[13] || checkpointid == CheckpointsFix[14] || checkpointid == CheckpointsFix[15] || checkpointid == CheckpointsFix[16] || checkpointid == CheckpointsFix[17])
	{
		SendClientMessage(playerid, 0x6495EDAA, "$$$$$$$$$$$$$$$$ Pizza-Boy Serviços $$$$$$$$$$$$$$$$");
		SendClientMessage(playerid, COLOR_WHITE, "Carregue sua moto usando /pegarpizza");
		SendClientMessage(playerid, 0x6495EDAA, "$$$$$$$$$$$$$$$$ Pizza-Boy Serviços $$$$$$$$$$$$$$$$");
		return 1;
	}
	// =================================================================================
	if(checkpointid == CheckpointsFix[27])
	{
		SendClientMessage(playerid, 0x6495EDAA, "$$$$$$$$$$$$$$$$ Venda ilegal de Madeira $$$$$$$$$$$$$$$$");
		SendClientMessage(playerid, COLOR_WHITE, "Venda sua madeira /vendermadeira");
		SendClientMessage(playerid, 0x6495EDAA, "$$$$$$$$$$$$$$$$ Venda ilegal de Madeira $$$$$$$$$$$$$$$$");
		return 1;
	}
	// =================================================================================
	if(checkpointid == CheckpointsFix[26])
	{
		SendClientMessage(playerid, 0x6495EDAA, "$$$$$$$$$$$$$$$$$$$ Área de Caça $$$$$$$$$$$$$$$$$$$$$$$$");
		SendClientMessage(playerid, COLOR_WHITE, "Para cortar madeiras ilegalmente digite: /cortar");
		SendClientMessage(playerid, 0x6495EDAA, "$$$$$$$$$$$$$$$$$$$ Área de Caça $$$$$$$$$$$$$$$$$$$$$$$$");
		return 1;
	}
	// =================================================================================
	if(checkpointid == CheckpointsFix[24])
	{
		SendClientMessage(playerid, 0x6495EDAA, "$$$$$$$$$$$$$$$$ Venda de Peixes $$$$$$$$$$$$$$$$");
		SendClientMessage(playerid, COLOR_WHITE, "Venda seus peixes usando /venderpeixe");
		SendClientMessage(playerid, 0x6495EDAA, "$$$$$$$$$$$$$$$$ Venda de Peixes $$$$$$$$$$$$$$$$");
		return 1;
	}
	// =================================================================================
	if(checkpointid == CheckpointsFix[19] || checkpointid == CheckpointsFix[20] || checkpointid == CheckpointsFix[21] || checkpointid == CheckpointsFix[22] || checkpointid == CheckpointsFix[23])
	{
		SendClientMessage(playerid, 0x6495EDAA, "$$$$$$$$$$$$$$$$ Ponto de Pesca $$$$$$$$$$$$$$$$");
		SendClientMessage(playerid, COLOR_WHITE, "Para lançar a vara digite: /pescar");
		SendClientMessage(playerid, 0x6495EDAA, "$$$$$$$$$$$$$$$$ Ponto de Pesca $$$$$$$$$$$$$$$$");
		return 1;
	}
	if(checkpointid == CheckpointsFix[86] || checkpointid == CheckpointsFix[88])
	{
		ShowPlayerDialog(playerid, beber, DIALOG_STYLE_LIST, "{FF4500}Bebidas{FFFFFF}", "Chimarrão\nCachaça\nPinga\nCerveja\nCaipirinha\nBatida de Limão\nBatida de Morango\nBatida de Maracujá\nVinho\nRefrigerante\nÀgua", "Comprar", "Sair");
		return 1;
	}
    // =================================================================================
	if(checkpointid == CheckpointsFix[121]) // conce viaturas
	{
		SendClientMessage(playerid, 0x6495EDAA, "======================== Diversos ========================");
		SendClientMessage(playerid, COLOR_WHITE, "Bem vindo a concessionária!");
		SendClientMessage(playerid, 0x6495EDAA, "======================== Diversos ========================");
		ShowPlayerDialog(playerid, carrodiversos, DIALOG_STYLE_LIST, "{FF0000}Compre sua Carreta ( Nome / Preço )", "{FFFFFF}Kart/100000\n{FFFFFF}Cortador de grama/100000\n{FFFFFF}BF Injection/100000\n{FFFFFF}Bus/100000\n{FFFFFF}Quad/100000\n{FFFFFF}Kombi/100000\n{FFFFFF}Vortex/100000\n{FFFFFF}Huntley/130000", "Comprar", "Sair");
		return 1;
	}
	// fim conce viaturas
    // =================================================================================
    // =================================================================================
	if(checkpointid == CheckpointsFix[122]) // conce viaturas
	{
		SendClientMessage(playerid, 0x6495EDAA, "======================== Viaturas ========================");
		SendClientMessage(playerid, COLOR_WHITE, "Bem vindo a concessionária de Viatura!");
		SendClientMessage(playerid, 0x6495EDAA, "======================== Viaturas ========================");
		ShowPlayerDialog(playerid, carroviaturas, DIALOG_STYLE_LIST, "{FF0000}Compre sua Carreta ( Nome / Preço )", "{FFFFFF}Enforcer/120000\n{FFFFFF}FBI Rancher/150000\n{FFFFFF}FBI Truck/120000\n{FFFFFF}Police Car/120000\n{FFFFFF}S.W.A.T/150000", "Comprar", "Sair");
		return 1;
	}
	// fim conce viaturas
    // =================================================================================
	// =================================================================================
    // =================================================================================
	if(checkpointid == CheckpointsFix[124]) // conce caminhoes
	{
		SendClientMessage(playerid, 0x6495EDAA, "======================== Carretas ========================");
		SendClientMessage(playerid, COLOR_WHITE, "Bem vindo a concessionária de Carretas!");
		SendClientMessage(playerid, 0x6495EDAA, "======================== Carretas ========================");
		ShowPlayerDialog(playerid, carrocarreta, DIALOG_STYLE_LIST, "{FF0000}Compre sua Carreta ( Nome / Preço )", "{FFFFFF}Article Trailer 1/120000\n{FFFFFF}Article Trailer 2/120000\n{FFFFFF}Petrol Trailer/120000\n{FFFFFF}Article Trailer 3/120000", "Comprar", "Sair");
		return 1;
	}
	// fim conce carretas
	// =================================================================================
    // =================================================================================
	if(checkpointid == CheckpointsFix[92]) // conce aerea
	{
		SendClientMessage(playerid, 0x6495EDAA, "======================== Aereos ========================");
		SendClientMessage(playerid, COLOR_WHITE, "Bem vindo a concessionária aerea!");
		SendClientMessage(playerid, 0x6495EDAA, "======================== Aereos ========================");
		ShowModelSelectionMenu(playerid, aerolist, "Concessionaria");
		return 1;
	}
	// fim conce aerea
	// =================================================================================
	if(checkpointid == CheckpointsFix[9])
	{
		SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}Bem Vindo(a) a loja de utilidades.");
		SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Escolha o produto que deseja e clique em '{9370DB}COMPRAR{FFFFFF}'.");
		ShowPlayerDialog(playerid, lojautilidades, DIALOG_STYLE_LIST, "Loja", STRD_UTILIDADES, "Comprar", "Cancelar");
		return 1;
	}
	// =================================================================================

	// =================================================================================
	// LS ==============================================================================

	// SF ==============================================================================
	if(checkpointid == CheckpointsFix[71])
	{
		if(!IsPlayerVIPMT(playerid) || IsPlayerVIPT(playerid))
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não é VIP $Prestige$ ou PREMIUM !");
		}
		else
		{
			SetPlayerPos(playerid, 1212.0748, -34.0853, 1000.9531);
			SetPlayerInterior(playerid, 3);
		}
		return 1;
	}
	if(checkpointid == CheckpointsFix[72])
	{
		if(!IsPlayerVIPMT(playerid) || IsPlayerVIPT(playerid))
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não é VIP $Prestige$ ou PREMIUM !");
		}
		else
		{
			SetPlayerPos(playerid, -2150.0608, 645.9727, 52.2656);
			SetPlayerInterior(playerid, 0);
		}
		return 1;
	}
	if(checkpointid == CheckpointsFix[73])
	{
		if(!IsPlayerVIPMT(playerid) || IsPlayerVIPT(playerid))
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não é VIP $Prestige$ ou PREMIUM !");
		}
		else
		{
			ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Armas Vip", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
		}
		return 1;
	}
	// LV ==============================================================================
	if(checkpointid == CheckpointsFix[74])
	{
		if(!IsPlayerVIPMT(playerid) || IsPlayerVIPT(playerid))
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não é VIP $Prestige$ ou PREMIUM !");
		}
		else
		{
			SetPlayerPos(playerid, 959.0858, -51.0710, 1001.1172);
			SetPlayerInterior(playerid, 3);
		}
		return 1;
	}
	if(checkpointid == CheckpointsFix[75])
	{
		if(!IsPlayerVIP(playerid) || IsPlayerVIPT(playerid))
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não é vip!");
		}
		else
		{
			SetPlayerPos(playerid, 2490.6018, 2058.0061, 10.6719);
			SetPlayerInterior(playerid, 0);
		}
		return 1;
	}
	if(checkpointid == CheckpointsFix[76])
	{
		if(!IsPlayerVIPMT(playerid) || IsPlayerVIPT(playerid))
		{
			SendClientMessage(playerid, 0xFFFF00AA, "Você não é VIP $Prestige$ ou PREMIUM !");
		}
		else
		{
			ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Armas Vip", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
		}
		return 1;
	}
	// =================================================================================
	if(checkpointid == CheckpointsFix[79])
	{
		#if defined SAMsitesUser
		SendClientMessage(playerid, 0x6495EDAA, "================ Controle de Míssil ================");
		SendClientMessage(playerid, COLOR_WHITE, "Você está no controle de Míssil do Pier 69.");
		SendClientMessage(playerid, 0x6495EDAA, "================ Controle de Míssil ================");
		ShowPlayerDialog(playerid, samcontroleg, DIALOG_STYLE_MSGBOX, "Controle de Míssil", "{33AAFF}Centro de controle de Míssil do Pier 69.", "Ligar", "Desligar");
		#else
		SendClientMessage(playerid, roxo, "Controle indisponível no momento!");
		#endif

		return 1;
	}
	if(checkpointid == CheckpointsFix[80])
	{
		#if defined SAMsitesUser
		SendClientMessage(playerid, 0x6495EDAA, "================ Controle de Míssil ================");
		SendClientMessage(playerid, COLOR_WHITE, "Você está no controle de Míssil da Área 51.");
		SendClientMessage(playerid, 0x6495EDAA, "================ Controle de Míssil ================");
		ShowPlayerDialog(playerid, samcontrolea, DIALOG_STYLE_MSGBOX, "Controle de Míssil", "{33AAFF}Centro de controle de Míssil da Área 51.", "Ligar", "Desligar");
		#else
		SendClientMessage(playerid, roxo, "Controle indisponível no momento!");
		#endif

		return 1;
	}

	// Casamento
	if(checkpointid == CheckpointsFix[82])
	{
		if(casar[playerid] == 1)
		{
			if(DOF2_GetInt(file, "Sexo") == Masculino)
			{
				format(string, sizeof(string), "{FF00EE}%s, {FFFFFF}você aceita {FF00EE}%s {FFFFFF}como sua legitima esposa?\n{FFFF00}Deverá protege-la na saude e na doença até que suas conexões os separem.", GetPlayerNameEx(playerid), GetPlayerNameEx(pedidode[playerid]));
				ShowPlayerDialog(playerid, cerimonia, DIALOG_STYLE_MSGBOX, "Cerimônia de Casamento", string, "Aceito", "Não");
			}
			if(DOF2_GetInt(file, "Sexo") == Feminino)
			{
				format(string, sizeof(string), "{FF00EE}%s, {FFFFFF}você aceita {FF00EE}%s {FFFFFF}como seu legitimo esposo?\n{FFFF00}Deverá protege-lo na saude e na doença até que suas conexões os separem.", GetPlayerNameEx(playerid), GetPlayerNameEx(pedidode[playerid]));
				ShowPlayerDialog(playerid, cerimonia, DIALOG_STYLE_MSGBOX, "Cerimônia de Casamento", string, "Aceito", "Não");
			}
		}
		else
		{
			SendClientMessage(playerid, roxo, "Você ainda não pediu ninguem em casamento. Use /pedircasamento");
		}
	}

	return 1;
}

public OnPlayerEnterDynamicRaceCP(playerid, checkpointid)
{
    new string[256];
    
	#if defined FGPSUser
	if(GetPVarInt(playerid, "YEAH") == 1)
	{
		DestroyDynamicRaceCP(PlayerInfo[playerid][FGPS_RCP]);
		DestroyDynamicObject(PlayerInfo[playerid][FGPSObject]);

		SetPVarInt(playerid, "YEAH", 0);
		DeletePVar(playerid, "Spongebob");
		DeletePVar(playerid, "Mario");
		DeletePVar(playerid, "SpiderPig");
		DeletePVar(playerid, "FAIL");

		#if defined UseTd
		PlayerTextDrawHide(playerid, PlayerInfo[playerid][F_GPSTD]);
		PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][F_GPSTD]);
		PlayerInfo[playerid][F_GPSTD] = PlayerText:INVALID_TEXT_DRAW;
		#endif

		SendClientMessage(playerid, 0xFFFFFFFF, "Você chegou ao seu destino!");
	}
	#endif

	// Patrulha
	if(checkpointid == RaceChecksPistaPatrulha[playerid][0])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][0], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][1], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][1])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][1], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][2], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][2])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][2], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][3], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][3])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][3], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][4], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][4])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][4], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][5], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][5])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][5], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][6], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][6])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][6], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][7], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][7])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][7], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][8], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][8])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][8], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][9], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][9])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][9], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][10], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][10])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][10], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][11], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][11])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][11], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][12], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][12])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][12], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][13], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][13])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][13], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][14], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][14])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][14], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][15], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][15])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][15], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][16], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][16])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][16], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][17], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][17])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][17], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][18], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][18])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][18], false);
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][19], true);
		PlayerPlaySound(playerid, 1057, 0, 0, 0);
	}
	if(checkpointid == RaceChecksPistaPatrulha[playerid][19])
	{
		TogglePlayerDynamicRaceCP(playerid, RaceChecksPistaPatrulha[playerid][19], false);
		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Aviso", "{FFFFFF}Você Conseguiu Completar a sua Patrulha\nE Conseguiu ganhar do Governo {FF0000}BSL {FFFFFF}15 Mil !\nParabéns Policial nos provou que você é o Melhor!", "OK","");
		GivePlayerGrana(playerid, 15000);

       	if(IsPlayerInAnyVehicle(playerid))
		{
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		}

		patrulhap[playerid] = 0;

		if(InRacePatrulha[playerid] == 1)
		{
			InRacePatrulha[playerid] = 0;
			DeletePlayerPistaRacePatrulha(playerid);
		}

		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1561.9092, -1627.0844, 13.3828);

		format(string, sizeof(string), "{FF0000}%s {FFFFFF}Acabou sua Patrulha {FF0000}por Toda Los Santos e ganhou $15 MIL.", GetPlayerNameEx(playerid));
		SendClientMessageToAll(Branco, string);
	}

}

public OnPlayerModelSelection(playerid, response, listid, modelid)
{
    new file[128];
    
	if(listid == vehlist || listid == aerolist || listid == boatlist)
	{
	    if(response)
	    {
			moradia[playerid] = modelid;
			ShowPlayerDialog(playerid, CConfirm, DIALOG_STYLE_MSGBOX, "Concessionaria", "{FF0000}Atenção! {FFA500}Você deseja mesmo comprar este veículo?", "Sim", "Não");
		}
	    else SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Compra cancelada com sucesso.");
    	return 1;
	}
	
	if(listid == skinlist)
    {
        if(response)
        {
            format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(GetPlayerGrana(playerid) > 49)
			{
				GivePlayerGrana(playerid, -50);
				DOF2_SetInt(file, "Skin", modelid);
				SetPlayerSkin(playerid, DOF2_GetInt(file, "Skin"));
                SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma roupa nova por: R$: 150");
            }
            else SendClientMessage(playerid, 0x6495EDAA, "Compra cancelada, volte sempre!");
            return 1;
        }
    }
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new string[256];
	new car = GetPlayerVehicleID(playerid);
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	
	new file[128];
	new Nome[MAX_PLAYERS][32];
	
    if(dialogid == CriarCorrida)
	{
	    if(!response) return ConstruindoCorrida = 0;

		if(listitem == 0) ConstrucaoCorridaTipo = 0, ShowDialogCorrida(playerid), ConstruindoCorrida = playerid+1;
		if(listitem == 1) ConstrucaoCorridaTipo = 3, ShowDialogCorrida(playerid), ConstruindoCorrida = playerid+1;
	}

	if(dialogid == CorridaNome)
	{
	    if(!response) return ShowPlayerDialog(playerid, CriarCorrida, DIALOG_STYLE_LIST, CreateCaption("Construir Nova Corrida"), "\
        Corrida Terrestre / Nautica\n\
        Corrida Aerea", "Next", "Exit");

		if(!strlen(inputtext)) return ShowDialogCorrida(playerid);
   	 	if(strlen(inputtext) < 1 || strlen(inputtext) > 20) return ShowDialogCorrida(playerid);

		strmid(NomeConstrucao, inputtext, 0, strlen(inputtext), sizeof(NomeConstrucao));
		ShowPlayerDialog(playerid, IDVeiculo, DIALOG_STYLE_INPUT, CreateCaption("Construir Nova Corrida (Etapa 2/4)"), "\
        {FF0000}Etapa 2:\n\
        \n\
        {FFFFFF}Insira o ID do veículo desejado ou o nome para continuar a construção.\n\n\
        >> Depois de Continuar ou Voltar para voltar à etapa anterior.", "Continuar", "Voltar");
	}

    if (dialogid == DIALOG_CONTA)
    {
        if (response)
            return 1;
    }

	if(dialogid == IDVeiculo)
	{
	    if(!response) return ShowPlayerDialog(playerid, CorridaNome, DIALOG_STYLE_INPUT, CreateCaption("Construir Nova Corrida (Etapa 1/4)"), "\
        {F50000}ERRO: Nome Da Corrida Muito Grande/Pequeno (Min. 1 - Max. 20)\n\n\
        {F50000}Etapa 1:\n\
        ********\n\
        {A1A1A3}Bem Vindo ao Modo 'Construção de Corrida'.\n\
        Aqui Voce Iniciar a Construir uma Nova Corrida, Insira um NOME para Sua Corrida, EX: RACE-1\n\n\
        >> Insira o Nome da Corrida e Pressione 'Next' Para Continuar", "Next", "Back");

		if(!strlen(inputtext)) return ShowPlayerDialog(playerid, IDVeiculo, DIALOG_STYLE_INPUT, CreateCaption("Construir Nova Corrida (Etapa 2/4)"), "\
        {F50000}ERRO: ID Invalido/Nome\n\n\
        {F50000}Etapa 2:\n\
        \n\
        {A1A1A3}ID Invalido!  Insira o ID do Veiculo a Ser usado Na Corrida Ou o NOME Para Continuar Sua Construção.\n\n\
        >> Insira o ID ou o NOME Do Veiculo e Pressione 'Next' Para Continuar. 'Back' Para Voltar. ", "Next", "Back");

		if(IsNumeric(inputtext))
		{
			if(!IsValidVehicle(strval(inputtext))) return ShowPlayerDialog(playerid, IDVeiculo, DIALOG_STYLE_INPUT, CreateCaption("Construir Nova Corrida (Etapa 2/4)"), "\
	        {F50000}ERRO: ID Invalido/Nome\n\n\
	        {F50000}Etapa 2:\n\
	        \n\
	        {A1A1A3}ID Invalido!  Insira o ID do Veiculo a Ser usado Na Corrida Ou o NOME Para Continuar Sua Construção.\n\n\
	        >> Insira o ID ou o NOME Do Veiculo e Pressione 'Next' Para Continuar. 'Back' Para Voltar. ", "Next", "Back");

			new Float: pPosA[4];

			GetPlayerPos(playerid, pPosA[0], pPosA[1], pPosA[2]);
			GetPlayerFacingAngle(playerid, pPosA[3]);
			ConstrucaoModeloID = strval(inputtext);
			ConstrucaoVeiculoCriado = (ConstrucaoVeiculoCriado == 0x01) ? (DestroyVehicle(ConstrucaoVeiculo), ConstrucaoVeiculoCriado = 0x00) : (DestroyVehicle(ConstrucaoVeiculo), ConstrucaoVeiculoCriado = 0x00);
			ConstrucaoVeiculo = CreateVehicle(strval(inputtext), pPosA[0], pPosA[1], pPosA[2], pPosA[3], random(126), random(126), (60 * 60));

			PutPlayerInVehicle(playerid, ConstrucaoVeiculo, 0);

			ConstrucaoVeiculoCriado = 0x01;
			ShowPlayerDialog(playerid, CriarVeiculoC, DIALOG_STYLE_MSGBOX, CreateCaption("Construir Nova Corrida (Etapa 3/4)"),
	        "\
	        {FF0000}Etapa3:\n\
	        \n\
	        {FFFFFF}Sete as posições da largada!\n\
	        Nota: Clicando Em 'voltar' retornará no modo anterior. use: /veiculo Para Setar as Posições do Primeiro e Segundo Lugar.  \n\
	        Nota: Após setar as posições você será encaminhado para a última etapa.\n\n\
	        >> Pressione 'OK' Para Continuar. 'Back' Para Voltar.", "OK", "Voltar");

		}
		else
		{
   			if(!IsValidVehicle(ReturnVehicleID(inputtext))) return ShowPlayerDialog(playerid, IDVeiculo, DIALOG_STYLE_INPUT, CreateCaption("Construir Nova Corrida (Etapa 2/4)"), "\
	        {F50000}ERRO: ID Invalido/Nome\n\n\
	        {F50000}Etapa 2:\n\
	        \n\
	        {A1A1A3}ID Invalido!  Insira o ID do Veiculo a Ser usado Na Corrida Ou o NOME Para Continuar Sua Construção.\n\n\
	        >> Insira o ID ou o NOME Do Veiculo e Pressione 'Next' Para Continuar. 'Back' Para Voltar. ", "Next", "Back");

			new Float: pPosA[4];

			GetPlayerPos(playerid, pPosA[0], pPosA[1], pPosA[2]);
			GetPlayerFacingAngle(playerid, pPosA[3]);
			ConstrucaoModeloID = ReturnVehicleID(inputtext);
			ConstrucaoVeiculoCriado = (ConstrucaoVeiculoCriado == 0x01) ? (DestroyVehicle(ConstrucaoVeiculo), ConstrucaoVeiculoCriado = 0x00) : (DestroyVehicle(ConstrucaoVeiculo), ConstrucaoVeiculoCriado = 0x00);
			ConstrucaoVeiculo = CreateVehicle(ReturnVehicleID(inputtext), pPosA[0], pPosA[1], pPosA[2], pPosA[3], random(126), random(126), (60 * 60));
			PutPlayerInVehicle(playerid, ConstrucaoVeiculo, 0);
			ConstrucaoVeiculoCriado = 0x01;
			ShowPlayerDialog(playerid, CriarVeiculoC, DIALOG_STYLE_MSGBOX, CreateCaption("Construir Nova Corrida (Etapa 3/4)"),
	        "\
	        {F50000}Etapa3:\n\
	        \n\
	        {A1A1A3}Agora Voce Tera que Setar as posições dos veículo\n\
	        Nota: Clicando Em 'OK' Retorna em Modo Free. use: /veiculo.\n\
	        Nota: Apos Setar as Posições, Voce ira para a Ultima Etapa da Construção\n\n\
	        >> Pressione 'OK' Para Continuar. 'Back' Para Voltar.", "OK", "Back");
		}
	}

	if(dialogid == CriarVeiculoC)
	{
		if(!response) return ShowPlayerDialog(playerid, IDVeiculo, DIALOG_STYLE_INPUT, CreateCaption("Construir Nova Corrida (Etapa 2/4)"), "\
        {F50000}Etapa 2:\n\
        \n\
        {A1A1A3}Insira o ID do Veiculo a Ser usado Na Corrida Ou o NOME Para Continuar Sua Construção.\n\n\
        >> Insira o ID ou o NOME Do Veiculo e Pressione 'Next' Para Continuar. 'Back' Para Voltar.", "Next", "Back");

		SendClientMessage(playerid, VERMELHO, ">> Importante: Use: /veiculo para marcar a posição que ele ficará quando a corrida for carregada.");
		SendClientMessage(playerid, VERMELHO, ">> Após setar as posições dos veículos, use /finalizar para ir á próxima etapa.");
		BuildVehPosCount = 0;
		BuildTakeVehPos = true;
	}

	if(dialogid == CriarChecks)
	{
		if(!response) return ShowPlayerDialog(playerid, CriarVeiculoC, DIALOG_STYLE_MSGBOX, CreateCaption("Construir Nova Corrida (Etapa 3/4)"),
        "\
        {F50000}Etapa3:\n\
        \n\
        {A1A1A3}Agora Voce Tera que Setar as posições dos veículo\n\
        Nota: Clicando Em 'OK' Retorna em Modo Free. use: /veiculo.\n\
        Nota: Apos Setar as Posições, Voce ira para a Ultima Etapa da Construção\n\n\
        >> Pressione 'OK' Para Continuar. 'Back' Para Voltar.", "OK", "Back");

		SendClientMessage(playerid, VERMELHO, ">> Insira os checkpoints usando: /check.");
		SendClientMessage(playerid, VERMELHO, "Importante: Use: /finalizarcorrida para terminar e salvar a corrida. Você poderá carregar usando: /comecarcorrida [NOME].");
		ConstruirCheckPointCount = 0;
		BuildTakeCheckpoints = true;
	}

	if(dialogid == FinalizarCorrida)
	{
	    if(!response) return ShowPlayerDialog(playerid, FinalizarCorrida, DIALOG_STYLE_MSGBOX, CreateCaption("Construir Nova Corrida (Done)"),
        "\
        {FF0000}A corrida foi criada com sucesso!\n\n\
        {FFFFFF}>> Pressione 'Salvar' para salvar a corrida ou 'Sair' para sair sem salvar.", "Salvar", "Sair");

		ConstruindoCorrida = 0;
		ConstruirCheckPointCount = 0;
		BuildVehPosCount = 0;
		BuildTakeCheckpoints = false;
		BuildTakeVehPos = false;
		ConstrucaoVeiculoCriado = (ConstrucaoVeiculoCriado == 0x01) ? (DestroyVehicle(ConstrucaoVeiculo), ConstrucaoVeiculoCriado = 0x00) : (DestroyVehicle(ConstrucaoVeiculo), ConstrucaoVeiculoCriado = 0x00);
	}

    if(dialogid == CriarPortao)
	{
	    if(!IsNumeric(inputtext)) return SendClientMessage(playerid, Vermelho, "x ID inválido.");
	    SetPVarInt(playerid, "PortaoID", GetNextPortao());
	    SetPVarInt(playerid, "CriandoPortao", 1);
	    SetPVarInt(playerid, "ObjetoID", strval(inputtext));
	    new id = GetPVarInt(playerid, "PortaoID");
		new Float: Pos[3];
		GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
		_Portao[id] = CreateDynamicObject(GetPVarInt(playerid, "ObjetoID"), Pos[0]+2, Pos[1]+2, Pos[2], 0.0, 0.0, 0.0, -1, -1, -1, 200.0);
		new F[90];
		format(F, sizeof(F), PASTA_PORTOES, GetPVarInt(playerid, "PortaoID"));
		if(!DOF2_FileExists(F)) DOF2_CreateFile(F);
		DOF2_SetBool(F, "EmCriacao", true);
		DOF2_SetInt(F, "EmpresaAssociada", -1);
		DOF2_SetInt(F, "CasaAssociada", -1);
		DOF2_SetString(F, "Dono", "Ninguem");
	    ShowPlayerDialog(playerid, MenuPortao, DIALOG_STYLE_LIST, "Edições Portão", "{FFFFFF}Salvar portão fechado\nSalvar portão aberto\nAlterar Velocidade\nAssociar Portão\nTerminar edição\nDeletar edição\n", "Selecionar", "Fechar");
	}

	if(dialogid == MenuPortao)
	{
	    if(response == 1)
		{
	        if(listitem == 0)
			{
	            EditDynamicObject(playerid, _Portao[GetPVarInt(playerid, "PortaoID")]);
	            SendClientMessage(playerid, -1, "x Você está salvando a posição do portão fechado.");
	            SetPVarInt(playerid, "SalvandoF", 1);
	        }
	        if(listitem == 1)
			{
	            EditDynamicObject(playerid, _Portao[GetPVarInt(playerid, "PortaoID")]);
	            SendClientMessage(playerid, -1, "Você está salvando a posição do portão aberto.");
	        }
	        if(listitem == 2) ShowPlayerDialog(playerid, VelocidadePortao, DIALOG_STYLE_INPUT, "Velocidade portão", "{FFFFFF}Digite a velocidade que deseja que o portão seja aberto/fechado:\n", "Salvar", "Voltar");
			if(listitem == 3) ShowPlayerDialog(playerid, AssociarPortao, DIALOG_STYLE_LIST, "Associar Portão", "Associar a Casa\nAssociar a Empresa", "Selecionar", "Voltar");
			if(listitem == 4)
			{
	            new FromF[90];
	            format(FromF, sizeof(FromF), PASTA_PORTOES, GetPVarInt(playerid, "PortaoID"));
	            if(!DOF2_FileExists(FromF))
				{
	                SendClientMessage(playerid, Vermelho, "x Este portão não foi criado ainda.");
                    ShowPlayerDialog(playerid, MenuPortao, DIALOG_STYLE_LIST, "Edições Portão", "{FFFFFF}Salvar portão fechado\nSalvar portão aberto\nAlterar Velocidade\nAssociar Portão\nTerminar edição\nDeletar edição\n", "Selecionar", "Fechar");
                    return 1;
	            }
	            if(DOF2_GetFloat(FromF, "PosX") == 0 || DOF2_GetFloat(FromF, "PosAX") == 0)
				{
	                SendClientMessage(playerid, Vermelho, "x Você não salvou as coordenadas do portão.");
	                ShowPlayerDialog(playerid, MenuPortao, DIALOG_STYLE_LIST, "Edições Portão", "{FFFFFF}Salvar portão fechado\nSalvar portão aberto\nAlterar Velocidade\nAssociar Portão\nTerminar edição\nDeletar edição\n", "Selecionar", "Fechar");
	                return 1;
	            }
	            new id = GetPVarInt(playerid, "PortaoID");
	            DestroyDynamicObject(_Portao[id]);
				_Portao[id] = CreateDynamicObject(GetPVarInt(playerid, "ObjetoID"), DOF2_GetFloat(FromF, "PosX"), DOF2_GetFloat(FromF, "PosY"), DOF2_GetFloat(FromF, "PosZ"), DOF2_GetFloat(FromF, "PosXr"), DOF2_GetFloat(FromF, "PosYr"), DOF2_GetFloat(FromF, "PosZr"), -1, -1, -1, 200.0);

				if(GetPVarInt(playerid, "CriandoPortao") == 1)
				{
		            DOF2_SetString(FromF, "Chave1", "Ninguem");
		            DOF2_SetString(FromF, "Chave2", "Ninguem");
		            DOF2_SetString(FromF, "Chave3", "Ninguem");
		            DOF2_SetString(FromF, "Chave4", "Ninguem");
		            DOF2_SetString(FromF, "Chave5", "Ninguem");
		            DOF2_SetBool(FromF, "PortaoEstado", false);
		            DOF2_SetInt(FromF, "ID", GetPVarInt(playerid, "PortaoID"));
		            DOF2_SetInt(FromF, "Modelo", GetPVarInt(playerid, "ObjetoID"));
				}

	            new label[90];
	            DestroyDynamic3DTextLabel(_TextPortao[id]);
	            format(label, sizeof(label), "{FFFFFF}ID:{FF0000} %d\n{FFFFFF}Aperte {FF0000}H {FFFFFF}Para Abrir", DOF2_GetInt(FromF, "ID"));
	            _TextPortao[id] = CreateDynamic3DTextLabel(label, -1, DOF2_GetFloat(FromF, "PosX"), DOF2_GetFloat(FromF, "PosY"), DOF2_GetFloat(FromF, "PosZ"), 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);

	            if(GetPVarInt(playerid, "CriandoPortao") == 1)
				{
		            new msg[200];
		            format(msg, sizeof(msg), "-> O(A) Administrador(a) %s criou um portão. ID: %d", GetPlayerNameEx(playerid), GetPVarInt(playerid, "PortaoID"));
		            SendClientMessageToAll(Azul, msg);
	            }

	            DOF2_SetBool(FromF, "EmCriacao", false);

	            DeletePVar(playerid, "PortaoID");
	            DeletePVar(playerid, "ObjetoID");
	            DeletePVar(playerid, "CriandoPortao");
	            DeletePVar(playerid, "EditandoPortao");
	            return 1;
	        }
	        if(listitem == 5)
			{
				new FromF[90];
				format(FromF, sizeof(FromF), PASTA_PORTOES, GetPVarInt(playerid, "PortaoID"));
				if(DOF2_FileExists(FromF)) DOF2_RemoveFile(FromF);
				DestroyDynamicObject(_Portao[GetPVarInt(playerid, "PortaoID")]);
				SendClientMessage(playerid, Vermelho, "x Portão deletado.");
				DestroyDynamic3DTextLabel(_TextPortao[GetPVarInt(playerid, "PortaoID")]);

				DeletePVar(playerid, "PortaoID");
	            DeletePVar(playerid, "ObjetoID");
	            DeletePVar(playerid, "CriandoPortao");
	            DeletePVar(playerid, "EditandoPortao");
	            return 1;
	        }
	    } else {
			if(GetPVarInt(playerid, "CriandoPortao") == 1)
			{
			    DestroyDynamicObject(_Portao[GetPVarInt(playerid, "PortaoID")]);
			    DestroyDynamic3DTextLabel(_TextPortao[GetPVarInt(playerid, "PortaoID")]);
			    DeletePVar(playerid, "CriandoPortao");
			    DeletePVar(playerid, "PortaoID");
			    DeletePVar(playerid, "ObjetoID");
			    DeletePVar(playerid, "EditandoPortao");
			}
	    }
	}

	if(dialogid == VelocidadePortao)
	{
	    if(!IsNumeric(inputtext))
		{
	        SendClientMessage(playerid, Vermelho, "x Por favor utilize apenas números.");
	        ShowPlayerDialog(playerid, VelocidadePortao, DIALOG_STYLE_INPUT, "Velocidade portão", "{FFFFFF}Digite a velocidade que deseja que o portão seja aberto/fechado:\n", "Salvar", "Voltar");
	        return 1;
	    }
	    new FromF[90];
	    format(FromF, sizeof(FromF), PASTA_PORTOES, GetPVarInt(playerid, "PortaoID"));
	    if(!DOF2_FileExists(FromF)) DOF2_CreateFile(FromF);
	    DOF2_SetInt(FromF, "Velocidade", strval(inputtext));
	    new msg[55];
	    format(msg, sizeof(msg), "x A velocidade foi setada para: %d", strval(inputtext));
	    SendClientMessage(playerid, Vermelho, msg);
	    ShowPlayerDialog(playerid, MenuPortao, DIALOG_STYLE_LIST, "Edições Portão", "{FFFFFF}Salvar portão fechado\nSalvar portão aberto\nAlterar Velocidade\nAssociar Portão\nTerminar edição\nDeletar edição\n", "Selecionar", "Fechar");
	    return 1;
	}

	if(dialogid == DeletarAll)
	{
	    if(response == 1)
		{
	        new F[90], count;
	        for(new P; P < MAX_PORTOES; P++)
			{
	            format(F, sizeof(F), PASTA_PORTOES, P);
	            if(DOF2_FileExists(F)) {
	                DestroyDynamicObject(_Portao[DOF2_GetInt(F, "ID")]);
	                DestroyDynamic3DTextLabel(_TextPortao[DOF2_GetInt(F, "ID")]);
	                DOF2_RemoveFile(F);
	            }
	            count ++;
	        }
	        SendClientMessage(playerid, Vermelho, "Deletando...");
	        if(count > MAX_PORTOES-1)
			{
	            new msg[85];
	            format(msg, sizeof(msg), "x {FF0000}%s {FFFFFF}deletou todos os portões do servidor.", GetPlayerNameEx(playerid));
	            SendClientMessageToAll(-1, msg);
	        }
	        return 1;
	    }
	}

	if(dialogid == LiberarAll)
	{
		if(response == 1)
		{
		    new F[90], count;
		    for(new P; P < MAX_PORTOES; P ++)
			{
				format(F, sizeof(F), PASTA_PORTOES, P);
				if(DOF2_FileExists(F)) LiberarPortao(-1, P);
				count++;
		    }
		    SendClientMessage(playerid, Vermelho, "Liberando...");
		    if(count > MAX_PORTOES-1)
			{
		        new msg[95];
		        format(msg, sizeof(msg), "x {FF0000}%s {FFFFFF}liberou todos os portões do servidor{FF0000}.", GetPlayerNameEx(playerid));
		        SendClientMessageToAll(-1, msg);
		    }
		    return 1;
		}
	}

	if(dialogid == AssociarPortao)
	{
	    if(response == 0) return ShowPlayerDialog(playerid, MenuPortao, DIALOG_STYLE_LIST, "Edições Portão", "{FFFFFF}Salvar portão fechado\nSalvar portão aberto\nAlterar Velocidade\nAssociar Portão\nTerminar edição\nDeletar edição\n", "Selecionar", "Fechar");
	    if(listitem == 0) ShowPlayerDialog(playerid, AssociarCasa, DIALOG_STYLE_INPUT, "Associar Casa", "{FFFFFF}Digite o ID da casa que deseja associar a este portão:\n", "Associar", "Voltar");
	    if(listitem == 1) ShowPlayerDialog(playerid, AssociarEmpresa, DIALOG_STYLE_INPUT, "Associar Empresa", "{FFFFFF}Digite o ID da empresa que deseja associar a este portão:\n", "Associar", "Voltar");
	}

	if(dialogid == AssociarCasa)
	{
	    if(response == 0) return ShowPlayerDialog(playerid, AssociarPortao, DIALOG_STYLE_LIST, "Associar Portão", "Associar a Casa\nAssociar a Empresa", "Selecionar", "Voltar");
	    if(!IsNumeric(inputtext))
		{
	        SendClientMessage(playerid, Vermelho, "x ID inválido.");
	        ShowPlayerDialog(playerid, AssociarCasa, DIALOG_STYLE_INPUT, "Associar Casa", "{FFFFFF}Digite o ID da casa que deseja associar a este portão:\n", "Associar", "Voltar");
	        return 1;
	    }
	    new FromF[90];
	    format(FromF, sizeof(FromF), PASTA_CASAS, strval(inputtext));
	    if(!DOF2_FileExists(FromF))
		{
	        SendClientMessage(playerid, Vermelho, "x Casa inexistente.");
	        ShowPlayerDialog(playerid, AssociarCasa, DIALOG_STYLE_INPUT, "Associar Casa", "{FFFFFF}Digite o ID da casa que deseja associar a este portão:\n", "Associar", "Voltar");
	        return 1;
	    }
	    format(FromF, sizeof(FromF), PASTA_PORTOES, GetPVarInt(playerid, "PortaoID"));
	    DOF2_SetInt(FromF, "CasaAssociada", strval(inputtext));
	    new msg[65];
	    format(msg, sizeof(msg), "x Você assouciou este portão a casa %d.", strval(inputtext));
		SendClientMessage(playerid, Vermelho, msg);
		ShowPlayerDialog(playerid, MenuPortao, DIALOG_STYLE_LIST, "Edições Portão", "{FFFFFF}Salvar portão fechado\nSalvar portão aberto\nAlterar Velocidade\nAssociar Portão\nTerminar edição\nDeletar edição\n", "Selecionar", "Fechar");
		new FromF2[90];
		format(FromF2, sizeof(FromF2), PASTA_CASAS, strval(inputtext));
		DOF2_SetString(FromF, "Dono", DOF2_GetString(FromF2, "Dono"));
		return 1;
	}

	if(dialogid == AssociarEmpresa)
	{
	    if(response == 0) return ShowPlayerDialog(playerid, AssociarPortao, DIALOG_STYLE_LIST, "Associar Portão", "Associar a Casa\nAssociar a Empresa", "Selecionar", "Voltar");
        if(!IsNumeric(inputtext))
		{
	        SendClientMessage(playerid, Vermelho, "x ID inválido.");
	        ShowPlayerDialog(playerid, AssociarEmpresa, DIALOG_STYLE_INPUT, "Associar Empresa", "{FFFFFF}Digite o ID da empresa que deseja associar a este portão:\n", "Associar", "Voltar");
	        return 1;
	    }
	    new FromF[90];
	    format(FromF, sizeof(FromF), PASTA_PROPS, strval(inputtext));
	    if(!DOF2_FileExists(FromF))
		{
	        SendClientMessage(playerid, Vermelho, "x Empresa inexistente.");
	        ShowPlayerDialog(playerid, AssociarEmpresa, DIALOG_STYLE_INPUT, "Associar Empresa", "{FFFFFF}Digite o ID da empresa que deseja associar a este portão:\n", "Associar", "Voltar");
	        return 1;
	    }
	    format(FromF, sizeof(FromF), PASTA_PORTOES, GetPVarInt(playerid, "PortaoID"));
	    DOF2_SetInt(FromF, "EmpresaAssociada", strval(inputtext));
	    new msg[60];
	    format(msg, sizeof(msg), "x Você assouciou este portão a empresa %d.", strval(inputtext));
		SendClientMessage(playerid, Vermelho, msg);
		ShowPlayerDialog(playerid, MenuPortao, DIALOG_STYLE_LIST, "Edições Portão", "{FFFFFF}Salvar portão fechado\nSalvar portão aberto\nAlterar Velocidade\nAssociar Portão\nTerminar edição\nDeletar edição\n", "Selecionar", "Fechar");
		new FromF2[90];
		format(FromF2, sizeof(FromF2), PASTA_PROPS, strval(inputtext));
		DOF2_SetString(FromF, "Dono", DOF2_GetString(FromF2, "Dono"));
		return 1;
	}

	if(dialogid==400)
	{
	    if(response)
	    {
	        new gangid=GetNewGangID();
	        if(!strcmp(inputtext,RESERVED_NAME)) return SendClientMessage(playerid,amarelo,"[CLAN] Nome bloqueado para uso!");
	        if(strlen(inputtext) < MIN_TAG || strlen(inputtext) > MAX_TAG) return SendClientMessage(playerid,amarelo,"[CLAN] nome tem que ter entre 2 a 7 letras");
	        if(gangid>=MAX_GANGS) return SendClientMessage(playerid,amarelo,"[CLAN] O máximo de clans no servidor foi atingido!");
			GivePlayerGrana(playerid,CUSTO_GANG);
			CriarGang(playerid,gangid,inputtext);
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			DOF2_SetInt(file, "SGang", 1);
	    }
		return 1;
	}
	
	if(dialogid==401)
	{
	    if(response)
	    {
	        //kickar
	        new id=-1;
	        new form[STRING_MEMBROS];
	        new name[MAX_PLAYER_NAME],name2[MAX_PLAYER_NAME],fm[128];
	        GetPlayerName(playerid,name2,sizeof(name2));
	        if(!strcmp(name2,inputtext)) return SendClientMessage(playerid,amarelo,"[CLAN] Você não pode se kickar!");
	        //checkagem online
			for(new i=0;i<MAX_PLAYERS;i++)
			{
			    if(IsPlayerConnected(i))
			    {
				    GetPlayerName(i,name,sizeof(name));
				    if(!strcmp(name,inputtext))
				    {
				        id=i;
				        //Player ta online e com este nick
				        if(GangID[id]!=GangID[playerid]) return SendClientMessage(playerid,amarelo,"[CLAN] Este jogador não é de seu clan!");
				        if(GangLevel[id]>=GangLevel[playerid]) return SendClientMessage(playerid,amarelo,"[CLAN] Seu rank do clan deve ser maior do que de quem você quer kickar!");
				        if(GangLevel[id]>0)
						{
						    strcat(form,DOF2_GetString(FormatGang(GangID[playerid]),"Membros"));
							new pos=strfind(form,inputtext);
							strdel(form,pos-1,pos+strlen(inputtext));
							DOF2_SetString(FormatGang(GangID[playerid]),"Membros",form);
							DOF2_Unset(FormatGang(GangID[playerid]),name);
							DOF2_SetInt(FormatGang(GangID[playerid]),"NMembros",DOF2_GetInt(FormatGang(GangID[playerid]),"NMembros")-1);
							DOF2_SaveFile();
						}
				        GangLevel[id]=0;
				        format(fm,128,"[CLAN CHAT] %s foi kickado do clan por %s.",name,name2);
				        for(new e=0;e<MAX_PLAYERS;e++)
				            if(IsPlayerConnected(e))
				            	if(GangID[e]==GangID[playerid]&&e!=id)
				                	SendClientMessage(e,azul,fm);
				        format(fm,128,"[CLAN] Você kickado do clan por %s.",name2);
				        SendClientMessage(id,amarelo,fm);
				        MudarGangPlayer(id,0);
				        break;
				    }
			    }
			}
			//ta off?
			if(id==-1)
			{
			    if(DOF2_IsSet(FormatGang(GangID[playerid]),inputtext))
			    {
			    	DOF2_Unset(FormatGang(GangID[playerid]),inputtext);
					strcat(form,DOF2_GetString(FormatGang(GangID[playerid]),"Membros"));
					new pos=strfind(form,inputtext);
					strdel(form,pos-1,pos+strlen(inputtext));
					DOF2_SetString(FormatGang(GangID[playerid]),"Membros",form);
					DOF2_SaveFile();
					format(fm,128,"[CLAN CHAT] %s foi kickado do clan por %s.",inputtext,name2);
			        for(new e=0;e<MAX_PLAYERS;e++)
			            if(IsPlayerConnected(e))
			            	if(GangID[e]==GangID[playerid]&&e!=id)
			                	SendClientMessage(id,azul,fm);
				}
				else SendClientMessage(playerid,amarelo,"[CLAN] Player não encontrado.");
			}
	    }
		return 1;
	}
	if(dialogid==410)
	{
	    if(response)
	    {
	        if(strlen(inputtext)>70) return SendClientMessage(playerid,amarelo,"[CLAN] Lema muito grande!");
			new fm2[128];format(fm2,128,"[CLAN] NOVO LEMA: %s",inputtext);
			DOF2_SetString(FormatGang(GangID[playerid]),"Lema",inputtext);
			DOF2_SaveFile();
			for(new i=0;i<MAX_PLAYERS;i++)
			    if(IsPlayerConnected(i))
			    	if(GangID[playerid]==GangID[i])
			        	SendClientMessage(i,azul,fm2);
	    }
	    return 1;
	}
	if(dialogid==411)
	{
	    if(response)
	    {
	        new id = strval(inputtext);
	        if(!IsPlayerConnected(id)) return SendClientMessage(playerid,amarelo,"[CLAN] Este ID não está online!");
	        if(GangID[id]!=GangID[playerid]) return SendClientMessage(playerid,amarelo,"[CLAN] Este player não é de seu clan!");
			new nm[MAX_PLAYER_NAME];GetPlayerName(id,nm,sizeof(nm));
	        new fm[50];format(fm,50,"Coloque o nível: (Rank atual é %i)",GangLevel[id]);
	        TempID[playerid]=id;
            ShowPlayerDialog(playerid,412,DIALOG_STYLE_INPUT,"Clan - Level",fm,"Continuar","Sair");
	    }
	    return 1;
	}
	if(dialogid==412)
	{
	    if(response)
	    {
	        new lvlnovo = strval(inputtext);
			new id = TempID[playerid];
			if(!IsPlayerConnected(id)) return SendClientMessage(playerid,amarelo,"[CLAN] Este ID não está online!");
	        if(GangID[id]!=GangID[playerid]) return SendClientMessage(playerid,amarelo,"[CLAN] Este player não é de seu clan!");
	        if(lvlnovo==GangLevel[id]) return SendClientMessage(playerid,amarelo,"[CLAN] Este player já está nesse level!");
	        if(lvlnovo>=GangLevel[playerid]) return SendClientMessage(playerid,amarelo,"[CLAN] Você só pode setar ranks menores que o seu!");
			if(lvlnovo>=GangLevel[playerid]) return SendClientMessage(playerid,amarelo,"[CLAN] Você só pode setar ranks menores que o seu!");
			if(GangLevel[id]>=GangLevel[playerid]) return SendClientMessage(playerid,amarelo,"[CLAN] Você só pode setar ranks menores que o seu!");
	        new nm[MAX_PLAYER_NAME];GetPlayerName(id,nm,sizeof(nm));
	        if(GangLevel[id]==0)
			{
				DOF2_SetInt(FormatGang(GangID[playerid]),nm,lvlnovo);
				DOF2_SetInt(GangF(PlayersFile),nm,GangID[playerid]);
				DOF2_SetInt(FormatGang(GangID[playerid]),"NMembros",DOF2_GetInt(FormatGang(GangID[playerid]),"NMembros")+1);
				new fm[STRING_MEMBROS];format(fm,sizeof(fm),"%s,%s",DOF2_GetString(FormatGang(GangID[playerid]),"Membros"),nm);
				DOF2_SetString(FormatGang(GangID[playerid]),"Membros",fm);
				DOF2_SaveFile();
				GangLevel[id]=lvlnovo;
			}
			else
			{
		        new lvl = DOF2_GetInt(FormatGang(GangID[playerid]),nm);
		        if(GangLevel[playerid]<=lvl) return SendClientMessage(playerid,amarelo,"[CLAN] Seu rank deve ser maior do que de quem você quer mudar!");
				if(lvlnovo>0)
				{
					DOF2_SetInt(FormatGang(GangID[playerid]),nm,lvlnovo);
					DOF2_SaveFile();
				}
				else
				{
					DOF2_Unset(FormatGang(GangID[playerid]),nm);
					DOF2_Unset(GangF(PlayersFile),nm);
					DOF2_SetInt(FormatGang(GangID[playerid]),"NMembros",DOF2_GetInt(FormatGang(GangID[playerid]),"NMembros")-1);
					new form[STRING_MEMBROS];
					strcat(form,DOF2_GetString(FormatGang(GangID[playerid]),"Membros"));
					new pos=strfind(form,nm);
					strdel(form,pos-1,pos+strlen(nm));
					DOF2_SetString(FormatGang(GangID[playerid]),"Membros",form);
					DOF2_SaveFile();
				}
			}
			new nm1[MAX_PLAYER_NAME];GetPlayerName(playerid,nm1,sizeof(nm1));
			new nomelvl[15], lvlvelho[15];
			switch(lvlnovo)
			{
 				case 0: nomelvl=POS_NV0;
	    		case 1: nomelvl=POS_NV1;
				case 2: nomelvl=POS_NV2;
				case 3: nomelvl=POS_NV3;
				case 4: nomelvl=POS_NV4;
			}
			switch(GangLevel[playerid])
			{
				case 3: lvlvelho=POS_NV3;
				case 4: lvlvelho=POS_NV4;
				case 5: lvlvelho=POS_NV5;
			}
			new fm[128];format(fm,128,"[CLAN] O %s %s mudou o rank de %s para %s.",lvlvelho,nm1,nm,nomelvl);
			for(new i=0;i<MAX_PLAYERS;i++)
   				if(IsPlayerConnected(i))
					if(GangID[playerid]==GangID[i])
				      	SendClientMessage(i,azul,fm);
			for(new idp=0;idp<MAX_PLAYERS;idp++)
				if(IsPlayerConnected(idp))
	   			{
					GetPlayerName(idp,nm1,sizeof(nm1));
					if(!strcmp(nm1,nm))
				 	{
				     	GangLevel[idp]=lvlnovo;
				   		break;
					}
	    		}
	    }
	    return 1;
	}
	if(dialogid==413)
	{
	    if(response)
	    {
			new id = strval(inputtext);
	        if(!IsPlayerConnected(id)) return SendClientMessage(playerid,amarelo,"[CLAN] ID não conectado!");
	        if(GangID[playerid]!=GangID[id]) return SendClientMessage(playerid,amarelo,"[CLAN] Este ID é de um clan diferente!");
	        if(GangLevel[id]!=4) return SendClientMessage(playerid,amarelo,"[CLAN] Você só pode dar Líder a um Sub-Líder!");
	        GangLevel[playerid]=4;
	        GangLevel[id]=5;
	        new name1[MAX_PLAYER_NAME],name2[MAX_PLAYER_NAME];
	        GetPlayerName(playerid,name1,sizeof(name1));GetPlayerName(id,name2,sizeof(name2));
	        DOF2_SetString(FormatGang(GangID[playerid]),"Lider",name2);
	        DOF2_SetInt(FormatGang(GangID[playerid]),name1,4);
	        DOF2_Unset(FormatGang(GangID[playerid]),name2);
	        new form[STRING_MEMBROS];
			strcat(form,DOF2_GetString(FormatGang(GangID[playerid]),"Membros"));
			new pos=strfind(form,name2);
			strdel(form,pos-1,pos+strlen(name2));
			DOF2_SetString(FormatGang(GangID[playerid]),"Membros",form);
			format(form,sizeof(form),"%s,%s",DOF2_GetString(FormatGang(GangID[playerid]),"Membros"),name1);
			DOF2_SetString(FormatGang(GangID[playerid]),"Membros",form);
	        DOF2_SaveFile();
	        new msg[128];format(msg,128,"[CLAN] A liderança do clan foi trocada de %s(ID:%d) para %s(ID:%d)!",name1,playerid,name2,id);
            for(new i=0;i<MAX_PLAYERS;i++)
                if(IsPlayerConnected(i))
                    if(GangID[i]==GangID[playerid])
                        SendClientMessage(i,azul,msg);
	    }
	    return 1;
	}
	if(dialogid==414)
	{
	    if(response)
	    {
			//saldo, sacar, depositar, nv
			if(listitem==0)
			{
				new s[64];format(s,64,"Seu clan possui no banco:\nR$%d",BancoGG[GangID[playerid]]);
				ShowPlayerDialog(playerid,415,DIALOG_STYLE_MSGBOX,"Clan - Banco - Saldo",s,"Ok","");
			}
			else if(listitem==1) ShowPlayerDialog(playerid,416,DIALOG_STYLE_INPUT,"Clan - Banco - Sacar","Digite a quantia que deseja sacar:","Sacar","Sair");
			else if(listitem==2) ShowPlayerDialog(playerid,417,DIALOG_STYLE_INPUT,"Clan - Banco - Depositar","Digite a quantia que deseja depositar:","Depositar","Sair");
			else
			{
			    if(GangLevel[playerid]!=5) return SendClientMessage(playerid,amarelo,"[CLAN] Função apenas para líderes de gangs!");
			    new msg[128];format(msg,128,"%s\n%s\n%s\n%s\n%s\n",POS_NV1,POS_NV2,POS_NV3,POS_NV4,POS_NV5);
			    ShowPlayerDialog(playerid,418,DIALOG_STYLE_LIST,"Clan - Banco - Bloquear banco para...",msg,"Depositar","Sair");
			}
	    }
	    return 1;
	}
	if(dialogid==416)
	{
	    if(response)
	    {
			new grana = strval(inputtext);
			if(grana<0) return SendClientMessage(playerid,amarelo,"[CLAN] Quantia negativa!");
   			new bancogang=BancoGG[GangID[playerid]];
			if(bancogang<grana) return SendClientMessage(playerid,amarelo,"[CLAN] O banco de seu clan não possui esse dinheiro!");
			GivePlayerGrana(playerid,grana);
			BancoGG[GangID[playerid]]-=grana;
			DOF2_SetInt(FormatGang(GangID[playerid]),"Banco",BancoGG[GangID[playerid]]);
			DOF2_SaveFile();
			new nome[MAX_PLAYER_NAME],msg[128];
			GetPlayerName(playerid,nome,sizeof(nome));
			switch(GangLevel[playerid])
			{
			    case 1: format(msg,128,"[CLAN] O %s %s sacou R$%d do banco do clan.",POS_NV1,nome,grana);
			    case 2: format(msg,128,"[CLAN] O %s %s sacou R$%d do banco do clan.",POS_NV2,nome,grana);
			    case 3: format(msg,128,"[CLAN] O %s %s sacou R$%d do banco do clan.",POS_NV3,nome,grana);
			    case 4: format(msg,128,"[CLAN] O %s %s sacou R$%d do banco do clan.",POS_NV4,nome,grana);
			    case 5: format(msg,128,"[CLAN] O %s %s sacou R$%d do banco do clan.",POS_NV5,nome,grana);
			}
			for(new i=0;i<MAX_PLAYERS;i++)
			    if(IsPlayerConnected(i))
			        if(GangID[i]==GangID[playerid])
			            SendClientMessage(i,azul,msg);
	    }
	    return 1;
	}
	if(dialogid==417)
	{
	    if(response)
	    {
			new grana = strval(inputtext);
			if(grana<0) return SendClientMessage(playerid,amarelo,"[CLAN] Quantia negativa!");
			if(GetPlayerGrana(playerid)<grana) return SendClientMessage(playerid,amarelo,"[CLAN] Você não possui esse dinheiro!");
			GivePlayerGrana(playerid,-(grana));
			BancoGG[GangID[playerid]]+=grana;
			DOF2_SetInt(FormatGang(GangID[playerid]),"Banco",BancoGG[GangID[playerid]]);
			DOF2_SaveFile();
			new nome[MAX_PLAYER_NAME],msg[128];
			GetPlayerName(playerid,nome,sizeof(nome));
			switch(GangLevel[playerid])
			{
			    case 1: format(msg,128,"[CLAN] O %s %s depositou R$%d no banco do clan.",POS_NV1,nome,grana);
			    case 2: format(msg,128,"[CLAN] O %s %s depositou R$%d no banco do clan.",POS_NV2,nome,grana);
			    case 3: format(msg,128,"[CLAN] O %s %s depositou R$%d no banco do clan.",POS_NV3,nome,grana);
			    case 4: format(msg,128,"[CLAN] O %s %s depositou R$%d no banco do clan.",POS_NV4,nome,grana);
			    case 5: format(msg,128,"[CLAN] O %s %s depositou R$%d no banco do clan.",POS_NV5,nome,grana);
			}
			for(new i=0;i<MAX_PLAYERS;i++)
			    if(IsPlayerConnected(i))
			        if(GangID[i]==GangID[playerid])
			            SendClientMessage(i,azul,msg);
	    }
	    return 1;
	}
	if(dialogid==418)
	{
	    if(response)
	    {
	        new nvmin[20];
	        switch(listitem)
	        {
				case 0: nvmin=POS_NV1;
				case 1: nvmin=POS_NV2;
				case 2: nvmin=POS_NV3;
				case 3: nvmin=POS_NV4;
				case 4: nvmin=POS_NV5;
	        }
			DOF2_SetInt(FormatGang(GangID[playerid]),"BancoL",listitem+2);
			DOF2_SaveFile();
			new nome[MAX_PLAYER_NAME],msg[128];
			GetPlayerName(playerid,nome,sizeof(nome));
			format(msg,128,"[CLAN] O %s %s mudou o nível mínimo para usar o banco para: %s",POS_NV5,nome,nvmin);
			for(new i=0;i<MAX_PLAYERS;i++)
			    if(IsPlayerConnected(i))
			        if(GangID[i]==GangID[playerid])
			            SendClientMessage(i,azul,msg);
	    }
	    return 1;
	}
	if(dialogid==402)
	{
	    if(response)
	    {
	        new gangid=strval(inputtext);
			if(strlen(inputtext)==0)
				if(GangID[playerid]!=0)
			    	gangid = GangID[playerid];
				else return SendClientMessage(playerid,amarelo,"[CLAN] Clan não encontrado!");
			else
				if(!fexist(FormatGang(gangid))) return SendClientMessage(playerid,amarelo,"[CLAN] Clan não encontrado!");
			new fm[256],name22[MAX_PLAYER_NAME],temp[64];
			#if defined TERRITORY_WAR
			format(fm,256,"Nome: %s (ID:%d)\nLíder: %s\nTerritórios: %d\nMembros: %d\n\nLema: %s\n\nMembros online:",DOF2_GetString(FormatGang(gangid),"Nome"),gangid,DOF2_GetString(FormatGang(gangid),"Lider"),TerrisGG[gangid],DOF2_GetInt(FormatGang(gangid),"NMembros"),DOF2_GetString(FormatGang(gangid),"Lema"));
			#else
			format(fm,256,"Nome: %s (ID:%d)\nLíder: %s\nMembros: %d\n\nLema: %s\n\nMembros online:",DOF2_GetString(FormatGang(gangid),"Nome"),gangid,DOF2_GetString(FormatGang(gangid),"Lider"),DOF2_GetInt(FormatGang(gangid),"NMembros"),DOF2_GetString(FormatGang(gangid),"Lema"));
			#endif
			for(new e=5;e>-1;e--)
				for(new i=0;i<MAX_PLAYERS;i++)
				    if(IsPlayerConnected(i))
				        if(GangID[i]==gangid)
							if(GangLevel[i]==e)
							{
					            GetPlayerName(i,name22,sizeof(name22));
					            switch(GangLevel[i])
					            {
									case 0:
									{
										format(temp,64,"\n%s %s",POS_NV1,name22);
									}
									case 1:
									{
										format(temp,64,"\n%s %s",POS_NV2,name22);
									}
									case 2:
									{
										format(temp,64,"\n%s %s",POS_NV3,name22);
									}
									case 3:
									{
										format(temp,64,"\n%s %s",POS_NV4,name22);
									}
									case 4:
									{
										format(temp,64,"\n%s %s",POS_NV5,name22);
									}
								}
								strcat(fm,temp);
							}
			ShowPlayerDialog(playerid,419,DIALOG_STYLE_MSGBOX,"Clan - Info",fm,"Ok","");
	    }
	    return 1;
	}
	if(dialogid==420)
	{
	    if(response)
	    {
   			new gangid=strval(inputtext);
			if(strlen(inputtext)==0)
				if(GangID[playerid]!=0)
			    	gangid = GangID[playerid];
				else return SendClientMessage(playerid,amarelo,"[CLAN] Clan não encontrada!");
			else
				if(!fexist(FormatGang(gangid))) return SendClientMessage(playerid,amarelo,"[CLAN] Clan não encontrada!");
  	 		new novo[40],lmembros[STRING_MEMBROS],nome[MAX_PLAYER_NAME];
			format(novo,40,"\n(%s) %s",POS_NV5,DOF2_GetString(FormatGang(gangid),"Lider"));
			strcat(lmembros,novo);
			if(strlen(DOF2_GetString(FormatGang(gangid),"Membros"))!=0)
			{
			    new membros[GANG_MEMBERS][MAX_PLAYER_NAME];
			    split(DOF2_GetString(FormatGang(gangid),"Membros"),membros,',');
				new nvl;
				for(new nv=4;nv>0;nv--)
					for(new e=0;e<GANG_MEMBERS;e++)
					    if(strlen(membros[e])!=0)
						{
					    {
					        nvl=DOF2_GetInt(FormatGang(gangid),membros[e]);
					        if(nvl==nv)
					        {
			       				switch(nvl)
			       				{
			       				    case 1: format(novo,40,"\n(%s) %s",POS_NV1,membros[e]);
			       				    case 2: format(novo,40,"\n(%s) %s",POS_NV2,membros[e]);
			       				    case 3: format(novo,40,"\n(%s) %s",POS_NV3,membros[e]);
			       				    case 4: format(novo,40,"\n(%s) %s",POS_NV4,membros[e]);
			       				}
			 					strcat(lmembros,novo);
							}
						}
					}
			}
			for(new i=0;i<MAX_PLAYERS;i++)
			    if(IsPlayerConnected(i))
				    if(gangid==GangID[i])
				        if(GangLevel[i]==0)
						{
				            GetPlayerName(i,nome,sizeof(nome));
							format(novo,40,"\n(%s) %s",POS_NV0,nome);
	 						strcat(lmembros,novo);
						}
			ShowPlayerDialog(playerid,421,DIALOG_STYLE_MSGBOX,"Clan - Membros",lmembros,"Ok","");
		}
		return 1;
	}
	if(dialogid==422)
	{
	    if(response)
	    {
	        new id = strval(inputtext);
	        if(!IsPlayerConnected(id)) return SendClientMessage(playerid,amarelo,"[CLAN] Este ID não está online!");
	        if(Convite[id]==GangID[playerid]) return SendClientMessage(playerid,amarelo,"[CLAN] Este ID já está com um convite para este clan");
	        if(GangID[id]!=0) return SendClientMessage(playerid,amarelo,"[CLAN] Este player já está em um clan!");
	        if(playerid==id) return SendClientMessage(playerid,amarelo,"[CLAN] Este é seu ID!");
		 	Convite[id]=GangID[playerid];
		 	new nomep[MAX_PLAYER_NAME];GetPlayerName(playerid,nomep,sizeof(nome));
		 	new nome2[MAX_PLAYER_NAME];GetPlayerName(id,nome2,sizeof(nome2));
		 	new fm[128];
		 	switch(GangLevel[playerid])
		 	{
		 	    case 2: format(fm,128,"[CLAN] (%s) %s (ID:%d) convidou %s (ID:%d) para entrar no clan.",POS_NV2,nomep,playerid,nome2,id);
		 	    case 3: format(fm,128,"[CLAN] (%s) %s (ID:%d) convidou %s (ID:%d) para entrar no clan.",POS_NV3,nomep,playerid,nome2,id);
		 	    case 4: format(fm,128,"[CLAN] (%s) %s (ID:%d) convidou %s (ID:%d) para entrar no clan.",POS_NV4,nomep,playerid,nome2,id);
		 	    case 5: format(fm,128,"[CLAN] (%s) %s (ID:%d) convidou %s (ID:%d) para entrar no clan.",POS_NV5,nomep,playerid,nome2,id);
		 	}
		 	for(new i=0;i<MAX_PLAYERS;i++)
		 	    if(IsPlayerConnected(i))
		 	        if(GangID[playerid]==GangID[i])
		 				SendClientMessage(i,verde,fm);
			format(fm,128,"[CLAN] %s (ID:%d) convidou você para entrar no clan %s (ID:%d), para aceitar: /entrarclan",nomep,playerid,DOF2_GetString(FormatGang(GangID[playerid]),"Nome"),GangID[playerid]);
			SendClientMessage(id,verde,fm);
	    }
	    return 1;
	}
	if(dialogid==424)
	{
	    if(response)
	    {
	        if(strlen(inputtext)==0) return SendClientMessage(playerid,amarelo,"[CLAN] Digite o ID!");
	        new id=strval(inputtext);
	        if(!fexist(FormatGang(id))) return SendClientMessage(playerid,amarelo,"[CLAN] Não existe clan com este ID!");
	        new strmenn[128],nm1[MAX_PLAYER_NAME];
			GetPlayerName(playerid,nm1,sizeof(nm1));
		    DOF2_Unset(GangF(GangsFile),DOF2_GetString(FormatGang(id),"Nome"));
		    DOF2_SaveFile();
      		#if defined TERRITORY_WAR
			CallRemoteFunction("AtualizarGG","dds",id,1," ");
			#endif
	    	format(strmenn,128,"[CLAN] O Admin %s deletou o clan %s.",nm1,DOF2_GetString(FormatGang(id),"Nome"));
	    	SendClientMessageToAll(vermelho,strmenn);
	    	fremove(FormatGang(id));
	      	for(new allgp=0;allgp<MAX_PLAYERS;allgp++)
			{
                if(IsPlayerConnected(allgp))
		        	if(id==GangID[allgp])
					{
						GetPlayerName(allgp,nm1,sizeof(nm1));
						DOF2_Unset(GangF(PlayersFile),nm1);
						GangID[allgp]=0;
						SetPVarInt(allgp,"GangID",0);
						MudarGangPlayer(allgp,0);
	    				GangLevel[allgp]=0;
				    }
			}
			DOF2_SaveFile();
	    }
	    return 1;
	}

	if(dialogid==500)
	{
	    if(response)
	    {
			if(strlen(inputtext)<1||strlen(inputtext)>32) return SendClientMessage(playerid,amarelo,"[TERRI] O nome precisa ter entre 0 e 32 caracteres.");
			format(Nome[playerid],32,"%s",inputtext);
			ShowPlayerDialog(playerid,502,DIALOG_STYLE_INPUT,"Territorio - Criar","Digite o lucro deste território:","Criar","Sair");
	    }
	    return 1;
	}
	if(dialogid==501)
	{
	    if(response)
	    {
	    	new terrid=GetPlayerTerri(playerid);
	    	GangZoneDestroy(TerrisID[terrid]);
	    	TerriOk[terrid]=0;
	    	TerriGuerra[terrid]=0;
			new terridst[9];format(terridst,9,"%d",terrid);
	    	DOF2_Unset(GangF(TWarFile),terridst);
	    	DOF2_GetInt(FormatTerri(terrid),"Gang");
			if(gangid!=0)
			{
			    new ter=DOF2_GetInt(FormatGang(gangid),"Territorios")-1;
				DOF2_SetInt(FormatGang(gangid),"Territorios",ter);
				CallRemoteFunction("AtualizarTerris","dd",gangid,ter);
				DOF2_SaveFile();
			}
			fremove(FormatTerri(terrid));
			SendClientMessage(playerid,amarelo,"Território deletado com sucesso!");
	    }
	}
	if(dialogid==502)
	{
	    if(response)
	    {
	        if(strlen(inputtext)==0) return SendClientMessage(playerid,amarelo,"[TERRI] Insira uma quantia.");
	        new grana=strval(inputtext);
	        if(grana<0) return SendClientMessage(playerid,amarelo,"[TERRI] Quantia negativa.");
	        new terrid = GetNewTerriID();
			if(terrid==-1) return SendClientMessage(playerid,amarelo,"[TERRI] Este servidor já atingiu o máximo de territórios possível.");
			DOF2_CreateFile(FormatTerri(terrid));
			DOF2_SetString(FormatTerri(terrid),"Nome",Nome[playerid]);
			DOF2_SetInt(FormatTerri(terrid),"Gang",0);
			DOF2_SetInt(FormatTerri(terrid),"Grana",grana);
			DOF2_SaveFile();
			Terris[terrid][0]=PFloat[playerid][0];
			Terris[terrid][1]=PFloat[playerid][1];
			Terris[terrid][2]=PFloat[playerid][2];
			Terris[terrid][3]=PFloat[playerid][3];
			new terridstring[9],fmt[128];
			format(terridstring,9,"%d",terrid);
			format(fmt,128,"%f,%f,%f,%f",Terris[terrid][0],Terris[terrid][1],Terris[terrid][2],Terris[terrid][3]);
			DOF2_SetString(GangF(TWarFile),terridstring,fmt);
			DOF2_SaveFile();
			if(Terris[terrid][0]<Terris[terrid][1])
			{
   				if(Terris[terrid][2]<Terris[terrid][3])
       			{
	 				TerrisID[terrid] = GangZoneCreate(Terris[terrid][0],Terris[terrid][2],Terris[terrid][1],Terris[terrid][3]);
				}
	 			else
	 			{
	 				TerrisID[terrid] = GangZoneCreate(Terris[terrid][0],Terris[terrid][3],Terris[terrid][1],Terris[terrid][2]);
	 			}
			}
			else
			{
				if(Terris[terrid][2]<Terris[terrid][3])
     			{
	 				TerrisID[terrid] = GangZoneCreate(Terris[terrid][1],Terris[terrid][2],Terris[terrid][0],Terris[terrid][3]);
	 			}
	 			else
	 			{
	 				TerrisID[terrid] = GangZoneCreate(Terris[terrid][1],Terris[terrid][3],Terris[terrid][0],Terris[terrid][2]);
	 			}
			}
			TerriOk[terrid]=1;
			GangZoneShowForAll(TerrisID[terrid],HexToInt(TERRI_NO_GANG));
			new st = DOF2_GetInt(GangF(TWarFile),RESERVED_NAME);
			if(st<MAX_TERRIS) {DOF2_SetInt(GangF(TWarFile),RESERVED_NAME,st+1);DOF2_SaveFile();}
			SendClientMessage(playerid,amarelo,"[TERRI] Território criado com sucesso!");
	    }
	    return 1;
	}
	if(dialogid==503)
	{
	    if(response)
	    {
	        if(strlen(inputtext)==0) return SendClientMessage(playerid,amarelo,"[TERRI] Insira uma quantia.");
	        new grana=strval(inputtext);
	        if(grana<0) return SendClientMessage(playerid,amarelo,"[TERRI] Quantia negativa.");
			DOF2_SetInt(FormatTerri(GetPlayerTerri(playerid)),"Grana",grana);
			DOF2_SaveFile();
			SendClientMessage(playerid,amarelo,"[TERRI] Lucro do território mudado com sucesso!");
	    }
	    return 1;
	}

	if(dialogid == STAFF)
    {
        if(response)
 		{
        	if(!strlen(inputtext))
 			{
 				SendClientMessage(playerid, 0x00EAF6FF, "{FFFFFF}Você não digitou a senha!");
 				ShowPlayerDialog(playerid, STAFF, DIALOG_STYLE_INPUT, "{FFFFFF}Senha da Administração", "Digite a senha correta da Administração!", "Confirmar", "Cancelar");
 			}
 			if(AntiFake >= 2)
 			{
                format(string, sizeof(string), "{FF0000}[ANTI-FAKE] {FFFFFF}O(a) {FF0000}%s {FFFFFF}foi kickado por errar a senha da Administração!", GetPlayerNameEx(playerid));
			    Relatorio(0xFF8000AA, string, 1);
    			Kick(playerid);
 			}
 			if(strcmp(SenhaAntiFake, inputtext, true) == 0)
   			{
    			format(string, sizeof(string), "Você comprovou que faz parte da Equipe BSL!", GetPlayerNameEx(playerid));
 				SendClientMessage(playerid, BRANCO, string);
 			}
 			else
 			{
 				SendClientMessage(playerid, 0x00EAF6FF, "{FF0000}A senha está incorreta!");
 				AntiFake++;
 				ShowPlayerDialog(playerid, STAFF, DIALOG_STYLE_INPUT, "{FFFFFF}Senha da Administração", "Digite a senha correta da Administração!", "Confirmar", "Cancelar");
 			}
        }
        else
        {
            format(string, sizeof(string), "{FF0000}[ANTI-FAKE] {FFFFFF}O(a) {FF0000}%s {FFFFFF}foi kickado por errar a senha da Administração!", GetPlayerNameEx(playerid));
			Relatorio(0xFF8000AA, string, 1);
         	Kick(playerid);
         	return 1;
        }
    }

	if(dialogid == samugayeditor)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				SetPVarInt(playerid, "EditingXMode", 1);
				SendClientMessage(playerid, 0xFFA500FF, "Use a seta esquerda e seta para a direita para ajustar a posição X do objeto (Setas do Num Lock).");
				SendClientMessage(playerid, 0xFFA500FF, "Assim que estiver pronto, pressione Enter.");
			}
			if(listitem == 1)
			{
				SetPVarInt(playerid, "EditingYMode", 1);
				SendClientMessage(playerid, 0xFFA500FF, "Use a seta esquerda e seta para a direita para ajustar a posição Y do objeto (Setas do Num Lock).");
				SendClientMessage(playerid, 0xFFA500FF, "Assim que estiver pronto, pressione Enter.");
			}
			if(listitem == 2)
			{
				SetPVarInt(playerid, "EditingZMode", 1);
				SendClientMessage(playerid, 0xFFA500FF, "Use a seta esquerda e seta para a direita para ajustar a posição Z do objeto (Setas do Num Lock).");
				SendClientMessage(playerid, 0xFFA500FF, "Assim que estiver pronto, pressione Enter.");
			}
			if(listitem == 3)
			{
				SetPVarInt(playerid, "EditingRXMode", 1);
				SendClientMessage(playerid, 0xFFA500FF, "Use a seta esquerda e seta para a direita para ajustar a rotação X do objeto (Setas do Num Lock).");
				SendClientMessage(playerid, 0xFFA500FF, "Assim que estiver pronto, pressione Enter.");
			}
			if(listitem == 4)
			{
				SetPVarInt(playerid, "EditingRYMode", 1);
				SendClientMessage(playerid, 0xFFA500FF, "Use a seta esquerda e seta para a direita para ajustar a rotação Y do objeto (Setas do Num Lock).");
				SendClientMessage(playerid, 0xFFA500FF, "Assim que estiver pronto, pressione Enter.");
			}
			if(listitem == 5)
			{
				SetPVarInt(playerid, "EditingRZMode", 1);
				SendClientMessage(playerid, 0xFFA500FF, "Use a seta esquerda e seta para a direita para ajustar a rotação Z do objeto (Setas do Num Lock).");
				SendClientMessage(playerid, 0xFFA500FF, "Assim que estiver pronto, pressione Enter.");
			}
			if(listitem == 6)
			{
				ShowPlayerDialog(playerid, samugaydelet, DIALOG_STYLE_MSGBOX, "Deletando Edição", "{FF0000}Você está prestes a deletar esta edição de portão.\n{00FF00}Caso tenha salvo esta edição o portão irá para /portoesdeletados\n{FFFFFF}Tem certeza de que quer deletar?", "Sim", "Não");
			}
			if(listitem == 7)
			{
				ShowPlayerDialog(playerid, samugaysalve, DIALOG_STYLE_LIST, "Salvando Edição", "Salvar Fechado\nSalvar Aberto", "OK", "Voltar");
			}
		}
	}

	if(dialogid == samugaysalve)
	{
		if(response == 1)
		{
			new Float:pX, Float:pY, Float:pZ,
				Float:pRX, Float:pRY, Float:pRZ,
				id, samuid;

			samuid = GetPVarInt(playerid, "objToEdit");
			id = GetPVarInt(playerid, "pidToEdit");
			format(string, sizeof(string), PASTA_SAMUGAY, id);
			if(listitem == 0)
			{
				GetObjectPos(samuid, pX, pY, pZ);
				GetObjectRot(samuid, pRX, pRY, pRZ);
				DOF2_SetFloat(string, "fCordX", pX);
				DOF2_SetFloat(string, "fCordY", pY);
				DOF2_SetFloat(string, "fCordZ", pZ);
				DOF2_SetFloat(string, "fCordRX", pRX);
				DOF2_SetFloat(string, "fCordRY", pRY);
				DOF2_SetFloat(string, "fCordRZ", pRZ);
				if(GetPVarInt(playerid, "pidSalvo") == 0)
				{
					SetPVarInt(playerid, "pidSalvo", 1);
				}
				else
				{
				
				}
				ShowPlayerDialog(playerid, samugayeditor, DIALOG_STYLE_LIST, "Editando Portão", "Editar X Posição\nEditar Y Posição\nEditar Z Posição\nEditar RX Posição\nEditar RY Posição\nEditar RZ Posição\nDeletar Edição\nSalvar Edição", "OK", "Voltar");
				SendClientMessage(playerid, 0x6495EDAA, "Portão fechado salvo com sucesso!");
				SendClientMessage(playerid, 0x6495EDAA, "Certifique-se de salvar o portão aberto.");
			}
			if(listitem == 1)
			{
				GetObjectPos(samuid, pX, pY, pZ);
				GetObjectRot(samuid, pRX, pRY, pRZ);
				DOF2_SetFloat(string, "aCordX", pX);
				DOF2_SetFloat(string, "aCordY", pY);
				DOF2_SetFloat(string, "aCordZ", pZ);
				DOF2_SetFloat(string, "aCordRX", pRX);
				DOF2_SetFloat(string, "aCordRY", pRY);
				DOF2_SetFloat(string, "aCordRZ", pRZ);
				if(GetPVarInt(playerid, "pidSalvo") == 0)
				{
					SetPVarInt(playerid, "pidSalvo", 1);
				}
				else
				{

				}
				ShowPlayerDialog(playerid, samugayeditor, DIALOG_STYLE_LIST, "Editando Portão", "Editar X Posição\nEditar Y Posição\nEditar Z Posição\nEditar RX Posição\nEditar RY Posição\nEditar RZ Posição\nDeletar Edição\nSalvar Edição", "OK", "Voltar");
				SendClientMessage(playerid, 0x6495EDAA, "Portão aberto salvo com sucesso!");
				SendClientMessage(playerid, 0x6495EDAA, "Certifique-se de salvar o portão fechado.");
			}
		}
		else
		{
			ShowPlayerDialog(playerid, samugayeditor, DIALOG_STYLE_LIST, "Editando Portão", "Editar X Posição\nEditar Y Posição\nEditar Z Posição\nEditar RX Posição\nEditar RY Posição\nEditar RZ Posição\nDeletar Edição\nSalvar Edição", "OK", "Voltar");
		}
	}

	if(dialogid == samugaydelet)
	{
		if(response == 1)
		{
			new id, samuid;
			samuid = GetPVarInt(playerid, "objToEdit");
			id = GetPVarInt(playerid, "pidToEdit");
			format(string, sizeof(string), PASTA_SAMUGAY, id);
			if(DOF2_FileExists(string))
			{
				if(GetPVarInt(playerid, "pidSalvo") == 1)
				{
					DOF2_SetInt(string, "TDono", 3);
					DOF2_SetString(string, "Dono", "Ninguem");
					DOF2_SetString(string, "Convidado1", "Ninguem");
					DOF2_SetString(string, "Convidado2", "Ninguem");
					DOF2_SetString(string, "Convidado3", "Ninguem");
					DOF2_SetInt(string, "Id", INVALID_OBJECT_ID);
				}
				else
				{
					DOF2_RemoveFile(string);
					proximosamugay--;
				}
			}
			DestroyObject(samuid);
			SendClientMessage(playerid, roxo, "Portão deletado com sucesso!");
		}
		else
		{
			ShowPlayerDialog(playerid, samugayeditor, DIALOG_STYLE_LIST, "Editando Portão", "Editar X Posição\nEditar Y Posição\nEditar Z Posição\nEditar RX Posição\nEditar RY Posição\nEditar RZ Posição\nDeletar Edição\nSalvar Edição", "OK", "Voltar");
		}
	}

 	new stringa[900];
    if(dialogid == 901)
	{
	SetCameraBehindPlayer(playerid);
 	TogglePlayerControllable(playerid, false);
	SetPlayerPos(playerid, 1497.8575,-1730.5166,29.5575);
	InterpolateCameraPos(playerid, 1170.517578, -1329.939331, 478.411071, 1624.607299, -1239.079711, 371.603820, 7000);
	InterpolateCameraLookAt(playerid, 1170.515014, -1330.375122, 473.430084, 1622.691894, -1243.000366, 369.162536, 7000);
	if(response == 1)
	{
		new tutorial1[800];
		PlayAudioStreamForPlayer(playerid,"https://japeto.sscdn.co/palcomp3/e/a/3/4/MTASISTEMA-sleepwalking-9de9568a.mp3?");
  		ClearChatbox(playerid, 10);
		format(stringa, sizeof(stringa), "{FFFFFF}Este é um servidor de {FF0000}RPG{FFFFFF}, Simulação da Vida Real\n\n\nVocê não mata ninguém na vida real, não rouba ninguém na vida real\n\n\nSe você for civil jogue como civil, se for gangster... ai sim poderá matar e roubar\n\n\n"); strcat(tutorial1, stringa);
		format(stringa, sizeof(stringa), "Não mate pessoas não fizeram nada com você"); strcat(tutorial1, stringa);
		ShowPlayerDialog(playerid,902, DIALOG_STYLE_MSGBOX, "{FF0000}Boas Vindas!", tutorial1, "Avançar", "Cancelar");
		return 0;
	}
	else if(response == 0)
	{
    	SpawnPlayer(playerid);
    	StopAudioStreamForPlayer(playerid);
    	return 0;
    }
    return 0;
	}
	if(dialogid == 902)
	{
	if(response == 1)
	{
	    new tutorial2[800];
		format(stringa, sizeof(stringa), "{FFFFFF}Nosso próximo tópico, mostrará alguns lugares importantes.\n\n\nOnde você passará perto o jogo inteiro, e partes fundamentais do servidor.\n\n\nComo: Prefeitura, Delegacia, Banco, Loja de roupas, Favela, Loja De Utilidades e outros...\n\n\nPreste Muita Atenção!!"); strcat(tutorial2, stringa);
        ShowPlayerDialog(playerid,903, DIALOG_STYLE_MSGBOX, "{FF0000}Lugares Importantes", tutorial2, "Avançar", "Cancelar");
		return 0;
	}
	else if(response == 0)
	{
    //	Kick(playerid);
        SpawnPlayer(playerid);
        StopAudioStreamForPlayer(playerid);
    	return 0;
    }
    return 0;
	}
//==============================================================================
    if(dialogid == 903)
	{
    TogglePlayerControllable(playerid, false);
	SetPlayerPos(playerid, 1497.8575,-1730.5166,29.5575);
	SetPlayerCameraPos(playerid, 1497.8575,-1730.5166,29.5575);
	SetPlayerCameraLookAt(playerid, 1481.2465,-1751.4327,15.4453);
	InterpolateCameraPos(playerid, 1483.285034, -1599.603515, 65.201431, 1467.593017, -1704.801025, 35.733650, 7000);
	InterpolateCameraLookAt(playerid, 1483.247070, -1600.064941, 60.222915, 1468.631713, -1709.476318, 34.297458, 7000);
	if(response == 1)
	{
	    new tutorial5[800];
     	ClearChatbox(playerid, 10);
		format(stringa, sizeof(stringa), "{FFFFFF}Bom, começando pela prefeitura. Aqui Você Podera\nadiquirir uma profissao de acordo com seu level e estudo.\n"); strcat(tutorial5, stringa);
		format(stringa, sizeof(stringa), "{FFFFFF}Todas 15 horas do {FF0000}GTA{FFFFFF} o seu salário é depositado na sua conta bancária."); strcat(tutorial5, stringa);
 		ShowPlayerDialog(playerid,904, DIALOG_STYLE_MSGBOX, "{FF0000}Prefeitura", tutorial5, "Avançar", "Cancelar");
		return 0;
	}
	else if(response == 0)
	{
    //	Kick(playerid);
        SpawnPlayer(playerid);
        StopAudioStreamForPlayer(playerid);
    	return 0;
    }
    return 0;
	}
//==============================================================================
    if(dialogid == 904)
	{
 	TogglePlayerControllable(playerid, false);
	SetPlayerPos(playerid, 1507.1649,-1676.7764,30.0087);
	InterpolateCameraPos(playerid, 1488.169677, -1671.428833, 87.178855, 1532.915161, -1690.969116, 19.655523, 7000);
	InterpolateCameraLookAt(playerid, 1491.777343, -1670.877197, 90.596496, 1536.345825, -1687.498535, 18.566661, 7000);
	if(response == 1)
	{
	    new tutorial6[800];
     	ClearChatbox(playerid, 10);
		format(stringa, sizeof(stringa), "{FFFFFF}Aqui você pode tirar Porte de Armas e retirar mandato de prisão.\n\n\n"); strcat(tutorial6, stringa);
		format(stringa, sizeof(stringa), "{FFFFFF}Você encontra todos os carros de trabalho da policia."); strcat(tutorial6, stringa);
 		ShowPlayerDialog(playerid,905, DIALOG_STYLE_MSGBOX, "{FF0000}Delegacia", tutorial6, "Avançar", "Cancelar");

		return 0;
	}
	else if(response == 0)
	{
    //	Kick(playerid);
    	SpawnPlayer(playerid);
    	StopAudioStreamForPlayer(playerid);
    	return 0;
    }
    return 0;
	}
//==============================================================================
    if(dialogid == 905)
	{
    TogglePlayerControllable(playerid, false);
	SetPlayerPos(playerid, 1179.3048,-1743.6986,26.6166);
	InterpolateCameraPos(playerid, 1173.272827, -1758.255737, 25.106306, 1216.301879, -1709.666259, 32.833023, 7000);
	InterpolateCameraLookAt(playerid, 1177.883789, -1757.368896, 23.388149, 1215.260375, -1714.010864, 30.588117, 7000);
	if(response == 1)
	{
	    new tutorial7[800];
     	ClearChatbox(playerid, 10);
		format(stringa, sizeof(stringa), "{FFFFFF}Aqui Você Poderá depositar seu dinheiro para\nque não haja nenhum incidente com ele.\n"); strcat(tutorial7, stringa);
		format(stringa, sizeof(stringa), "{FFFFFF}Mas Pra Isso Você Prescisa Abrir uma conta bancária.\nÈ Rapido e Facil, você só prescisa ter $300 em mãos.\nVoce tambem pode ver seu saldo, sacar dinheiro\nou até mesmo assaltar!"); strcat(tutorial7, stringa);
 		ShowPlayerDialog(playerid,906, DIALOG_STYLE_MSGBOX, "{FF0000}Banco", tutorial7, "Avançar", "Cancelar");
		return 0;
	}
	else if(response == 0)
	{
    	//Kick(playerid);
    	SpawnPlayer(playerid);
    	StopAudioStreamForPlayer(playerid);
    	return 0;
    }
    return 0;
	}
 //==============================================================================
    if(dialogid == 906)
	{
    TogglePlayerControllable(playerid, false);
	SetPlayerPos(playerid, 1270.7665,-1854.7366,32.4434);
	InterpolateCameraPos(playerid, 1279.504272, -1811.722167, 96.373077, 1200.302124, -1860.897583, 20.224222, 7000);
	InterpolateCameraLookAt(playerid, 1276.656616, -1811.864501, 92.265686, 1202.788452, -1856.585327, 19.752590, 7000);
	if(response == 1)
	{
	    new tutoria18[800];
     	ClearChatbox(playerid, 10);
		format(stringa, sizeof(stringa), "{FFFFFF}Neste local, você deverá estudar.\n\n\nA cada 3 minutos estudando você ganha 1 de estudo.\n\n\nVeja os horários em que ela abre /horarios."); strcat(tutoria18, stringa);
 		ShowPlayerDialog(playerid,907, DIALOG_STYLE_MSGBOX, "{FF0000}Faculdade", tutoria18, "Avançar", "Cancelar");
		return 0;
	}
	else if(response == 0)
	{
    	//Kick(playerid);
    	SpawnPlayer(playerid);
    	StopAudioStreamForPlayer(playerid);
    	return 0;
    }
    return 0;
	}
//==============================================================================
    if(dialogid == 907)
	{
    TogglePlayerControllable(playerid, false);
	SetPlayerPos(playerid, 2144.1062, -970.9034, 80.0703);
	InterpolateCameraPos(playerid, 2011.511352, -1156.650024, 98.406059, 2210.128173, -1001.947265, 76.072959, 7000);
	InterpolateCameraLookAt(playerid, 2015.605102, -1153.883422, 97.639564, 2205.180419, -1002.414306, 75.523292, 7000);
	if(response == 1)
	{
	    new tutorial9[800];
     	ClearChatbox(playerid, 10);
		format(stringa, sizeof(stringa), "{FFFFFF}Neste local é aonde pode ocorrer várias guerras entre gangs\n\n\n"); strcat(tutorial9, stringa);
        format(stringa, sizeof(stringa), "{FFFFFF}Pois querem dominar o morro ou por território de tráfico\n\n\nMuitas vezes é invadido por policiais\n\n\nNão fique de bobeira no morro, pode ser vítima de bala perdida!"); strcat(tutorial9, stringa);
		ShowPlayerDialog(playerid,908, DIALOG_STYLE_MSGBOX, "{FF0000}Morro", tutorial9, "Avançar", "Cancelar");
		return 0;
	}
	else if(response == 0)
	{
    //	Kick(playerid);
    	SpawnPlayer(playerid);
    	StopAudioStreamForPlayer(playerid);
	}
    return 0;
	}
 //==============================================================================
    if(dialogid == 908)
	{
    TogglePlayerControllable(playerid, false);
	SetPlayerPos(playerid, 1749.1366,-1723.5754,31.5032);
	InterpolateCameraPos(playerid, 1823.884033, -1722.890502, 56.931911, 1727.666137, -1729.293212, 36.693347, 7000);
	InterpolateCameraLookAt(playerid, 1820.590087, -1725.671386, 54.398853, 1731.050781, -1732.520141, 34.923934, 7000);
	if(response == 1)
	{
	    new tutorial10[800];
     	ClearChatbox(playerid, 10);
		format(stringa, sizeof(stringa), "{FFFFFF}Neste local, você poderá comprar seu veículo.\n"); strcat(tutorial10, stringa);
        format(stringa, sizeof(stringa), "{FFFFFF}Não Deixe Seu Veiculo aqui pois será deletado.\nSalve-o em sua casa o mais rapido possivel!\n\nPara comprar um veículo,vá até o checkpoint e escolha seu veiculo."); strcat(tutorial10, stringa);
		ShowPlayerDialog(playerid,909, DIALOG_STYLE_MSGBOX, "{FF0000}Concessionaria", tutorial10, "Avançar", "Cancelar");
		return 0;
	}
	else if(response == 0)
	{
    	//Kick(playerid);
    	SpawnPlayer(playerid);
    	StopAudioStreamForPlayer(playerid);
	}
    return 0;
	}
  //==============================================================================
    if(dialogid == 909)
	{
	TogglePlayerControllable(playerid, false);
	SetPlayerPos(playerid, 1069.5469,-1720.4097,20.0354);
	InterpolateCameraPos(playerid, 1034.041870, -1717.419433, 53.369735, 1064.423828, -1707.839111, 24.408081, 7000);
	InterpolateCameraLookAt(playerid, 1037.367431, -1716.512817, 49.747760, 1068.227661, -1705.781494, 21.898635, 7000);
	ClearChatbox(playerid, 12);
	if(response == 1)
	{
	    new tutorial12[800];
     	ClearChatbox(playerid, 10);
		format(stringa, sizeof(stringa), "{FFFFFF}Neste local você pode adquirir licensas para dirijir e pilotar"); strcat(tutorial12, stringa);
		format(stringa, sizeof(stringa), ""); strcat(tutorial12, stringa);
 		ShowPlayerDialog(playerid,910, DIALOG_STYLE_MSGBOX, "{FF0000}Auto Escola", tutorial12, "Avançar", "Cancelar");
		PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
		return 0;
	}
	else if(response == 0)
	{
    	//Kick(playerid);
    	SpawnPlayer(playerid);
    	StopAudioStreamForPlayer(playerid);
    	return 0;
    }
    return 0;
	}
  //==============================================================================
    if(dialogid == 910)
	{
	TogglePlayerControllable(playerid, false);
	SetPlayerPos(playerid, 1400.6964,-1752.7159,17.9786);
	InterpolateCameraPos(playerid, 1402.162963, -1785.438842, 34.942329, 1388.325317, -1742.753417, 24.204395, 7000);
	InterpolateCameraLookAt(playerid, 1400.025268, -1781.572998, 32.600234, 1385.106201, -1745.886352, 22.008487, 7000);
	if(response == 1)
	{
	    new tutorial13[800];
     	ClearChatbox(playerid, 10);
		format(stringa, sizeof(stringa), "{FFFFFF}Aqui Você pode adiquirir: Licensa de casamento , Licensa de divorcio e Carteira de Trabalho."); strcat(tutorial13, stringa);
 		ShowPlayerDialog(playerid,911, DIALOG_STYLE_MSGBOX, "{FF0000}Cartório", tutorial13, "Avançar", "Cancelar");
		return 0;
	}
	else if(response == 0)
	{
    	//Kick(playerid);
    	SpawnPlayer(playerid);
    	StopAudioStreamForPlayer(playerid);
    	return 0;
    }
    return 0;
	}
//==============================================================================
    if(dialogid == 911)
	{
	new aname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
	format(file, sizeof(file), PASTA_CONTAS, aname);
	TogglePlayerControllable(playerid, true);
	SetPlayerPos(playerid, DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"));
	SetCameraBehindPlayer(playerid);
	StopAudioStreamForPlayer(playerid);
	if(response == 1)
	{
 		new tutorial11[800];
   	 	ClearChatbox(playerid, 10);
		format(stringa, sizeof(stringa), "1 [>] Não peça admin nem Rcon, ou você poderá ser punido!\n2 [>] Não chingue seus companheiros, ou você pode ser punido"); strcat(tutorial11, stringa);
		format(stringa, sizeof(stringa), "\n3 [>] Não mate fora da favela, Não faça DB, Nunca Floodar ou você poderá ser punido\n4 [>] Respeite os admin e companheiros, ou você pode ser kickado, se continuar, BANIDO"); strcat(tutorial11, stringa);
		format(stringa, sizeof(stringa), "\n5 [>] Não mate em locais públicos como: Pref, DP, Escola, Banco, Locais de spawn ou poderá ser kickado\n6 [>] Não peça dinheiro, level, estudo ou algo que seja beneficiado ou você pode ser punido\nSeja Bem Vindo Ao servidor, jogue limpo e Cumpra nossas regras!"); strcat(tutorial11, stringa);
		ShowPlayerDialog(playerid,912, DIALOG_STYLE_MSGBOX, "Regras", tutorial11, "Concordo", "Discordo");
		return 0;
	}
	else if(response == 0)
	{
    //	Kick(playerid);
        SpawnPlayer(playerid);
	}
    return 0;
	}

    if(dialogid == 911)
	{
	new aname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
	format(file, sizeof(file), PASTA_CONTAS, aname);
	TogglePlayerControllable(playerid, true);
	SetPlayerPos(playerid, DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"));
	SetCameraBehindPlayer(playerid);
	StopAudioStreamForPlayer(playerid);
	if(response == 1)
	{
 		new tutorial11[800];
   	 	ClearChatbox(playerid, 10);
		format(stringa, sizeof(stringa), "1 [>] Não peça admin nem moderador, ou você poderá ser punido!\n2 [>] Não chingue seus companheiros, ou você pode ser punido"); strcat(tutorial11, stringa);
		format(stringa, sizeof(stringa), "\n3 [>] Não mate fora da favela, Não faça DB, Nunca Floodar ou você poderá ser punido\n4 [>] Respeite os admin e companheiros, ou você pode ser kickado, se continuar, BANIDO"); strcat(tutorial11, stringa);
		format(stringa, sizeof(stringa), "\n5 [>] Não mate em locais públicos como: Pref, DP, Escola, Banco, Locais de spawn ou poderá ser kickado\n6 [>] Não peça dinheiro, level, estudo ou algo que seja beneficiado ou você pode ser punido\nSeja Bem Vindo Ao servidor, jogue limpo e Cumpra nossas regras!"); strcat(tutorial11, stringa);
		ShowPlayerDialog(playerid,912, DIALOG_STYLE_MSGBOX, "Regras", tutorial11, "Concordo", "Discordo");
		return 0;
	}
	else if(response == 0)
	{
    //	Kick(playerid);
        SpawnPlayer(playerid);
	}
    return 0;
	}


	if(dialogid == Vehtype)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
                ShowModelSelectionMenu(playerid, vehlist, "Concessionaria");
            }
        }
    }
    
    if(dialogid == SkinType)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
                ShowModelSelectionMenu(playerid, skinlist, "Skins");
            }
            if(listitem == 1)
            {
				ShowPlayerDialog(playerid, skins, DIALOG_STYLE_INPUT, "Skin's", "{33AAFF}Bem-vindo(a)!\n\n{FFA500}Digite o ID do skin escolhido:", "Comprar", "Voltar");
            }
        }
    }

	if(dialogid == CConfirm)
	{
		new Float:SetSpawn[4];
        if(response == 1)
		{
			if(moradia[playerid] == 430 || moradia[playerid] == 446 || moradia[playerid] == 452 || moradia[playerid] == 453 || moradia[playerid] == 454 || moradia[playerid] == 472 || moradia[playerid] == 473 || moradia[playerid] == 484 || moradia[playerid] == 493 || moradia[playerid] == 595 || moradia[playerid] == 460)
			{
				SetSpawn[0] = 218.2588;
				SetSpawn[1] = -1909.1509;
				SetSpawn[2] = 0.1308;
				SetSpawn[3] = 177.6470;
			}
			else if(moradia[playerid] == 417 || moradia[playerid] == 425 || moradia[playerid] == 447 || moradia[playerid] == 469 || moradia[playerid] == 476 || moradia[playerid] == 487 || moradia[playerid] == 488 || moradia[playerid] == 497 || moradia[playerid] == 511 || moradia[playerid] == 512 || moradia[playerid] == 513
			    || moradia[playerid] == 519 || moradia[playerid] == 548 || moradia[playerid] == 553 || moradia[playerid] == 563 || moradia[playerid] == 577 || moradia[playerid] == 592 || moradia[playerid] == 593)
			{
				SetSpawn[0] = 2036.2838;
				SetSpawn[1] = -2493.4822;
				SetSpawn[2] = 14.7387;
				SetSpawn[3] = 91.2795;
			}
			else
			{
                new Random = random(sizeof(RandomSpawns));
				SetSpawn[0] = RandomSpawns[Random][0];
				SetSpawn[1] = RandomSpawns[Random][1];
				SetSpawn[2] = RandomSpawns[Random][2];
				SetSpawn[3] = RandomSpawns[Random][3];
			}
			if(moradia[playerid] == 400 || moradia[playerid] == 401 || moradia[playerid] == 534 || moradia[playerid] == 404 || moradia[playerid] == 405 || moradia[playerid] == 535 || moradia[playerid] == 410 || moradia[playerid] == 412 || moradia[playerid] == 413 || moradia[playerid] == 414 || moradia[playerid] == 402
			    || moradia[playerid] == 416 || moradia[playerid] == 418 || moradia[playerid] == 419 || moradia[playerid] == 420 || moradia[playerid] == 421 || moradia[playerid] == 422 || moradia[playerid] == 423 || moradia[playerid] == 424 || moradia[playerid] == 426
			    || moradia[playerid] == 427 || moradia[playerid] == 428 || moradia[playerid] == 434 || moradia[playerid] == 436 || moradia[playerid] == 438 || moradia[playerid] == 431 || moradia[playerid] == 440 || moradia[playerid] == 442 || moradia[playerid] == 445 || moradia[playerid] == 403 || moradia[playerid] == 458
				|| moradia[playerid] == 459 || moradia[playerid] == 466 || moradia[playerid] == 467 || moradia[playerid] == 470 || moradia[playerid] == 474 || moradia[playerid] == 475 || moradia[playerid] == 406 || moradia[playerid] == 479
				|| moradia[playerid] == 480 || moradia[playerid] == 482 || moradia[playerid] == 483 || moradia[playerid] == 407 || moradia[playerid] == 489 || moradia[playerid] == 490 || moradia[playerid] == 491 || moradia[playerid] == 492 || moradia[playerid] == 408 || moradia[playerid] == 496 || moradia[playerid] == 498
				|| moradia[playerid] == 499 || moradia[playerid] == 500 || moradia[playerid] == 504 || moradia[playerid] == 505 || moradia[playerid] == 507 || moradia[playerid] == 508 || moradia[playerid] == 516 || moradia[playerid] == 517
				|| moradia[playerid] == 437 || moradia[playerid] == 526 || moradia[playerid] == 527 || moradia[playerid] == 528 || moradia[playerid] == 531 || moradia[playerid] == 533 || moradia[playerid] == 536 || moradia[playerid] == 540 || moradia[playerid] == 542 || moradia[playerid] == 543 || moradia[playerid] == 545
				|| moradia[playerid] == 546 || moradia[playerid] == 547 || moradia[playerid] == 549 || moradia[playerid] == 444 || moradia[playerid] == 551 || moradia[playerid] == 552 || moradia[playerid] == 554 || moradia[playerid] == 555
				|| moradia[playerid] == 443 || moradia[playerid] == 455 || moradia[playerid] == 456 || moradia[playerid] == 561 || moradia[playerid] == 486 || moradia[playerid] == 565 || moradia[playerid] == 566 || moradia[playerid] == 567 || moradia[playerid] == 514 || moradia[playerid] == 575 || moradia[playerid] == 576
				|| moradia[playerid] == 579 || moradia[playerid] == 580 || moradia[playerid] == 582 || moradia[playerid] == 585 || moradia[playerid] == 587 || moradia[playerid] == 589 || moradia[playerid] == 596 || moradia[playerid] == 597
				|| moradia[playerid] == 598 || moradia[playerid] == 599 || moradia[playerid] == 600 || moradia[playerid] == 515 || moradia[playerid] == 604 || moradia[playerid] == 605 || moradia[playerid] == 609 || moradia[playerid] == 525 || moradia[playerid] == 544 || moradia[playerid] == 588 || moradia[playerid] == 556
				|| moradia[playerid] == 515 || moradia[playerid] == 524 || moradia[playerid] == 578 || moradia[playerid] == 557 || moradia[playerid] == 481 || moradia[playerid] == 509 || moradia[playerid] == 510 || moradia[playerid] == 462)
            {
			    PlayerAddConceVehicleForPlayer(playerid, moradia[playerid], 120000, SetSpawn[0], SetSpawn[1], SetSpawn[2], SetSpawn[3], -1, -1);
			}
			else if(moradia[playerid] == 461 || moradia[playerid] == 463 || moradia[playerid] == 468 || moradia[playerid] == 471 || moradia[playerid] == 521 || moradia[playerid] == 522 || moradia[playerid] == 523 || moradia[playerid] == 571 || moradia[playerid] == 572 || moradia[playerid] == 581 || moradia[playerid] == 586 || moradia[playerid] == 448 || moradia[playerid] == 485)
			{
                PlayerAddConceVehicleForPlayer(playerid, moradia[playerid], 60000, SetSpawn[0], SetSpawn[1], SetSpawn[2], SetSpawn[3], -1, -1);
            }
            else if(moradia[playerid] == 411 || moradia[playerid] == 429 || moradia[playerid] == 451 || moradia[playerid] == 494 || moradia[playerid] == 502 || moradia[playerid] == 503 || moradia[playerid] == 506 || moradia[playerid] == 415 || moradia[playerid] == 409 || moradia[playerid] == 541)
            {
                PlayerAddConceVehicleForPlayer(playerid, moradia[playerid], 180000, SetSpawn[0], SetSpawn[1], SetSpawn[2], SetSpawn[3], -1, -1);
            }
            else if(moradia[playerid] == 431 || moradia[playerid] == 470 || moradia[playerid] == 477 || moradia[playerid] == 495 || moradia[playerid] == 518  || moradia[playerid] == 550 || moradia[playerid] == 558 || moradia[playerid] == 559 || moradia[playerid] == 560 || moradia[playerid] == 562
			    || moradia[playerid] == 568 || moradia[playerid] == 573 || moradia[playerid] == 601 || moradia[playerid] == 602 || moradia[playerid] == 603)
			{
                PlayerAddConceVehicleForPlayer(playerid, moradia[playerid], 100000, SetSpawn[0], SetSpawn[1], SetSpawn[2], SetSpawn[3], -1, -1);
            }
            else if(moradia[playerid] == 417 || moradia[playerid] == 447 || moradia[playerid] == 452 || moradia[playerid] == 469 || moradia[playerid] == 476 || moradia[playerid] == 487 || moradia[playerid] == 488 || moradia[playerid] == 497 || moradia[playerid] == 511 || moradia[playerid] == 512 || moradia[playerid] == 513 || moradia[playerid] == 460 || moradia[playerid] == 519 || moradia[playerid] == 548 || moradia[playerid] == 553 || moradia[playerid] == 563
                || moradia[playerid] == 454 || moradia[playerid] == 472 || moradia[playerid] == 473 || moradia[playerid] == 484 || moradia[playerid] == 493 || moradia[playerid] == 595 || moradia[playerid] == 592 || moradia[playerid] == 593 || moradia[playerid] == 453)
            {
                PlayerAddConceVehicleForPlayer(playerid, moradia[playerid], 300000, SetSpawn[0], SetSpawn[1], SetSpawn[2], SetSpawn[3], -1, -1);
            }
            else if(moradia[playerid] == 481 || moradia[playerid] == 509 || moradia[playerid] == 510 || moradia[playerid] == 462)
            {
                PlayerAddConceVehicleForPlayer(playerid, moradia[playerid], 1000, SetSpawn[0], SetSpawn[1], SetSpawn[2], SetSpawn[3], -1, -1);
            }
			else
			{
                SendClientMessage(playerid, Vermelho, "[CONCE - ERRO] {FFFFFF}Não foi possivel criar este veiculo. O ID não deve estar na lista!");
			    SendClientMessage(playerid, Vermelho, "[CONCE - ERRO] {FFFFFF}Por favor informe a administração do ocorrido, para que seja resolvido!");
			    return 1;
			}
		}
		else
		{
            SendClientMessage(playerid, 0x6495EDAA, "[CONCE] {FFFFFF}Compra cancelada com sucesso! Volte sempre.");
            moradia[playerid] = -1;
        }
	}

	if(dialogid == somd)
	{   //Nossa dialog definida la em cima!
		if(response)
		{
  			StopAudioStreamForAll(); //funçao de parar nosso audio .
			PlayAudioStreamForAll(inputtext); // Funçao de dar Play ao nosso Audio!

			new string2[35];
      		format(string2, sizeof(string2), "~b~DJ ~w~%s", GetPlayerNameEx(playerid));

			GameTextForAll(string2, 3000, 0);
        	foreach(Player, i) PlayerPlaySound(i, 1057, 0, 0, 0);

			format(string, sizeof(string), "{00FF00}O(A) DJ {FFFFFF}%s {00FF00}iniciou uma música para todos os jogadores digite {FFFFFF}/desligarm.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(-1, string);
	  	}
	}

	if(dialogid == 1208)
	{
		if(response)
		{
			if(listitem == 0)
			{
				SetPlayerColor(playerid, 0xFF0000AA);
			}
			if(listitem == 1)
			{
				SetPlayerColor(playerid, 0x41CC41AA);
			}
			if(listitem == 2)
			{
				SetPlayerColor(playerid, COLOR_YELLOW);
			}
			if(listitem == 3)
			{
				SetPlayerColor(playerid, 0x1D2FB5A);
			}
			if(listitem == 4)
			{
				SetPlayerColor(playerid, 0xFF9100AA);
			}
			if(listitem == 5)
			{
				SetPlayerColor(playerid, 0xBA16AFAA);
			}
			if(listitem == 6)
			{
				SetPlayerColor(playerid, Azul);
			}
			if(listitem == 7)
			{
				SetPlayerColor(playerid, 0xBDBDBDAA);
			}
			if(listitem == 8)
			{
				SetPlayerColor(playerid, 0x572B2BAA);
			}
			if(listitem == 9)
			{
				SetPlayerColor(playerid, 0xFFFFFFAA);
			}
			if(listitem == 10)
			{
				SetPlayerColor(playerid, 0x07F2F2AA);
			}
			if(listitem == 11)
			{
				SetPlayerColor(playerid, 0x105210AA);
			}
		}
		return 1;
	}

	if(dialogid == skinnovato)
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			SetPlayerSkin(playerid, 29);
			DOF2_SetInt(file, "Skin", 29);		  // Masculino
			DOF2_SetInt(file, "novato", 2);
			DOF2_SetInt(file, "Sexo", Masculino);
			DynTutorialStart(playerid);
		}
		else
		{
			SetPlayerSkin(playerid, 93);
			DOF2_SetInt(file, "Skin", 93);		  // Feminino
			DOF2_SetInt(file, "novato", 2);
			DOF2_SetInt(file, "Sexo", Feminino);
			DynTutorialStart(playerid);
		}
		return 1;
	}
	
	if(dialogid == cortagg)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
			    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
     	        if(DOF2_GetInt(file, "cortag") == 0)
		        {
                    SendClientMessage(playerid, Vermelho, "você já está usando está cor.");
		        }
		        else
				{
                    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				    DOF2_SetInt(file, "cortag", 0);
				    SendClientMessage(playerid, Branco, "cor alterada para {FF1493}Rosa");
				}
			}
			if(listitem == 1)
			{
			    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
     	        if(DOF2_GetInt(file, "cortag") == 1)
		        {
                    SendClientMessage(playerid, Vermelho, "você já está usando está cor.");
		        }
		        else
				{
                    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				    DOF2_SetInt(file, "cortag", 1);
				    SendClientMessage(playerid, Branco, "cor alterada para {ff0000}vermelho");
				}
			}
			if(listitem == 2)
			{
			    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
     	        if(DOF2_GetInt(file, "cortag") == 2)
		        {
                    SendClientMessage(playerid, Vermelho, "você já está usando está cor.");
		        }
		        else
				{
                    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				    DOF2_SetInt(file, "cortag", 2);
				    SendClientMessage(playerid, Branco, "cor alterada para {fff000}amarelo");
				}
			}
			if(listitem == 3)
			{
			    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
     	        if(DOF2_GetInt(file, "cortag") == 3)
		        {
                    SendClientMessage(playerid, Vermelho, "você já está usando está cor.");
		        }
		        else
				{
                    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				    DOF2_SetInt(file, "cortag", 3);
				    SendClientMessage(playerid, Branco, "cor alterada para {00ff00}verde");
				}
			}
			if(listitem == 4)
		    {
			    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
     	        if(DOF2_GetInt(file, "cortag") == 4)
		        {
                    SendClientMessage(playerid, Vermelho, "você já está usando está cor.");
		        }
		        else
				{
                    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				    DOF2_SetInt(file, "cortag", 4);
				    SendClientMessage(playerid, Branco, "cor alterada para {DF01D7}azul");
				}
			}
    	}
	}
	
	if(dialogid == tagtopp)
		{
		  if(response == 1)
		   {
			if(listitem == 0)
			{
			    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
     	        if(DOF2_GetInt(file, "tagtop") == 0)
		        {
                    SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}você já está usando está cor.");
		        }
		        else
				{
                    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				    DOF2_SetInt(file, "tagtop", 0);
				    SendClientMessage(playerid, Branco, "Cor alterada para {FF1493}Rosa");
				}
			}
			if(listitem == 1)
			{
			    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
     	        if(DOF2_GetInt(file, "tagtop") == 1)
		        {
                    SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}você já está usando está cor.");
		        }
		        else
				{
                    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				    DOF2_SetInt(file, "tagtop", 1);
				    SendClientMessage(playerid, Branco, "Cor alterada para {ff0000}vermelho");
				}
			}
			if(listitem == 2)
			{
			    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
     	        if(DOF2_GetInt(file, "tagtop") == 2)
		        {
                    SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}você já está usando está cor.");
		        }
		        else
				{
                    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				    DOF2_SetInt(file, "tagtop", 2);
				    SendClientMessage(playerid, Branco, "Cor alterada para {fff000}amarelo");
				}
			}
			if(listitem == 3)
			{
			    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
     	        if(DOF2_GetInt(file, "tagtop") == 3)
		        {
                    SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}você já está usando está cor.");
		        }
		        else
				{
                    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				    DOF2_SetInt(file, "tagtop", 3);
				    SendClientMessage(playerid, Branco, "Cor alterada para {00ff00}verde");
				}
			}
			if(listitem == 4)
		    {
			    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
     	        if(DOF2_GetInt(file, "tagtop") == 4)
		        {
                    SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}você já está usando está cor.");
		        }
		        else
				{
                    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				    DOF2_SetInt(file, "tagtop", 4);
				    SendClientMessage(playerid, Branco, "Cor alterada para {DF01D7}azul");
				}
			}
		}
	}


	if(dialogid == AJUDACONCE)							  // Menu
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				SendClientMessage(playerid, 0x6495EDAA, "======================== Terrestre ========================");
		        SendClientMessage(playerid, COLOR_WHITE, "Bem vindo a concessionária Terrestre!");
		        SendClientMessage(playerid, 0x6495EDAA, "======================== Terrestre ========================");
	        	ShowModelSelectionMenu(playerid, vehlist, "Concessionaria");
			}
			if(listitem == 1)
			{
				new strcmd[1000];

       			strcat(strcmd, "{FFFFFF}Carros Lentos: R$100000\n");
				strcat(strcmd, "{FFFFFF}Carros Medios: R$120000\n");
				strcat(strcmd, "{FFFFFF}Carros Rapidos: R$180000\n");
				strcat(strcmd, "{FFFFFF}Motos: R$60000");

				ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Preços", strcmd, "OK", "");
			}
		}
	}

	if(dialogid == menubco)
	{
		if(response == 1)
		{
			if(listitem == 0) ShowPlayerDialog(playerid, compravip, DIALOG_STYLE_LIST, "{696969}Comprar Dias VIP", "3 Dias De VIP Preço: {696969}50 Cash\n5 Dias De VIP Preço: {696969}100 Cash\n7 Dias De VIP Preço: {696969}130 Cash\n10 Dias De VIP Preço: {696969}160 Cash", "OK", "Cancelar");
			if(listitem == 1) ShowPlayerDialog(playerid, compralevel, DIALOG_STYLE_LIST, "{696969}Comprar Level", "50 Level Preço: {696969}400 Cash\n150 Level Preço: {696969}800 Cash\n230 Level Preço: {696969}1000 Cash\n280 Level Preço: {696969}1300 Cash", "OK", "Cancelar");
			if(listitem == 2) ShowPlayerDialog(playerid, compraestudo, DIALOG_STYLE_LIST, "{696969}Comprar Estudo", "50 Estudo Preço: {696969}400 Cash\n120 Estudo Preço: {696969}800 Cash\n230 Estudo Preço: {696969}1000 Cash\n280 Estudo Preço: {696969}1300 Cash", "OK", "Cancelar");
			if(listitem == 3) ShowPlayerDialog(playerid, comprarcaixab, DIALOG_STYLE_LIST, "{696969}Chave Caixa Basica", " 1 Chave Preço: {696969}1500 Cash", "OK", "Cancelar");
		    if(listitem == 4) ShowPlayerDialog(playerid, comprarcaixaa, DIALOG_STYLE_LIST, "{696969}Chave Caixa Avançada", "1 Chave Preço: {696969}3000 Cash", "OK", "Cancelar");
		    if(listitem == 5) ShowPlayerDialog(playerid, tcompralevel, DIALOG_STYLE_LIST, "{696969}[PREMIUM / $Prestige$]{696969}Comprar Level", "50 Level Preço: {696969}200 Cash\n150 Level Preço: {696969}600 Cash\n230 Level Preço: {696969}900 Cash\n280 Level Preço: {696969}1100 Cash", "OK", "Cancelar");
			if(listitem == 6) ShowPlayerDialog(playerid, tcompraestudo, DIALOG_STYLE_LIST, "{696969}[PREMIUM / $Prestige$]{696969}Comprar Estudo", "50 Estudo Preço: {696969}200 Cash\n120 Estudo Preço: {696969}600 Cash\n230 Estudo Preço: {696969}900 Cash\n280 Estudo Preço: {696969}1100 Cash", "OK", "Cancelar");
 			//if(listitem == 7) ShowPlayerDialog(playerid, compracash, DIALOG_STYLE_LIST, "{696969}Comprar Cash", "25 Cash {696969}R$: {00FF00}500,000", "OK", "Cancelar");
 			//if(listitem == 8) ShowPlayerDialog(playerid, compracashh, DIALOG_STYLE_LIST, "{696969}Comprar Cash", "50 Cash {696969}R$: {00FF00}950,000", "OK", "Cancelar");
		}
	}

    if(dialogid == compravip)
	{
        new stringb[256];
		format(stringb, sizeof(stringb), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(response == 1)
		{
			if(listitem == 0) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 50)
				{
                    DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-50);
					SetPlayerVIP(playerid, COMPRA_VIP);
					SendClientMessage(playerid, roxo, "{FFFFFF}[INFO]{9955DE} Você comprou {FFFFFF}3{9955DE}dia de {9955DE}VIP{FFFFFF}.");
					format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}3 {9955DE}Dias VIP, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(-1, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 50 de Cash.");
				}
			}
			if(listitem == 1) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 100)
				{
                    DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-100);
					SetPlayerVIP(playerid, COMPRA_VIP2);
					SendClientMessage(playerid, roxo, "{FFFFFF}[INFO]{9955DE} Você comprou {FFFFFF}5{9955DE}dia de {9955DE}VIP{FFFFFF}.");
					format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}5 {9955DE}Dias VIP, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(-1, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 100 de Cash.");
				}
			}
			if(listitem == 2) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 130)
				{
                    DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-130);
					SetPlayerVIP(playerid, COMPRA_VIP3);
					SendClientMessage(playerid, roxo, "{FFFFFF}[INFO]{9955DE} Você comprou {FFFFFF}7{9955DE}dia de {9955DE}VIP{FFFFFF}.");
					format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}7 {9955DE}Dias VIP, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(-1, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 130 de Cash.");
				}
			}
			if(listitem == 3) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 160)
				{
                    DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-160);
					SetPlayerVIP(playerid, COMPRA_VIP4);
					SendClientMessage(playerid, roxo, "{FFFFFF}[INFO]{9955DE} Você comprou {FFFFFF}10{9955DE}dia de {9955DE}VIP{FFFFFF}.");
					format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}10 {9955DE}Dias VIP, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(-1, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 160 de Cash.");
				}
			}
        }
        else
        {
            SendClientMessage(playerid, 0x6495EDAA, "Compra cancelada com sucesso! Volte sempre.");
        }
	}


    if(dialogid == compralevel)
	{
        new stringb[256];
		format(stringb, sizeof(stringb), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(response == 1)
		{
			if(listitem == 0) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 400)
				{
                    if(DOF2_GetInt(stringb, "Level") < MAX_PLAYER_LEVEL-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-400);
						DOF2_SetInt(stringb, "Level", DOF2_GetInt(stringb, "Level")+50);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 50{9955DE} level{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}50 {9955DE}Leveis, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de levels.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 400 de Cash.");
				}
			}
			if(listitem == 1) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 800)
				{
                    if(DOF2_GetInt(stringb, "Level") < MAX_PLAYER_LEVEL-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-800);
						DOF2_SetInt(stringb, "Level", DOF2_GetInt(stringb, "Level")+150);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 150{9955DE} level{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}150 {9955DE}Leveis, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de levels.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 800 de Cash.");
				}
			}
			if(listitem == 2) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 1000)
				{
                    if(DOF2_GetInt(stringb, "Level") < MAX_PLAYER_LEVEL-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-1000);
						DOF2_SetInt(stringb, "Level", DOF2_GetInt(stringb, "Level")+230);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 230{9955DE} level{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}230 {9955DE}Leveis, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de levels.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 1000 de Cash.");
				}
			}
			if(listitem == 3) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 1300)
				{
                    if(DOF2_GetInt(stringb, "Level") < MAX_PLAYER_LEVEL-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-1300);
						DOF2_SetInt(stringb, "Level", DOF2_GetInt(stringb, "Level")+280);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 280{9955DE} level{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}280 {9955DE}Leveis, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de levels.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 1300 de Cash.");
				}
			}
        }
        else
        {
            SendClientMessage(playerid, 0x6495EDAA, "Compra cancelada com sucesso! Volte sempre.");
        }
	}

    if(dialogid == compraestudo)
	{
        new stringb[256];
		format(stringb, sizeof(stringb), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(response == 1)
		{
			if(listitem == 0) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 400)
				{
                    if(DOF2_GetInt(stringb, "Faculdade") < MAX_PLAYER_ESTUDO-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-400);
						DOF2_SetInt(stringb, "Faculdade", DOF2_GetInt(stringb, "Faculdade")+COMPRA_ESTUDOS);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 50{9955DE} Estudos{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}50 {9955DE}Estudos, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
					    SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de Estudo.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 400 de Cash.");
				}
			}
			if(listitem == 1) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 800)
				{
                    if(DOF2_GetInt(stringb, "Faculdade") < MAX_PLAYER_ESTUDO-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-800);
						DOF2_SetInt(stringb, "Faculdade", DOF2_GetInt(stringb, "Faculdade")+120);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 120{9955DE} Estudos{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}120 {9955DE}Estudos, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de Estudos.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 800 de Cash.");
				}
			}
			if(listitem == 2) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 1000)
				{
                    if(DOF2_GetInt(stringb, "Faculdade") < MAX_PLAYER_ESTUDO-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-1000);
						DOF2_SetInt(stringb, "Faculdade", DOF2_GetInt(stringb, "Faculdade")+230);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 230{9955DE} Estudos{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}230 {9955DE}Estudos, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de Estudos.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 1000 de Cash.");
				}
			}
			if(listitem == 3) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 1300)
				{
                    if(DOF2_GetInt(stringb, "Faculdade") < MAX_PLAYER_ESTUDO-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-1300);
						DOF2_SetInt(stringb, "Faculdade", DOF2_GetInt(stringb, "Faculdade")+280);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 280{9955DE} Estudos{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}280 {9955DE}Estudos, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de Estudos.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 1300 de Cash.");
				}
			}
        }
        else
        {
            SendClientMessage(playerid, 0x6495EDAA, "Compra cancelada com sucesso! Volte sempre.");
        }
	}

	if(dialogid == comprarcaixab)
	{
        new stringb[256];
		format(stringb, sizeof(stringb), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(response == 1)
		{
			if(DOF2_GetInt(stringb, "Cashier") == 1)
			{
				SendClientMessage(playerid,Vermelho,"Você Ja Tem uma Chave !");
				return 1;
			}
			if(listitem == 0) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 1500)
				{
	                DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-1500);
					DOF2_SetInt(stringb, "Cashier", COMPRA_CASHIER);
					SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 1{9955DE} Chave Basica{FFFFFF}.");
					format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}1 {9955DE}Chave para caixa Basica, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(-1, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 1500 de Cash.");
				}
			}
        }
        else
        {
            SendClientMessage(playerid, 0x6495EDAA, "Compra cancelada com sucesso! Volte sempre.");
        }
	}

	if(dialogid == comprarcaixaa)
	{
        new stringb[256];
		format(stringb, sizeof(stringb), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(response == 1)
		{
			if(DOF2_GetInt(stringb, "Caixaa") == 1)
			{
				SendClientMessage(playerid,Vermelho,"Você Ja Tem uma Chave !");
				return 1;
			}
			if(listitem == 0) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 3000)
				{
	                DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-3000);
					DOF2_SetInt(stringb, "Caixaa", COMPRA_CAIXAA);
					SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 1{9955DE} Chave Avançada{FFFFFF}.");
					format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}1 {9955DE}Chave para caixa Avançada, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(-1, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 3000 de Cash.");
				}
			}
        }
        else
        {
            SendClientMessage(playerid, 0x6495EDAA, "Compra cancelada com sucesso! Volte sempre.");
        }
	}
	
	if(dialogid == tcompralevel)
	{
        new stringb[256];
		format(stringb, sizeof(stringb), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		if(response == 1)
		{
			if(listitem == 0) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 200)
				{
                    if(DOF2_GetInt(stringb, "Level") < MAX_PLAYER_LEVEL-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-200);
						DOF2_SetInt(stringb, "Level", DOF2_GetInt(stringb, "Level")+50);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 50{9955DE} level{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}50 {9955DE}Leveis, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de levels.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 400 de Cash.");
				}
			}
			if(listitem == 1) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 600)
				{
                    if(DOF2_GetInt(stringb, "Level") < MAX_PLAYER_LEVEL-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-600);
						DOF2_SetInt(stringb, "Level", DOF2_GetInt(stringb, "Level")+150);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 150{9955DE} level{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}150 {9955DE}Leveis, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de levels.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 400 de Cash.");
				}
			}
			if(listitem == 2) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 900)
				{
                    if(DOF2_GetInt(stringb, "Level") < MAX_PLAYER_LEVEL-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-900);
						DOF2_SetInt(stringb, "Level", DOF2_GetInt(stringb, "Level")+230);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 230{9955DE} level{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}230 {9955DE}Leveis, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de levels.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 400 de Cash.");
				}
			}
			if(listitem == 3) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 600)
				{
                    if(DOF2_GetInt(stringb, "Level") < MAX_PLAYER_LEVEL-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-1100);
						DOF2_SetInt(stringb, "Level", DOF2_GetInt(stringb, "Level")+280);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 280{9955DE} level{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}280 {9955DE}Leveis, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de levels.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 400 de Cash.");
				}
			}
        }
        else
        {
            SendClientMessage(playerid, 0x6495EDAA, "Compra cancelada com sucesso! Volte sempre.");
        }
	}

	if(dialogid == tcompraestudo)
	{
        new stringb[256];
		format(stringb, sizeof(stringb), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		if(response == 1)
		{
			if(listitem == 0) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 200)
				{
                    if(DOF2_GetInt(stringb, "Faculdade") < MAX_PLAYER_ESTUDO-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-200);
						DOF2_SetInt(stringb, "Faculdade", DOF2_GetInt(stringb, "Faculdade")+50);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 50{9955DE} Estudos{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}50 {9955DE}Estudos, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de Estudos.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 400 de Cash.");
				}
			}
			if(listitem == 1) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 600)
				{
                    if(DOF2_GetInt(stringb, "Faculdade") < MAX_PLAYER_ESTUDO-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-600);
						DOF2_SetInt(stringb, "Faculdade", DOF2_GetInt(stringb, "Faculdade")+120);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 120{9955DE} Estudos{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}120 {9955DE}Estudos, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de Estudos.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 400 de Cash.");
				}
			}
			if(listitem == 2) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 900)
				{
                    if(DOF2_GetInt(stringb, "Faculdade") < MAX_PLAYER_ESTUDO-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-900);
						DOF2_SetInt(stringb, "Faculdade", DOF2_GetInt(stringb, "Faculdade")+230);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 230{9955DE} Estudos{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}230 {9955DE}Estudos, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de Estudos.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 400 de Cash.");
				}
			}
			if(listitem == 3) // 100 Levels(300 Golds)
			{
				if(DOF2_GetInt(stringb, "CASH") >= 600)
				{
                    if(DOF2_GetInt(stringb, "Faculdade") < MAX_PLAYER_ESTUDO-1)
					{
                        DOF2_SetInt(stringb, "CASH", DOF2_GetInt(stringb, "CASH")-1100);
						DOF2_SetInt(stringb, "Faculdade", DOF2_GetInt(stringb, "Faculdade")+280);
						SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}[INFO]{9955DE} Você comprou{FFFFFF} 280{9955DE} Estudos{FFFFFF}.");
						format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou {FFFFFF}280 {9955DE}Estudos, {FFFFFF}/Loja.", GetPlayerNameEx(playerid));
						SendClientMessageToAll(-1, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "(ERRO) {FFFFFF}Você já está no limite de Estudos.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não possue 400 de Cash.");
				}
			}
        }
        else
        {
            SendClientMessage(playerid, 0x6495EDAA, "Compra cancelada com sucesso! Volte sempre.");
        }
	}

	if(dialogid == compracash)                          //
	{
	    if(response == 1)
	    {
	        new aname[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, aname, sizeof(aname));
	        format(file, sizeof(file), PASTA_CONTAS, aname);
	        if(listitem == 0)
	        {
	            if(GetPlayerGrana(playerid) > 499999)
	            {
	                GivePlayerGrana(playerid, -500000);
	                DOF2_SetInt(file, "CASH", DOF2_GetInt(file, "CASH")+CASH_VENDERR);
	                SendClientMessage(playerid, Azul, "{FFFFFF}[INFO]{9955DE} Você comprou {FFFFFF}25{9955DE} Cash, parabéns.");
	            }
	            else
	            {
	                SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem dinheiro suficiente.");
	            }
	        }
	    }
	}
	if(dialogid == compracashh)                          //
	{
	    if(response == 1)
	    {
	        new aname[MAX_PLAYER_NAME];
	        GetPlayerName(playerid, aname, sizeof(aname));
	        format(file, sizeof(file), PASTA_CONTAS, aname);
	        if(listitem == 0)
	        {
	            if(GetPlayerGrana(playerid) > 949999)
	            {
	                GivePlayerGrana(playerid, -950000);
	                DOF2_SetInt(file, "CASH", DOF2_GetInt(file, "CASH")+CASH_VENDERH);
	                SendClientMessage(playerid, Azul, "{FFFFFF}[INFO]{9955DE} Você comprou {FFFFFF}50{9955DE} Cash, parabéns.");
	            }
	            else
	            {
	                SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem dinheiro suficiente.");
	            }
	        }
	    }
	}

	
	if(dialogid == 431)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][0]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 1)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][1]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 2)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][2]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 3)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][3]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 4)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][4]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 5)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][5]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 6)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][6]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 7)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][7]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 8)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][8]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 9)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][9]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 10)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][10]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 11)
			{
				if(IsPlayerConnected(playerid))
	            {
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][11]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 12)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][12]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 13)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][13]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
		    if(listitem == 14)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][14]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
		    if(listitem == 15)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][15]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 16)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][16]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
		    if(listitem == 17)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][17]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
			if(listitem == 18)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][18]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
		    if(listitem == 19)
			{
				if(IsPlayerConnected(playerid))
				{
					format(string, sizeof(string), PASTA_CONCE, MyCars[playerid][19]);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(!IsVehicleOccupied(DOF2_GetInt(string, "Id")))
						{
							PutPlayerInVehicle(playerid, DOF2_GetInt(string, "Id"), 0);
						}
					}
				}
			}
		}
	}

	if(dialogid == Hotel)
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		new grana = GetPlayerGrana(playerid);
		if(response == 1)
		{
			if(listitem == 0)					  // Alugar
			{
				if(IsPlayerInDynamicCP(playerid, CheckpointsFix[65]))
				{
					if(grana > 499)
					{
						DOF2_SetFloat(file, "CasaX", Float:1107.7233);
						DOF2_SetFloat(file, "CasaY", Float:-1893.2423);
						DOF2_SetFloat(file, "CasaZ", Float:16.5937);
						DOF2_SetInt(file, "Hotel", 1);
						GivePlayerGrana(playerid, -500);
						SetSpawnInfo(playerid, 1, DOF2_GetInt(file, "Skin"), DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"), 354.1657, 0, 0, 0, 0, 0, 0);
						SendClientMessage(playerid, Amarelo, "Você alugou um quarto em um hotel de Los Santos!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente $500.");
					}
				}
				if(IsPlayerInDynamicCP(playerid, CheckpointsFix[81]))
				{
					if(grana > 499)
					{
						DOF2_SetFloat(file, "CasaX", Float:2232.4436);
						DOF2_SetFloat(file, "CasaY", Float:-1893.2423);
						DOF2_SetFloat(file, "CasaZ", Float:25.8552);
						DOF2_SetInt(file, "Hotel", 1);
						GivePlayerGrana(playerid, -500);
						SetSpawnInfo(playerid, 1, DOF2_GetInt(file, "Skin"), DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"), 354.1657, 0, 0, 0, 0, 0, 0);
						SendClientMessage(playerid, Amarelo, "Você alugou um quarto em um hotel de Los Santos!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente $500.");
					}
				}
			}
			if(listitem == 1)					  // Desalugar
			{
				DOF2_SetFloat(file, "CasaX", Float:1568.4894);
				DOF2_SetFloat(file, "CasaY", Float:-1893.2423);
				DOF2_SetFloat(file, "CasaZ", Float:13.5468);
				DOF2_SetInt(file, "Hotel", 0);
				SetSpawnInfo(playerid, 1, DOF2_GetInt(file, "Skin"), DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"), 354.1657, 0, 0, 0, 0, 0, 0);
				SendClientMessage(playerid, Amarelo, "Você desalugou o quarto do hotel de Los Santos!");
			}
		}
		return 1;
	}

	if(dialogid == Armas)
	{
		if(response == 1)
		{
			new grana = GetPlayerGrana(playerid);
			new aname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
			format(file, sizeof(file), PASTA_CONTAS, aname);
			if(listitem == 0)					  // 9mm
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 148)
					{
						GivePlayerGrana(playerid, -149);
						GivePlayerWeapon(playerid, 22, 99999);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 1)					  // 9mm Sileciada
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 168)
					{
						GivePlayerGrana(playerid, -169);
						GivePlayerWeapon(playerid, 23, 99999);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 2)					  // Deagle
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 348)
					{
						GivePlayerGrana(playerid, -349);
						GivePlayerWeapon(playerid, 24, 99999);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 3)
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 398)				  // Mac 10
					{
						GivePlayerGrana(playerid, -399);
						GivePlayerWeapon(playerid, 28, 99999);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 4)
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 388)				  // MP5
					{
						GivePlayerGrana(playerid, -389);
						GivePlayerWeapon(playerid, 29, 99999);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 5)
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 698)				  // AK-47
					{
						GivePlayerGrana(playerid, -699);
						GivePlayerWeapon(playerid, 30, 99999);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 6)
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 748)				  // M4
					{
						GivePlayerGrana(playerid, -749);
						GivePlayerWeapon(playerid, 31, 99999);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 7)
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 998)				  // Sniper
					{
						GivePlayerGrana(playerid, -999);
						GivePlayerWeapon(playerid, 34, 99999);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 8)
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 488)				  // Shotgun
					{
						GivePlayerGrana(playerid, -489);
						GivePlayerWeapon(playerid, 25, 99999);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 9)
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 498)				  // sawn
					{
						GivePlayerGrana(playerid, -499);
						GivePlayerWeapon(playerid, 26, 99999);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 10)
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 498)				  // combat
					{
						GivePlayerGrana(playerid, -499);
						GivePlayerWeapon(playerid, 27, 99999);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 11)
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 1199)				  // combat
					{
						GivePlayerGrana(playerid, -1200);
						GivePlayerWeapon(playerid, 9, 1);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 12)
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 1499)				  // Gas Fumaca
					{
						GivePlayerGrana(playerid, -1500);
						GivePlayerWeapon(playerid, 17, 99999);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 13)
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 1499)				  // Molotov
					{
						GivePlayerGrana(playerid, -1500);
						GivePlayerWeapon(playerid, 18, 99999);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 14)
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 3999)				  // paraquedas
					{
						GivePlayerGrana(playerid, -3999);
						GivePlayerWeapon(playerid, 46, 1);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
			if(listitem == 15)
			{
				if(DOF2_GetInt(file, "Porte") == 1)
				{
					if(grana > 4999)				  // lanca
					{
						GivePlayerGrana(playerid, -4999);
						GivePlayerWeapon(playerid, 37, 99999);
						SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma arma, não faça DM fora da favela!");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem porte de armas.");
				}
			}
		}
		return 1;
	}

	if(dialogid == Faculdade)
	{
		if(response == 1)
		{
			new grana = GetPlayerGrana(playerid);
			if(Faculdade2 == 1)
			{
				if(grana > 99)
				{
					minutos[playerid] = 0;
					NaFaculdade[playerid] = 1;
					Conversa[playerid] = 0;
					ResetPlayerWeapons(playerid);
					SetPlayerHealth(playerid, 999999.0);
					GivePlayerGrana(playerid, -100);
					SetPlayerInterior(playerid, 3);
					SetPlayerPos(playerid, -2029.798339, -106.675910, 1035.171875);
					TogglePlayerControllable(playerid, 1);
					SendClientMessage(playerid, 0x6495EDAA, "[SECRETARIA] Nos próximos "#TEMPO_ESTUDO" minutos você ficará estudando.");
					SendClientMessage(playerid, 0x6495EDAA, "Não faça barulho pois você está em uma biblioteca.");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem $100 para pagar a mensalidade.");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "A faculdade está fechada no momento.");
				SendClientMessage(playerid, Vermelho, "Veja os horários de funcionamento /horarios");
			}
		}
		return 1;
	}

    if(dialogid == cidades)
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(DOF2_GetInt(file, "novato") == 1)
		{
			format(STRX, sizeof(STRX), "{FFFFFF}Bem vindo {FF0000}%s, {FFFFFF}Digite sua senha para logar:", aname);
		}
		if(response == 1)
		{
			if(listitem == 0)					  // Los Santos
			{
				DOF2_SetFloat(file, "CasaX", Float:1296.0050);
				DOF2_SetFloat(file, "CasaY", Float:-1873.5895);
				DOF2_SetFloat(file, "CasaZ", Float:13.5762);
				if(DOF2_GetInt(file, "novato") == 1)
				{
					ShowPlayerDialog(playerid, LOGIN, DIALOG_STYLE_PASSWORD, "CONTA", STRX, "Logar", "Sair");
				}
				if(IsPlayerInDynamicCP(playerid, CheckpointsFix[29]))
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 1413.7603, -1756.9359, 13.5468);
				}
				SetSpawnInfo(playerid, 1, DOF2_GetInt(file, "Skin"), DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"), 357.9491, 0, 0, 0, 0, 0, 0);
			}
			if(listitem == 1)					  // San Fierro
			{
				DOF2_SetFloat(file, "CasaX", Float:-2706.2280);
				DOF2_SetFloat(file, "CasaY", Float:387.5801);
				DOF2_SetFloat(file, "CasaZ", Float:4.3749);
				if(DOF2_GetInt(file, "novato") == 1)
				{
					ShowPlayerDialog(playerid, LOGIN, DIALOG_STYLE_PASSWORD, "CONTA", STRX, "Logar", "Sair");
				}
				if(IsPlayerInDynamicCP(playerid, CheckpointsFix[29]))
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, -2706.2280, 387.5801, 4.3749);
				}
				SetSpawnInfo(playerid, 1, DOF2_GetInt(file, "Skin"), DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"), 270.6406, 0, 0, 0, 0, 0, 0);
			}
			if(listitem == 2)					  // Las Venturas
			{
				DOF2_SetFloat(file, "CasaX", Float:2330.1411);
				DOF2_SetFloat(file, "CasaY", Float:2352.7380);
				DOF2_SetFloat(file, "CasaZ", Float:10.8203);
				if(DOF2_GetInt(file, "novato") == 1)
				{
					ShowPlayerDialog(playerid, LOGIN, DIALOG_STYLE_PASSWORD, "CONTA", STRX, "Logar", "Sair");
				}
				if(IsPlayerInDynamicCP(playerid, CheckpointsFix[29]))
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 2330.1411, 2352.7380, 10.8203);
				}
				SetSpawnInfo(playerid, 1, DOF2_GetInt(file, "Skin"), DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"), 270.6406, 0, 0, 0, 0, 0, 0);
			}
			if(listitem == 3)					  // Forte Carson
			{
				DOF2_SetFloat(file, "CasaX", Float:-89.4515);
				DOF2_SetFloat(file, "CasaY", Float:1223.6799);
				DOF2_SetFloat(file, "CasaZ", Float:19.7422);
				if(DOF2_GetInt(file, "novato") == 1)
				{
					ShowPlayerDialog(playerid, LOGIN, DIALOG_STYLE_PASSWORD, "CONTA", STRX, "Logar", "Sair");
				}
				if(IsPlayerInDynamicCP(playerid, CheckpointsFix[29]))
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, -89.4515, 1223.6799, 19.7422);
				}
				SetSpawnInfo(playerid, 1, DOF2_GetInt(file, "Skin"), DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"), 181.3490, 0, 0, 0, 0, 0, 0);
			}
		}
		return 1;
	}

	if(dialogid == viagens)
	{
		new grana = GetPlayerGrana(playerid);
		if(response == 1)
		{
			if(listitem == 0)					  // Los Santos
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou passagens para Los Santos!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid, 1);
					Aerols[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 1)					  // San Fierro
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou passagens para San Fierro!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid, 1);
					Aerosf[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 2)
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou passagens para Las Venturas!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid, 1);
					Aerolv[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 3)
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou passagens para Aero Abandonado!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid,1);
					Aeroabd[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 4)
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou Passagens Para Bayside!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid, 1);
					bayside[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 5)
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou passagens para El Quebrados!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid, 1);
					EQ[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 6)
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou passagens para Las Payasadas!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid, 1);
					LP[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 7)
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou passagens para Area 51!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid, 1);
					a51[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 8)
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou passagens para Las Barrancas!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid, 1);
					LB[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 9)
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou passagens para Fort Carson!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid, 1);
					FC[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 10)
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou passagens para Monte Gomery!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid, 1);
					MG[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 11)
			{
				ShowPlayerDialog(playerid, viagens2, DIALOG_STYLE_LIST, "Viagens", "Palominio Creek\nDillimore\nMonte Chiliad\nAngel Pine", "Comprar", "Cancelar");
			}
		}
		return 1;
	}

	if(dialogid == viagens2)
	{
		if(response == 1)
		{
			new grana = GetPlayerGrana(playerid);
			if(listitem == 0)
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou passagens para Palomino Creek!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid, 1);
					PC[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 1)
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou passagens para Dillimore!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid, 1);
					DME[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 2)
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou passagens para Monte Chiliad!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid, 1);
					MC[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 3)
			{
				if(grana > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SendClientMessage(playerid, 0xFF0000AA, "Você comprou passagens para Angel Pine!");
					SetPlayerPos(playerid, 1.5409, 28.4508, 1199.5938);
					SetPlayerInterior(playerid, 1);
					AP[playerid] = 1;
					SetTimerEx("destinoviagen", 60000, 0, "e", playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
		}
		return 1;
	}

	if(dialogid == comidas)
	{
		if(response == 1)
		{
			new grana = GetPlayerGrana(playerid);
			if(listitem == 0)
			{
				if(grana > 6)
				{
					GivePlayerGrana(playerid, -7);

					#if defined AnimLoopsUser
					OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					#else
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					#endif

					SendClientMessage(playerid, 0xff5555ff, "Você está comendo Hamburger.");
					SendClientMessage(playerid, 0xff5555ff, "Gastou $7,00 com o Hambuger.");
					SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 1)
			{
				if(grana > 9)
				{
					GivePlayerGrana(playerid, -9);

					#if defined AnimLoopsUser
					OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					#else
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					#endif

					SendClientMessage(playerid, 0xff5555ff, "Você está comendo Hamburger Duplo.");
					SendClientMessage(playerid, 0xff5555ff, "Gastou $10,00 com o Hamburger Duplo.");
					SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 2)
			{
				if(grana > 20)
				{
					GivePlayerGrana(playerid, -20);

					#if defined AnimLoopsUser
					OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					#else
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					#endif

					SendClientMessage(playerid, 0xff5555ff, "Você está comendo Pizza.");
					SendClientMessage(playerid, 0xff5555ff, "Gastou $21,00 com a Pizza.");
					SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 3)
			{
				if(grana > 2)
				{
					GivePlayerGrana(playerid, -2);

					#if defined AnimLoopsUser
					OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					#else
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					#endif

					SendClientMessage(playerid, 0xff5555ff, "Você está comendo Frango.");
					SendClientMessage(playerid, 0xff5555ff, "Gastou $3,00 com o Frango.");
					SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 4)
			{
				if(grana > 1)
				{
					GivePlayerGrana(playerid, -1);

					#if defined AnimLoopsUser
					OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					#else
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					#endif

					SendClientMessage(playerid, 0xff5555ff, "Você está tomando Coca-Cola.");
					SendClientMessage(playerid, 0xff5555ff, "Gastou $2,00 com a Coca-Cola.");
					SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 5)
			{
				if(grana > 0)
				{
					GivePlayerGrana(playerid, -1);

					#if defined AnimLoopsUser
					OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					#else
					ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
					#endif

					SendClientMessage(playerid, 0xff5555ff, "Você está tomando Agua.");
					SendClientMessage(playerid, 0xff5555ff, "Gastou $1,00 com a Agua.");
					SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
		}
		return 1;
	}

	if(dialogid == Mudouluta)
	{
		if(response == 1)
		{
			new grana = GetPlayerGrana(playerid);
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
			format(file2, sizeof(file2), PASTA_CONTAS, pname);
			if(listitem == 0)
			{
				if(grana > 49)
				{
					GivePlayerGrana(playerid, -50);
					SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
					SendClientMessage(playerid, Vermelho, "Você aprendeu o estilo de luta com as mãos.");
					DOF2_SetInt(file2, "Luta", 1);
					DOF2_SetInt(file2, "Lutas", 1);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 1)
			{
				if(grana > 49)
				{
					GivePlayerGrana(playerid, -50);
					SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
					SendClientMessage(playerid, Vermelho, "Você aprendeu o estilo de luta boxing.");
					DOF2_SetInt(file2, "Luta", 1);
					DOF2_SetInt(file2, "Lutas", 2);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 2)
			{
				if(grana > 49)
				{
					GivePlayerGrana(playerid, -50);
					SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
					SendClientMessage(playerid, Vermelho, "Você aprendeu o estilo de luta agarrar e chutar.");
					DOF2_SetInt(file2, "Luta", 1);
					DOF2_SetInt(file2, "Lutas", 3);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 3)
			{
				if(grana > 49)
				{
					GivePlayerGrana(playerid, -50);
					SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
					SendClientMessage(playerid, Vermelho, "Você aprendeu o estilo de luta briga de rua.");
					DOF2_SetInt(file2, "Luta", 1);
					DOF2_SetInt(file2, "Lutas", 4);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 4)
			{
				if(grana > 49)
				{
					GivePlayerGrana(playerid, -50);
					SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
					SendClientMessage(playerid, Vermelho, "Você aprendeu o estilo de luta para kung-fu.");
					DOF2_SetInt(file2, "Luta", 1);
					DOF2_SetInt(file2, "Lutas", 5);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 5)
			{
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
				SendClientMessage(playerid, Vermelho, "Você aprendeu o estilo de luta para normal.");
				DOF2_SetInt(file2, "Luta", 0);
				DOF2_SetInt(file2, "Lutas", 6);
			}
		}
		return 1;
	}

	if(dialogid == Regras)
	{
		if(response == 1)
		{
		    format(STRX, sizeof(STRX), "{FFFF00}O(a) {FFFFFF}%s {FFFF00}aceitou as regras do BSL. Veja também: {FFFFFF}/regras", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Amarelo, STRX);
		}
		else
		{
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
			format(STRX, sizeof(STRX), "{FFFF00}O(a) jogador(a) {FFFFFF}%s {FFFF00}foi kickado(a) por {FFFFFF}[BSL]Admin. {FFFF00}Motivo: {FFFFFF}Não aceitou as Regras", pname);
			SendClientMessageToAll(Amarelo, STRX);
			KickLog(STRX);
			Kick(playerid);
		}
		return 1;
	}

	if(dialogid == pergunta1)
	{
		if(response == 1)
		{
			ShowPlayerDialog(playerid, erro, DIALOG_STYLE_MSGBOX, "Resposta Errada", "{FF0000}Você errou a resposta e infelizmente terá que refazer o teste.", "OK", "");
		}
		else
		{
			ShowPlayerDialog(playerid, pergunta2, DIALOG_STYLE_MSGBOX, "Pergunta 2", "{00D700}A faixa de pedestre é para?", "Pedestres", "Bicicletas");
		}
		return 1;
	}

	if(dialogid == pergunta2)
	{
		if(response == 1)
		{
			ShowPlayerDialog(playerid, acertouperguntas, DIALOG_STYLE_MSGBOX, "Pergunta 3", "{00D700}Para que serve o sinal {FF003F}Vermelho{00D700}?", "Ir em frente", "Parar");
		}
		else
		{
			ShowPlayerDialog(playerid, erro, DIALOG_STYLE_MSGBOX, "Resposta Errada", "{FF0000}Você errou a resposta, e infelizmente terá que refazer o teste.", "OK", "");
		}
		return 1;
	}

	if(dialogid == acertouperguntas)
	{
		if(response == 1) ShowPlayerDialog(playerid, erro, DIALOG_STYLE_MSGBOX, "Resposta Errada", "{FF0000}Você errou a resposta, e infelizmente terá que refazer o teste.", "OK", "");
		else
		{
   			if(!IsVehicleOccupied(VehiclesFix[102]))
			{
				autoescola[playerid] = 1;

				SetPlayerInterior(playerid, 0);
				PutPlayerInVehicle(playerid, VehiclesFix[102], 0);

				ShowPlayerLocationFromGPS(playerid, "GPSAutoEscola", 1346.8441,205.4860,19.2818);
				SendClientMessage(playerid, 0xFFFF00AA, "Pronto, agora vamos ver como você se sai no transito.");
				SendClientMessage(playerid, 0xFFFF00AA, "Complete o teste Seguindo a seta branca em cima do carro.");
				return 1;
			}
   			if(!IsVehicleOccupied(VehiclesFix[101]))
   			{
				autoescola[playerid] = 1;

				SetPlayerInterior(playerid, 0);
				PutPlayerInVehicle(playerid, VehiclesFix[101], 0);

				ShowPlayerLocationFromGPS(playerid, "GPSAutoEscola", 1346.8441,205.4860,19.2818);
				SendClientMessage(playerid, 0xFFFF00AA, "Pronto, agora vamos ver como você se sai no transito.");
				SendClientMessage(playerid, 0xFFFF00AA, "Complete o teste Seguindo a seta branca em cima do carro.");

				SendClientMessage(playerid, Vermelho, "Todos os veículos da Auto-Escola estão ocupados no momento, volte daqui a pouco.");
				return 1;
			}
			SendClientMessage(playerid, Vermelho, "Todos os veículos da Auto-Escola estão ocupados no momento, volte daqui a pouco.");
			return 1;
		}
	}
	if(dialogid == erro)
	{
		ShowPlayerDialog(playerid, DETRAN, DIALOG_STYLE_LIST, "Auto Escola", STRD_DETRAN, "Comprar", "Cancelar");
	}
	if(dialogid == AVISO)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(response == 1)
		{
			if(PlayerInfo[playerid][Logged] == 0)
			{
				if(DOF2_FileExists(file))
				{
					format(STRX, sizeof(STRX), "{FFFFFF}Nick: {FF0000}%s\n{FFFFFF}Conta: {FF0000}registrada\n\n{FFFFFF}Logue-se, digite sua senha:", GetPlayerNameEx(playerid));
					ShowPlayerDialog(playerid, LOGIN, DIALOG_STYLE_PASSWORD, "Brasil Sem Limites", STRX, "Logar", "Sair");
				}
				else
				{
					format(STRX, sizeof(STRX), "{FFFFFF}Nick: {FF0000}%s\n{FFFFFF}Conta: {FF0000}não registrada\n\n{FFFFFF}Registre-se, digite sua senha:", GetPlayerNameEx(playerid));
					ShowPlayerDialog(playerid, REGISTRO, DIALOG_STYLE_PASSWORD, "Brasil Sem Limites", STRX, "Registrar", "Sair");
				}
			}
		}
		else
		{
			format(STRX, sizeof(STRX), "{FF0000}O(a) {FFFFFF}%s {FF0000}foi kickado(a). {FF0000}Motivo: {FFFFFF}Não registrou/logou.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Amarelo, STRX);
			KickLog(STRX);
			Kick(playerid);
		}
	}

	if(dialogid == REGISTRO)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(response == 1)
		{
			if(strlen(inputtext) < MIN_SENHA || strlen(inputtext) > MAX_SENHA)
			{
				format(STRX, sizeof(STRX), "{FFFFFF}A senha deve ter entre {FF0000}%d {FFFFFF}e {FF0000}%d {FFFFFF}caracteres!", MIN_SENHA, MAX_SENHA);
				SendClientMessage(playerid, -1, STRX);
				format(STRX, sizeof(STRX), "{FFFFFF}Senha muito grande ou pequena.\n\n{FF0000}%s {FFFFFF}digite outra senha:", GetPlayerNameEx(playerid));
				ShowPlayerDialog(playerid, REGISTRO, DIALOG_STYLE_PASSWORD, "Brasil Sem Limites", STRX, "Registrar", "Sair");
				return 1;
			}
			if(Confirma[playerid] == 0)
			{
				Confirma[playerid] = 1;
				format(PlayerInfo[playerid][cSenha], MAX_SENHA, "%s", inputtext);
				format(STRX, sizeof(STRX), "{FF0000}%s\n{FFFFFF}Agora confirme sua senha:", GetPlayerNameEx(playerid));
				ShowPlayerDialog(playerid, REGISTRO, DIALOG_STYLE_PASSWORD, "Brasil Sem Limites", STRX, "Confirmar", "Sair");
			}
			else
			{
				if(strcmp(inputtext, PlayerInfo[playerid][cSenha], true) == 0)
				{
					Confirma[playerid] = 0;
					CreateFileAccount(file, inputtext);
					SetPlayerVIP(playerid, 7);
					DOF2_SetInt(file, "CxNovato", 1);
					PlayerPlaySound(playerid, 1057, 0, 0, 0);
					ShowPlayerDialog(playerid, cidades, DIALOG_STYLE_LIST, "Cidades", "{FF0000}Los Santos", "Morar", "Cancelar");
					SendClientMessage(playerid, -1, "{1E90FF}Você ganhou {FFFFFF}7 {1E90FF}dias VIP e uma Caixa de Novato /spawn.");
				}
				else
				{
					Confirma[playerid] = 0;
					format(STRX, sizeof(STRX), "{FFFFFF}Conta: {FF0000}%s\n\n{FFFFFF}Sua senha está incorreta", GetPlayerNameEx(playerid));
					ShowPlayerDialog(playerid, REGISTRO, DIALOG_STYLE_PASSWORD, "{FF0000}Erro", STRX, "Logar", "Sair");
				}
			}
		}
		else
		{
			format(STRX, sizeof(STRX), "{FF0000}O(a) {FFFFFF}%s {FF0000}foi kickado(a). Motivo: {FFFFFF}não se registrou", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Amarelo, STRX);
			KickLog(STRX);
			Kick(playerid);
		}
	}

	if(dialogid == LOGIN)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(response == 1)
		{
            if(!strlen(inputtext))
			{
			    SendClientMessage(playerid, Vermelho, "{FF0000}(INFO)Você não digitou a senha.");
				format(STRX, sizeof(STRX), "{FFFFFF}Nick: {FF0000}%s\n{FFFFFF}Conta: {FF0000}registrada\n\n{FFFFFF}Logue-se, digite sua senha:", GetPlayerNameEx(playerid));
				ShowPlayerDialog(playerid, LOGIN, DIALOG_STYLE_PASSWORD, "Brasil Sem Limites", STRX, "Logar", "Sair");
				return 1;
			}
			if(strcmp(inputtext, DOF2_GetString(file, "Senha"), true) == 0)
			{
				PlayerInfo[playerid][Logged] = 1;
				StopAudioStreamForPlayer(playerid);
				DOF2_GetString(string, "DataSet");

				PlayerInfo[playerid][Logged] = 1;
				if(IsPlayerConnected(playerid))
				{
					SendClientMessage(playerid, -1, "Você logou com sucesso.");
					SendClientMessage(playerid, -1, "Bem-vindo(a) ao servidor.");
					CancelSelectTextDraw(playerid);
					TextDrawHideForPlayer(playerid, Registro[0]);
					TextDrawHideForPlayer(playerid, Registro[1]);
					TextDrawHideForPlayer(playerid, Registro[2]);
					TextDrawHideForPlayer(playerid, Registro[3]);
					TextDrawHideForPlayer(playerid, Registro[4]);
					TextDrawHideForPlayer(playerid, Registro[5]);
					TextDrawHideForPlayer(playerid, Registro[6]);
					TextDrawHideForPlayer(playerid, Registro[7]);
					TextDrawHideForPlayer(playerid, Registro[8]);
					TextDrawHideForPlayer(playerid, Registro[9]);
					TextDrawHideForPlayer(playerid, Registro[10]);
					TextDrawHideForPlayer(playerid, Registro[11]);
					TextDrawHideForPlayer(playerid, Registro[12]);
					//TextDrawHideForPlayer(playerid, Registro[13]);
					TextDrawHideForPlayer(playerid, Registro[14]);
					TextDrawHideForPlayer(playerid, Registro[15]);
					TextDrawHideForPlayer(playerid, Registro[16]);
					TextDrawHideForPlayer(playerid, Registro[17]);
					TextDrawHideForPlayer(playerid, Registro[18]);
					TextDrawHideForPlayer(playerid, Registro[19]);
					
					new hour;
					gettime(hour);

					if(hour >= 0 && hour <= 5)
			        {
			            format(string, sizeof(string), " {747474}Boa noite {FFFFFF}%s", GetPlayerNameEx(playerid));
		            	SendClientMessage(playerid, -1, string);
				    }
	   		        if(hour >= 6 && hour <= 11)
			        {
                        format(string, sizeof(string), " {FFFF00}Bom dia {FFFFFF}%s", GetPlayerNameEx(playerid));
		            	SendClientMessage(playerid, -1, string);
			        }
	  		    	if(hour >= 12 && hour <= 17)
			        {
			            format(string, sizeof(string), " {FF7700}Boa tarde {FFFFFF}%s", GetPlayerNameEx(playerid));
		            	SendClientMessage(playerid, -1, string);
			    	}
			    	if(hour >= 18 && hour <= 23)
			        {
			            format(string, sizeof(string), " {1E5AFF}Boa noite {FFFFFF}%s", GetPlayerNameEx(playerid));
		            	SendClientMessage(playerid, -1, string);
			    	}
				}
				if(DOF2_GetInt(file, "Tag") == 1)
                {
               		SendClientMessage(playerid, -1, "{FFFFFF}[INFO] {1F0C9B}Sua tag está desativada. Para ativala digite {FFFFFF}/tagon");
		      		SendClientMessage(playerid, 0xFFFF00AA, string);
                }
				if(trocandonick[playerid] == 1)
				{
					ShowPlayerDialog(playerid, mudarnick, DIALOG_STYLE_INPUT, "Trocando Nick", "{FFFFFF}Você está sendo forçado(a) a trocar de nick!\n{00FF00}Agora são permitidos apenas nicks no formato \"Nome_Sobrenome\".\n{FFA500}Digite seu novo nick:", "Mudar", "Sair");
				}
				else
				{
					SetSpawnInfo(playerid, 1, DOF2_GetInt(file, "Skin"), DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"), 357.9491, 0, 0, 0, 0, 0, 0);
					SpawnPlayer(playerid);
				}

				ProfLabel[playerid] = CreateDynamic3DTextLabel(" ", -1, 0.0, 0.0, 0.4, 20.0, playerid, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
				GangLabel[playerid] = CreateDynamic3DTextLabel(" ", -1, 0.0, 0.0, 0.5, 20.0, playerid, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
				GangLabel2[playerid] = CreateDynamic3DTextLabel(" ", -1, 0.0, 0.0, 0.5, 20.0, playerid, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);

				#if defined gText1User
				PlayerTextDrawShow(playerid, PlayerInfo[playerid][gText1]);
				#endif

				#if defined gText2User
				PlayerTextDrawShow(playerid, PlayerInfo[playerid][gText2]);
				#endif
				
				#if defined gText3User
				PlayerTextDrawShow(playerid, PlayerInfo[playerid][gText3]);
				#endif

				TextDrawShowForPlayer(playerid, Relogio);
				TextDrawShowForPlayer(playerid, Facebook);
				TextDrawShowForPlayer(playerid, IPTXT);

				GangZoneShowForPlayer(playerid, GangZonesFix[1], Vermelho);
				GangZoneShowForPlayer(playerid, GangZonesFix[2], Vermelho);
				GangZoneShowForPlayer(playerid, GangZonesFix[3], Vermelho);
				GangZoneShowForPlayer(playerid, GangZonesFix[5], Vermelho);
				GangZoneShowForPlayer(playerid, GangZonesFix[6], Verde);
				GangZoneShowForPlayer(playerid, GangZonesFix[7], Branco);
				GangZoneShowForPlayer(playerid, GangZonesFix[8], Branco);
				GangZoneShowForPlayer(playerid, GangZonesFix[9], Branco);
				
				CheckPlayerVIP(playerid);
	            CheckPlayerVIPT(playerid);
                CheckPlayerVIPMT(playerid);
				CheckPlayerDJ(playerid);
				
				DeletePVar(playerid, "TempoNoLogin");
				LoadPlayerRemovedBuildings(playerid, "Buildings/Dten.txt");

				if(pAdmin[playerid] > 0)
                {
             		AntiFake = 0;
    				ShowPlayerDialog(playerid, STAFF, DIALOG_STYLE_INPUT, "{00EAF6} {FFFFFF}Senha da Administração", "Digite a senha correta da Administração!", "Confirmar","Cancelar");
 				}
    			return 1;
		    }
			else
			{
				PlayerInfo[playerid][LoginsFalsos]++;
				if(PlayerInfo[playerid][LoginsFalsos] >= 10)
				{
					format(STRX, sizeof(STRX), "{FFFF00}O(a) jogador(a) {FFFFFF}%s {FFFF00}foi kickado(a) por {FFFFFF}[BSL]Admin. {FFFF00}Motivo: {FFFFFF}%d Tentativas de Login", GetPlayerNameEx(playerid), 10);
					SendClientMessageToAll(Amarelo, STRX);
					KickLog(STRX);
					Kick(playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Senha incorreta!");
					format(STRX, sizeof(STRX), "{FFFFFF}Conta: {FF0000}%s!\n{FFFFFF}Sua senha está incorreta:", GetPlayerNameEx(playerid));
					ShowPlayerDialog(playerid, LOGIN, DIALOG_STYLE_PASSWORD, "{FF0000}Erro", STRX, "Logar", "Sair");
				}
			}
		}
		else
		{
			format(STRX, sizeof(STRX), "{FF0000}O(a) {FFFFFF}%s {FF0000}foi kickado(a). Motivo: {FFFFFF}não logou", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Amarelo, STRX);
			KickLog(STRX);
			Kick(playerid);
		}
	}

	if(dialogid == menuprof)             //Profissões Configurações
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, Baixa, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Classe » {38b170}Baixa", "Profissao\tNivel-Estudo\tSalario\nMecânico\t50/30\t680.00$\nRapper\t50/30\t680.00$\nGari\t50/30\t680.00$\nLixeiro\t50/30\t680.00$\nV. HotDog\t50/30\t680.00$\nEstudante\tLIVRE\t700.00$\nCorreios\t50/30\t680.00$\nCantor\t50/30\t680.00$\nPoeta\t50/30\t680.00$\nFrentista\t50/30\t680.00$\nJardineiro\t35/10\t800$", "OK", "Cancelar");
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, Honestas, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Classe » {8bcffa}Média", "Profissao\tNivel/Estudo\tSalario\nM.Particular\t80/50\t950R$\nJornalista\t250/100\t1.200$\nFotógrafo\t200/80\t1.250$\nReporter\t210/100\t1.300$\nAncora\t180/90\t1.250$\nMeteorologista\t300/240\t1.300$\nM. Carro Forte\t1200/180\t6.000$\nEmpresario\t700/270\t3.200$\nA.Imobiliario\t600/300\t3.750$\nMédico\t800/450\t3.300$\nGuarda Costas\t400/120\t2.000$\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, Honestas2, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Classe » {847c7f}Alta", "Profissao\tNivel/Estudo\tSalario\nAposentado\t600/150\t10.000$\nAdvogado\t50/80\t3.000$\nPromotor de Justiça\t600/100\t3.000$\nBibliotecário\t600/100\t2.500$\nAtor\t4000/500\t3.000$\nDeputado\t4000/500\t4.000$\nVereador\t1000/250\t4.000$\nJogador De Futebol\t5600/400\t8.000$\nBombeiro\t800/300\t1.300$\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 3)
			{
				ShowPlayerDialog(playerid, Desonestas, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Classe » {840000}Criminosa", "Profissao\tNivel/Estudo\tSalario\nTraficante de Armas\t300/0\t1.500$\nMatador De Aluguel\t250/0\t750.00$\nTerrorista\t450/0\t800.00$\nAssasino Profissional\t100/0\t890.00$\nContrabando\t500/0\t690.00$\nAssaltante\t90/0\t700.00$\nTraficante de Drogas\t175/0\t800.00$\nMáfia\t600/0\t7.000$\nYakuza\t1300\t6.000$\nDono do Morro\t5000/0\t5.000$\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 4)
			{
				ShowPlayerDialog(playerid, Governo, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Classe » {847c7f}Pública", "Profissao\tNivel/Estudo\tSalario\nGuarda Bancario\t190/90\t980.00$\nP. Rodoviária\t200/200\t2.500$ \nP. Militar\t500/300\t4.000$\nP. Civil\t800/400\t5.500$\nP. Federal\t1100/450\t5.800$\nDelegado\t1500/500\t6.000$\nBope\t1650/500\t6.500$\nSWAT\t1800/500\t6.700$\nNarcóticos\t2000/500\t7.250$\nFBI\t5000/500\t7.500$\nInterpol\t15000/500\t8.000$\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 5)
			{
				ShowPlayerDialog(playerid, industriais, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Classe » {FFFFFF}Industrial", "Profissao\tNivel/Estudo\tSalario\nMaquinista\tLIVRE\t3.000$\nCaminhoneiro\t355/0\t4.000$\nPetroleiro400/0\t4.500$\nTaxista\tLIVRE\t950$\nM. de Onibus\tLIVRE\t950$\nUber\tLIVRE\t950$\nCozinheiro\t8500/250\t10.000$\nEletricista\t9000/250\t4.000$\nPiloto\t2900/250\t10.000$\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 6)
			{
				ShowPlayerDialog(playerid, organizadores, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Classe » {FFFFFF}Organizadores", "Profissao\tNivel/Estudo\tSalario\nProfessor\t6000/500\t3.500$\nEmpregador\t10000/500\t6.800$\nMarines\t 3000/300\t6.000$\nDrifter King\t1200/290\t3.000$\nAtirador Elite\t3000/200\t8.500$\nNinja\t2000/290\t8.000$\nDesembargador\t30000/500\t40.000$\nAstronauta\t4500/250\t14.000$\nAyrton Senna\t2200/290\t5.000$\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 7)
			{
				ShowPlayerDialog(playerid, forcasarmadas, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Classe » {211b88}Forças Armadas", "Profissao\tNivel/Estudo\tSalario\nExercito\t400/400\t8500$\nExercito Militar\t2000/110\t10000$\nAeronáutica\t2200/110\t11000$\nFuzileiro Militar\t2400/120\t11500$\nGeneral\t3400/140\t12000$\nMajor\t3200/160\t12250$\nMarechal\t3600/200\t30000$\nTenente\t3400/200\t12500$\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 8)
			{
				ShowPlayerDialog(playerid, Avancada, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}Classe » {FFFFFF}Especial", "Profissao\tNivel/Estudo\tSalario\nCientista\t5000/250\t13000$\nAstronauta\t5500/250\t14000$\nMercenario\t7000/250\t15000$\nGovernador\t7500/250\t15000$\nHacker\t1000/500\t8000$\nMotoqueiro Fantasma\t400/80\t8000$\nSaiyajin\t500/80\t8000$\nCoveiro\t100/80\t1500$\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 9)
			{
			//	ShowPlayerDialog(playerid, torcidas, DIALOG_STYLE_TABLIST_HEADERS, "Torcidas Organizadas", "Profissao\tNivel/Estudo\tSalario\nAtl. Goianiense\t150/60\t5000$\nAtl. Mineiro\t150/60\t5000$\nAtl. Paranaense\t150/60\t5000$\nAvaí\t150/60\t5000$\nBahia\t150/60\t5000$\nBotafogo\t150/60\t5000$\nChapecoense\t150/60\t5000$\nCorinthians\t150/60\t5000$\nCoritiba\t150/60\t5000$\nCruzeiro\t150/60\t5000$\nVoltar", "OK", "Cancelar");
            }
            if(listitem == 10)
			{
			//	ShowPlayerDialog(playerid, torcidas2, DIALOG_STYLE_TABLIST_HEADERS, "Torcidas Organizadas 2", "Profissao\tNivel/Estudo\tSalario\nFlamengo\t150/60\t5000$\nFluminense\t150/60\t5000$\nGremio\t150/60\t5000$\nInternacional\t150/60\t5000$\nPalmeiras\t150/60\t5000$\nPonte Preta\t150\t60\t$5000\nSantos\t150/60\t5000$\nSao Paulo\t150/60\t5000$\nSport\t150/60\t5000$\nVitoria\t150/60\t5000$\nVoltar", "OK", "Cancelar");
            }
           	if(listitem == 11)
			{
			//    ShowPlayerDialog(playerid, herois, DIALOG_STYLE_TABLIST_HEADERS, "Herois", "Profissao\tNivel/Estudo\tSalario\nCapitão América\t400/400\t5.000$\nRobin Wood\t2000/110\t7.000$\nLanterna Verde\t2200/110\t15.000$\nBatman\t400/400\t8.000$\nFlash\t2000/110\t14.000$\nThor\t2200/110\t8.000$\nMascará\t2400/120\t12.000$\nBEN 10\t3400/140\t11.000$\nPatatá\t3200/160\t6.000$\nWolverine\t3400/200\t5.000$\nHulk\t3600/200\t14.000$\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 12)
			{
            //    ShowPlayerDialog(playerid, nova, DIALOG_STYLE_TABLIST_HEADERS, "Classe Nueva", "Profissao\tNivel/Estudo\tSalario\nMestre de Obras\t3500/400\t7.000$\nCafetão\t2000/110\t7.000$\nGovernador de LS\t5000/110\t11.000$\nGringo\t2400/120\t13.000$\nJuiz Federal\t7400/140\t15.000$\nJogador de SAMP\t6000/160\t13.000$\nJogador de Minecraft\t5000/200\t13.000$\nMarido de Aluguel\t3400/200\t5.000$\nPapai Noel\t300/100\t2.000$\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 13)
			{
            //    ShowPlayerDialog(playerid, extrema, DIALOG_STYLE_TABLIST_HEADERS, "Classe Extrema", "Profissao\tNivel/Estudo\tSalario\nEngenheiro Ambiental\t19000/100\t36.000$\nAcessor Jurdico\t28000/100\t40.000$\nAdv Empresarial\t37000/100\t45.000$\nDiretor do R.H\t2200/110\t44.000$\nAnalista de Sistemas\t11000/110\t25.000$\nGerente de Atendimento\t16000/100\t45.000$\nAnalista de Marketing\t25000/100\t45.000$\nDiretor Comercial\t19000/100\t29.000$\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 14)
			{
			//    ShowPlayerDialog(playerid, extrema2, DIALOG_STYLE_TABLIST_HEADERS, "Classe Extrema II", "Profissao\tNivel/Estudo\tSalario\nConsultor Financeiro\t15000/100\t50.000$\nSupervisor Admin\t20000/100\t49.000$\nBancário\t37000/100\t50.000$\nCrackudo\t10000/100\t27.000$\nComandante da Crackolândia\t14000/100\t30.000$\nMente Criminosa\t21000/100\t41.000$\nVigilante Sanitário\t17000/100\t17.000$\nMédico VIP\t27000/100\t42.000$\nCorretor Imob\t36000/100\t40.000$\nVoltar", "OK", "Cancelar");
			}
		}
	}

	if(dialogid == Baixa)						  // Classe Baixa
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{

		if(listitem == 0)					  // Mecânico(a)
			{
				if(DOF2_GetInt(file, "Level") > 49 && DOF2_GetInt(file, "Faculdade") > 29 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) mecânico(a).");
     				SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 21);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 50);
						DOF2_SetInt(file, "Skin", 50);
      					SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, 1629.7509,-1903.1201,13.5531);
					}

					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 238);
						DOF2_SetInt(file, "Skin", 238);
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, 1627.1512,-1520.0609,13.6022);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d/50 {FFFFFF}de level, {9E3EFF}%d/30 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}

		if(listitem == 1)					  // Rappaer
			{
				if(DOF2_GetInt(file, "Level") > 49 && DOF2_GetInt(file, "Faculdade") > 29 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um rapper.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 22);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 241);
						DOF2_SetInt(file, "Skin", 241);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 195);
						DOF2_SetInt(file, "Skin", 195);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}50{FFFFFF} de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}30 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}

		if(listitem == 2)					  // Gari
			{
				if(DOF2_GetInt(file, "Level") > 49 && DOF2_GetInt(file, "Faculdade") > 29 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) gari.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 53);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 213);
						DOF2_SetInt(file, "Skin", 213);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 215);
						DOF2_SetInt(file, "Skin", 215);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}50 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}30 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
		}
		if(listitem == 3)					  // Lixeiro
		{
				if(DOF2_GetInt(file, "Level") > 49 && DOF2_GetInt(file, "Faculdade") > 29 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) lixeiro(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 54);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 135);
						DOF2_SetInt(file, "Skin", 135);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 157);
						DOF2_SetInt(file, "Skin", 157);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}50 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}30 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
		if(listitem == 4)					  // Hotdog
			{
				if(DOF2_GetInt(file, "Level") > 49 && DOF2_GetInt(file, "Faculdade") > 29 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um membro dos Hotdogs.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 56);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 24);
						DOF2_SetInt(file, "Skin", 24);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 13);
						DOF2_SetInt(file, "Skin", 13);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}50 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}30 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
		if(listitem == 5)					  // Estudante
			{
				if(DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) estudante.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 57);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 23);
						DOF2_SetInt(file, "Skin", 23);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 152);
						DOF2_SetInt(file, "Skin", 152);
					}
					Logarprof(playerid);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem carteira de trabalho, vá até {9E3EFF}/Cartorio.");
				}
			}
		if(listitem == 6)					  // Correios
			{
				if(DOF2_GetInt(file, "Level") > 49 && DOF2_GetInt(file, "Faculdade") > 29 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Correios.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 58);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 78);
						DOF2_SetInt(file, "Skin", 78);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 77);
						DOF2_SetInt(file, "Skin", 77);
					}
					Logarprof(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 2322.2366,-2079.3625,13.5469);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}50 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}30{FFFFFF} de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
		if(listitem == 7)					  // Cantor(a)
			{
				if(DOF2_GetInt(file, "Level") > 49 && DOF2_GetInt(file, "Faculdade") > 29 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) cantor(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 59);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 296);
						DOF2_SetInt(file, "Skin", 296);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 263);
						DOF2_SetInt(file, "Skin", 263);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}50 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}30 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
		if(listitem == 8)					  // Poeta
			{
				if(DOF2_GetInt(file, "Level") > 49 && DOF2_GetInt(file, "Faculdade") > 29 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) poeta.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 60);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 1);
						DOF2_SetInt(file, "Skin", 1);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 9);
						DOF2_SetInt(file, "Skin", 9);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}50 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}30 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
		if(listitem == 9)					  // Frentista
			{
				if(DOF2_GetInt(file, "Level") > 49 && DOF2_GetInt(file, "Faculdade") > 29 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) frentista.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 25);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 133);
						DOF2_SetInt(file, "Skin", 133);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 138);
						DOF2_SetInt(file, "Skin", 138);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}50 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}30 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
		if(listitem == 10)					  // Motoqueiro Fantasma
			 {
				 if(DOF2_GetInt(file, "Level") > 34 && DOF2_GetInt(file, "Faculdade") > 9)
				 {
					 SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Jardineiro");
					 SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					 DOF2_SetInt(file, "Profissao", 131);
					 if(DOF2_GetInt(file, "Sexo") == Masculino)
					 {
						 SetPlayerSkin(playerid, 29);
						 DOF2_SetInt(file, "Skin", 29);
					 }
					 if(DOF2_GetInt(file, "Sexo") == Feminino)
					 {
						 SetPlayerSkin(playerid, 91);
						 DOF2_SetInt(file, "Skin", 91);
					 }
					 Logarprof(playerid);
				 }
				 else
				 {
					 format(string, sizeof(string), "Requer: %d/400 de level, %d/80 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					 SendClientMessage(playerid, Vermelho, string);
				 }
			 }
		if(listitem == 11)					  // Voltar
			{
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FF0000}Profissões", "{33AAFF}{FFFFFF}Classe » {38b170}Baixa\n{FFFFFF}Classe » {8bcffa}Média\n{FFFFFF}Classe » {847c7f}Alta\n{FFFFFF}Classe » {840000}Criminosa\n{FFFFFF}Classe » {847c7f}Pública\n{FFFFFF}Classe » {847c7f}Industrial\n{FFFFFF}Classe » {218ffd}Organizadores\n{FFFFFF}Classe » {211b88}Forças Armadas\n{FFFFFF}Classe » {847c7f}Especial", "Selecionar", "Voltar");
			}
		}
	}

	if(dialogid == Honestas)					  // Classe Média
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // Motorista Particular
			{
				if(DOF2_GetInt(file, "Level") > 79 && DOF2_GetInt(file, "Faculdade") > 49 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) motorista particular.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 1);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 255);
						DOF2_SetInt(file, "Skin", 255);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 215);
						DOF2_SetInt(file, "Skin", 215);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}80 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}50{FFFFFF} de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 1)					  // Jornalista
			{
				if(DOF2_GetInt(file, "Level") > 249 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) jornalista.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 16);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 217);
						DOF2_SetInt(file, "Skin", 217);
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, 927.1906,-1220.6859,16.9512);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 216);
						DOF2_SetInt(file, "Skin", 216);
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, 927.1906,-1220.6859,16.9512);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}250 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}100{FFFFFF} de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 2)					  // Fotógrafo
			{
				if(DOF2_GetInt(file, "Level") > 199 && DOF2_GetInt(file, "Faculdade") > 79 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) fotógrafo(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 17);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 223);
						DOF2_SetInt(file, "Skin", 223);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 219);
						DOF2_SetInt(file, "Skin", 219);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}200 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}80 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 3)					  // Reporter
			{
				if(DOF2_GetInt(file, "Level") > 209 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) reporter.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 18);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 217);
						DOF2_SetInt(file, "Skin", 217);
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, 927.1906,-1220.6859,16.9512);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, 927.1906,-1220.6859,16.9512);
						SetPlayerSkin(playerid, 219);
						DOF2_SetInt(file, "Skin", 219);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}210 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}100 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 4)					  // Ancora
			{
				if(DOF2_GetInt(file, "Level") > 179 && DOF2_GetInt(file, "Faculdade") > 89 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é ancora do jornal.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 19);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, 927.1906,-1220.6859,16.9512);
						SetPlayerSkin(playerid, 187);
						DOF2_SetInt(file, "Skin", 187);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, 927.1906,-1220.6859,16.9512);
						SetPlayerSkin(playerid, 194);
						DOF2_SetInt(file, "Skin", 194);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}180 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}90 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 5)					  // Meteorologista
			{
				if(DOF2_GetInt(file, "Level") > 299 && DOF2_GetInt(file, "Faculdade") > 239 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) meteorologista.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 20);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 70);
						DOF2_SetInt(file, "Skin", 70);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 224);
						DOF2_SetInt(file, "Skin", 224);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}300{FFFFFF} de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}240 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}

			if(listitem == 6)					  // Bancario
			{
				if(DOF2_GetInt(file, "Level") > 1199 && DOF2_GetInt(file, "Faculdade") > 179 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Motorista de Carro Forte.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 23);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 295);
						DOF2_SetInt(file, "Skin", 295);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 194);
						DOF2_SetInt(file, "Skin", 194);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}1200 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}180 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}

			if(listitem == 7)					  // Empresario
			{
				if(DOF2_GetInt(file, "Level") > 699 && DOF2_GetInt(file, "Faculdade") > 269 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Empresario(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 51);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 185);
						DOF2_SetInt(file, "Skin", 185);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 169);
						DOF2_SetInt(file, "Skin", 169);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}700 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}270 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 8)					  // Imobiliario
			{
				if(DOF2_GetInt(file, "Level") > 599 && DOF2_GetInt(file, "Faculdade") > 299 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a)  Agente Imobiliario(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 52);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 165);
						DOF2_SetInt(file, "Skin", 165);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 141);
						DOF2_SetInt(file, "Skin", 141);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}600 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}300 {FFFFFF}de estud.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 9)					  // Paramédico
			{
				if(DOF2_GetInt(file, "Level") > 799 && DOF2_GetInt(file, "Faculdade") > 449 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) paramédico.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 27);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 274);
						DOF2_SetInt(file, "Skin", 274);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 216);
						DOF2_SetInt(file, "Skin", 216);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}800 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}450 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 10)					  // Guarda Costas
			{
				if(DOF2_GetInt(file, "Level") > 399 && DOF2_GetInt(file, "Faculdade") > 119 && DOF2_GetInt(file, "Carteira") == 1)
				{

				SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) guarda costas.");
				SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
				DOF2_SetInt(file, "Profissao", 35);
				if(DOF2_GetInt(file, "Sexo") == Masculino)
				{
					SetPlayerSkin(playerid, 163);
					DOF2_SetInt(file, "Skin", 163);
				}
				if(DOF2_GetInt(file, "Sexo") == Feminino)
				{
					SetPlayerSkin(playerid, 191);
					DOF2_SetInt(file, "Skin", 191);
				}
				Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}400 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}120 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}

			if(listitem == 11)					  // Voltar
			{
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis [BSL]\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
			}
		}
	}

	if(dialogid == Governo)						  // Pública
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // Guarda
			{
				if(DOF2_GetInt(file, "Level") > 189 && DOF2_GetInt(file, "Faculdade") > 89 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) guarda.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 2);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 164);
						DOF2_SetInt(file, "Skin", 164);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 246);
						DOF2_SetInt(file, "Skin", 246);
					}
					Logarprof(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 308.7138, -1859.3555, 3.0668);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}190 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}90 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 1)					  // Polícia Rodoviária
			{
				if(DOF2_GetInt(file, "Level") > 199 && DOF2_GetInt(file, "Faculdade") > 199 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) policial rodoviário(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 3);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 284);
						DOF2_SetInt(file, "Skin", 284);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 298);
						DOF2_SetInt(file, "Skin", 298);
					}
					Logarprof(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}200 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}200 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 2)					  // Polícia Militar
			{
				if(DOF2_GetInt(file, "Level") > 499 && DOF2_GetInt(file, "Faculdade") > 299 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) policial militar.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 4);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 281);
						DOF2_SetInt(file, "Skin", 281);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 246);
						DOF2_SetInt(file, "Skin", 246);
					}
					Logarprof(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}500 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}300 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 3)					  // Polícia Civil
			{
				if(DOF2_GetInt(file, "Level") > 799 && DOF2_GetInt(file, "Faculdade") > 399 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) policial civil.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 5);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 280);
						DOF2_SetInt(file, "Skin", 280);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 246);
						DOF2_SetInt(file, "Skin", 246);
					}
					Logarprof(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}800 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}400 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 4)					  // Polícia Federal
			{
				if(DOF2_GetInt(file, "Level") > 1099 && DOF2_GetInt(file, "Faculdade") > 449 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) policial federal.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 6);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 282);
						DOF2_SetInt(file, "Skin", 282);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 246);
						DOF2_SetInt(file, "Skin", 246);
					}
					Logarprof(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}1100 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}500 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 5)					  // Delegado
			{
				if(DOF2_GetInt(file, "Level") > 1499 && DOF2_GetInt(file, "Faculdade") > 499 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) delegado(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 7);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 266);
						DOF2_SetInt(file, "Skin", 266);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 246);
						DOF2_SetInt(file, "Skin", 246);
					}
					Logarprof(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}1500 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}500 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 6)					  // BOPE
			{
				if(DOF2_GetInt(file, "Level") > 1649 && DOF2_GetInt(file, "Faculdade") > 499 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é do BOPE.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 8);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 265);
						DOF2_SetInt(file, "Skin", 265);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 246);
						DOF2_SetInt(file, "Skin", 246);
					}
					Logarprof(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}1650 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}500 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 7)					  // SWAT
			{
				if(DOF2_GetInt(file, "Level") > 1799 && DOF2_GetInt(file, "Faculdade") > 499 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é da SWAT.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 9);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 285);
						DOF2_SetInt(file, "Skin", 285);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 246);
						DOF2_SetInt(file, "Skin", 246);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}1800 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}500 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 8)					  // Narcóticos
			{
				if(DOF2_GetInt(file, "Level") > 1999 && DOF2_GetInt(file, "Faculdade") > 499 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é da Narcóticos.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 10);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 267);
						DOF2_SetInt(file, "Skin", 267);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 246);
						DOF2_SetInt(file, "Skin", 246);
					}
					Logarprof(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}2000 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}500 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 9)					  // FBI
			{
				if(DOF2_GetInt(file, "Level") > 4999 && DOF2_GetInt(file, "Faculdade") > 499 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é do FBI.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 28);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 286);
						DOF2_SetInt(file, "Skin", 286);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 150);
						DOF2_SetInt(file, "Skin", 150);
					}
					Logarprof(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 1528.0056, -1677.9119, 5.8906);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}5000 de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}500 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 10)					  // Interpol
			{
				if(DOF2_GetInt(file, "Level") > 14999 && DOF2_GetInt(file, "Faculdade") > 499 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é da Interpol.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 31);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 288);
						DOF2_SetInt(file, "Skin", 288);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 141);
						DOF2_SetInt(file, "Skin", 141);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}15000 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}500 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 11)					  // Voltar
			{
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis [BSL]\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
			}
		}
	}

	if(dialogid == Honestas2)					  // Classe Alta
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // Aposentado
			{
				if(DOF2_GetInt(file, "Level") > 599 && DOF2_GetInt(file, "Faculdade") > 149 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) aposentado(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 33);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 182);
						DOF2_SetInt(file, "Skin", 182);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 199);
						DOF2_SetInt(file, "Skin", 199);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}600 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}150 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 1)					  // Advogado
			{
				if(DOF2_GetInt(file, "Level") > 50 && DOF2_GetInt(file, "Faculdade") > 79 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) advogado(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 34);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 186);
						DOF2_SetInt(file, "Skin", 186);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 192);
						DOF2_SetInt(file, "Skin", 192);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {FFFFFF}{9E3EFF}%d{FFFFFF}/{9E3EFF}50 de level,{FFFFFF} {9E3EFF}%d{FFFFFF}/{9E3EFF}80 {FFFFFF}de estudo", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 2)					  // Promotor
			{
				if(DOF2_GetInt(file, "Level") > 599 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) promotor De justiça.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 38);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 120);
						DOF2_SetInt(file, "Skin", 120);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}600 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}100{FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 3)					  // Bibliotecário
			{
				if(DOF2_GetInt(file, "Level") > 599 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) bibliotecário(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 43);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 57);
						DOF2_SetInt(file, "Skin", 57);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 55);
						DOF2_SetInt(file, "Skin", 55);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}600 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}100 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 4)					  // Ator
			{
				if(DOF2_GetInt(file, "Level") > 3999 && DOF2_GetInt(file, "Faculdade") > 499 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Ator.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 49);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 98);
						DOF2_SetInt(file, "Skin", 98);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 93);
						DOF2_SetInt(file, "Skin", 93);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}4000 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}500 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 5)					  // Deputado
			{
				if(DOF2_GetInt(file, "Level") > 3999 && DOF2_GetInt(file, "Faculdade") > 499 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Deputado(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 46);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 113);
						DOF2_SetInt(file, "Skin", 113);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 148);
						DOF2_SetInt(file, "Skin", 148);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}4000 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}500 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 6)					  // Vereador
			{
				if(DOF2_GetInt(file, "Level") > 999 && DOF2_GetInt(file, "Faculdade") > 249 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Vereador(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 47);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 120);
						DOF2_SetInt(file, "Skin", 120);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 141);
						DOF2_SetInt(file, "Skin", 141);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}1000 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}250 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}

			if(listitem == 7)                //jogador de futebol
			{
				if(DOF2_GetInt(file, "Level") > 5599 && DOF2_GetInt(file, "Faculdade") > 399 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Jogador(a) de Futebol).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 50);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 154);
						DOF2_SetInt(file, "Skin", 154);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 150);
						DOF2_SetInt(file, "Skin", 150);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}5600 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}400 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 8)					  // Bombeiro
			{
				if(DOF2_GetInt(file, "Level") > 799 && DOF2_GetInt(file, "Faculdade") > 299 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Bombeiro(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 55);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 59);
						DOF2_SetInt(file, "Skin", 277);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 65);
						DOF2_SetInt(file, "Skin", 278);
					}
					Logarprof(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, -2021.2916,60.8188,29.1030);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}800 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}300 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 9)					  // Voltar
			{
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis [BSL]\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
			}
		}
	}

	if(dialogid == Desonestas)					  // Criminosa
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // Traficante de Armas
			{
				if(DOF2_GetInt(file, "Level") > 299)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um traficante de armas.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 44);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 116);
						DOF2_SetInt(file, "Skin", 116);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 190);
						DOF2_SetInt(file, "Skin", 190);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Você não tem level suficiente, level necessário {9E3EFF}%d{FFFFFF}/{9E3EFF}300.", DOF2_GetInt(file, "Level"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 1)					  // Assasino
			{
				if(DOF2_GetInt(file, "Level") > 249)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um assasino.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 12);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 121);
						DOF2_SetInt(file, "Skin", 121);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 198);
						DOF2_SetInt(file, "Skin", 198);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Você não tem level suficiente, level necessário {9E3EFF}%d{FFFFFF}/{9E3EFF}250.", DOF2_GetInt(file, "Level"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 2)					  // Terrorista
			{
				if(DOF2_GetInt(file, "Level") > 448)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um terrorista.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 13);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 102);
						DOF2_SetInt(file, "Skin", 102);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 245);
						DOF2_SetInt(file, "Skin", 245);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Você não tem level suficiente, level necessário {9E3EFF}%d{FFFFFF}/{9E3EFF}450.", DOF2_GetInt(file, "Level"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}

			if(listitem == 3)					  // Assasino Profissional
			{
				if(DOF2_GetInt(file, "Level") > 99)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um assasino profissional.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 15);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 168);
						DOF2_SetInt(file, "Skin", 168);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 201);
						DOF2_SetInt(file, "Skin", 201);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Você não tem level suficiente, level necessário {9E3EFF}%d{FFFFFF}/{9E3EFF}100.", DOF2_GetInt(file, "Level"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 4)					  // Contrabando
			{
				if(DOF2_GetInt(file, "Level") > 500)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é uma Contrabando.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 37);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 86);
						DOF2_SetInt(file, "Skin", 86);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 13);
						DOF2_SetInt(file, "Skin", 13);
					}
					Logarprof(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 935.2385,2071.5857,10.8203);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Você não tem level suficiente, level necessário {9E3EFF}%d{FFFFFF}/{9E3EFF}500.", DOF2_GetInt(file, "Level"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 5)					  // Assaltante
			{
				if(DOF2_GetInt(file, "Level") > 89)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um assaltante.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 41);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 105);
						DOF2_SetInt(file, "Skin", 105);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 65);
						DOF2_SetInt(file, "Skin", 65);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Você não tem level suficiente, level necessário {9E3EFF}%d{FFFFFF}/{9E3EFF}90.", DOF2_GetInt(file, "Level"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 6)					  // Traficante
			{
				if(DOF2_GetInt(file, "Level") > 174)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um traficante.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 44);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 104);
						DOF2_SetInt(file, "Skin", 104);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 85);
						DOF2_SetInt(file, "Skin", 85);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Você não tem level suficiente, level necessário {9E3EFF}%d{FFFFFF}/{9E3EFF}175.", DOF2_GetInt(file, "Level"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 7)					  // Máfia
			{
				if(DOF2_GetInt(file, "Level") > 599)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é da Máfia.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 64);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 111);
						DOF2_SetInt(file, "Skin", 111);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 91);
						DOF2_SetInt(file, "Skin", 91);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Você não tem level suficiente, level necessário {9E3EFF}%d{FFFFFF}/{9E3EFF}600.", DOF2_GetInt(file, "Level"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 8)					  // Yakuza
			{
				if(DOF2_GetInt(file, "Level") > 1299)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é da Yakuza.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 62);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 294);
						DOF2_SetInt(file, "Skin", 294);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 298);
						DOF2_SetInt(file, "Skin", 298);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Você não tem level suficiente, level necessário {9E3EFF}%d{FFFFFF}/{9E3EFF}1300.", DOF2_GetInt(file, "Level"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 9)					  // Dono do Morro
			{
				if(DOF2_GetInt(file, "Level") > 4999)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é o Dono do Morro.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 75);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 270);
						DOF2_SetInt(file, "Skin", 270);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 190);
						DOF2_SetInt(file, "Skin", 190);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Você não tem level suficiente, level necessário {9E3EFF}%d{FFFFFF}/{9E3EFF}5000.", DOF2_GetInt(file, "Level"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 10)					  // Voltar
			{
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis [BSL]\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
			}
		}
	}

	if(dialogid == industriais)					  // Industriais
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // Maquinista
			{
				if(DOF2_GetInt(file, "Carteira") == 1 && DOF2_GetInt(file, "HabTerrestre") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) maquinista.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 70);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 16);
						DOF2_SetInt(file, "Skin", 16);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 192);
						DOF2_SetInt(file, "Skin", 192);
					}
					Logarprof(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 1697.3809, -1949.3073, 14.1171);
				}
				else
				{
					format(string, sizeof(string), "{FF0000}[ATENÇÃO]{FFFFFF}Você não tem Carteira de motorista tire sua licença na {9E3EFF}/Autoescola.", DOF2_GetInt(file, "Carteira"), DOF2_GetInt(file, "HabTerrestre"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 1)					  // Caminhoneiro
			{
				if(DOF2_GetInt(file, "Level") > 354 && DOF2_GetInt(file, "Carteira") == 1 && DOF2_GetInt(file, "HabTerrestre") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) caminhoneiro.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", Caminhoneiro);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 16);
						DOF2_SetInt(file, "Skin", 16);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 192);
						DOF2_SetInt(file, "Skin", 192);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FF0000}[ATENÇÃO]{FFFFFF}Você não tem Carteira de motorista tire sua licença na {9E3EFF}/Autoescola.", DOF2_GetInt(file, "Carteira"), DOF2_GetInt(file, "HabTerrestre"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 2)					  // Petroleiro
			{
				if(DOF2_GetInt(file, "Level") > 399 && DOF2_GetInt(file, "Carteira") == 1 && DOF2_GetInt(file, "HabTerrestre") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) petroleiro.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", Petroleiro);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 16);
						DOF2_SetInt(file, "Skin", 16);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 192);
						DOF2_SetInt(file, "Skin", 192);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FF0000}[ATENÇÃO]{FFFFFF}Você não tem Carteira de motorista tire sua licença na {9E3EFF}/Autoescola.");
					SendClientMessage(playerid, Vermelho, string);
				}
			}
   			if(listitem == 3)					  // Taxista
			{
				if(DOF2_GetInt(file, "Carteira") == 1 && DOF2_GetInt(file, "HabTerrestre") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) taxista.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 26);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 262);
						DOF2_SetInt(file, "Skin", 262);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 298);
						DOF2_SetInt(file, "Skin", 298);
					}
					Logarprof(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 1758.1934, -1860.5705, 13.5785);
				}
				else
				{
					format(string, sizeof(string), "{FF0000}[ATENÇÃO]{FFFFFF}Você não tem Carteira de motorista tire sua licença na {9E3EFF}/Autoescola.");
					SendClientMessage(playerid, Vermelho, string);
				}
			}

			if(listitem == 4)					  // M Onibus
			{
				if(DOF2_GetInt(file, "Carteira") == 1 && DOF2_GetInt(file, "HabTerrestre") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Motorista de Onibus .");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 36);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 19);
						DOF2_SetInt(file, "Skin", 19);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 63);
						DOF2_SetInt(file, "Skin", 63);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FF0000}[ATENÇÃO]{FFFFFF}Você não tem Carteira de motorista tire sua licença na {9E3EFF}/Autoescola.");
					SendClientMessage(playerid, Vermelho, string);
				}
			}

			if(listitem == 5)					  // cassino
			{
				if(DOF2_GetInt(file, "Carteira") == 1 && DOF2_GetInt(file, "HabTerrestre") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Motorista da Uber.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 24);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 272);
						DOF2_SetInt(file, "Skin", 272);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 263);
						DOF2_SetInt(file, "Skin", 263);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FF0000}[ATENÇÃO]{FFFFFF}Você não tem Carteira de motorista tire sua licença na {9E3EFF}/Autoescola.");
					SendClientMessage(playerid, Vermelho, string);
				}
			}

			if(listitem == 6)					  // Cozinheiro
			 {
				 if(DOF2_GetInt(file, "Level") > 8499 && DOF2_GetInt(file, "Faculdade") > 249)
				 {
					 SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Cozinheiro.");
					 SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					 DOF2_SetInt(file, "Profissao", 91);
					 if(DOF2_GetInt(file, "Sexo") == Masculino)
					 {
						 SetPlayerSkin(playerid, 101);
						 DOF2_SetInt(file, "Skin", 101);
					 }
					 if(DOF2_GetInt(file, "Sexo") == Feminino)
					 {
						 SetPlayerSkin(playerid, 76);
						 DOF2_SetInt(file, "Skin", 76);
					 }
					 Logarprof(playerid);
				 }
				 else
				 {
					 format(string, sizeof(string), "Requer: %d/8500 de level, %d/250 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					 SendClientMessage(playerid, Vermelho, string);
				 }
			 }
			if(listitem == 7)				  // Eletricista
			 {
				 if(DOF2_GetInt(file, "Level") > 8999 && DOF2_GetInt(file, "Faculdade") > 249)
				 {
					 SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Eletricista.");
					 SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
				   	 DOF2_SetInt(file, "Profissao", 92);
					 if(DOF2_GetInt(file, "Sexo") == Masculino)
					 {
						 SetPlayerSkin(playerid, 26);
						 DOF2_SetInt(file, "Skin", 26);
					 }
					 if(DOF2_GetInt(file, "Sexo") == Feminino)
					 {
						 SetPlayerSkin(playerid, 76);
						 DOF2_SetInt(file, "Skin", 76);
					 }
					 Logarprof(playerid);
				 }
				 else
				 {
					 format(string, sizeof(string), "Requer: %d/9000 de level, %d/250 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					 SendClientMessage(playerid, Vermelho, string);
				 }
			 }
			if(listitem == 8)					  // Piloto
			 {
				 if(DOF2_GetInt(file, "Level") > 2899 && DOF2_GetInt(file, "Faculdade") > 249)
				 {
					 SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Piloto.");
					 SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					 DOF2_SetInt(file, "Profissao", 90);
					 if(DOF2_GetInt(file, "Sexo") == Masculino)
					 {
						 SetPlayerSkin(playerid, 61);
						 DOF2_SetInt(file, "Skin", 61);
					 }
					 if(DOF2_GetInt(file, "Sexo") == Feminino)
					 {
						 SetPlayerSkin(playerid, 76);
						 DOF2_SetInt(file, "Skin", 76);
					 }
					 Logarprof(playerid);
				 }
				 else
				 {
					 format(string, sizeof(string), "Requer: %d/8000 de level, %d/250 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					 SendClientMessage(playerid, Vermelho, string);
				 }
			 }
			if(listitem == 9)					  // Voltar
			{
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis [BSL]\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
			}
		}
	}

	if(dialogid == organizadores)				  // Organizadores
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // Professor
			{
				if(DOF2_GetInt(file, "Level") > 5999 && DOF2_GetInt(file, "Faculdade") > 499 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) professor(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 66);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 70);
						DOF2_SetInt(file, "Skin", 70);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 150);
						DOF2_SetInt(file, "Skin", 150);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}6000 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}500 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 1)					  // Empregador
			{
				if(DOF2_GetInt(file, "Level") > 9999 && DOF2_GetInt(file, "Faculdade") > 499 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) empregador(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 67);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 153);
						DOF2_SetInt(file, "Skin", 153);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 172);
						DOF2_SetInt(file, "Skin", 172);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}10000 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}500 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 2)					  // Marines
			{
				if(DOF2_GetInt(file, "Level") > 2999 && DOF2_GetInt(file, "Faculdade") > 299)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é membro da Marines.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 63);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 203);
						DOF2_SetInt(file, "Skin", 203);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 214);
						DOF2_SetInt(file, "Skin", 214);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}3000 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}300 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 3)					  // Drifter King
			{
				if(DOF2_GetInt(file, "Level") > 1199 && DOF2_GetInt(file, "Faculdade") > 289)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Drifter King.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 65);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 299);
						DOF2_SetInt(file, "Skin", 299);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 152);
						DOF2_SetInt(file, "Skin", 152);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}1200 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}290 {FFFFFF}{FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 4)					  // Atirador Elite
			{
				if(DOF2_GetInt(file, "Level") > 2999 && DOF2_GetInt(file, "Faculdade") > 199)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Atirador Elite.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 68);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 271);
						DOF2_SetInt(file, "Skin", 271);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 141);
						DOF2_SetInt(file, "Skin", 141);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}3000 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}200 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 5)					  // Ninja
			{
				if(DOF2_GetInt(file, "Level") > 1999 && DOF2_GetInt(file, "Faculdade") > 299)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Ninja.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 69);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 165);
						DOF2_SetInt(file, "Skin", 165);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 192);
						DOF2_SetInt(file, "Skin", 192);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}2000 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}300 {FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 6)					  // Desembargador
		     {
			     if(DOF2_GetInt(file, "Level") > 29999 && DOF2_GetInt(file, "Faculdade") > 499)
			     {
				     SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um desembargador.");
				     SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
				     DOF2_SetInt(file, "Profissao", 76);
				     if(DOF2_GetInt(file, "Sexo") == Masculino)
				     {
					     SetPlayerSkin(playerid, 171);
					     DOF2_SetInt(file, "Skin", 171);
				     }
				     if(DOF2_GetInt(file, "Sexo") == Feminino)
				     {
					     SetPlayerSkin(playerid, 76);
					     DOF2_SetInt(file, "Skin", 76);
				     }
				     Logarprof(playerid);
			     }
			     else
			     {
				     format(string, sizeof(string), "Requer: %d/10000 de level, %d/50 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
				     SendClientMessage(playerid, Vermelho, string);
			     }
		     }
			if(listitem == 7)					  // Astronauta
		     {
			     if(DOF2_GetInt(file, "Level") > 4499 && DOF2_GetInt(file, "Faculdade") > 249)
			     {
				     SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Astronauta.");
				     SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
				     DOF2_SetInt(file, "Profissao", 77);
				     if(DOF2_GetInt(file, "Sexo") == Masculino)
				     {
					     SetPlayerSkin(playerid, 70);
					     DOF2_SetInt(file, "Skin", 70);
				     }
				     if(DOF2_GetInt(file, "Sexo") == Feminino)
				     {
					     SetPlayerSkin(playerid, 76);
					     DOF2_SetInt(file, "Skin", 76);
				     }
				     Logarprof(playerid);
			     }
			     else
			     {
				     format(string, sizeof(string), "Requer: %d/4500 de level, %d/250 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
				     SendClientMessage(playerid, Vermelho, string);
			     }
		     }
			if(listitem == 8)					  // Ayrton Senna
			{
				if(DOF2_GetInt(file, "Level") > 2199 && DOF2_GetInt(file, "Faculdade") > 289)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é o(a) Ayrton Senna.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: {FFFFFF}/profissao");
					DOF2_SetInt(file, "Profissao", 78);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 114);
						DOF2_SetInt(file, "Skin", 114);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 152);
						DOF2_SetInt(file, "Skin", 152);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "{FFFFFF}Requer: {9E3EFF}%d{FFFFFF}/{9E3EFF}2200 {FFFFFF}de level, {9E3EFF}%d{FFFFFF}/{9E3EFF}290 {FFFFFF}{FFFFFF}de estudo.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 13)					  // Vigilante
			{
				if(DOF2_GetInt(file, "Level") > 2999 && DOF2_GetInt(file, "Faculdade") > 199 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Vigilante.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 123);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 96);
						DOF2_SetInt(file, "Skin", 96);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/3000 de level, %d/200 de estudo. E uma carteira de trabalho", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 10)					  // Torcida Esquadrão Colorado
			{
				if(DOF2_GetInt(file, "Level") > 749 && DOF2_GetInt(file, "Faculdade") > 29 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Torcida Esquadrão Colorado.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 145);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 107);
						DOF2_SetInt(file, "Skin", 107);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/750 de level, %d/30 de estudo. E uma carteira de trabalho", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 11)					  // Agente do Partido Trabalhista - PT
			{
				if(DOF2_GetInt(file, "Level") > 749 && DOF2_GetInt(file, "Faculdade") > 29 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Agente do Partido Trabalhista - PT.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 133);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 108);
						DOF2_SetInt(file, "Skin", 108);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 93);
						DOF2_SetInt(file, "Skin", 93);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/750 de level, %d/30 de estudo. E uma carteira de trabalho", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 12)					  // TTA
			{
				if(DOF2_GetInt(file, "Level") > 749 && DOF2_GetInt(file, "Faculdade") > 29 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Torcida Organizada Trovão Azul.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 134);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 102);
						DOF2_SetInt(file, "Skin", 102);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 93);
						DOF2_SetInt(file, "Skin", 93);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/750 de level, %d/30 de estudo. E uma carteira de trabalho", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 9)					  // Voltar
			{
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis [BSL]\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
			}
		}
	}
	if(dialogid == forcasarmadas)				  // Exército
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // Exercito
			{
				if(DOF2_GetInt(file, "Level") > 399 && DOF2_GetInt(file, "Faculdade") > 399)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é do Exercito.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 29);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 287);
						DOF2_SetInt(file, "Skin", 287);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 191);
						DOF2_SetInt(file, "Skin", 191);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/400 de level, %d/400 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 1)					  // Exercito Militar
			{
				if(DOF2_GetInt(file, "Level") > 1999 && DOF2_GetInt(file, "Faculdade") > 109)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é do Exercito Militar.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 42);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 287);
						DOF2_SetInt(file, "Skin", 287);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/2000 de level, %d/110 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 2)					  // Exercito Aeronáutica
			{
				if(DOF2_GetInt(file, "Level") > 2199 && DOF2_GetInt(file, "Faculdade") > 109)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é do Exercito Aeronáutica.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 45);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 287);
						DOF2_SetInt(file, "Skin", 287);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/2200 de level, %d/110 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 3)					  // Fuzileiro Militar
			{
				if(DOF2_GetInt(file, "Level") > 2399 && DOF2_GetInt(file, "Faculdade") > 119)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é do Fuzileiro Militar.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 48);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 287);
						DOF2_SetInt(file, "Skin", 287);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/2400 de level, %d/120 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 4)					  // General
			{
				if(DOF2_GetInt(file, "Level") > 3399 && DOF2_GetInt(file, "Faculdade") > 139)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é do General.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 121);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 287);
						DOF2_SetInt(file, "Skin", 287);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/3400 de level, %d/140 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 5)					  // Major
			{
				if(DOF2_GetInt(file, "Level") > 3199 && DOF2_GetInt(file, "Faculdade") > 159)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é do Major.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 122);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 287);
						DOF2_SetInt(file, "Skin", 287);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/3200 de level, %d/160 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 6)					  // Marechal
			{
				if(DOF2_GetInt(file, "Level") > 3599 && DOF2_GetInt(file, "Faculdade") > 199)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é do Marechal.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 123);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 287);
						DOF2_SetInt(file, "Skin", 287);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/3600 de level, %d/200 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 7)					  // Tenente
			{
				if(DOF2_GetInt(file, "Level") > 3399 && DOF2_GetInt(file, "Faculdade") > 199)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é do Tenente.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 124);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 287);
						DOF2_SetInt(file, "Skin", 287);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/3400 de level, %d/200 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 8)					  // Voltar
			{
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis [BSL]\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
	        }
		}
	}

	if(dialogid == Avancada)				  // Extrema
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
             if(listitem == 0)					  // Cientista
			 {
				 if(DOF2_GetInt(file, "Level") > 4999 && DOF2_GetInt(file, "Faculdade") > 249)
				 {
					 SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Cientista.");
					 SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					 DOF2_SetInt(file, "Profissao", 125);
					 if(DOF2_GetInt(file, "Sexo") == Masculino)
					 {
						 SetPlayerSkin(playerid, 70);
						 DOF2_SetInt(file, "Skin", 70);
					 }
					 if(DOF2_GetInt(file, "Sexo") == Feminino)
					 {
						 SetPlayerSkin(playerid, 76);
						 DOF2_SetInt(file, "Skin", 76);
					 }
					 Logarprof(playerid);
				 }
				 else
				 {
					 format(string, sizeof(string), "Requer: %d/5000 de level, %d/250 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					 SendClientMessage(playerid, Vermelho, string);
				 }
			 }
		     if(listitem == 1)					  // Astronauta
		     {
			     if(DOF2_GetInt(file, "Level") > 5499 && DOF2_GetInt(file, "Faculdade") > 249)
			     {
				     SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Astronauta.");
				     SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
				     DOF2_SetInt(file, "Profissao", 126);
				     if(DOF2_GetInt(file, "Sexo") == Masculino)
				     {
					     SetPlayerSkin(playerid, 70);
					     DOF2_SetInt(file, "Skin", 70);
				     }
				     if(DOF2_GetInt(file, "Sexo") == Feminino)
				     {
					     SetPlayerSkin(playerid, 76);
					     DOF2_SetInt(file, "Skin", 76);
				     }
				     Logarprof(playerid);
			     }
			     else
			     {
				     format(string, sizeof(string), "Requer: %d/5500 de level, %d/250 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
				     SendClientMessage(playerid, Vermelho, string);
			     }
		     }
		     if(listitem == 2)					  // Mercenario
		     {
			     if(DOF2_GetInt(file, "Level") > 6999 && DOF2_GetInt(file, "Faculdade") > 249)
			     {
				     SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Mercenario.");
				     SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
				     DOF2_SetInt(file, "Profissao", 127);
				     if(DOF2_GetInt(file, "Sexo") == Masculino)
				     {
					     SetPlayerSkin(playerid, 29);
					     DOF2_SetInt(file, "Skin", 29);
				     }
				     if(DOF2_GetInt(file, "Sexo") == Feminino)
				     {
					     SetPlayerSkin(playerid, 76);
					     DOF2_SetInt(file, "Skin", 76);
				     }
				     Logarprof(playerid);
			      }
		          else
		          {
				     format(string, sizeof(string), "Requer: %d/7000 de level, %d/250 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
				     SendClientMessage(playerid, Vermelho, string);
			      }
		     }
			 if(listitem == 3)					  // Governador
			 {
				 if(DOF2_GetInt(file, "Level") > 6499 && DOF2_GetInt(file, "Faculdade") > 249)
				 {
					 SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Governador.");
					 SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					 DOF2_SetInt(file, "Profissao", 128);
					 if(DOF2_GetInt(file, "Sexo") == Masculino)
					 {
						 SetPlayerSkin(playerid, 113);
						 DOF2_SetInt(file, "Skin", 133);
					 }
					 if(DOF2_GetInt(file, "Sexo") == Feminino)
					 {
						 SetPlayerSkin(playerid, 76);
						 DOF2_SetInt(file, "Skin", 76);
					 }
					 Logarprof(playerid);
				 }
				 else
				 {
					 format(string, sizeof(string), "Requer: %d/6500 de level, %d/250 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					 SendClientMessage(playerid, Vermelho, string);
				 }
			 }
			 if(listitem == 4)					  // Hacker
			 {
				 if(DOF2_GetInt(file, "Level") > 999 && DOF2_GetInt(file, "Faculdade") > 499)
				 {
					 SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Hacker");
					 SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					 DOF2_SetInt(file, "Profissao", 118);
					 if(DOF2_GetInt(file, "Sexo") == Masculino)
					 {
						 SetPlayerSkin(playerid, 29);
						 DOF2_SetInt(file, "Skin", 29);
					 }
					 if(DOF2_GetInt(file, "Sexo") == Feminino)
					 {
						 SetPlayerSkin(playerid, 91);
						 DOF2_SetInt(file, "Skin", 91);
					 }
					 Logarprof(playerid);
				 }
				 else
				 {
					 format(string, sizeof(string), "Requer: %d/1000 de level, %d/500 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					 SendClientMessage(playerid, Vermelho, string);
				 }
			 }
			 if(listitem == 5)					  // Motoqueiro Fantasma
			 {
				 if(DOF2_GetInt(file, "Level") > 399 && DOF2_GetInt(file, "Faculdade") > 79)
				 {
					 SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Motoqueiro Fantasma");
					 SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					 DOF2_SetInt(file, "Profissao", 96);
					 if(DOF2_GetInt(file, "Sexo") == Masculino)
					 {
						 SetPlayerSkin(playerid, 29);
						 DOF2_SetInt(file, "Skin", 29);
					 }
					 if(DOF2_GetInt(file, "Sexo") == Feminino)
					 {
						 SetPlayerSkin(playerid, 91);
						 DOF2_SetInt(file, "Skin", 91);
					 }
					 Logarprof(playerid);
				 }
				 else
				 {
					 format(string, sizeof(string), "Requer: %d/400 de level, %d/80 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					 SendClientMessage(playerid, Vermelho, string);
				 }
			 }
			 if(listitem == 6)					  //  Saiyajin
			 {
				 if(DOF2_GetInt(file, "Level") > 399 && DOF2_GetInt(file, "Faculdade") > 79)
				 {
					 SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Saiyajin");
					 SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					 DOF2_SetInt(file, "Profissao", 130);
					 if(DOF2_GetInt(file, "Sexo") == Masculino)
					 {
						 SetPlayerSkin(playerid, 29);
						 DOF2_SetInt(file, "Skin", 29);
					 }
					 if(DOF2_GetInt(file, "Sexo") == Feminino)
					 {
						 SetPlayerSkin(playerid, 91);
						 DOF2_SetInt(file, "Skin", 91);
					 }
					 Logarprof(playerid);
				 }
				 else
				 {
					 format(string, sizeof(string), "Requer: %d/400 de level, %d/80 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					 SendClientMessage(playerid, Vermelho, string);
				 }
			 }
			 if(listitem == 7)					  //  Coveiro
			 {
				 if(DOF2_GetInt(file, "Level") > 99 && DOF2_GetInt(file, "Faculdade") > 9)
				 {
					 SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Coveiro");
					 SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					 DOF2_SetInt(file, "Profissao", 132);
					 if(DOF2_GetInt(file, "Sexo") == Masculino)
					 {
						 SetPlayerSkin(playerid, 29);
						 DOF2_SetInt(file, "Skin", 29);
					 }
					 if(DOF2_GetInt(file, "Sexo") == Feminino)
					 {
						 SetPlayerSkin(playerid, 91);
						 DOF2_SetInt(file, "Skin", 91);
					 }
					 Logarprof(playerid);
				 }
				 else
				 {
					 format(string, sizeof(string), "Requer: %d/100 de level, %d/10 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					 SendClientMessage(playerid, Vermelho, string);
				 }
			 }
			 if(listitem == 8)					  // Voltar
			 {
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis [BSL]\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
			 }
		 }
	}
	if(dialogid == torcidas)					  // Torcidas
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // Atletico Goianiense
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Atletico Goianiense.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 97);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 19);
						DOF2_SetInt(file, "Skin", 19);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 55);
						DOF2_SetInt(file, "Skin", 55);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 1)					  // Atletico Mineiro
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Atletico Mineiro.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 98);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 43);
						DOF2_SetInt(file, "Skin", 43);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 55);
						DOF2_SetInt(file, "Skin", 55);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 2)					  // Atletico Paranaense
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Atletico Paranaense.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 99);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 19);
						DOF2_SetInt(file, "Skin", 19);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 40);
						DOF2_SetInt(file, "Skin", 40);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 3)					  // Avaí
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Avaí.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 100);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 48);
						DOF2_SetInt(file, "Skin", 48);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 41);
						DOF2_SetInt(file, "Skin", 41);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 4)					  // Bahia
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Bahia.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 101);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 48);
						DOF2_SetInt(file, "Skin", 48);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 41);
						DOF2_SetInt(file, "Skin", 41);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 5)					  // Botafogo
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Botafogo.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 102);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 43);
						DOF2_SetInt(file, "Skin", 43);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 6)					  // Chapecoense
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor da Chapecoense.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 103);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 45);
						DOF2_SetInt(file, "Skin", 45);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 56);
						DOF2_SetInt(file, "Skin", 56);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 7)					  // Corinthians
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Corinthians.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 104);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 103);
						DOF2_SetInt(file, "Skin", 103);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 65);
						DOF2_SetInt(file, "Skin", 65);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 8)					  // Coritiba
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Coritiba.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 105);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 45);
						DOF2_SetInt(file, "Skin", 45);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 56);
						DOF2_SetInt(file, "Skin", 56);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 9)					  // Cruzeiro
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Cruzeiro.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 106);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 177);
						DOF2_SetInt(file, "Skin", 177);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 150);
						DOF2_SetInt(file, "Skin", 150);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 10)					  // Voltar
			{
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis [BSL]\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
			}
		}
	}
	if(dialogid == torcidas2)					  // Torcidas2
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // Flamengo
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Flamengo.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 107);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 19);
						DOF2_SetInt(file, "Skin", 19);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 140);
						DOF2_SetInt(file, "Skin", 140);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 1)					  // Fluminense
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Fluminense.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 108);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 47);
						DOF2_SetInt(file, "Skin", 47);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 56);
						DOF2_SetInt(file, "Skin", 56);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 2)					  // Gremio
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Gremio.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 109);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 48);
						DOF2_SetInt(file, "Skin", 48);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 41);
						DOF2_SetInt(file, "Skin", 41);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 3)					  // Internacional
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Internacional.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 110);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 48);
						DOF2_SetInt(file, "Skin", 48);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 41);
						DOF2_SetInt(file, "Skin", 41);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 4)					  // Palmeiras
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Palmeiras.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 111);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 45);
						DOF2_SetInt(file, "Skin", 45);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 56);
						DOF2_SetInt(file, "Skin", 56);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 5)					  // Ponte Preta
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor da Ponte Preta.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 112);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 43);
						DOF2_SetInt(file, "Skin", 43);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 55);
						DOF2_SetInt(file, "Skin", 55);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 6)					  // Santos
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Santos.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 113);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 29);
						DOF2_SetInt(file, "Skin", 29);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 216);
						DOF2_SetInt(file, "Skin", 216);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 7)					  // Sao Paulo
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Sao Paulo.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 114);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 19);
						DOF2_SetInt(file, "Skin", 19);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 193);
						DOF2_SetInt(file, "Skin", 193);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 8)					  // Sport
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Sport.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 115);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 189);
						DOF2_SetInt(file, "Skin", 189);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 190);
						DOF2_SetInt(file, "Skin", 190);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 9)					  // Vitoria
			{
				if(DOF2_GetInt(file, "Level") > 149 && DOF2_GetInt(file, "Faculdade") > 59)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Torcedor do Vitoria.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 116);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 170);
						DOF2_SetInt(file, "Skin", 170);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 140);
						DOF2_SetInt(file, "Skin", 140);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/150 de level, %d/60 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 10)					  // Voltar
			{
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis [BSL]\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
			}
		}
	}
	if(dialogid == nova)				          // Classe Nova
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // Mestre de Obras
			{
				if(DOF2_GetInt(file, "Level") > 3499 && DOF2_GetInt(file, "Faculdade") > 399 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Mestre de Obras.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 139);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 94);
						DOF2_SetInt(file, "Skin", 94);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 191);
						DOF2_SetInt(file, "Skin", 191);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/3500 de level, %d/400 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
            if(listitem == 1)					  // Cafetão
			{
				if(DOF2_GetInt(file, "Level") > 1999 && DOF2_GetInt(file, "Faculdade") > 109 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Cafetão(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 140);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 101);
						DOF2_SetInt(file, "Skin", 101);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/2000 de level, %d/110 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 2)					  // Governador de Los Santos
			{
				if(DOF2_GetInt(file, "Level") > 4999 && DOF2_GetInt(file, "Faculdade") > 109 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é o Governador(a) de LS.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 141);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 115);
						DOF2_SetInt(file, "Skin", 115);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/5000 de level, %d/110 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 3)					  // Gringo
			{
				if(DOF2_GetInt(file, "Level") > 2399 && DOF2_GetInt(file, "Faculdade") > 119 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Gringo(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 142);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 94);
						DOF2_SetInt(file, "Skin", 94);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 191);
						DOF2_SetInt(file, "Skin", 191);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/2400 de level, %d/120 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 4)					  // Juiz
			{
				if(DOF2_GetInt(file, "Level") > 7399 && DOF2_GetInt(file, "Faculdade") > 109 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Juiz(a).");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 143);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 101);
						DOF2_SetInt(file, "Skin", 101);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/7400 de level, %d/110 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 5)					  // Jogador de SAMP
			{
				if(DOF2_GetInt(file, "Level") > 5999 && DOF2_GetInt(file, "Faculdade") > 109 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Jogador(a) de SAMP.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 144);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 115);
						DOF2_SetInt(file, "Skin", 115);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/6000 de level, %d/110 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 6)					  // Jogador de Minecraft
			{
				if(DOF2_GetInt(file, "Level") > 4999 && DOF2_GetInt(file, "Faculdade") > 139 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um(a) Jogador de Minecraft.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 146);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 96);
						DOF2_SetInt(file, "Skin", 96);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/5000 de level, %d/140 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 8)					  // Papai Noel
			{
				if(DOF2_GetInt(file, "Level") > 299 && DOF2_GetInt(file, "Faculdade") > 9 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Papai Noel.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 179);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 5);
						DOF2_SetInt(file, "Skin", 5);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 191);
						DOF2_SetInt(file, "Skin", 191);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/300 de level, %d/10 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 7)					  // Marido
			{
				if(DOF2_GetInt(file, "Level") > 3399 && DOF2_GetInt(file, "Faculdade") > 199 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Marido de Aluguel.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 158);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 94);
						DOF2_SetInt(file, "Skin", 94);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/3400 de level, %d/200 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 9)					  // Voltar
			{
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis [BSL]\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
		    }
		}
	}
	if(dialogid == herois)				          // Heróis
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // Capitão América
			{
				if(DOF2_GetInt(file, "Level") > 399 && DOF2_GetInt(file, "Faculdade") > 399 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é o Capitão América.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 147);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 94);
						DOF2_SetInt(file, "Skin", 94);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 191);
						DOF2_SetInt(file, "Skin", 191);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/400 de level, %d/400 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
            if(listitem == 1)					  // Robin Wood
			{
				if(DOF2_GetInt(file, "Level") > 1999 && DOF2_GetInt(file, "Faculdade") > 109 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é o Robin Wood.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 148);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 101);
						DOF2_SetInt(file, "Skin", 101);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/2000 de level, %d/110 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 2)					  // Lanterna Verde
			{
				if(DOF2_GetInt(file, "Level") > 2199 && DOF2_GetInt(file, "Faculdade") > 109 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é o Lanterna Verde.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 149);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 115);
						DOF2_SetInt(file, "Skin", 115);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/2200 de level, %d/110 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 3)					  // Batman
			{
				if(DOF2_GetInt(file, "Level") > 399 && DOF2_GetInt(file, "Faculdade") > 399 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é o Batman.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 150);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 94);
						DOF2_SetInt(file, "Skin", 94);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 191);
						DOF2_SetInt(file, "Skin", 191);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/400 de level, %d/400 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 4)					  // Flash
			{
				if(DOF2_GetInt(file, "Level") > 1999 && DOF2_GetInt(file, "Faculdade") > 109 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é o Flash.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 151);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 101);
						DOF2_SetInt(file, "Skin", 101);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/2000 de level, %d/110 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 5)					  // Thor
			{
				if(DOF2_GetInt(file, "Level") > 2199 && DOF2_GetInt(file, "Faculdade") > 109 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é o Thor.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 153);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 115);
						DOF2_SetInt(file, "Skin", 115);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/2200 de level, %d/110 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 6)					  // Mascara
			{
				if(DOF2_GetInt(file, "Level") > 2399 && DOF2_GetInt(file, "Faculdade") > 119 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é o Mascará.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 152);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/2400 de level, %d/120 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 7)					  // Ben10
			{
				if(DOF2_GetInt(file, "Level") > 3399 && DOF2_GetInt(file, "Faculdade") > 139 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é o Ben10.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 154);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 96);
						DOF2_SetInt(file, "Skin", 96);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/3400 de level, %d/140 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 8)					  // Patata
			{
				if(DOF2_GetInt(file, "Level") > 3199 && DOF2_GetInt(file, "Faculdade") > 159 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é o Patatá.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 155);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 112);
						DOF2_SetInt(file, "Skin", 112);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/3200 de level, %d/160 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 10)					  // Hulk
			{
				if(DOF2_GetInt(file, "Level") > 3599 && DOF2_GetInt(file, "Faculdade") > 199 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é o Incrivél Hulk.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 156);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/3600 de level, %d/200 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 9)					  // Wolverine
			{
				if(DOF2_GetInt(file, "Level") > 3399 && DOF2_GetInt(file, "Faculdade") > 199 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é o Wolverine.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 157);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 94);
						DOF2_SetInt(file, "Skin", 94);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 76);
						DOF2_SetInt(file, "Skin", 76);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/3400 de level, %d/200 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 11)					  // Voltar
			{
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis [BSL]\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
			}
		}
	}
	if(dialogid == extrema)				          // Extrema
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		if(response == 1)
		{
			if(listitem == 0)					  // Engenheiro
			{
				if(DOF2_GetInt(file, "Level") > 18999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Engenheiro Ambiental.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 162);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/19000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 1)					  // Acessor
			{
				if(DOF2_GetInt(file, "Level") > 27999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Acessor Jurídico.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 163);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/28000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 2)					  // Empresarial
			{
				if(DOF2_GetInt(file, "Level") > 36999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Advogado Empresarial.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 164);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/37000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 3)					  // Diretor
			{
				if(DOF2_GetInt(file, "Level") > 21999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Diretor de Recursos Humanos.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 165);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/22000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 4)					  // Analista de Sistemas
			{
				if(DOF2_GetInt(file, "Level") > 10999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Analista de Sistemas.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 166);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/11000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 5)					  // Gerente
			{
				if(DOF2_GetInt(file, "Level") > 15999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Gerente de Atendimento.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 167);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/16000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 6)					  // Analista de Marketing
			{
				if(DOF2_GetInt(file, "Level") > 24999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Analista de Marketing.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 168);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/25000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 7)					  // Diretor Comercial
			{
				if(DOF2_GetInt(file, "Level") > 18999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Diretor Comercial.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 169);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/19000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 8)					  // Voltar
			{
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis [BSL]\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
			}
        }
	}
	if(dialogid == extrema2)				          // Extrema II
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
		if(response == 1)
		{
			if(listitem == 0)					  // Consultor
			{
				if(DOF2_GetInt(file, "Level") > 14999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Consultor Financeiro.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 170);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/15000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 1)					  // Supervisor
			{
				if(DOF2_GetInt(file, "Level") > 19999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Supervisor Administrativo.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 171);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/20000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 2)					  // bancário
			{
				if(DOF2_GetInt(file, "Level") > 36999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Bancário.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 172);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/37000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 3)					  // Crackudo
			{
				if(DOF2_GetInt(file, "Level") > 9999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Crackudo.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 173);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/10000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 4)					  // Comandante  14k
			{
				if(DOF2_GetInt(file, "Level") > 13999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Comandante da Crackolândia.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 174);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/14000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 5)					  // Mente
			{
				if(DOF2_GetInt(file, "Level") > 20999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é uma Mente Criminosa.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 175);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/21000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 6)					  // Vigilante Sanitário
			{
				if(DOF2_GetInt(file, "Level") > 16999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Vigilante Sanitário.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 176);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/17000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 7)					  // Médico
			{
				if(DOF2_GetInt(file, "Level") > 26999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Médico VIP.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 177);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/27000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 8)					  // Corretor
			{
				if(DOF2_GetInt(file, "Level") > 35999 && DOF2_GetInt(file, "Faculdade") > 99 && DOF2_GetInt(file, "Carteira") == 1)
				{
					SendClientMessage(playerid, 0x6C6C6CAA, "Profissão alterada com sucesso, agora você é um Corretor Imobiliário.");
					SendClientMessage(playerid, 0x6C6C6CAA, "Veja os comandos de sua profissão, digite: /profissao");
					DOF2_SetInt(file, "Profissao", 178);
					if(DOF2_GetInt(file, "Sexo") == Masculino)
					{
						SetPlayerSkin(playerid, 147);
						DOF2_SetInt(file, "Skin", 147);
					}
					if(DOF2_GetInt(file, "Sexo") == Feminino)
					{
						SetPlayerSkin(playerid, 12);
						DOF2_SetInt(file, "Skin", 12);
					}
					Logarprof(playerid);
				}
				else
				{
					format(string, sizeof(string), "Requer: %d/36000 de level, %d/100 de estudo. E uma carteira de trabalho.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);
				}
			}
			if(listitem == 9)					  // Voltar
			{
				ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis [BSL]\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
			}
		}
	}

	if(dialogid == skins)
	{
		if(response == 1)
		{
			if(!VBIsNumeric(inputtext))
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
				return 1;
			}
			if(StrToInt(inputtext) >= 0 && StrToInt(inputtext) < 299)
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(GetPlayerGrana(playerid) > 49)
				{
					GivePlayerGrana(playerid, -50);
					DOF2_SetString(file, "Skin", inputtext);
					SetPlayerSkin(playerid, DOF2_GetInt(file, "Skin"));

					SendClientMessage(playerid, 0x6495EDAA, "Você comprou uma nova roupa com sucesso!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro para comprar uma roupa.");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "ID fora do normal! - ID's = 0-299");
			}
		}
	}
			//bebidas
	if(dialogid == beber)
	{
	     if(response == 1)
	     {
					if(listitem == 0)
                    {
                            SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você tomou um chimarrão!");
                            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
                    }
                    if(listitem == 1)
                    {
                            SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você tomou uma cachaça!");
                            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
                    }
                    if(listitem == 2)
                    {
                            SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você tomou uma pinga!");
                            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
                    }
                    if(listitem == 3)
                    {
                            SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você tomou uma cerveja!");
                            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
                    }
                    if(listitem == 4)
                    {
                            SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você tomou uma caipirinha!");
                            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
                    }
                    if(listitem == 5)
                    {
                            SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você tomou uma batida de limão!");
                            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
                    }
                    if(listitem == 6)
                    {
                            SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você tomou uma batida de morango!");
                            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
                    }
                    if(listitem == 7)
                    {
                            SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você tomou uma batida de maracujá!");
                            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
                    }
                    if(listitem == 8)
                    {
                            SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você tomou um vinho!");
                            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
                    }
                    if(listitem == 9)
                    {
                            SendClientMessage(playerid, Vermelho,  "Você tomou um refrigerante!");
                            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
                    }
                    if(listitem == 10)
                    {
                            SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você tomou uma água!");
                            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
                    }
		}
	}

	if(dialogid == DP)							  // Menu
	{
		if(response == 1)
		{
			new aname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, aname, sizeof(aname));
			format(file, sizeof(file), PASTA_CONTAS, aname);

			if(listitem == 0)					  // Limpar ficha
			{
				if(GetPlayerGrana(playerid) > 999)
				{
					GivePlayerGrana(playerid, -1000);
					SetPlayerWantedLevel(playerid, 0);

					DOF2_SetInt(file, "Procurado", 0);
					Procurados[playerid] = 0;

					ShowPlayerDialog(playerid, DP, DIALOG_STYLE_LIST, "Delegacia", STRD_DP, "Comprar", "Cancelar");
					SendClientMessage(playerid, Blue, "Você Retirou seu Mandato de Prisão e não será mais procurado pelos Nosso Policiais.");
					format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}limpou a ficha na {ffffff}/dp.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(-1, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 1)					  // Porte Armas
			{
				if(GetPlayerGrana(playerid) > 4999)
				{
					GivePlayerGrana(playerid, -5000);
					DOF2_SetInt(file, "Porte", 1);

					ShowPlayerDialog(playerid, DP, DIALOG_STYLE_LIST, "Delegacia", STRD_DP, "Comprar", "Cancelar");
					SendClientMessage(playerid, Blue, "Você adq porte de armas.");
					format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}comprou porte de armas na {ffffff}/dp.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(-1, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem dinheiro suficiente.");
              }
           }
		}
	}

	if(dialogid == DETRAN)							  // Menu
	{
		if(response == 1)
		{
			new aname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, aname, sizeof(aname));
			format(file, sizeof(file), PASTA_CONTAS, aname);
            if(listitem == 0)					  // Terrestre
			{
				if(DOF2_GetInt(file, "HabTerrestre") == 1)
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você Já Tem Carteira Terrestre.");
				}
				else
				{
					if(GetPlayerGrana(playerid) > 299)
					{
						GivePlayerGrana(playerid, -300);
						SendClientMessage(playerid, Blue, "{FFFF00}[{ffffff}Atenção{ffff00} {ffffff}Neste momento você inicia o teste da Auto-Escola.");
						ShowPlayerDialog(playerid, pergunta1, DIALOG_STYLE_MSGBOX, "Pergunta 1", "{00D700}Ao perceber que será ultrapassado, o condutor deve:", "Acelerar", "Reduzir");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem dinheiro suficiente.");
					}
				}
			}
			if(listitem == 1)					  // Aérea
			{
				if(GetPlayerGrana(playerid) > 2999)
				{
					GivePlayerGrana(playerid, -3000);
					SendClientMessage(playerid, Blue, "[INFO] Você conseguiu habilitação aérea.");
					DOF2_SetInt(file, "HabAerea", 1);
					format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}conseguiu habilitação aérea na{ffffff} /autoescola.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(-1, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 2)					  // Náutica
			{
			if(GetPlayerGrana(playerid) > 799)
				{
					GivePlayerGrana(playerid, -800);
					SendClientMessage(playerid, Blue, "[INFO] Você conseguiu habilitação náutica.");
					DOF2_SetInt(file, "HabNautica", 1);
					format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}conseguiu habilitação náutica na{ffffff} /autoescola.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(-1, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem dinheiro suficiente.");
				}
			}
		}
	}

	if(dialogid == CARTORIO) // Menu                                 ANTIGO CODE ANTES DE OTIMIZAR POR MEGALINDO
	{
		if(response == 1)
		{
			new aname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, aname, sizeof(aname));
			format(file, sizeof(file), PASTA_CONTAS, aname);
			if(listitem == 0)     // licença casamento
			{
			if(permitido[playerid] == 1)
			{
                SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você já possui Licença de casamento");
                return 1;
			}
			if(GetPlayerGrana(playerid) > 999)
			{
                GivePlayerGrana(playerid, -1000);
			    permitido[playerid] = 1;
                DOF2_SetInt(file2, "permitido", 1);
			    ShowPlayerDialog(playerid, CARTORIO, DIALOG_STYLE_LIST, "Cartorio", STRD_CART, "Comprar", "Cancelar");
			    SendClientMessage(playerid, Blue, "Você conseguiu comprar uma permição de casamento");
			    }
			    else
			    {
				    SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem dinheiro suficiente.");
			    }
			}
			if(listitem == 1)    // licença de divorcio
			{
			    if(permitidodivorcio[playerid] == 1)
			    {
			        SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você já possui Licença de Divorcio");
			        return 1;
			    }
			    if(GetPlayerGrana(playerid) > 499)
			    {
                    GivePlayerGrana(playerid, -500);
			        permitidodivorcio[playerid] = 1;
                    DOF2_SetInt(file2, "permitidodivorcio", 1);
			        ShowPlayerDialog(playerid, CARTORIO, DIALOG_STYLE_LIST, "Cartorio", STRD_CART, "Comprar", "Cancelar");
			        SendClientMessage(playerid, Blue, "Você conseguiu comprar uma permição de divorcio");
			    }
				else
				{
				    SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 2)					  // Carteira de Trabalho
			{
				if(GetPlayerGrana(playerid) > 149)
				{
					GivePlayerGrana(playerid, -150);
					DOF2_SetInt(file, "Carteira", 1);

					ShowPlayerDialog(playerid, CARTORIO, DIALOG_STYLE_LIST, "Cartorio", STRD_CART, "Comprar", "Cancelar");
					SendClientMessage(playerid, Blue, "Você assinou uma carteira de trabalho, vá até a prefeitura.");
					format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}assinou uma carteira de trabalho no{ffffff} /cartorio.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(-1, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem dinheiro suficiente.");
				}
			}
		}
	} 



	if(dialogid == lojautilidades)				  // Menu
	{
		if(response == 1)
		{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(listitem == 0)					  // Celular $1000
			{
				if(GetPlayerGrana(playerid) > 999)
				{
					GivePlayerGrana(playerid, -1000);
					DOF2_SetInt(file, "Celular", 1);

					ShowPlayerDialog(playerid, lojautilidades, DIALOG_STYLE_LIST, "Loja", STRD_UTILIDADES, "Comprar", "Cancelar");
					SendClientMessage(playerid, Blue, "Você comprou um Celular use /comandoscelular");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 1)					  // Cartão telefônico $10
			{
				if(GetPlayerGrana(playerid) > 4999)
				{
					GivePlayerGrana(playerid, -5000);
					DOF2_SetInt(file, "CartaoTelefonico", 1);

					ShowPlayerDialog(playerid, lojautilidades, DIALOG_STYLE_LIST, "Loja", STRD_UTILIDADES, "Comprar", "Cancelar");
					SendClientMessage(playerid, Blue, "Você comprou um Kit de Missil /imissil");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 2)					  // MP3 $1000
			{
				if(GetPlayerGrana(playerid) > 999)
				{
					GivePlayerGrana(playerid, -1000);
					DOF2_SetInt(file, "MP3", 1);

					ShowPlayerDialog(playerid, lojautilidades, DIALOG_STYLE_LIST, "Loja", STRD_UTILIDADES, "Comprar", "Cancelar");
					SendClientMessage(playerid, Blue, "Você comprou um MP3 use /comandosmp3");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 3)					  // Bloco de Lembretes
			{
				if(GetPlayerGrana(playerid) > 4)
				{
					GivePlayerGrana(playerid, -5);
					DOF2_SetInt(file, "Bloco", 1);
					DOF2_SetString(file, "Lembrete", "Nada");

					ShowPlayerDialog(playerid, lojautilidades, DIALOG_STYLE_LIST, "Loja", STRD_UTILIDADES, "Comprar", "Cancelar");
					SendClientMessage(playerid, Blue, "Você comprou um Bloco de Lembretes use /lembrete [texto]");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 4)					  // Mira Laser $500
			{
				#if defined LaserUser
				if(GetPlayerGrana(playerid) > 499)
				{
					GivePlayerGrana(playerid, -500);
					DOF2_SetInt(file, "LaserP", 1);

					ShowPlayerDialog(playerid, lojautilidades, DIALOG_STYLE_LIST, "Loja", STRD_UTILIDADES, "Comprar", "Cancelar");
					SendClientMessage(playerid, Blue, "Você comprou uma Mira Laser use /comandoslaser");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
				#else
				SendClientMessage(playerid, Blue, "Temporariamente indisponível!");
				#endif
			}
			if(listitem == 5)					  // Capacete $1000
			{
				#if defined CapaceteUser
				if(GetPlayerGrana(playerid) > 999)
				{
					GivePlayerGrana(playerid, -1000);
					DOF2_SetInt(file, "TCapacete", 1);

					ShowPlayerDialog(playerid, lojautilidades, DIALOG_STYLE_LIST, "Loja", STRD_UTILIDADES, "Comprar", "Cancelar");
					SendClientMessage(playerid, Blue, "Você comprou um Capacete faça um bom aproveito.");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
				#else
				SendClientMessage(playerid, Blue, "Temporariamente indisponível!");
				#endif
			}
			if(listitem == 6)					  // Anti H.S $1000
			{
				if(GetPlayerGrana(playerid) > 999)
				{
					GivePlayerGrana(playerid, -1000);
                    DOF2_SetInt(file, "Concerto", 1);
					ShowPlayerDialog(playerid, lojautilidades, DIALOG_STYLE_LIST, "Loja", STRD_UTILIDADES, "Comprar", "Cancelar");
					SendClientMessage(playerid, Blue, "Você comprou um Kit de ferramentas para reparar carros use /concertar");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
			if(listitem == 7)					  // MP3 $1000
			{
				if(GetPlayerGrana(playerid) > 49)
				{
					GivePlayerGrana(playerid, -50);
                    SetPlayerHealth(playerid, 100);
					ShowPlayerDialog(playerid, lojautilidades, DIALOG_STYLE_LIST, "Loja", STRD_UTILIDADES, "Comprar", "Cancelar");
					SendClientMessage(playerid, Blue, "Você comprou um Hamburger e recuperou o HP");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não tem dinheiro suficiente.");
				}
			}
		}
	}

	if(dialogid == mp3)							  // Menu
	{
		if(response == 1)
		{
			if(listitem == 0)					  // Música 1
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/c5321r53yw8pp3o/Skillet%20-%20Hero%20%28Official%20Video%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp3, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
			}
			if(listitem == 1)					  // Música 2
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/yh5avtbq05dxzya/One%20Day.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp3, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
			}
			if(listitem == 2)					  // Música 3
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/qzmvd9f024gwkqf/02%20-%20Monster.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp3, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
			}
			if(listitem == 3)					  // Música 4
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/kyqei96egakh6f5/My%20Demons%20-%20Starset%20%28lyrics%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp3, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
			}
			if(listitem == 4)					  // Música 5
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/kpp5gth9ra97gkz/irineu.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp3, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
			}
			if(listitem == 5)					  // Música 6
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/97eyzcdfhnm8dng/20Foot%20Krutch%20-%20Courtesy%20Call%20%28Lyrics%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp3, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
			}
			if(listitem == 6)					  // Música 7
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/fkivcbvjuqvwxhb/Remember%20We%20Die%20-%20Gemini%20Syndrome%20%28lyrics%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp3, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
			}
			if(listitem == 7)					  // Música 8
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/5k4it4lgr297zmy/20Foot%20Krutch%20-%20E%20for%20Extinction%20%5BLYRICS%5D%20%5BHD%5D.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp3, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
			}
			if(listitem == 8)					  // Música 9
			{

				PlayAudioStreamForPlayer(playerid, "http://dl.dropboxusercontent.com/s/b00xzkyl2eebiow/007.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp3, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
            }
			if(listitem == 9)				     // Música 10
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/dimj2283o786j3l/war.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp3, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
            }
			if(listitem == 10)				     // Música 11
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/yykjw0rl9h43lkp/again.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp3, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
			}
			if(listitem == 11)				     // Música 12
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/t1dzwdm1bunkag7/Skillet%20-%20Awake%20and%20Alive.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp3, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
			}
			if(listitem == 12)				     // Música 13
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/0pnrdseq7q1hdhv/NOT.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp3, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP3, "OK", "Cancelar");
			}
			if(listitem == 13)				     // Música 14
			{
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
		}
	}

	if(dialogid == mp33)							  // Menu
	{
		if(response == 1)
		{
			if(listitem == 0)					  // Música 1
			{

				PlayAudioStreamForPlayer(playerid, "http://home.lyse.net/supreme/mp3/mp3/Coldplay%20-%20Clocks.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 1)					  // Música 2
			{

				PlayAudioStreamForPlayer(playerid, "http://www.streetracing.by/mp3/nfs_underground_2/22-helmet-crashing_foreign_cars.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 2)					  // Música 3
			{

				PlayAudioStreamForPlayer(playerid, "http://cdn.mixfm.com.br/wp-content/uploads/2014/10/One-Direction-Steal-My-Girl.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 3)					  // Música 4
			{

				PlayAudioStreamForPlayer(playerid, "http://slipknot1.info/audio/Slipknot-Psychosocial_(www.slipknot1.info).mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 4)					  // Música 5
			{

				PlayAudioStreamForPlayer(playerid, "http://a.tumblr.com/tumblr_ln9yv3o5751qabh2go1.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 5)					  // Música 6
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/5trcdrw50v3scp7/Meg%20%26%20Dia-%20Monster-%20Lyrics.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 6)					  // Música 7
			{

				PlayAudioStreamForPlayer(playerid, "http://j-fuchs.de/Sound/TNT.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 7)					  // Música 8
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/2pb8ys6wd1c0zh5/Sweet%20Child%20O%27Mine.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 8)					  // Música 9
			{

				PlayAudioStreamForPlayer(playerid, "http://a.tumblr.com/tumblr_mtbjwfrhjk1qkq3ejo1.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
            }
			if(listitem == 9)				     // Música 10
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/ojgbe6j6gncsp4t/The%20Wanted%20-%20Glad%20You%20Came.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
            }
			if(listitem == 10)				     // Música 11
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/f1xzjcwly6kx43x/right.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 11)				     // Música 12
			{

				PlayAudioStreamForPlayer(playerid, "http://memberfiles.freewebs.com/04/73/86367304/podcast/Akon%20-%20Lonely%20with%20lyrics.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 12)				     // Música 13
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/ksbu09t1tlbdvxj/smack%20that%20%28dirty%29%20akon%20feat.%20eminem.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 13)				     // Música 14
			{

				PlayAudioStreamForPlayer(playerid, "http://a.tumblr.com/tumblr_lqae1anqsT1qkr4two1.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 14)				     // Música 15
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/jktstnjnl4nujd9/Snoop%20Dogg%20-%20Drop%20It%20Like.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 15)				     // Música 26 - Musica 16
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/wklj6lwvoh8hzn9/You%20%26%20I-%20One%20Direction%20%28lyrics%20%20%20pics%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 16)				     // Música 27 - Musica 17
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/bvmlvmkwvx96ddh/eminen%20-%20till%20i%20collapse.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 17)				     // Música 28 - Musica 18
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/0yjy4didejw9eps/Bad%20Meets%20Evil%20-%20Fast%20Lane.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 18)				     // Música 29 - Musica 19
			{

				PlayAudioStreamForPlayer(playerid, "http://tegos.ru/new/mp3_full/Damian_Marley_and_Skrillex_-_Make_It_Bun_Dem.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}
			if(listitem == 19)				     // Música 30 - Musica 20
			{

				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/djzejzgj6x9i3k2/Slipknot%20-%20Duality%20%28Lyrics%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "Digite /stopmp3 para parar.");
				ShowPlayerDialog(playerid, mp33, DIALOG_STYLE_LIST, "Escolher Música", STRD_MP33, "OK", "Cancelar");
			}

		}
	}

	if(dialogid == mp3todos)							  // Menu
	{
		if(response == 1)
		{
			if(listitem == 0)					  // Hero
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/c5321r53yw8pp3o/Skillet%20-%20Hero%20%28Official%20Video%29.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos{FFFFFF}, {00BFFF}Não quer ouvir? /stopradio", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp3todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP3TODOS, "OK", "Cancelar");
			}
			if(listitem == 1)					  // One Day
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/yh5avtbq05dxzya/One%20Day.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos{FFFFFF}, {00BFFF}Não quer ouvir? /stopradio", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp3todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP3TODOS, "OK", "Cancelar");
			}
			if(listitem == 2)					  // Monster
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/qzmvd9f024gwkqf/02%20-%20Monster.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos{FFFFFF}, {00BFFF}Não quer ouvir? /stopradio", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp3todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP3TODOS, "OK", "Cancelar");
			}
			if(listitem == 3)					  // My Demons
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/kyqei96egakh6f5/My%20Demons%20-%20Starset%20%28lyrics%29.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos{FFFFFF}, {00BFFF}Não quer ouvir? /stopradio", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp3todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP3TODOS, "OK", "Cancelar");
			}
			if(listitem == 4)					  // Irineu
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/kpp5gth9ra97gkz/irineu.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos{FFFFFF}, {00BFFF}Não quer ouvir? /stopradio", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp3todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP3TODOS, "OK", "Cancelar");
			}
			if(listitem == 5)					  // Courtesy Call
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/97eyzcdfhnm8dng/20Foot%20Krutch%20-%20Courtesy%20Call%20%28Lyrics%29.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos{FFFFFF}, {00BFFF}Não quer ouvir? /stopradio", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp3todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP3TODOS, "OK", "Cancelar");
			}
			if(listitem == 6)					  // Remember We Die
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/fkivcbvjuqvwxhb/Remember%20We%20Die%20-%20Gemini%20Syndrome%20%28lyrics%29.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos{FFFFFF}, {00BFFF}Não quer ouvir? /stopradio", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp3todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP3TODOS, "OK", "Cancelar");
			}
			if(listitem == 7)					  // E for Exstincion
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/5k4it4lgr297zmy/20Foot%20Krutch%20-%20E%20for%20Extinction%20%5BLYRICS%5D%20%5BHD%5D.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos{FFFFFF}, {00BFFF}Não quer ouvir? /stopradio", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp3todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP3TODOS, "OK", "Cancelar");
			}
			if(listitem == 8)					  // Música 9
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://dl.dropboxusercontent.com/s/b00xzkyl2eebiow/007.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos{FFFFFF}, {00BFFF}Não quer ouvir? /stopradio", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp3todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP3TODOS, "OK", "Cancelar");
            }
			if(listitem == 9)				     // Música 10
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/dimj2283o786j3l/war.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos{FFFFFF}, {00BFFF}Não quer ouvir? /stopradio", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp3todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP3TODOS, "OK", "Cancelar");
            }
			if(listitem == 10)				     // Música 11
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/yykjw0rl9h43lkp/again.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos{FFFFFF}, {00BFFF}Não quer ouvir? /stopradio", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp3todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP3TODOS, "OK", "Cancelar");
			}
			if(listitem == 11)				     // Música 12
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/t1dzwdm1bunkag7/Skillet%20-%20Awake%20and%20Alive.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos{FFFFFF}, {00BFFF}Não quer ouvir? /stopradio", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp3todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP3TODOS, "OK", "Cancelar");
			}
			if(listitem == 12)				     // Música 13
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/0pnrdseq7q1hdhv/NOT.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos{FFFFFF}, {00BFFF}Não quer ouvir? /stopradio", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp3todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP3TODOS, "OK", "Cancelar");
			}
			if(listitem == 13)				     // Música 14
			{
				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
		}
	}

	if(dialogid == mp33todos)							  // Menu
	{
		if(response == 1)
		{
			if(listitem == 0)					  // Música 1
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://home.lyse.net/supreme/mp3/mp3/Coldplay%20-%20Clocks.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 1)					  // Música 2
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://www.streetracing.by/mp3/nfs_underground_2/22-helmet-crashing_foreign_cars.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 2)					  // Música 3
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://cdn.mixfm.com.br/wp-content/uploads/2014/10/One-Direction-Steal-My-Girl.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 3)					  // Música 4
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://slipknot1.info/audio/Slipknot-Psychosocial_(www.slipknot1.info).mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 4)					  // Música 5
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://a.tumblr.com/tumblr_ln9yv3o5751qabh2go1.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 5)					  // Música 6
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://tegos.ru/mp3_rus/dub_step/Meg_and_Dia_-_Monster.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 6)					  // Música 7
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://j-fuchs.de/Sound/TNT.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 7)					  // Música 8
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://www.destroyrockandroll.com/wp-content/uploads/2009/01/sweet-child-o-mine.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 8)					  // Música 9
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://a.tumblr.com/tumblr_mtbjwfrhjk1qkq3ejo1.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
            }
			if(listitem == 9)				     // Música 10
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://whatsprotocol.com/wp-content/uploads/2012/03/Glad-You-Came.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
            }
			if(listitem == 10)				     // Música 11
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://vasava.ru/mp3/akon_-_right_now_na_na_na.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 11)				     // Música 12
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://memberfiles.freewebs.com/04/73/86367304/podcast/Akon%20-%20Lonely%20with%20lyrics.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 12)				     // Música 13
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://users3.ml.mindenkilapja.hu/users/varsany5_o/uploads/akon_feat_eminem_-_smack_that.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 13)				     // Música 14
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://a.tumblr.com/tumblr_lqae1anqsT1qkr4two1.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 14)				     // Música 15
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://o5wap.ru/content/mp3/full/c/f/8/Snoop_Dogg_-_Drop_it_like_its_hot.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 15)				     // Música 26 - Musica 16
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://www.radio96fm.net/site/mw-painel/files/ONE%20DIRECTION%20-%20You%20And%20I%202014.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 16)				     // Música 27 - Musica 17
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/bvmlvmkwvx96ddh/eminen%20-%20till%20i%20collapse.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 17)				     // Música 28 - Musica 18
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/0yjy4didejw9eps/Bad%20Meets%20Evil%20-%20Fast%20Lane.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 18)				     // Música 29 - Musica 19
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://tegos.ru/new/mp3_full/Damian_Marley_and_Skrillex_-_Make_It_Bun_Dem.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
			if(listitem == 19)				     // Música 30 - Musica 20
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "http://www.the-wolf.org/mp3/Slipknot%20-%20Duality.mp3");
					}
				}
				format(string, sizeof(string), "{FFA500}O(a) DJ {FFFFFF}%s {FFA500}iniciou a música para todos", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

				ShowPlayerDialog(playerid, mp33todos, DIALOG_STYLE_LIST, "Escolher Música para Todos", STRD_MP33TODOS, "OK", "Cancelar");
			}
		}
	}

	if(dialogid == musicaso)
	{
		if(response == 1)
		{
			if(listitem == 0)					   // Durarara
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/2ycr8i1j27t3q85/Durarara.mp3");
			    SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 1)			     	// Dragon Ball Super
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/0ywftzc12hpfvp5/DragonBallSuper.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 2)			         	//Gintama
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/uvzey4no1v9sowb/Gintama.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 3)					   // No Game No Life
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/524lfo739dl0hod/NoGameNoLife.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 4)					 //  Deadmen Wonderland
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/j6exhsfntpaogv0/Deadmen.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 5)					   //Another
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/0o6bbfsmbl6llml/Another.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 6)					  // Dragon Ball Z
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/vat3scerj4wr1is/DragonBallZ.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 7)					  // Gintama2
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/8w3leke3moed32q/Gintama2.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 8)					  // Princess Principal
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/ywqzgbf6bngw7ga/PrincessPrincipal.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
            }
            if(listitem == 9)				     // Death Parade
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/5tul3lotlrqkbqi/DeathParade.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 10)				     // Overlord
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/z0ia45gc0llj7co/Overlord.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 11)				     // Blood Lad
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/rutpy2o3l39jo4g/BloodLad.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
			if(listitem == 12)				     // Nanbaka
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/ed1d1c0182y8eh6/CodeGeass.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 13)				     // Code Geass
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/s8ufryvk6nywh6j/CodeGeass.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 14)				     // Akame Ga kill
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/n8jm84okjwly12t/AKAME.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 15)				     // FMAB
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/kpadoxfg2op6co3/fmab.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
			if(listitem == 16)				     // Killing Bites
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/wl9t56dlhxcusob/KB.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 17)				     // Soul Eater
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/4ji6y38sufgk0i3/SoulEater.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
		}
	}


	if(dialogid == GANGSALL)							  // Menu
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid,420,DIALOG_STYLE_INPUT,"Clan - Membros","Digite o ID do clan:","Ver","Sair");
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid,402,DIALOG_STYLE_INPUT,"Clan - Info","Digite o ID do clan:","Ver","Sair");
			}
			if(listitem == 2)
			{
			    if(PlayerInfo[playerid][SCON] == false) return SendClientMessage(playerid,amarelo,"[CLAN] Você não é ADMIN RCON!");
			    ShowPlayerDialog(playerid,424,DIALOG_STYLE_INPUT,"Clan - Deletar","Digite o ID do clan para ser deletada:\nObs: Depois de clicado o 'Deletar' não há volta.","Deletar","Sair");
			}
		}
	}

	if(dialogid == GANGS)							  // Menu
	{
		if(response == 1)
		{
			if(listitem == 0)
   			{
				if(GangLevel[playerid]<2) return SendClientMessage(playerid,amarelo,"[CLAN] Você deve ser membro, comandante, sub-líder ou líder do clan para convidar pessoas!");
				if(DOF2_GetInt(FormatGang(GangID[playerid]),"NMembros")>=GANG_MEMBERS) return SendClientMessage(playerid,amarelo,"[CLAN] O limite máximo de jogadores em um clan foi atingido!");
				new ResultM;
				for(new f=0;f<MAX_PLAYERS;f++)
				{
					if(GangID[f]==GangID[playerid]&&GangLevel[f]==0)
					{
			  		  ResultM++;
					}
				}
				if(ResultM>=GANG_CONVIDADOS) return SendClientMessage(playerid,amarelo,"[CLAN] O limite máximo de convidados em um clan foi atingido!");
		        ShowPlayerDialog(playerid,422,DIALOG_STYLE_INPUT,"Clan - Convite","Digite o ID do jogador a baixo:","Convidar","Sair");
			}
			if(listitem == 1)
			{
				if(GangLevel[playerid]<3) return SendClientMessage(playerid,amarelo,"[CLAN] Você deve ser comandante, sub-líder ou líder do clan para kickar outros membros!");
	  			ShowPlayerDialog(playerid,401,DIALOG_STYLE_INPUT,"Clan - Kick","Digite o nome a baixo:","Kickar","Sair");
			}
			if(listitem == 2)
			{
				if(GangLevel[playerid]<5) return SendClientMessage(playerid,amarelo,"[CLAN] Você deve ser o líder do clan para mudar o lema do clan!");
				ShowPlayerDialog(playerid,410,DIALOG_STYLE_INPUT,"Clan - Lema","Coloque o lema a baixo:","Mudar","Sair");
			}
			if(listitem == 3)
			{
				if(GangLevel[playerid]<3) return SendClientMessage(playerid,amarelo,"[CLAN] Você deve ser no mínimo comandante do clan para mudar os leveis!");
				ShowPlayerDialog(playerid,411,DIALOG_STYLE_INPUT,"Clan - Level","Coloque o ID do jogador a baixo:","Continuar","Sair");
			}
			if(listitem == 4)
			{
				if(GangLevel[playerid]<3) return SendClientMessage(playerid,amarelo,"[CLAN] Você no mínimo deve ser comandante do clan para usar isso!");
				for(new d=0;d<MAX_PLAYERS;d++)
				{
		    		if(IsPlayerConnected(d))
		    			if(GangID[d]==GangID[playerid])
		        			SetPlayerTeam(d,MIN_ATK+GangID[playerid]);
				}
				SendClientMessage(playerid,amarelo,"[CLAN] Anti-TK atualizado.");
			}
			if(listitem == 5)
			{
				if(GangLevel[playerid]<5) return SendClientMessage(playerid,amarelo,"[CLAN] Você deve ser o líder para utilizar este comando!");
			    ShowPlayerDialog(playerid,413,DIALOG_STYLE_INPUT,"Clan - Líder","Coloque o ID para quem você quer passar o cargo de Líder de seu clan.","Passar","Sair");
			}
			if(listitem == 6)
			{
				new strmenn[128],nm1[MAX_PLAYER_NAME];
				GetPlayerName(playerid,nm1,sizeof(nm1));
				DOF2_Unset(GangF(PlayersFile),nm1);
				new form[STRING_MEMBROS];
				if(GangLevel[playerid]==5)
				{
				    DOF2_Unset(GangF(GangsFile),DOF2_GetString(FormatGang(GangID[playerid]),"Nome"));
				    DOF2_SaveFile();
				    #if defined TERRITORY_WAR
					CallRemoteFunction("AtualizarGG","dds",GangID[playerid],1," ");
					#endif
			    	fremove(FormatGang(GangID[playerid]));
			    	format(strmenn,128,"[CLAN] O líder abandonou o clan e ele foi destruido!");
			    	new ggid=GangID[playerid];
			      	for(new allgp=0;allgp<MAX_PLAYERS;allgp++)
					{
      		          if(IsPlayerConnected(allgp))
				        	if(ggid==GangID[allgp])
							{
								SendClientMessage(allgp,laranja,strmenn);
								GetPlayerName(allgp,nm1,sizeof(nm1));
								DOF2_Unset(GangF(PlayersFile),nm1);
								GangID[allgp]=0;
								SetPVarInt(allgp,"GangID",0);
								MudarGangPlayer(allgp,0);
			    				GangLevel[allgp]=0;
						    }
					}
					DOF2_SaveFile();
			    	return 1;
				}
				if(GangLevel[playerid]>0)
				{
					strcat(form,DOF2_GetString(FormatGang(GangID[playerid]),"Membros"));
					new pos=strfind(form,nm1);
					strdel(form,pos-1,pos+strlen(nm1));
					DOF2_SetString(FormatGang(GangID[playerid]),"Membros",form);
					DOF2_SetInt(FormatGang(GangID[playerid]),"NMembros",DOF2_GetInt(FormatGang(GangID[playerid]),"NMembros")-1);
					format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			        DOF2_SetInt(file, "SGang", 0);
					DOF2_SaveFile();
				}
				format(strmenn,128,"[CLAN] Você saiu do clan: %s!",DOF2_GetString(FormatGang(GangID[playerid]),"Nome"));
		        SendClientMessage(playerid,laranja,strmenn);
		        format(strmenn,128,"[CLAN] %s (ID:%d) saiu do clan.",nm1,playerid);
 		        for(new allgp=0;allgp<MAX_PLAYERS;allgp++)
 		           if(IsPlayerConnected(allgp))
   		         	if(GangID[playerid]==GangID[allgp])
							SendClientMessage(allgp,laranja,strmenn);
				MudarGangPlayer(playerid,0);
				return 1;
			}
			if(listitem == 7)
			{
				if(DOF2_GetInt(FormatGang(GangID[playerid]),"BancoL")>GangLevel[playerid]) return SendClientMessage(playerid,amarelo,"[CLAN] Seu nível no clan não é alto o suficiente para usar o banco!");
				new IntId=GetPlayerInterior(playerid);
				if(IntId!=3) return SendClientMessage(playerid,amarelo,"[CLAN] Você não está no /banco!");
				ShowPlayerDialog(playerid,414,DIALOG_STYLE_LIST,"Clan - Banco","Saldo\nSacar\nDepositar\nBloquear banco para... (Líder)","Ok","Sair");
			}
		}
	}


	if(dialogid == musicas)							  // Menu
	{
		if(response == 1)
		{
			if(listitem == 0)					  //Rock
			{
				ShowPlayerDialog(playerid, rock, DIALOG_STYLE_LIST, "Rock", STRD_ROCK, "OK", "Cancelar");
			}
			if(listitem == 1)					  // Funk
			{
				ShowPlayerDialog(playerid, funk, DIALOG_STYLE_LIST, "Funk", STRD_FUNK, "OK", "Cancelar");
			}
			if(listitem == 2)					  // RAP
			{
				ShowPlayerDialog(playerid, rap, DIALOG_STYLE_LIST, "Rap", STRD_RAP, "OK", "Cancelar");
			}
			if(listitem == 3)					  // ELETRO
			{
				ShowPlayerDialog(playerid, eletro, DIALOG_STYLE_LIST, "Eletronica", STRD_ELETRO, "OK", "Cancelar");
			}
			if(listitem == 4)					  // ANIME
			{
				ShowPlayerDialog(playerid, musicaso, DIALOG_STYLE_LIST, "Anime", STRD_OTACO, "OK", "Cancelar");
			}
		}
	}

	if(dialogid == rock)
	{
		if(response == 1)
		{
			if(listitem == 0)					   // I Am Machine
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/89e2xxs718zots1/Skillet%20-%20Monster.mp3");
			    SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 1)			     	// My Demons
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/osdtc1kxht5ilnx/Skillet%20-%20Hero.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 2)			         	//Feels
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/o5idiajakkwgxme/bonie.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 3)					   // Chop Suey
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/bet0z6zf935nam7/Skillet%20-%20Feel%20Invincible.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 4)					 //  The Resistence
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/0mnakt69nr1nzpp/Skillet%20-%20Not%20Gonna%20Die.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 5)					   //Monster
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/mnaci4sy60r8rcy/Skillet%20-%20Rebirthing.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 6)					  // Hero
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/scwlu133r4yd17h/Slender%20Man%20Song.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 7)					  // Back From The Dead
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/nc342j81m1iq3lj/Three%20Days%20Grace%20-%20I%20Am%20Machine.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 8)					  // Fells
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/56lrkwok0aej68i/Thousand%20Foot%20Krutch%20-%20Courtesy%20Call.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
            }
            if(listitem == 9)				     // Bring Me To Life
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/6k673u14o2y0n5j/LeaveItAllBehind.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 10)				     // Liar
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/ytmu2orddp9pvlp/Criminal.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 11)				     // Painkiller
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/0fvwu3v5sphckd8/Get%20me%20Out.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 12)				     // Out Of Hell
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/66an9l5v2a5kuy0/Out%20Of%20Hell.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 13)				     // Fallen Angel
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/8lxuhevkk3sei5t/5.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 14)				     // Awake And Alive
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/4fg7haw6r5ps9sp/mad.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 15)				     // Not Gonna Die
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/nsi5xjy9sgeyj37/rmurs.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 16)				     // Rise
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/yjp3hzi7mrgnlvg/over.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 17)				     // CARNIVORE
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/09fbvpy2r3a5yuz/Hail.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 18)				     // It Has Begun
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/kibnq8dduxnjuf5/Till.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
			if(listitem == 19)				     // Let it die
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/02tgi5xw8t0tj1w/xgon.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}

		}
	}

	if(dialogid == funk)               // Na Moral Essa merda abaixo ta uma desgraça
	{
		if(response == 1)
		{
			if(listitem == 0)					   //Olha A Explosao
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/a9b1mao4oyiadaj/MC%20Don%20Juan%20-%20Amar%20Amei%20%28KondZilla%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 1)				      //  VAI TOMA
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/12ztvjl7fqs71kw/Bum%20Bum%20Tam%20Tam.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 2)				      //Vai Embrasando
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/94o25fup1whbx9p/MC%20Kekel%20-%20Partiu%20%28KondZilla%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 3)					   // Open The Theca
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/dx9v0gzzmr4dtzz/MC%20Lan%20-%20Rabet%C3%A3o%20%28KondZilla%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 4)					  //Chora Boy
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/z7y0fyloa87utg4/Grave%20Faz%20Bom.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 5)					   //OH NOVINHA
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/x5iqap5h64iadvq/SuaAmigaEuVouPegar.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 6)					  // É MELHOR SENTANDO
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/ziltmipfgryhc5r/MC%20Diguinho%20-%20S%C3%B3%20Suribinha%20de%20Leve%20%28DJ%20Selminho%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 7)					  //Na onda do Beat
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/giwnd6p0es5dfkh/Vai%20Malandra.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 8)					  // O Grave Bater
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/5i25ikhn9svpqzz/Jojo%20Maronttinni%20-%20Que%20Tiro%20Foi%20Esse.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
            }
            if(listitem == 9)				     //Partiu
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/3lvbwrx4yj9jz3y/Brota%20Na%20Base.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 10)				     // Quem Mandou tu terminar
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/zy3v750ekatmwyq/Pararam%20Pam.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 11)				     //Gata Demais
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/uag8c9wfa8ypqo1/MC%20WM%20-%20Rabetania%20%28KondZilla%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 12)				     //Acalma O Coração
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/iwlzgjqik57ahox/MC%20WM%20-%20Transariano%20%28KondZilla%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 13)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/v8z8i3ypz3fjb90/Deixa%20Ela%20Beijar.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 14)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/4rw4kisvt8k0ctt/MC%20Kevinho%20-%20Rabiola%20%28KondZilla%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 15)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/z0vp6yrb44jv56f/Jhowzinho%20Kadinho%20Agora%20Vai%20Sentar.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 16)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/ta81tbydjqv55jr/Gustta%20e%20MC%20DG%20Abusadamente.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 17)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/n3t987ag4m971h0/Toma%20Karen%20Toma.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 18)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/62k9n93wg1d8sdd/MC%20R10%20Transei%20Com%20Sua%20Filha.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
			if(listitem == 19)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/f5ggucidnv4mrib/Ritmo%20Mexicano.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}

		}
	}

	if(dialogid == rap)
	{
		if(response == 1)
		{
			if(listitem == 0)					   //THE CAVERNA CYPTHER
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/aczq9ccljdcnp12/The%20Caverna%20Cypher.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 1)				      //EP 129
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/6yd3i2a4qeish9b/Ep1291Kilo.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 2)				      //PRESIDENTES MORTOS
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/66u1zlnzvfc9osb/20Presidentes%20Mortos.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 3)					   //OBAMA CJ
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/iuc0ymnxiu087ay/obamacj.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 4)					  //Esfregasom
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/4f3aqwkbhguvnhr/Esfregasom.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 5)					   //Fé
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/d1cn0oerimat0b3/fe.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 6)					  //Evoluçao
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/zln1oncarkifqye/evolucao.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 7)					  // Poetas no topo
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/reldidd7p6p5mbl/Poetas%20no%20Topo.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 8)					  // EP 134
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/se6or3zgqs0gq8s/Ep134.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
            }
            if(listitem == 9)				     //CyphterBox 10
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/sn8qb9aohjxo2pt/CypherBox10.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 10)				     // Lazer de Chefe
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/82ph5vct0ulcrx5/lazerdechefe.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 11)				     // Caos Interior
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/52qzqi6gox79oc2/caos.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 12)				     //Tony Stark
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/jz4wqth39fnqbgf/Tony.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 13)				     // Envolvido no Problema
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/qbyb57ee2yccb7u/envolvido.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 14)				     // Super Saiyajin
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/by8yy5ji13qcwek/SuperSaiyan.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 15)				     //  Liricopatas
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/kvkmaktzxhcq7d4/Liricopatas.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 16)				     // Kurt Cobain
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/jews9u92kkgvqfd/Kurt.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 17)				     // Shakira
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/4jelupb2pppdpum/shakira.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 18)				     // Ep 127
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/6e2tzh4qn3t3bjt/ep127.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
			if(listitem == 19)				     // Poetas no topo 2
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/e03zb6rsszemki8/poetas2.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}

		}
	}

	if(dialogid == eletro)
	{
		if(response == 1)
		{
			if(listitem == 0)					   //Faded(Remix)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/rlii5mxyh24ltyb/Cartoon%20-%20On%20%20On%20%28Official%20Music%20Video%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 1)				      //Alarm(Remix)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/2d0vvbpvxoumjvm/Lixo%20Faz%20Arroz.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 2)				      //Sing Me To Sleep
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/vwh6v9x79bfb23j/Meg%20%20Dia%20Monster.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 3)					   //Keep it Mello
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/8ju7ww92uadyo8n/Nilow%20Lisa%20Mitchell%20-%20Neopolitan%20Dreams%20Remix.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 4)					  //Alone
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/wznojux5dkjn0m7/Game%20Over%20-%20Super%20Mario%20World%20Remix.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 5)					   //Ritual
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/o6r6el1tro7mhc4/Marshmello%20-%20Alone%20%28Official%20Music%20Video%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 6)					  // Hymn For The Weekend(Remix)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/zti8xp4o6ljoajm/Super%20Mario%20World%20-%20Overworld.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 7)					  //Where Are U Now(Remix)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/ppbfnvqkegwckgs/Alan%20Walker%20Faded%20Remix.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
			}
			if(listitem == 8)					  //Millionaire(Remix)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/9ed692dbzpg971l/Marshmello%20-%20Summer%20%28Official%20Music%20Video%29%20with%20Lele%20Pons.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
            }
            if(listitem == 9)				     //Routine
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/ls3mbs9hk8imhmj/Marshmello%20-%20Moving%20On%20%28Official%20Music%20Video%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 10)				     //Brolier(Remix)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/buu5tqchanzo2df/Dua%20Lipa%20-%20New%20Rules%20%28RMND%20Remix%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 11)				     //Outside(Remix)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/loo791mwwuh7t3h/KDrew%20-%20Bullseye.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 12)				     //Spectre
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/3z4zkcsn7ae8m66/Foster%20the%20People%20-%20Pumped%20up%20Kicks%20%28Bridge%20and%20Law%20Remix%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 13)				     //FinD Me
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/jjp4ld0k5qyoyhw/Skrillex%20%20Diplo%20-%20Mind%20feat.%20Kai%20%28Official%20Video%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 14)				     //Bassnectar(Remix)
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/r1zh3sbp997oklm/Galantis%20-%20Runaway%20%28U%20%20I%29%20%28Gioni%20Remix%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 15)				     //Good Life
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/uhya6bxhjilsch5/Galantis%20-%20No%20Money.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 16)				     //Go Off
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/r2dwoc8czvw4bcg/SPOOKY%20SCARY%20SKELETONS%20%28Trap%20Remix%29.mp3 ");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 17)				     //Gang Up
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/5irfn4hqs6iwjfq/AronChupa%20%20%20Im%20an%20Albatraoz%20Official%20Lyrics%20HD.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
 		 	if(listitem == 18)				     //Fuego
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/dh498hbnogt4oxl/Martin%20Garrix%20%20Bebe%20Rexha.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}
			if(listitem == 19)				     //Me and You
			{
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/0pek6zst2p63hul/Alan%20Walker%20-%20Alone%20%28Need%20For%20Speed%29.mp3");
				SendClientMessage(playerid, 0x6495EDAA, "{FF0000}Musica Iniciada, Caso Queira Desligar Digite {ffffff}/desligarm");
 		 	}

		}
	}

	if(dialogid == musicast)							  // Menu
	{
		if(response == 1)
		{
			if(listitem == 0)					  //Rockt
			{
				ShowPlayerDialog(playerid, rockt, DIALOG_STYLE_LIST, "Rock", STRD_ROCKT, "OK", "Cancelar");
			}
			if(listitem == 1)					  // Funkt
			{
				ShowPlayerDialog(playerid, funkt, DIALOG_STYLE_LIST, "Funk", STRD_FUNKT, "OK", "Cancelar");
			}
			if(listitem == 2)					  // RAPt
			{
				ShowPlayerDialog(playerid, rapt, DIALOG_STYLE_LIST, "Rap", STRD_RAPT, "OK", "Cancelar");
			}
			if(listitem == 3)					  // ELETROt
			{
				ShowPlayerDialog(playerid, eletrot, DIALOG_STYLE_LIST, "Eletronica", STRD_ELETROT, "OK", "Cancelar");
			}
			if(listitem == 4)					  // ELETROt
			{
				ShowPlayerDialog(playerid, musicasot, DIALOG_STYLE_LIST, "Anime", STRD_OTACO, "OK", "Cancelar");
			}
		}
	}

	if(dialogid == musicasot)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/2ycr8i1j27t3q85/Durarara.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/0ywftzc12hpfvp5/DragonBallSuper.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 2)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/uvzey4no1v9sowb/Gintama.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 3)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/524lfo739dl0hod/NoGameNoLife.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 4)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/j6exhsfntpaogv0/Deadmen.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 5)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/0o6bbfsmbl6llml/Another.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 6)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/vat3scerj4wr1is/DragonBallZ.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 7)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/8w3leke3moed32q/Gintama2.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 8)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/ywqzgbf6bngw7ga/PrincessPrincipal.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 9)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/5tul3lotlrqkbqi/DeathParade.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 10)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/z0ia45gc0llj7co/Overlord.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 11)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/rutpy2o3l39jo4g/BloodLad.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 12)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/ed1d1c0182y8eh6/CodeGeass.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 13)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/s8ufryvk6nywh6j/CodeGeass.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 14)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/n8jm84okjwly12t/AKAME.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 15)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/kpadoxfg2op6co3/fmab.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 16)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/wl9t56dlhxcusob/KillingBites.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 17)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/4ji6y38sufgk0i3/SoulEater.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
		}
	}
	if(dialogid == rockt)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/89e2xxs718zots1/Skillet%20-%20Monster.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/osdtc1kxht5ilnx/Skillet%20-%20Hero.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 2)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/o5idiajakkwgxme/bonie.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 3)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/bet0z6zf935nam7/Skillet%20-%20Feel%20Invincible.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 4)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/0mnakt69nr1nzpp/Skillet%20-%20Not%20Gonna%20Die.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 5)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/mnaci4sy60r8rcy/Skillet%20-%20Rebirthing.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 6)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/scwlu133r4yd17h/Slender%20Man%20Song.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 7)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/nc342j81m1iq3lj/Three%20Days%20Grace%20-%20I%20Am%20Machine.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 8)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/56lrkwok0aej68i/Thousand%20Foot%20Krutch%20-%20Courtesy%20Call.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
            }
			if(listitem == 9)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/6k673u14o2y0n5j/LeaveItAllBehind.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
            }
			if(listitem == 10)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/ytmu2orddp9pvlp/Criminal.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 11)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/0fvwu3v5sphckd8/Get%20me%20Out.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 12)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/66an9l5v2a5kuy0/Out%20Of%20Hell.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 13)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/8lxuhevkk3sei5t/5.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 14)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/4fg7haw6r5ps9sp/mad.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 15)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/nsi5xjy9sgeyj37/rmurs.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 16)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/yjp3hzi7mrgnlvg/over.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 17)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/09fbvpy2r3a5yuz/Hail.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 18)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/kibnq8dduxnjuf5/Till.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 19)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/02tgi5xw8t0tj1w/xgon.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
		}
	}
	
	if(dialogid == funkt)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/a9b1mao4oyiadaj/MC%20Don%20Juan%20-%20Amar%20Amei%20%28KondZilla%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/12ztvjl7fqs71kw/Bum%20Bum%20Tam%20Tam.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 2)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/94o25fup1whbx9p/MC%20Kekel%20-%20Partiu%20%28KondZilla%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 3)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/dx9v0gzzmr4dtzz/MC%20Lan%20-%20Rabet%C3%A3o%20%28KondZilla%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 4)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/z7y0fyloa87utg4/Grave%20Faz%20Bom.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 5)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/x5iqap5h64iadvq/SuaAmigaEuVouPegar.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 6)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/giwnd6p0es5dfkh/Vai%20Malandra.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 7)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/ziltmipfgryhc5r/MC%20Diguinho%20-%20S%C3%B3%20Suribinha%20de%20Leve%20%28DJ%20Selminho%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 8)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/5i25ikhn9svpqzz/Jojo%20Maronttinni%20-%20Que%20Tiro%20Foi%20Esse.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
            }
			if(listitem == 9)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/3lvbwrx4yj9jz3y/Brota%20Na%20Base.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
            }
			if(listitem == 10)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/zy3v750ekatmwyq/Pararam%20Pam.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 11)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/uag8c9wfa8ypqo1/MC%20WM%20-%20Rabetania%20%28KondZilla%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 12)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/iwlzgjqik57ahox/MC%20WM%20-%20Transariano%20%28KondZilla%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 13)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/v8z8i3ypz3fjb90/Deixa%20Ela%20Beijar.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 14)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/4rw4kisvt8k0ctt/MC%20Kevinho%20-%20Rabiola%20%28KondZilla%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 15)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/z0vp6yrb44jv56f/Jhowzinho%20Kadinho%20Agora%20Vai%20Sentar.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 16)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/ta81tbydjqv55jr/Gustta%20e%20MC%20DG%20Abusadamente.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 17)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/n3t987ag4m971h0/Toma%20Karen%20Toma.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 18)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/62k9n93wg1d8sdd/MC%20R10%20Transei%20Com%20Sua%20Filha.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 19)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/f5ggucidnv4mrib/Ritmo%20Mexicano.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
		}
	}
	if(dialogid == rapt)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/aczq9ccljdcnp12/The%20Caverna%20Cypher.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/6yd3i2a4qeish9b/Ep1291Kilo.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 2)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/66u1zlnzvfc9osb/20Presidentes%20Mortos.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 3)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/iuc0ymnxiu087ay/obamacj.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 4)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/4f3aqwkbhguvnhr/Esfregasom.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 5)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/d1cn0oerimat0b3/fe.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 6)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/zln1oncarkifqye/evolucao.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 7)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/reldidd7p6p5mbl/Poetas%20no%20Topo.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 8)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/se6or3zgqs0gq8s/Ep134.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
            }
			if(listitem == 9)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/sn8qb9aohjxo2pt/CypherBox10.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
            }
			if(listitem == 10)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/82ph5vct0ulcrx5/lazerdechefe.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 11)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/52qzqi6gox79oc2/caos.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 12)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/jz4wqth39fnqbgf/Tony.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 13)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/qbyb57ee2yccb7u/envolvido.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 14)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/by8yy5ji13qcwek/SuperSaiyan.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 15)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/kvkmaktzxhcq7d4/Liricopatas.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 16)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/jews9u92kkgvqfd/Kurt.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 17)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/4jelupb2pppdpum/shakira.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 18)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/6e2tzh4qn3t3bjt/ep127.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 19)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/e03zb6rsszemki8/poetas2.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
		}
	}

	if(dialogid == eletrot)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/rlii5mxyh24ltyb/Cartoon%20-%20On%20%20On%20%28Official%20Music%20Video%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/2d0vvbpvxoumjvm/Lixo%20Faz%20Arroz.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 2)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/vwh6v9x79bfb23j/Meg%20%20Dia%20Monster.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 3)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/8ju7ww92uadyo8n/Nilow%20Lisa%20Mitchell%20-%20Neopolitan%20Dreams%20Remix.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 4)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/wznojux5dkjn0m7/Game%20Over%20-%20Super%20Mario%20World%20Remix.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 5)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/o6r6el1tro7mhc4/Marshmello%20-%20Alone%20%28Official%20Music%20Video%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 6)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/zti8xp4o6ljoajm/Super%20Mario%20World%20-%20Overworld.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 7)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/ppbfnvqkegwckgs/Alan%20Walker%20Faded%20Remix.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 8)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/9ed692dbzpg971l/Marshmello%20-%20Summer%20%28Official%20Music%20Video%29%20with%20Lele%20Pons.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
            }
			if(listitem == 9)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/ls3mbs9hk8imhmj/Marshmello%20-%20Moving%20On%20%28Official%20Music%20Video%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
            }
			if(listitem == 10)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/buu5tqchanzo2df/Dua%20Lipa%20-%20New%20Rules%20%28RMND%20Remix%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 11)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/loo791mwwuh7t3h/KDrew%20-%20Bullseye.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);
			}
			if(listitem == 12)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/3z4zkcsn7ae8m66/Foster%20the%20People%20-%20Pumped%20up%20Kicks%20%28Bridge%20and%20Law%20Remix%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 13)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/jjp4ld0k5qyoyhw/Skrillex%20%20Diplo%20-%20Mind%20feat.%20Kai%20%28Official%20Video%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 14)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/r1zh3sbp997oklm/Galantis%20-%20Runaway%20%28U%20%20I%29%20%28Gioni%20Remix%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 15)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/uhya6bxhjilsch5/Galantis%20-%20No%20Money.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 16)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/r2dwoc8czvw4bcg/SPOOKY%20SCARY%20SKELETONS%20%28Trap%20Remix%29.mp3 ");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 17)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/5irfn4hqs6iwjfq/AronChupa%20%20%20Im%20an%20Albatraoz%20Official%20Lyrics%20HD.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 18)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/dh498hbnogt4oxl/Martin%20Garrix%20%20Bebe%20Rexha.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
			if(listitem == 19)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayAudioStreamForPlayer(i, "https://dl.dropboxusercontent.com/s/0pek6zst2p63hul/Alan%20Walker%20-%20Alone%20%28Need%20For%20Speed%29.mp3");
					}
				}
				format(string, sizeof(string), "{1F0C9B}O(a) DJ {FFFFFF}%s {1F0C9B}iniciou a música para todos{FFFFFF}, Não quer ouvir? {1F0C9B}/desligarm", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Verde, string);

			}
		}
	}



	if(dialogid == sistcaixa)
	{
	  if(response == 1)
	  {
		if(listitem == 0)
			{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
 			if(DOF2_GetInt(file, "Caixaa")< 1){
				SendClientMessage(playerid,Vermelho,"Você não tem uma chave para abrir a caixa !");
				return 1;
			}
			if(IsPlayerInDynamicCP(playerid,  CheckpointsFix[105]))
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode, pegar seu presente dentro de um veículo.");
			if(!IsPlayerInRangeOfPoint(playerid, 6.0, 1300.4492,-1864.7468,13.5668)) return SendClientMessage(playerid, Vermelho, "Você não está no local correto.");

			new iRand = random(5), Msg[257];
			switch(iRand)
			{
				case 0:
				{
					GivePlayerGrana(playerid, 50000);
					format(Msg, sizeof(Msg), "{3655E0}|INFO|{FF0000} %s {FFFFFF}abriu uma Caixa Avançada e ganhou {3655E0}R$50000{FFFFFF}.", GetPlayerNameEx(playerid));
   					SendClientMessageToAll(1, Msg);
   					DOF2_SetInt(file, "Caixaa", 0);
				}
				case 1:
				{
					GivePlayerGrana(playerid, 60000);
					format(Msg, sizeof(Msg), "{3655E0}|INFO|{FF0000} %s {FFFFFF}abriu uma Caixa Avançada e ganhou {3655E0}R$60000{FFFFFF}.", GetPlayerNameEx(playerid));
    				SendClientMessageToAll(1, Msg);
    				DOF2_SetInt(file, "Caixaa", 0);
				}
				case 2:
				{
					DOF2_SetInt(file, "CASH", DOF2_GetInt(file, "CASH")+250);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma Caixa Avançada e ganhou {3655E0}250 Cash{FFFFFF}.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(1, Msg);
					DOF2_SetInt(file, "Caixaa", 0);

				}
				case 3:
				{
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma Caixa Avançada e ganhou {3655E0}+1 Chave Avançada{FFFFFF}.", GetPlayerNameEx(playerid));
  					SendClientMessageToAll(1, Msg);
  					DOF2_SetInt(file, "Caixaa", 1);

				}
				case 4:
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(playerid));
	  				DOF2_SetInt(file2, "Level", DOF2_GetInt(file2, "Level")+75);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma Caixa Avançada e ganhou {3655E0}75 leveis{FFFFFF}.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(1, Msg);
					DOF2_SetInt(file, "Caixaa", 0);
				}
				case 5:
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(playerid));
	  				DOF2_SetInt(file2, "Level", DOF2_GetInt(file2, "Level")+50);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma Caixa Avançada e ganhou {3655E0}50 leveis{FFFFFF}.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(1, Msg);
					DOF2_SetInt(file, "Caixaa", 0);
				}
			}
			return 1;
			}

		if(listitem == 1)
		{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
  			if(DOF2_GetInt(file, "Cashier")< 1)
			{
				SendClientMessage(playerid,Vermelho,"Você não tem uma chave para abrir a caixa !");
				return 1;
			}
			if(IsPlayerInDynamicCP(playerid, CheckpointsFix[105]))
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode, pegar seu presente dentro de um veículo.");
			if(!IsPlayerInRangeOfPoint(playerid, 6.0, 1300.4492,-1864.7468,13.5668)) return SendClientMessage(playerid, Vermelho, "Você não está no local correto.");

			new iRand = random(7), Msg[128];
			switch(iRand)
			{
				case 0:
				{
					GivePlayerGrana(playerid, 5000);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma caixa basica e ganhou {3655E0}R$5000{FFFFFF}.", GetPlayerNameEx(playerid));
   					SendClientMessageToAll(1, Msg);
   					DOF2_SetInt(file, "Cashier", 0);
				}
				case 1:
				{
					GivePlayerGrana(playerid, 15000);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma caixa basica e ganhou {3655E0}R$15000{FFFFFF}.", GetPlayerNameEx(playerid));
    				SendClientMessageToAll(1, Msg);
    				DOF2_SetInt(file, "Cashier", 0);
				}
				case 2:
				{
					GivePlayerGrana(playerid, 2000);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma caixa basica e ganhou {3655E0}R$20000{FFFFFF}.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(1, Msg);
					DOF2_SetInt(file, "Cashier", 0);

				}
				case 3:
				{
					GivePlayerGrana(playerid, 25000);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma caixa basica e ganhou {3655E0}R$25000{FFFFFF}.", GetPlayerNameEx(playerid));
  					SendClientMessageToAll(1, Msg);
  					DOF2_SetInt(file, "Cashier", 0);

				}
				case 4:
				{
					SetPlayerVIP(playerid, VIP_CAIXAB);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma caixa basica e ganhou {3655E0}3 dias VIP{FFFFFF}.", GetPlayerNameEx(playerid));
    				SendClientMessageToAll(1, Msg);
    				DOF2_SetInt(file, "Cashier", 0);

				}
				case 5:
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(playerid));
	  				DOF2_SetInt(file2, "Level", DOF2_GetInt(file2, "Level")+25);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma caixa basica e ganhou {3655E0}25 leveis{FFFFFF}.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(1, Msg);
					DOF2_SetInt(file, "Cashier", 0);

				}
				case 6:
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(playerid));
					DOF2_SetInt(file2, "Faculdade", DOF2_GetInt(file2, "Faculdade")+25);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma caixa basica e ganhou {3655E0}25 estudo{FFFFFF}.", GetPlayerNameEx(playerid));
  					SendClientMessageToAll(1, Msg);
  					DOF2_SetInt(file, "Cashier", 0);
				}
				case 7:
				{
					SetPlayerVIP(playerid, VIP_CAIXABA);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma caixa basica e ganhou {3655E0}6 dias vip{FFFFFF}.", GetPlayerNameEx(playerid));
    				SendClientMessageToAll(1, Msg);
    				DOF2_SetInt(file, "Cashier", 0);
				}
			}
			return 1;
		}
  		if(listitem == 2)
			{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
 			if(DOF2_GetInt(file, "CxDiaria")< 1)
			 {
				SendClientMessage(playerid,Vermelho,"Você não tem uma chave para abrir a caixa !");
				return 1;
			}
			if(IsPlayerInDynamicCP(playerid,  CheckpointsFix[105]))
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode, pegar seu presente dentro de um veículo.");
			if(!IsPlayerInRangeOfPoint(playerid, 6.0, 1300.4492,-1864.7468,13.5668)) return SendClientMessage(playerid, Vermelho, "Você não está no local correto.");

			new iRand = random(5), Msg[257];
			switch(iRand)
			{
				case 0:
				{
					GivePlayerGrana(playerid, 50000);
					format(Msg, sizeof(Msg), "{3655E0}|INFO|{FF0000} %s {FFFFFF}abriu uma Caixa Diaria e ganhou {3655E0}R$50000{FFFFFF}.", GetPlayerNameEx(playerid));
   					SendClientMessageToAll(1, Msg);
   					DOF2_SetInt(file, "CxDiaria", 0);
				}
				case 1:
				{
					GivePlayerGrana(playerid, 60000);
					format(Msg, sizeof(Msg), "{3655E0}|INFO|{FF0000} %s {FFFFFF}abriu uma Caixa Diaria e ganhou {3655E0}R$60000{FFFFFF}.", GetPlayerNameEx(playerid));
    				SendClientMessageToAll(1, Msg);
    				DOF2_SetInt(file, "CxDiaria", 0);
				}
				case 2:
				{
					DOF2_SetInt(file, "CASH", DOF2_GetInt(file, "CASH")+450);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma Caixa Diaria e ganhou {3655E0}450 Cash{FFFFFF}.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(1, Msg);
					DOF2_SetInt(file, "CxDiaria", 0);

				}
				case 3:
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(playerid));
					DOF2_SetInt(file2, "Faculdade", DOF2_GetInt(file2, "Faculdade")+100);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma Caixa Diaria e ganhou {3655E0}100 estudo{FFFFFF}.", GetPlayerNameEx(playerid));
  					SendClientMessageToAll(1, Msg);
  					DOF2_SetInt(file, "CxDiaria", 0);

				}
				case 4:
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(playerid));
					DOF2_SetInt(file2, "Faculdade", DOF2_GetInt(file2, "Faculdade")+60);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma Caixa Diaria e ganhou {3655E0}60 estudo{FFFFFF}.", GetPlayerNameEx(playerid));
  					SendClientMessageToAll(1, Msg);
  					DOF2_SetInt(file, "CxDiaria", 0);

				}
				case 5:
				{
					DOF2_SetInt(file, "CASH", DOF2_GetInt(file, "CASH")+450);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma Caixa Diaria e ganhou {3655E0}450 Cash{FFFFFF}.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(1, Msg);
					DOF2_SetInt(file, "CxDiaria", 0);

				}
			}
			return 1;
		}
		if(listitem == 3)
			{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
 			if(DOF2_GetInt(file, "CxNovato")< 1)
			{
				SendClientMessage(playerid,Vermelho,"Você não tem uma chave para abrir a caixa !");
				return 1;
			}
			if(IsPlayerInDynamicCP(playerid,  CheckpointsFix[105]))
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não pode, pegar seu presente dentro de um veículo.");
			if(!IsPlayerInRangeOfPoint(playerid, 6.0, 1300.4492,-1864.7468,13.5668)) return SendClientMessage(playerid, Vermelho, "Você não está no local correto.");

			new iRand = random(6), Msg[257];
			switch(iRand)
			{
				case 0:
				{
			    	new Float:SetSpawn[4];
				    new Random = random(sizeof(RandomSpawns));
				    SetSpawn[0] = RandomSpawns[Random][0];
				    SetSpawn[1] = RandomSpawns[Random][1];
				    SetSpawn[2] = RandomSpawns[Random][2];
				    SetSpawn[3] = RandomSpawns[Random][3];
					PlayerAddConceVehicleForPlayer(playerid, 411, 50, SetSpawn[0], SetSpawn[1], SetSpawn[2], SetSpawn[3], -1, -1);
					format(Msg, sizeof(Msg), "{3655E0}|INFO|{FF0000} %s {FFFFFF}abriu uma Caixa de Novato e ganhou um {3655E0}Infernus{FFFFFF}.", GetPlayerNameEx(playerid));
   					SendClientMessageToAll(1, Msg);
   					DOF2_SetInt(file, "CxNovato", 0);
				}
				case 1:
				{
					GivePlayerGrana(playerid, 50000);
					format(Msg, sizeof(Msg), "{3655E0}|INFO|{FF0000} %s {FFFFFF}abriu uma Caixa de Novato e ganhou {3655E0}R$50000{FFFFFF}.", GetPlayerNameEx(playerid));
    				SendClientMessageToAll(1, Msg);
    				DOF2_SetInt(file, "CxNovato", 0);
				}
				case 2:
				{
					DOF2_SetInt(file, "CASH", DOF2_GetInt(file, "CASH")+450);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma Caixa de Novato e ganhou {3655E0}450 Cash{FFFFFF}.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(1, Msg);
					DOF2_SetInt(file, "CxNovato", 0);

				}
				case 3:
				{
					format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(playerid));
					DOF2_SetInt(file2, "Faculdade", DOF2_GetInt(file2, "Faculdade")+100);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma Caixa de Novato e ganhou {3655E0}100 estudo{FFFFFF}.", GetPlayerNameEx(playerid));
  					SendClientMessageToAll(1, Msg);
  					DOF2_SetInt(file, "CxNovato", 0);

				}
				case 4:
				{
					SetPlayerVIPT(playerid, VIPT_CAIXAA);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma Caixa de Novato e ganhou {3655E0}3 Dias VIP PREMIUM{FFFFFF}.", GetPlayerNameEx(playerid));
  					SendClientMessageToAll(1, Msg);
  					DOF2_SetInt(file, "CxNovato", 0);

				}
				case 5:
				{
					SetPlayerVIPMT(playerid, VIPT_CAIXAA);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma Caixa de Novato e ganhou {3655E0}3 dias VIP $Prestige$.", GetPlayerNameEx(playerid));
    				SendClientMessageToAll(1, Msg);
    				DOF2_SetInt(file, "CxNovato", 0);
				}
				case 6:
				{
					DOF2_SetInt(file, "Carteira", 1);
	                DOF2_SetInt(file, "HabTerrestre", 1);
	                DOF2_SetInt(file, "HabAerea", 1);
	                DOF2_SetInt(file, "HabNautica", 1);
	                DOF2_SetInt(file, "Porte", 1);
					format(Msg, sizeof(Msg), "{3655E0}[INFO]{FF0000} %s {FFFFFF}abriu uma Caixa de Novato e ganhou {3655E0}Todas as Licenças", GetPlayerNameEx(playerid));
    				SendClientMessageToAll(1, Msg);
    				DOF2_SetInt(file, "CxNovato", 0);
				}
			}
			return 1;
		}
  		}
  		}
  		
	if(dialogid == concelist)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1779.4297,-1745.1403,13.5486);
				GameTextForPlayer(playerid, "~w~Conce ~b~terrestre", 8000, 0);
			}
			if(listitem == 1)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1888.0358,-2288.1541,13.5469);
				GameTextForPlayer(playerid, "~w~Conce ~b~Aerea", 8000, 0);
			}
			if(listitem == 2)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 1104.9307,-1769.6876,13.5542);
				GameTextForPlayer(playerid, "~w~Loja ~r~De ~b~Bike", 8000, 0);
			}
			if(listitem == 3)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -1637.8342,1201.5189,7.2122);
				GameTextForPlayer(playerid, "~w~Viaturas ~r~e ~b~Outros", 8000, 0);
			}
			if(listitem == 4)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 2676.9810,-1681.5161,9.3973);
				GameTextForPlayer(playerid, "~w~Loja ~r~De ~b~Carretas", 8000, 0);
			}
			if(listitem == 5)
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, 150.0778,-1584.3754,12.2211);
				GameTextForPlayer(playerid, "~w~Conce ~b~Nautica", 8000, 0);
			}
		}
	}
	if(dialogid == ajudalist)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{

				new strcmd[1000], strurl[128];
				format(strurl, sizeof(strurl), "\t {FFFFFF}-=-=-=-=-=-| {6666ff}Ajuda Level {FFFFFF}|-=-=-=-=-=- \n", weburl);

				strcat(strcmd, "» Para você ganhar level(s) precisa juntar "#MAX_PLAYER_EXP" EXP's.\n", sizeof(strcmd));
				strcat(strcmd, "» A cada "#TEMPO_EXP" minutos jogando você ganhará "#EXP_POR_TEMPO" EXP's.\n", sizeof(strcmd));
				strcat(strcmd, "» Juntando "#MAX_PLAYER_EXP" EXP's você ganhará "#LEVEL_POR_EXP" level(s).\n", sizeof(strcmd));
				strcat(strcmd, "» Você precisa ir estudar para ganhar "#ESTUDO_POR_TEMPO" de estudo por aula.\n", sizeof(strcmd));
				strcat(strcmd, "» Veja seu level em /verlevel");
				ShowPlayerDialog(playerid, Creditos, DIALOG_STYLE_MSGBOX, "Ajuda", strcmd, "OK", "");
				return 1;
			}
			if(listitem == 1)
			{
				new strcmd[1000], strurl[128];
				format(strurl, sizeof(strurl), "\t {FFFFFF}-=-=-=-=-=-| {6666ff}Ajuda Caixa {FFFFFF}|-=-=-=-=-=- \n", weburl);

				strcat(strcmd, "São 3 tipos de caixas disponiveis no game, são elas Caixa ' Avançada , Basica , Diaria '.\n", sizeof(strcmd));
				strcat(strcmd, "As Caixas Basicas e Avançadas são compradas na /loja usando seu cash !.\n", sizeof(strcmd));
				strcat(strcmd, "Já a Caixa Diaria você ganha uma chave para abrir acada 5 horas online no servidor.\n", sizeof(strcmd));
				strcat(strcmd, "Com variados premios como ' Vip PREMIUM , Vip $Prestige$ , Grana , Level , Estudo , Cash etc ..", sizeof(strcmd));
				ShowPlayerDialog(playerid, Creditos, DIALOG_STYLE_MSGBOX, "Ajuda", strcmd, "OK", "");
				return 1;
			}
			if(listitem == 2)
			{
				new strcmd[1000], strurl[128];
				format(strurl, sizeof(strurl), "\t {FFFFFF}-=-=-=-=-=-| {6666ff}Ajuda Cash {FFFFFF}|-=-=-=-=-=- \n", weburl);

				strcat(strcmd, "A Cada 9 minutos jogados no game você ganha 1 cash .\n", sizeof(strcmd));
				strcat(strcmd, "Se Caso você for DJ , Vip PREMIUM ou Vip $Prestige$.\n", sizeof(strcmd));
				strcat(strcmd, "[DJ/VIP PREMIUM] Você ganhara em cada salario + 50 Cash.\n", sizeof(strcmd));
				strcat(strcmd, "[$Prestige$]Você recebera em cada salario + 75 Cash..", sizeof(strcmd));
				ShowPlayerDialog(playerid, Creditos, DIALOG_STYLE_MSGBOX, "Ajuda", strcmd, "OK", "");
				return 1;
			}
			if(listitem == 3)
			{
				new strcmd[1000], strurl[128];
				format(strurl, sizeof(strurl), "\t {FFFFFF}-=-=-=-=-=-| {6666ff}Ajuda Casa {FFFFFF}|-=-=-=-=-=- \n", weburl);

				strcat(strcmd, "/comprarcasa: Compre uma casa.\n", sizeof(strcmd));
				strcat(strcmd, "/vendercasa: Vende uma casa.\n", sizeof(strcmd));
				strcat(strcmd, "/convidarcasa [id]: Convida alguém a morar na sua casa.\n", sizeof(strcmd));
				strcat(strcmd, "/expulsarcasa [nick]: Expulsa um morador da sua casa.", sizeof(strcmd));
				ShowPlayerDialog(playerid, Creditos, DIALOG_STYLE_MSGBOX, "Ajuda", strcmd, "OK", "");
				return 1;
			}
			if(listitem == 4)
			{
				new strcmd[1000], strurl[128];
				format(strurl, sizeof(strurl), "\t {FFFFFF}-=-=-=-=-=-| {6666ff}Ajuda Empresa {FFFFFF}|-=-=-=-=-=- \n", weburl);

				strcat(strcmd, "/comprarempresa: Compra uma empresa.\n", sizeof(strcmd));
				strcat(strcmd, "/venderempresa: Vende uma empresa.\n", sizeof(strcmd));
				strcat(strcmd, "/sacarempresa: Pega o dinhero da empresa.\n", sizeof(strcmd));
				strcat(strcmd, "/empresanm [nome]: Muda o nome da sua empresa.\n", sizeof(strcmd));
				strcat(strcmd, "Todo dia as 15:00 as empresas recebem renda.", sizeof(strcmd));
				strcat(strcmd, "OBS: A empresa para de acumular quando a renda rechar a 2000000 (2kk)", sizeof(strcmd));
				ShowPlayerDialog(playerid, Creditos, DIALOG_STYLE_MSGBOX, "Ajuda", strcmd, "OK", "");
				return 1;
			}
			if(listitem == 5)
			{
				new strcmd[1000], strurl[128];
				format(strurl, sizeof(strurl), "\t {FFFFFF}-=-=-=-=-=-| {6666ff}Ajuda Radar {FFFFFF}|-=-=-=-=-=- \n", weburl);

				strcat(strcmd, "Existem Vários Radares por toda San Andreas.\n", sizeof(strcmd));
				strcat(strcmd, "O limite de velocidade é de 90 a 110KM/h fique atento, olhe no velocimetro.\n", sizeof(strcmd));
				strcat(strcmd, "Se você exceder o limite de velocidade nesses locais, levara multa de 250$ que podem serem pagas na lotérica.\n", sizeof(strcmd));
				strcat(strcmd, "Quando você atingir 8 pontos na carteira , terá a perda da mesma", sizeof(strcmd));
				ShowPlayerDialog(playerid, Creditos, DIALOG_STYLE_MSGBOX, "Ajuda", strcmd, "OK", "");
				return 1;
			}
			if(listitem == 6)
			{
				new strcmd[1000], strurl[128];
				format(strurl, sizeof(strurl), "\t {FFFFFF}-=-=-=-=-=-| {6666ff}Ajuda Clan {FFFFFF}|-=-=-=-=-=- \n", weburl);

				strcat(strcmd,"/criarclan - para criar um clan\n", sizeof(strcmd));
				strcat(strcmd,"/meuclan - para Ver o menu do seu clan\n", sizeof(strcmd));
				strcat(strcmd,"/cc [texto] - chat do clan\n", sizeof(strcmd));
				strcat(strcmd,"/clan - menu de informaçoes de clans\n", sizeof(strcmd));
				strcat(strcmd,"Precisa Também de R$ 5000", sizeof(strcmd));
				ShowPlayerDialog(playerid, Creditos, DIALOG_STYLE_MSGBOX, "Ajuda", strcmd, "OK", "");
				return 1;
			}
			if(listitem == 7)
			{
				new strcmd[1000], strurl[128];
				format(strurl, sizeof(strurl), "\t {FFFFFF}-=-=-=-=-=-| {6666ff}Ajuda Portoes {FFFFFF}|-=-=-=-=-=- \n", weburl);
				strcat(strcmd, "\t\t{FF0000}x {FFFFFF}Sistema de Portões {FF0000}x\n\n", sizeof(strcmd));
				strcat(strcmd, "{FFFFFF}Para Abrir Algum Portão Aperte '{FF0000}H{FFFFFF}' (Apenas Se Tiver as Chaves)\n", sizeof(strcmd));
				strcat(strcmd, "{FFFFFF}O Portão Será Aberto, e após 6 segundos fechado automaticamente.", sizeof(strcmd));
				ShowPlayerDialog(playerid, Creditos, DIALOG_STYLE_MSGBOX, "Ajuda", strcmd, "OK", "");
				return 1;
			}
		}
	}


 	if(dialogid == radio)
	{
 	    if(response == 1)
 		{
 	        if(listitem == 0) PlayAudioStreamForPlayer(playerid, "http://metro.paineldj3.com.br:8002/;"); // RADIO BVL

 	        if(listitem == 1) PlayAudioStreamForPlayer(playerid, "http://live.hunterfm.com/country"); // RADIO SOFRENCIA

 	        if(listitem == 2) PlayAudioStreamForPlayer(playerid, "http://listen.shoutcast.com:80/RadioHunter-TheHitzChannel"); // Radio Hunter

 	      	if(listitem == 3) PlayAudioStreamForPlayer(playerid, "http://dubstep.fm/listen.pls"); // dubstep

 	        if(listitem == 4) PlayAudioStreamForPlayer(playerid, "http://184.154.89.186:9944/listen.pls"); // Reggae

 	        if(listitem == 5) PlayAudioStreamForPlayer(playerid, "http://live.hunterfm.com/electronic"); // ELECTRO

 	        if(listitem == 6) PlayAudioStreamForPlayer(playerid, "http://45.43.200.138:29468/"); // FUNK

 	        if(listitem == 7) PlayAudioStreamForPlayer(playerid, "http://servidor31.brlogic.com:8054/live"); // FUNK 2

 	        if(listitem == 8) PlayAudioStreamForPlayer(playerid, "http://centova2.livehost.com.br:8335"); // FM MG

 	        if(listitem == 9) PlayAudioStreamForPlayer(playerid, "http://78.129.202.200:8040"); // ROCK

 	        if(listitem == 10) StopAudioStreamForPlayer(playerid), SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}x Rádio desligada com sucesso.");
 	    }
 	}

	if(dialogid == mudarsenha)
	{
		if(response == 1)
		{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(strlen(inputtext) < MIN_SENHA || strlen(inputtext) > MAX_SENHA)
			{
				format(STRX, sizeof(STRX), "A senha deve ter entre %d e %d caracteres!", MIN_SENHA, MAX_SENHA);
				SendClientMessage(playerid, Vermelho, STRX);

				format(STRX, sizeof(STRX), "{FFFFFF}Ops!\n\n{FFFF00}A senha deve ter entre %d e %d caracteres!\n{33AAFF}Digite sua nova senha:", MIN_SENHA, MAX_SENHA);
				ShowPlayerDialog(playerid, mudarsenha, DIALOG_STYLE_PASSWORD, "Senha", STRX, "Mudar", "Sair");
				return 1;
			}
			if(Confirma[playerid] == 0)
			{
				Confirma[playerid] = 1;

				format(PlayerInfo[playerid][cSenha], MAX_SENHA, "%s", inputtext);
				ShowPlayerDialog(playerid, mudarsenha, DIALOG_STYLE_PASSWORD, "Confirmando Senha", "{FF0000}Digite novamente sua senha:", "Confirmar", "Sair");
			}
			else
			{
				if(strcmp(inputtext, PlayerInfo[playerid][cSenha], true) == 0)
				{
					Confirma[playerid] = 0;
					DOF2_SetString(file, "Senha", inputtext);

					SendClientMessage(playerid, 0x6495EDAA, "Senha alterada com sucesso!");
				}
				else
				{
					Confirma[playerid] = 0;
					ShowPlayerDialog(playerid, mudarsenha, DIALOG_STYLE_PASSWORD, "Trocando Senha", "{FF00FF}A senha digitada não corresponde, tente novamente.\n{FF0000}Digite sua nova senha:", "Mudar", "Sair");
				}
			}
		}
	}

	if(dialogid == mudarnick)
	{
		if(response == 1)
		{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			format(filev, sizeof(filev), PASTA_VIPS, GetPlayerNameEx(playerid));
			format(filevpt, sizeof(filevpt), PASTA_VIPTS, GetPlayerNameEx(playerid));
			format(filevmt, sizeof(filevmt), PASTA_VIPMTS, GetPlayerNameEx(playerid));
			format(filedj, sizeof(filedj), PASTA_DJS, GetPlayerNameEx(playerid));
			if(strlen(inputtext) <= 0)
			{
				SendClientMessage(playerid, Vermelho, "Você tem que digitar um novo nick.");
				ShowPlayerDialog(playerid, mudarnick , DIALOG_STYLE_INPUT, "Trocando Nick", "{FFFFFF}Ops!\n\n{33AAFF}Digite seu novo nick:", "Mudar", "Sair");
				return 1;
			}
			if(strlen(inputtext) > 19)
			{
				SendClientMessage(playerid, Vermelho, "Você digitou um nick muito grande.");
				ShowPlayerDialog(playerid, mudarnick , DIALOG_STYLE_INPUT, "Trocando Nick", "{FFFFFF}Ops!\n\n{FF0000}Você digitou um nick muito grande.\n{33AAFF}Digite seu novo nick:", "Mudar", "Sair");
				return 1;
			}
			format(file2, sizeof(file2), PASTA_CONTAS, inputtext);
			format(filev2, sizeof(filev2), PASTA_VIPS, inputtext);
			format(filevpt2, sizeof(filevpt2), PASTA_VIPTS, inputtext);
			format(filevmt2, sizeof(filevmt2), PASTA_VIPMTS, inputtext);
			format(filedj2, sizeof(filedj2), PASTA_DJS, inputtext);
			if(DOF2_FileExists(file2))
			{
				SendClientMessage(playerid, Vermelho, "O nick que você digitou já existe!");
				ShowPlayerDialog(playerid, mudarnick, DIALOG_STYLE_INPUT, "Trocando Nick", "{FFFFFF}Ops!\n\n{FF0000}O nick que você digitou já existe!\n{33AAFF}Digite outro nick:", "Mudar", "Sair");
			}
			else
			{
				for(new i=0; i<sizeof(BadNameChars); i++)
				{
					if(strfind(inputtext, BadNameChars[i], true) != -1 || strlen(inputtext) > 23)
					{
						SendClientMessage(playerid, Vermelho, "O nick que você digitou não é permitido!");
						ShowPlayerDialog(playerid, mudarnick, DIALOG_STYLE_INPUT, "Trocando Nick", "{FFFFFF}Ops!\n\n{FF0000}Use o formato \"Nome_Sobrenome\" em seu novo nick!\n{33AAFF}Digite outro nick:", "Mudar", "Sair");
						return 1;
					}
				}
				if(!strcmp(inputtext, "com", true, 3) || !strcmp(inputtext, "lpt", true, 3) || !strcmp(inputtext, "ipt", true, 3))
				{
					if(inputtext[3] >= '0' && inputtext[3] <= '9' && inputtext[4] == '\0')
					{
						SendClientMessage(playerid, Vermelho, "O nick que você digitou não é permitido!");
						ShowPlayerDialog(playerid, mudarnick, DIALOG_STYLE_INPUT, "Trocando Nick", "{FFFFFF}Ops!\n\n{FF0000}Use o formato \"Nome_Sobrenome\" em seu novo nick!\n{33AAFF}Digite outro nick:", "Mudar", "Sair");
						return 1;
					}
				}
				else if(!strcmp(inputtext, "clock$", true, 6))
				{
					SendClientMessage(playerid, Vermelho, "O nick que você digitou não é permitido!");
					ShowPlayerDialog(playerid, mudarnick, DIALOG_STYLE_INPUT, "Trocando Nick", "{FFFFFF}Ops!\n\n{FF0000}Use o formato \"Nome_Sobrenome\" em seu novo nick!\n{33AAFF}Digite outro nick:", "Mudar", "Sair");
					return 1;
				}
				else
				{
					#if _CHANGE_NAME_BEFORE_KICK == true
					// Os jogadores não podem colocar o nosso nome temporário...
					// este nome é "________________", por padrão.
					if(!strcmp(inputtext, szTmpKickName, true, MAX_PLAYER_NAME))
					{
						SendClientMessage(playerid, Vermelho, "O nick que você digitou não é permitido!");
						ShowPlayerDialog(playerid, mudarnick, DIALOG_STYLE_INPUT, "Trocando Nick", "\t{FFFFFF}Ops!\n{33AAFF}Digite outro nick:", "Mudar", "Sair");
						return 1;
					}
					#endif
				}
				if(DOF2_GetInt(file, "Casado") == 1)
				{
					new casou[MAX_PLAYER_NAME];

					format(casou, sizeof(casou), PASTA_CONTAS, DOF2_GetString(file, "CasouCom"));
					if(DOF2_FileExists(casou))
					{
						DOF2_SetString(casou, "CasouCom", inputtext);
					}
				}
				for(new c = 0; c < MAX_CASAS; c++)
				{
					format(string, sizeof(string), PASTA_CASAS, c);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						DOF2_SetString(string, "Dono", inputtext);
					}
				}
				for(new p = 0; p < MAX_PROPS; p++)
				{
					format(string, sizeof(string), PASTA_PROPS, p);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						DOF2_SetString(string, "Dono", inputtext);
					}
				}
				for(new c = 0; c < MAX_CONCES; c++)
				{
					format(string, sizeof(string), PASTA_CONCE, c);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						DOF2_SetString(string, "Dono", inputtext);
					}
				}
				for(new portao = 0; portao < MAX_PORTOES; portao++)
				{
					format(string, sizeof(string), PASTA_PORTOES, portao);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						DOF2_SetString(string, "Dono", inputtext);
					}
					if(strcmp(DOF2_GetString(string, "Convidado1"), GetPlayerNameEx(playerid), false) == 0)
					{
						DOF2_SetString(string, "Convidado1", inputtext);
					}
					if(strcmp(DOF2_GetString(string, "Convidado2"), GetPlayerNameEx(playerid), false) == 0)
					{
						DOF2_SetString(string, "Convidado2", inputtext);
					}
					if(strcmp(DOF2_GetString(string, "Convidado3"), GetPlayerNameEx(playerid), false) == 0)
					{
						DOF2_SetString(string, "Convidado3", inputtext);
					}
				}
				for(new g = 0; g < MAX_GANGS; g++)
				{
				    format(string, sizeof(string), "gangs/%d.gang", g);
					if(DOF2_GetInt(string, "Lider") == 1 && strcmp(DOF2_GetString(string, "Lider"), GetPlayerNameEx(playerid), true) == 0)
					{
				        DOF2_SetString(string, "Lider", inputtext);
					}
					if(DOF2_GetInt(string, "TMembros") == 1 && strcmp(DOF2_GetString(string, "Membros"), GetPlayerNameEx(playerid), false) == 0)
					{
					    DOF2_SetString(string, "Membros", inputtext);
					}
				}
				format(string, sizeof(string), "{FF0000}O(a) {FFFFFF}%s {FF0000}alterou o seu nick para: {FFFFFF}%s", GetPlayerNameEx(playerid), inputtext);
				SendClientMessageToAll(Vermelho, string);

				RenameFileAccount(file, file2);
				RenameFileVIP(filev, filev2);
				RenameFileVIPT(filevpt, filevpt2);
				RenameFileVIPMT(filevmt, filevmt2);
				RenameFileDJ(filedj, filedj);
				SetPlayerName(playerid, inputtext);

				ShowPlayerDialog(playerid, mudarnick2, DIALOG_STYLE_PASSWORD, "Senha", "{FFA500}Agora coloque a senha para sua nova conta:", "OK", "Sair");
			}
		}
	}

	if(dialogid == mudarnick2)
	{
		if(response == 1)
		{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(strlen(inputtext) < MIN_SENHA || strlen(inputtext) > MAX_SENHA)
			{
				format(STRX, sizeof(STRX), "A senha deve ter entre %d e %d caracteres!", MIN_SENHA, MAX_SENHA);
				SendClientMessage(playerid, Vermelho, STRX);

				format(STRX, sizeof(STRX), "{FFFFFF}Ops!\n\n{FFFF00}A senha deve ter entre %d e %d caracteres!\n{33AAFF}Coloque uma senha para sua nova conta:", MIN_SENHA, MAX_SENHA);
				ShowPlayerDialog(playerid, mudarnick2, DIALOG_STYLE_PASSWORD, "Senha", STRX, "OK", "Sair");
				return 1;
			}
			if(Confirma[playerid] == 0)
			{
				Confirma[playerid] = 1;

				format(PlayerInfo[playerid][cSenha], MAX_SENHA, "%s", inputtext);
				ShowPlayerDialog(playerid, mudarnick2, DIALOG_STYLE_PASSWORD, "Confirmando Senha", "{FF0000}Digite novamente sua senha:", "Confirmar", "Sair");
			}
			else
			{
				if(strcmp(inputtext, PlayerInfo[playerid][cSenha], true) == 0)
				{
					Confirma[playerid] = 0;
					DOF2_SetString(file, "Senha", inputtext);
					DOF2_SetInt(file, "MN", 0);

					ClearChatbox(playerid, 5);
					SendClientMessage(playerid, 0x6495EDAA, "Nick alterado com sucesso!");
					SendClientMessage(playerid, Vermelho, "» Agora mude seu nick no início do 'SA-MP'.");
					SendClientMessage(playerid, BLUEWHITE, "» E entre novamente com o novo nick.");
					SendClientMessage(playerid, Blue, "» E divirta-se.");
				}
				else
				{
					Confirma[playerid] = 0;
					ShowPlayerDialog(playerid, mudarnick2, DIALOG_STYLE_PASSWORD, "Trocando Senha", "{FF00FF}A senha digitada não corresponde, tente novamente.\n{FF0000}Digite sua nova senha:", "Mudar", "Sair");
				}
			}
		}
		else
		{
			ShowPlayerDialog(playerid, mudarnick2, DIALOG_STYLE_PASSWORD, "Senha", "{FFFFFF}Ops!\n\n{FFFF00}Você já começou a mudar seu nick!\n{33AAFF}Agora termine e coloque uma senha para sua nova conta:", "OK", "Sair");
		}
	}

	if(dialogid == depositar)
	{
		if(response == 1)
		{
			new valor;

			if(sscanf(inputtext, "d", valor))
			{
				ShowPlayerDialog(playerid, depositar, DIALOG_STYLE_INPUT, "Menu Banco", "Quantia incorreta!\nQuantia à depositar:", "Depositar", "Cancelar");
				return 1;
			}
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(DOF2_GetInt(file, "ContaBancaria") == 1)
			{
				if(GetPlayerGrana(playerid) > valor-1 && valor > 0)
				{
					GivePlayerGrana(playerid, -valor);
					DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+valor);

					format(string, sizeof(string), "[BANCO] Você depositou a quantia de $%d.", valor);
					SendClientMessage(playerid, 0x6495EDAA, string);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[BANCO] Você não tem todo este dinheiro.");
				}

			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[BANCO] Você não tem uma conta bancária.");
			}
		}
	}

	if(dialogid == sacar)
	{
		if(response == 1)
		{
			new valor;

			if(sscanf(inputtext, "d", valor))
			{
				ShowPlayerDialog(playerid, sacar, DIALOG_STYLE_INPUT, "Menu Banco", "Quantia incorreta!\nQuantia a sacar:", "Sacar", "Cancelar");
				return 1;
			}
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(DOF2_GetInt(file, "ContaBancaria") == 1)
			{
				if(DOF2_GetInt(file, "SaldoBancario") > valor && valor > 0)
				{
					DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")-valor);
					GivePlayerGrana(playerid, valor);

					format(string, sizeof(string), "[BANCO] Você sacou a quantia de $%d.", valor);
					SendClientMessage(playerid, 0x6495EDAA, string);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[BANCO] Você não tem todo este dinheiro.");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[BANCO] Você não tem uma conta bancária.");
			}
		}
	}

	if(dialogid == banco)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "ContaBancaria") == 0)
				{
					if(GetPlayerGrana(playerid) > 299)
					{
						DOF2_SetInt(file, "ContaBancaria", 1);
						GivePlayerGrana(playerid, -300);

						DOF2_SetInt(file, "SaldoBancario", 300);
						SendClientMessage(playerid, 0x00954AAA, "[BANCO DO BRASIL] {FFFFFF}Você abriu sua conta bancária e gastou {17881B}$300.");
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "[BANCO DO BRASIL] {FFFFFF}ara você ter uma conta no banco será nescessaário {17881B}$300.");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[BANCO DO BRASIL] {FFFFFF}Você já tem uma conta bancária.");
				}
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, depositar, DIALOG_STYLE_INPUT, "Deposito", "{#D15FEE}Digite o Valor do Depósito:", "Depositar", "Sair");
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, sacar, DIALOG_STYLE_INPUT, "Sacar", "{D15FEE}Digite o valor do saque:", "Sacar", "Sair");
			}
			if(listitem == 3)
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "ContaBancaria") == 1)
				{
					format(string, sizeof(string), "[SALDO BANCARIO] {FFFFFF}Seu saldo atual é de: {17881B}$%d{FFFFFF}.", DOF2_GetInt(file, "SaldoBancario"));
					SendClientMessage(playerid, 0x6495EDAA, string);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[BANCO] {FFFFFF}Você não tem uma conta bancária.");
				}
			}
		}
		if(listitem == 4)
		{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(DOF2_GetInt(file, "rouboubanco") == 0)
			{
				if(DOF2_GetInt(file, "Profissao") == Assaltante || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
				{
					new Float:x, Float:y, Float:z;

					DOF2_SetInt(file, "Procurado", 1);
					DOF2_SetInt(file, "rouboubanco", 1);
					Procurados[playerid]= 1;

					SetPlayerWantedLevel(playerid, 6);
					GivePlayerGrana(playerid, 10000);

					GetPlayerPos(playerid, x, y, z);
					SetTimerEx("CriarExplosao", 2500, false, "fffdf", x, y, z, 2, 50.0);

					SetPlayerAttachedObject(playerid, 10, 1550, 15, 0.057000, 0.214000, -0.174000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000);
					GameTextForPlayer(playerid, "~w~Assalto Efetuado ~g~+$6000", 1000, 4);
					format(STRX, sizeof(STRX), "{FFFF00}[{FFFFFF}CAMÊRA{FFFF00}] {FFFFFF}O Bandido {FFFF00}%s{FFFFFF} assaltou o banco e está sendo procurado pela {FF0000}polícia!", GetPlayerNameEx(playerid));
					SendClientMessageToAll(msgdm, STRX);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Voce não é assaltante!");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você já assaltou o banco aguarde você upar!");
			}
		}
		if(listitem == 5)
		{
			ShowPlayerDialog(playerid, Emprestimo, DIALOG_STYLE_LIST, "{FFFFFF}Escolha seu Emprestimo - Valor/Level", "{FFFFFF}Emprestimo 80000/50\n{FFFFFF}Emprestimo 160000/100\n{FFFFFF}Emprestimo 230000/150\n{FFFFFF}Pagar Emprestimo", "OK", "Cancelar");
		}
	}

     //emprestimo
	if(dialogid == Emprestimo1)
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}1000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 1);
				DOF2_SetInt(file, "Emprestimo", 85000);
				GivePlayerGrana(playerid, 80000);
			}
			if(listitem == 1)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}2000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 2);
				DOF2_SetInt(file, "Emprestimo", 85000);
				GivePlayerGrana(playerid, 80000);
			}
			if(listitem == 2)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}3000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 3);
				DOF2_SetInt(file, "Emprestimo", 85000);
				GivePlayerGrana(playerid, 80000);
			}
			if(listitem == 3)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}4000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 4);
				DOF2_SetInt(file, "Emprestimo", 85000);
				GivePlayerGrana(playerid, 80000);
			}
			if(listitem == 4)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}5000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 5);
				DOF2_SetInt(file, "Emprestimo", 85000);
				GivePlayerGrana(playerid, 80000);
			}
		}
	}

	if(dialogid == Emprestimo2)
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}1000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 1);
				DOF2_SetInt(file, "Emprestimo", 165000);
				GivePlayerGrana(playerid, 160000);
			}
			if(listitem == 1)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}2000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 2);
				DOF2_SetInt(file, "Emprestimo", 165000);
				GivePlayerGrana(playerid, 160000);
			}
			if(listitem == 2)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}3000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 3);
				DOF2_SetInt(file, "Emprestimo", 165000);
				GivePlayerGrana(playerid, 160000);
			}
			if(listitem == 3)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}4000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 4);
				DOF2_SetInt(file, "Emprestimo", 165000);
				GivePlayerGrana(playerid, 160000);
			}
			if(listitem == 4)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}5000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 5);
				DOF2_SetInt(file, "Emprestimo", 165000);
				GivePlayerGrana(playerid, 160000);
			}
		}
	}

	if(dialogid == Emprestimo3)
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}1000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 1);
				DOF2_SetInt(file, "Emprestimo", 235000);
				GivePlayerGrana(playerid, 230000);
			}
			if(listitem == 1)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}2000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 2);
				DOF2_SetInt(file, "Emprestimo", 235000);
				GivePlayerGrana(playerid, 230000);
			}
			if(listitem == 2)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}3000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 3);
				DOF2_SetInt(file, "Emprestimo", 235000);
				GivePlayerGrana(playerid, 230000);
			}
			if(listitem == 3)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}4000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 4);
				DOF2_SetInt(file, "Emprestimo", 235000);
				GivePlayerGrana(playerid, 230000);
			}
			if(listitem == 4)					  // emprestimo1
			{
				SendClientMessage(playerid, 0x6C6C6CAA, "Você pagara {FFFFFF}5000 {6C6C6C}reais por dia sempre deposite na sua conta esse valor.");
				DOF2_SetInt(file, "TEmprestimo", 5);
				DOF2_SetInt(file, "Emprestimo", 235000);
				GivePlayerGrana(playerid, 230000);
			}
		}
	}

	if(dialogid == Emprestimo)
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, sizeof(aname));
		format(file, sizeof(file), PASTA_CONTAS, aname);
		if(response == 1)
		{
			if(listitem == 0)					  // emprestimo1
			{
				if(DOF2_GetInt(file, "Level") > 50)
				{
				if(DOF2_GetInt(file, "Emprestimo") < 2)
				{

					ShowPlayerDialog(playerid, Emprestimo1, DIALOG_STYLE_LIST, "{FFFFFF}Escolha o valor a ser pago por salario", "{FFFFFF}1000\n{FFFFFF}2000\n{FFFFFF}3000\n{FFFFFF}4000\n{FFFFFF}5000", "OK", "cancelar");

				}
				else
				{
					format(string, sizeof(string), "[ATENÇÃO]{FFFFFF}Você ja fez um emprestimo, pague o antes!");
					SendClientMessage(playerid, Vermelho, string);
				}
				}
				else
				{
					format(string, sizeof(string), "[ATENÇÃO]{FFFFFF}Requer: Level {ff0000}%d/50.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);

				}
			}
			if(listitem == 1)					  // emprestimo1
			{
				if(DOF2_GetInt(file, "Level") > 100)
				{
				if(DOF2_GetInt(file, "Emprestimo") < 2)
				{
					ShowPlayerDialog(playerid, Emprestimo2, DIALOG_STYLE_LIST, "{FFFFFF}Escolha o valor a ser pago por salario", "{FFFFFF}1000\n{FFFFFF}2000\n{FFFFFF}3000\n{FFFFFF}4000\n{FFFFFF}5000", "OK", "cancelar");
				}
				else
				{
					format(string, sizeof(string), "Você ja fez um emprestimo, pague o antes!");
					SendClientMessage(playerid, Vermelho, string);
				}
				}
				else
				{
					format(string, sizeof(string), "[ATENÇÃO]{FFFFFF}Requer: Level {ff0000} %d/100.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);

				}
			}
			if(listitem == 2)					  // emprestimo1
			{
				if(DOF2_GetInt(file, "Level") > 150)
				{
				if(DOF2_GetInt(file, "Emprestimo") < 2)
				{
					ShowPlayerDialog(playerid, Emprestimo3, DIALOG_STYLE_LIST, "{FFFFFF}Escolha o valor a ser pago por salario", "{FFFFFF}1000\n{FFFFFF}2000\n{FFFFFF}3000\n{FFFFFF}4000\n{FFFFFF}5000", "OK", "cancelar");
				}
				else
				{
					format(string, sizeof(string), "[ATENÇÃO]{FFFFFF}Você ja fez um emprestimo, pague o antes!");
					SendClientMessage(playerid, Vermelho, string);
				}
				}
				else
				{
					format(string, sizeof(string), "[ATENÇÃO]{FFFFFF}Requer: Level {ff0000} %d/150.", DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(playerid, Vermelho, string);

				}
			}
			if(listitem == 3)					  // emprestimo1
			{
				if(DOF2_GetInt(file, "Emprestimo") == 0)
				{
					format(string, sizeof(string), "[ATENÇÃO]{FFFFFF}Você não tem um emprestimo a pagar!");
					SendClientMessage(playerid, Vermelho, string);

				}
				else
				{
					GivePlayerGrana(playerid, -DOF2_GetInt(file, "Emprestimo"));
					DOF2_SetInt(file, "TEmprestimo", 0);
					DOF2_SetInt(file, "Emprestimo", 0);
				}
			}
		}
	}
	if(dialogid == annuncios)
	{
		new strx[257];
		if(response == 1)
		{
			if(listitem == 0)
			{
				format(strx, sizeof(strx), "{3655E0}[%s] {FFFFFF}: {A7A2A2}O Seu Veiculo esta precisando de reparos? Digite: {3655E0}/Mecanico {FFFFFF}[Local]", GetPlayerNameEx(playerid));
				SendClientMessageToAll(C_Mecanico, strx);
			}
			if(listitem == 1)
			{
				format(strx, sizeof(strx), "{3655E0}[%s] {FFFFFF} {A7A2A2} Está Procurando por uma casa ? Digite {3655E0}/Sms {FFFFFF}[ID:%d] [Mensagem]", GetPlayerNameEx(playerid), playerid);
				SendClientMessageToAll(C_Imobiliario, strx);
			}
			if(listitem == 2)
			{
				format(strx, sizeof(strx), "{3655E0}[%s] {FFFFFF} {A7A2A2}Esta Procurando Por um bom Investimento ? Digite {3655E0}/Sms {FFFFFF}[ID:%d] [Mensagem]", GetPlayerNameEx(playerid), playerid);
				SendClientMessageToAll(C_Empresario, strx);
				}
			if(listitem == 3)
			{
				format(strx, sizeof(strx), "{3655E0}[%s] {FFFFFF}: {A7A2A2}Esta Procurando Por um Motorista Particula  ? Digite {3655E0}/Sms {FFFFFF}[ID:%d] [Mensagem]", GetPlayerNameEx(playerid), playerid);
				SendClientMessageToAll(C_MotoristaP, strx);
			}
			if(listitem == 4)
			{
				format(strx, sizeof(strx), "{3655E0}[%s] {FFFFFF}: {A7A2A2}Precisa ir algum lugar mas está sem um veiculo Digite{3655E0}/Taxi {FFFFFF}[Lugar]", GetPlayerNameEx(playerid));
				SendClientMessageToAll(C_Taxista, strx);
			}
			if(listitem == 5)
			{
				format(strx, sizeof(strx), "{3655E0}[%s] {FFFFFF}: {A7A2A2}Está precisando de um veiculo rapido e barato Digite {3655E0}/Uber {FFFFFF}[Lugar]", GetPlayerNameEx(playerid));
				SendClientMessageToAll(C_Uber, strx);
			}
			if(listitem == 6)
			{
				format(strx, sizeof(strx), "{3655E0}[%s] {FFFFFF}: {A7A2A2}Turismo por toda los santos mais informaçôes Digite :{3655E0}/Sms {FFFFFF}[ID:%d] [Mensagem]", GetPlayerNameEx(playerid), playerid);
				SendClientMessageToAll(C_MOnibus, strx);
		    }
        }
	}
//fim emprestimo
	if(dialogid == valorentrada)
	{
		new Entrada;
		new strx[257];

		if(sscanf(inputtext, "d", Entrada))
		{
			ShowPlayerDialog(playerid, valorentrada, DIALOG_STYLE_INPUT, "Valor da Entrada", "Valor incorreta!\nDigite o valor da entrada de 0 a 1200:", "Ok", "Cancelar");
			return 1;
		}
		if(Entrada >= 0 && Entrada <= 1200)
		{
			for(new Emp = 0; Emp < MAX_Emp; Emp++)
			{
				format(string, sizeof(string), PASTA_Emp, Emp);
				if(DOF2_FileExists(string))
				{
					if(DOF2_GetInt(string, "TDono") == 1)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{

							DOF2_SetInt(string, "Entrada", Entrada);

							format(strx, sizeof(strx), "{FFFFFF}Você determinol {F08080}$%d {FFFFFF}no valor da entrada!", Entrada);
							SendClientMessage(playerid, Amarelo, strx);

       						format(STRX, sizeof(STRX), "{FFFFFF}\t%s\nDono: {F08080}%s\n{FFFFFF}Emp ID: {F08080}%d\n{FFFFFF}Valor Entrada: {F08080}$%d\n{FFFFFF}Último uso: {F08080}%s", DOF2_GetString(string, "Nome"), GetPlayerNameEx(playerid), Emp, DOF2_GetInt(string, "Entrada"), DOF2_GetString(string, "DataSet"));

							UpdateDynamic3DTextLabelText(Etextoid[Emp], -1, STRX);
						}
					}

				}
			}
		}
	}
// loterica
	if(dialogid == lote)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, multa, DIALOG_STYLE_LIST, "Multas", "Pagar\nSomar", "OK", "Cancelar");
			}
		}
	}
	if(dialogid == multa)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(GetPlayerGrana(playerid) >= DOF2_GetInt(file, "VM"))
				{
					GivePlayerGrana(playerid, -DOF2_GetInt(file, "VM"));
					format(file2, sizeof(file2), "[DETRAN - MULTAS]{FFFFFF}Você pagou {F2FC2E}$%d {FFFFFF}de suas multas!", DOF2_GetInt(file, "VM"));
					SendClientMessage(playerid, Amarelo, file2);
					format(string, sizeof(string),"{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}pagou as multas no {ffffff}/detran.", GetPlayerNameEx(playerid));
					SendClientMessageToAll(-1, string);
					DOF2_SetInt(file, "QM", 0);
					DOF2_SetInt(file, "VM", 0);
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem dinheiro suficiente!");
					return 1;
				}
			}
			if(listitem == 1)
			{
				format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(playerid));
				{
					format(file, sizeof(file), "[DETRAN - MULTAS]{FFFFFF}Você tem {F2FC2E}%d {FFFFFF}pontos na carteira!", DOF2_GetInt(file2, "QM"));
					SendClientMessage(playerid, Amarelo, file);

					format(file, sizeof(file), "[DETRAN - MULTAS]{FFFFFF}Você tem de pagar {F2FC2E}$%d {FFFFFF}de suas multas!", DOF2_GetInt(file2, "VM"));
					SendClientMessage(playerid, Amarelo, file);
				}
			}

		}
	}
	
	if(dialogid == hacker)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
			    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			    if(DOF2_GetInt(file, "hackeou") == 0)
				{
					if(DOF2_GetInt(file, "Profissao") == Hacker || PlayerInfo[playerid][SCON] == true)
					{
					    DOF2_SetInt(file, "Procurado", 1);
					    DOF2_SetInt(file, "hackeou", 1);
				        Procurados[playerid]= 1;
					    SetPlayerWantedLevel(playerid, 6);
					    GivePlayerGrana(playerid, 5000);


					    SendClientMessage(playerid, -1, "{1E90FF}Você ganhou {FFFFFF}$5000.");
					    format(string, sizeof(string), "{FFFF00}[{FFFFFF}CAMÊRA{FFFF00}] {1E90FF}O(a) Hacker %s invadiu a Host do servidor e ganhou $5000!", GetPlayerNameEx(playerid));
					    SendClientMessageToAll(msgdm, string);

					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não é Hacker!");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você já hackeou a Host do servidor, aguarde você upar!.");
				}
			}
			if(listitem == 1)
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "hackeou") == 0)
				{
					if(DOF2_GetInt(file, "Profissao") == Hacker || PlayerInfo[playerid][SCON] == true)
					{
					    DOF2_SetInt(file, "Procurado", 1);
					    DOF2_SetInt(file, "hackeou", 1);
				        Procurados[playerid]= 1;
						DOF2_SetInt(file, "Level", DOF2_GetInt(file, "Level")+2);
					    SetPlayerWantedLevel(playerid, 6);
					    SendClientMessage(playerid, -1, "{1E90FF}Você ganhou {FFFFFF}2 {1E90FF}Niveis.");
					    format(string, sizeof(string), "{FFFF00}[{FFFFFF}CAMÊRA{FFFF00}] {1E90FF}O(a) Hacker %s invadiu a Host do servidor e ganhou 2 niveis!", GetPlayerNameEx(playerid));
					    SendClientMessageToAll(msgdm, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não é Hacker!");
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você já hackeou a Host do servidor, aguarde você upar!");
				}
			}
			if(listitem == 2)
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "hackeou") == 0)
				{
					if(DOF2_GetInt(file, "Profissao") == Hacker || PlayerInfo[playerid][SCON] == true)
					{
						DOF2_SetInt(file, "Procurado", 1);
						DOF2_SetInt(file, "hackeou", 1);
						Procurados[playerid]= 1;
						SetPlayerWantedLevel(playerid, 6);
						DOF2_SetInt(file, "CASH", DOF2_GetInt(file, "CASH")+10);
						SendClientMessage(playerid, -1, "{1E90FF}Você ganhou {FFFFFF}10 {1E90FF}CASH");
					    format(string, sizeof(string), "{FFFF00}[{FFFFFF}CAMÊRA{FFFF00}] {1E90FF}O(a) Hacker %s invadiu a Host do servidor e ganhou 10 cash!", GetPlayerNameEx(playerid));
					    SendClientMessageToAll(msgdm, string);
					}
					else
					{
						SendClientMessage(playerid, Vermelho, "Você não é Hacker!");
					}
				}
				else
				{
				SendClientMessage(playerid, Vermelho, "Você já hackeou a Host do servidor, aguarde você upar!");
				}
			}
		}
	}
	if(dialogid == lojabike)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(response == 1)
		{
			if(listitem == 0)
			{

						PlayerAddConceVehicleForPlayer(playerid, 481, 1200, 1126.9069,-1763.9059,13.5975, 90.000, -1, -1);
			}
			if(listitem == 1)
			{

						PlayerAddConceVehicleForPlayer(playerid, 509, 1200, 1126.9069,-1763.9059,13.5975, 90.000, -1, -1);
			}
			if(listitem == 2)
			{

						PlayerAddConceVehicleForPlayer(playerid, 510, 1200, 1126.9069,-1763.9059,13.5975, 90.000, -1, -1);
			}
		}
	}
	if(dialogid == carrocarreta)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(response == 1)
		{
			if(listitem == 0)
			{

						PlayerAddConceVehicleForPlayer(playerid, 435, 120000, 2659.0583,-1707.0051,9.3238, 90.000, -1, -1);
			}
			if(listitem == 1)
			{

						PlayerAddConceVehicleForPlayer(playerid, 450, 120000, 2692.1633,-1673.2999,9.4668, 90.000, -1, -1);
			}
			if(listitem == 2)
			{

						PlayerAddConceVehicleForPlayer(playerid, 584, 120000, 2712.6226,-1675.1045,9.5477, 90.000, -1, -1);
			}
			if(listitem == 3)
			{

						PlayerAddConceVehicleForPlayer(playerid, 591, 120000, 2749.6863,-1672.8512,9.7012, 90.000, -1, -1);
			}
		}
	}
	if(dialogid == carrodiversos)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(response == 1)
		{
			if(listitem == 0)
			{

						PlayerAddConceVehicleForPlayer(playerid, 571, 100000, 1757.9851,-1745.2750,13.5496, 90.000, -1, -1);
			}
			if(listitem == 1)
			{

						PlayerAddConceVehicleForPlayer(playerid, 572, 100000, 1791.8470,-1749.6543,13.5469, 90.000, -1, -1);
			}
			if(listitem == 2)
			{

						PlayerAddConceVehicleForPlayer(playerid, 424, 100000, 1766.1113,-1745.3447,13.5493, 90.000, -1, -1);
			}
			if(listitem == 3)
			{

						PlayerAddConceVehicleForPlayer(playerid, 431, 100000, 1783.1183,-1748.2491,13.5487, 90.000, -1, -1);
			}
			if(listitem == 4)
			{

						PlayerAddConceVehicleForPlayer(playerid, 471, 100000, 1757.9851,-1745.2750,13.5496, 90.000, -1, -1);
			}
			if(listitem == 5)
			{

						PlayerAddConceVehicleForPlayer(playerid, 483, 100000, 1791.8470,-1749.6543,13.5469, 90.000, -1, -1);
			}
			if(listitem == 6)
			{

						PlayerAddConceVehicleForPlayer(playerid, 553, 400000, 1766.1113,-1745.3447,13.5493, 90.000, -1, -1);
			}
			if(listitem == 7)
			{

						PlayerAddConceVehicleForPlayer(playerid, 592, 1000000, 1783.1183,-1748.2491,13.5487, 90.000, -1, -1);
			}
			if(listitem == 8)
			{

						PlayerAddConceVehicleForPlayer(playerid, 539, 100000, 1791.8470,-1749.6543,13.5469, 90.000, -1, -1);
			}
            if(listitem == 9)
			{

						PlayerAddConceVehicleForPlayer(playerid, 579, 130000, 1757.9851,-1745.2750,13.5496, 90.000, -1, -1);
			}
		}
	}
	if(dialogid == carroviaturas)						  //  VIATURAS
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(response == 1)
		{
			if(listitem == 0)
			{

						PlayerAddConceVehicleForPlayer(playerid, 427, 120000, 1757.9851,-1745.2750,13.5496, 90.000, -1, -1);
			}
			if(listitem == 1)
			{

						PlayerAddConceVehicleForPlayer(playerid, 490, 150000, 1766.1113,-1745.3447,13.5493, 90.000, -1, -1);
			}
			if(listitem == 2)
			{

						PlayerAddConceVehicleForPlayer(playerid, 528, 120000, 1771.8450,-1747.3427,13.5483, 90.000, -1, -1);
			}
			if(listitem == 3) // squallo
			{

						PlayerAddConceVehicleForPlayer(playerid, 596, 120000, 1783.1183,-1748.2491,13.5487, 90.000, -1, -1);
			}
			if(listitem == 4) // launch
			{

						PlayerAddConceVehicleForPlayer(playerid, 601, 150000, 1791.8470,-1749.6543,13.5469, 90.000, -1, -1);
         	}
		}
	}
    // =================================================================================
    if(dialogid==bandana)
	{
		if(response)
		{
			if(listitem==0)
			{
            SetPlayerAttachedObject( playerid, 0, 18917, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
			}
			if(listitem==1)
			{
            SetPlayerAttachedObject( playerid, 0, 18913, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
			}
			if(listitem==2)
			{
            SetPlayerAttachedObject( playerid, 0, 18916, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
			}
			if(listitem==3)
			{
            SetPlayerAttachedObject(playerid, 0, 18915, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
			}
			if(listitem==4)
			{
            SetPlayerAttachedObject(playerid, 0, 18912 , 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
			}
			if(listitem==5)
			{
            SetPlayerAttachedObject(playerid, 0, 18911 , 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
			}
			if(listitem==6)
			{
            SetPlayerAttachedObject( playerid, 0, 18914, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
			}
			if(listitem==7)
			{
            SetPlayerAttachedObject(playerid, 0, 18918, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
			}
			if(listitem==8)
			{
            SetPlayerAttachedObject(playerid, 0, 18920 , 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
			}
			if(listitem==9)
            {
            SetPlayerAttachedObject(playerid, 0, 18919 , 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
			}
			if(listitem==10)
			{
            for(new i;i<5;i++) RemovePlayerAttachedObject(playerid,i);
			}
		}
        return 1;
	}
     // =================================================================================
	if(dialogid == menuarmas)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, pistolas, DIALOG_STYLE_LIST, "Menu De Armas - Pistolas", "9MM Pistol\nPMM Silenciada\nDesert\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, microsmg, DIALOG_STYLE_LIST, "Menu De Armas - Micro Smgs", "Uzi\nTec-9\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, shotguns, DIALOG_STYLE_LIST, "Menu De Armas - Shotguns", "Shotgun\nSaw-Off Shotgun\nCombat Shotgun\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 3)
			{
				ShowPlayerDialog(playerid, SMGs, DIALOG_STYLE_LIST, "Menu De Armas - Smg", "MP5\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 4)
			{
				ShowPlayerDialog(playerid, rifle, DIALOG_STYLE_LIST, "Menu De Armas - Rifles", "Rifle\nSniper Rifle\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 5)
			{
				ShowPlayerDialog(playerid, assalto, DIALOG_STYLE_LIST, "Menu De Armas - Assalto", "AK-47\nM4\nVoltar", "OK", "Cancelar");
			}
			if(listitem == 6)
			{
				ShowPlayerDialog(playerid, outras, DIALOG_STYLE_LIST, "Menu De Armas - Outras", "Explosivos Remoto\nGranadas\nMolotov's\nSpray\nExtintor\nSerra-Eletrica\nFaca\nVoltar", "OK", "Cancelar");
			}
		}
	}

	// =================================================================================
	if(dialogid == pistolas)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
												  // 9MM
				GivePlayerWeapon(playerid, 22, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 1)
			{
												  // PMM Silenciada
				GivePlayerWeapon(playerid, 23, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 2)
			{
												  // Desert
				GivePlayerWeapon(playerid, 24, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 3)
			{
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
		}
	}

	// =================================================================================
	if(dialogid == microsmg)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
												  // Uzi
				GivePlayerWeapon(playerid, 28, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
			}
			ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			if(listitem == 1)
			{
												  // TEc-9
				GivePlayerWeapon(playerid, 32, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma Parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
		}
	}

	// =================================================================================
	if(dialogid == shotguns)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
												  // Shotgun
				GivePlayerWeapon(playerid, 25, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 1)
			{
												  // Saw-off
				GivePlayerWeapon(playerid, 26, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 2)
			{
												  // Combat
				GivePlayerWeapon(playerid,27,99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem ==3 )
			{
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
		}
	}

	// =================================================================================
	if(dialogid == SMGs)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
												  // MP5
				GivePlayerWeapon(playerid, 29, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
		}
	}

	// =================================================================================
	if(dialogid == rifle)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
												  // Rifle
				GivePlayerWeapon(playerid, 33, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 1)
			{
												  // Sniper Rifle
				GivePlayerWeapon(playerid, 34, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
		}
	}

	// =================================================================================
	if(dialogid == assalto)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
												  // AK-47
				GivePlayerWeapon(playerid, 30, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 1)
			{
												  // M4
				GivePlayerWeapon(playerid, 31, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
		}
	}

	// =================================================================================
	if(dialogid == outras)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
												  // Explosivos Remoto
				GivePlayerWeapon(playerid, 39, 40);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 1)
			{
												  // Granadas
				GivePlayerWeapon(playerid, 16, 40);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 2)
			{
												  // Molotov's
				GivePlayerWeapon(playerid, 18, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 3)
			{
												  // Spray
				GivePlayerWeapon(playerid, 41, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 4)
			{
												  // Extintor
				GivePlayerWeapon(playerid, 42, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 5)
			{
												  // Serra-Eletrica
				GivePlayerWeapon(playerid, 9, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 6)
			{
												  // faca
				GivePlayerWeapon(playerid, 4, 99999);
				SendClientMessage(playerid, 0x008000AA, "Você comprou uma arma parabéns, não faça DM fora da favela.");
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
			if(listitem == 7)
			{
				ShowPlayerDialog(playerid, menuarmas, DIALOG_STYLE_LIST, "Menu De Armas", "Pistolas\nMicro Smg\nShotguns\nSMG\nRifles\nAssalto\nOutras", "OK", "Cancelar");
			}
		}
	}

	// ================================= Menu Tuning ===================================
	if(dialogid == tunar)						  // Menu
	{
		if(response == 1)
		{
			if(listitem == 0)					  // Rodas
			{
				ShowPlayerDialog(playerid, tunarroda, DIALOG_STYLE_LIST, "Rodas", "{33AAFF}Roda 1\n{9ACD32}Roda 2\n{FFA500}Roda 3\n{FFFF00}Roda 4\n{FF6600}Roda 5\n{00FF0C}Roda 6\n{00FF00}Roda 7\n{FF0000}Roda 8\n{FF6600}Roda 9\n{FF0000}Roda 10\n{00D700}Roda 11\n{660000}Roda 12\n{FFFF00}Roda 13\n{00D700}Roda 14\n{FFA500}Roda 15\n{8AD9FF}Roda 16\n{FFFFFF}Roda 17\n{8AD9FF}Voltar", "Instalar", "Cancelar");
			}
			if(listitem == 1)					  // Cores
			{
				ShowPlayerDialog(playerid, tunarcor, DIALOG_STYLE_LIST, "Cores", "{000000}Preto\n{FFFFFF}Branco\n{00FFFF}Azul Escuro\n{33AAFF}Azul Claro\n{00D700}Verde\n{FF0000}Vermelho\n{FFFF00}Amarelo\n{9955DE}Rosa\n{8AD9FF}Voltar", "Pintar", "Cancelar");
			}
			if(listitem == 2)					  // Paintjobs
			{
				ShowPlayerDialog(playerid, tunarpaint, DIALOG_STYLE_LIST, "Paintjobs", "{FF0000}Estilo 1\n{AFAFAF}Estilo 2\n{FFA500}Estilo 3\n{8AD9FF}Voltar", "Pintar", "Cancelar");
			}
			if(listitem == 3)					  // Neons
			{
				#if defined NeonsUser
				ShowPlayerDialog(playerid, NEON, DIALOG_STYLE_LIST, "Neons", "{00FFFF}Azul\n{00D700}Verde\n{FF0000}Vermelho\n{FFFF00}Amarelo\n{FFFFFF}Branco\n{9955DE}Rosa\n{660000}Nenhum\n{93C9FF}Voltar", "Instalar", "Cancelar");
				#else
				SendClientMessage(playerid, Cinza, "Temporariamente indisponível!");
				#endif
			}
			if(listitem == 4)					  // Nitro
			{
				AddVehicleComponent(car, 1010);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TNitro", 1);
							DOF2_SetInt(string, "Nitro", 1010);
							return 1;
						}
					}
				}
			}
			if(listitem == 5)					  // Suspensão
			{
				AddVehicleComponent(car, 1087);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TSuspensao", 1);
							DOF2_SetInt(string, "Suspensao", 1087);
							return 1;
						}
					}
				}
			}
			if(listitem == 6)					  // Subwoofer
			{

			}
			if(listitem == 7)					  // Míssil
			{
				#if defined MissilesUser
				ShowPlayerDialog(playerid, missiles, DIALOG_STYLE_LIST, "Míssil", "{FF0000}Instalar\n{00FFFF}Retirar\n{93C9FF}Voltar", "OK", "Cancelar");
				#else
				SendClientMessage(playerid, Amarelo, "Temporariamente indisponível!");
				#endif
			}
			if(listitem == 8)					  // AutoTuning
			{
				AutoTunningRun(car);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							if(DOF2_GetInt(string, "TRoda") == 1)
							{
								DOF2_SetInt(string, "TRoda", 0);
								RemoveVehicleComponent(car, DOF2_GetInt(string, "Roda"));
							}
							if(DOF2_GetInt(string, "TPaintjob") == 1)
							{
								DOF2_SetInt(string, "TPaintjob", 0);
								ChangeVehiclePaintjob(car, 3);
							}
							if(DOF2_GetInt(string, "TNitro") == 1)
							{
								DOF2_SetInt(string, "TNitro", 0);
								RemoveVehicleComponent(car, DOF2_GetInt(string, "Nitro"));
							}
							if(DOF2_GetInt(string, "TSuspensao") == 1)
							{
								DOF2_SetInt(string, "TSuspensao", 0);
								RemoveVehicleComponent(car, DOF2_GetInt(string, "Suspensao"));
							}
							if(DOF2_GetInt(string, "TNeon") == 1)
							{
								DOF2_SetInt(string, "TNeon", 0);
								ChangeVehicleNeon(car, 6);
							}
							DOF2_SetInt(string, "TAutoTunning", 1);
							return 1;
						}
					}
				}
			}
		}
	}

	if(dialogid == tunarroda)					  // Rodas
	{
		if(response == 1)
		{
			if(listitem == 0)					  // Estilo 1
			{
				AddVehicleComponent(car, 1084);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1084);
							return 1;
						}
					}
				}
			}
			if(listitem == 1)					  // Estilo 2
			{
				AddVehicleComponent(car, 1073);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1073);
							return 1;
						}
					}
				}
			}
			if(listitem == 2)					  // Estilo 3
			{
				AddVehicleComponent(car, 1075);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1075);
							return 1;
						}
					}
				}
			}
			if(listitem == 3)					  // Estilo 4
			{
				AddVehicleComponent(car, 1077);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1077);
							return 1;
						}
					}
				}
			}
			if(listitem == 4)					  // Estilo 5
			{
				AddVehicleComponent(car, 1079);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1079);
							return 1;
						}
					}
				}
			}
			if(listitem == 5)					  // Estilo 6
			{
				AddVehicleComponent(car, 1080);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1080);
							return 1;
						}
					}
				}
			}
			if(listitem == 6)					  // Estilo 7
			{
				AddVehicleComponent(car, 1074);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1074);
							return 1;
						}
					}
				}
			}
			if(listitem == 7)					  // Estilo 8
			{
				AddVehicleComponent(car, 1076);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1076);
							return 1;
						}
					}
				}
			}
			if(listitem == 8)					  // Estilo 9
			{
				AddVehicleComponent(car, 1078);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1078);
							return 1;
						}
					}
				}
			}
			if(listitem == 9)					  // Estilo 10
			{
				AddVehicleComponent(car, 1081);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1081);
							return 1;
						}
					}
				}
			}
			if(listitem == 10)					  // Estilo 11
			{
				AddVehicleComponent(car, 1082);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1082);
							return 1;
						}
					}
				}
			}
			if(listitem == 11)					  // Estilo 12
			{
				AddVehicleComponent(car, 1083);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1083);
							return 1;
						}
					}
				}
			}
			if(listitem == 12)					  // Estilo 13
			{
				AddVehicleComponent(car, 1085);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1085);
							return 1;
						}
					}
				}
			}
			if(listitem == 13)					  // Estilo 14
			{
				AddVehicleComponent(car, 1096);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1096);
							return 1;
						}
					}
				}
			}
			if(listitem == 14)					  // Estilo 15
			{
				AddVehicleComponent(car, 1097);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1097);
							return 1;
						}
					}
				}
			}
			if(listitem == 15)					  // Estilo 16
			{
				AddVehicleComponent(car, 1098);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1098);
							return 1;
						}
					}
				}
			}
			if(listitem == 16)					  // Estilo 16
			{
				AddVehicleComponent(car, 1025);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TRoda", 1);
							DOF2_SetInt(string, "Roda", 1025);
							return 1;
						}
					}
				}
			}
			if(listitem == 17)					  // Voltar
			{
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");
			}
		}
	}

	if(dialogid == tunarcor)					  // Cores
	{
		if(response == 1)
		{
			if(listitem == 0)					  // Preto
			{
				ChangeVehicleColor(car, 0, 0);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "Cor1", 0);
							DOF2_SetInt(string, "Cor2", 0);
							return 1;
						}
					}
				}
			}
			if(listitem == 1)					  // Branco
			{
				ChangeVehicleColor(car, 1, 1);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "Cor1", 1);
							DOF2_SetInt(string, "Cor2", 1);
							return 1;
						}
					}
				}
			}
			if(listitem == 2)					  // Azul Escuro
			{
				ChangeVehicleColor(car, 425, 425);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "Cor1", 425);
							DOF2_SetInt(string, "Cor2", 425);
							return 1;
						}
					}
				}
			}
			if(listitem == 3)					  // Azul Claro
			{
				ChangeVehicleColor(car, 2, 2);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "Cor1", 2);
							DOF2_SetInt(string, "Cor2", 2);
							return 1;
						}
					}
				}
			}
			if(listitem == 4)					  // Verde
			{
				ChangeVehicleColor(car, 16, 16);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "Cor1", 16);
							DOF2_SetInt(string, "Cor2", 16);
							return 1;
						}
					}
				}
			}
			if(listitem == 5)					  // Vermelho
			{
				ChangeVehicleColor(car, 3, 3);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "Cor1", 3);
							DOF2_SetInt(string, "Cor2", 3);
							return 1;
						}
					}
				}

			}
			if(listitem == 6)					  // Amarelo
			{
				ChangeVehicleColor(car, 6, 6);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "Cor1", 6);
							DOF2_SetInt(string, "Cor2", 6);
							return 1;
						}
					}
				}
			}
			if(listitem == 7)					  // Rosa
			{
				ChangeVehicleColor(car, 146, 146);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "Cor1", 146);
							DOF2_SetInt(string, "Cor2", 146);
							return 1;
						}
					}
				}
			}
			if(listitem == 8)					  // Voltar
			{
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");
			}
		}
	}

	if(dialogid == tunarpaint)					  // Paintjobs
	{
		if(response == 1)
		{
			if(listitem == 0)					  // Estilo 1
			{
				ChangeVehiclePaintjob(car, 0);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TPaintjob", 1);
							DOF2_SetInt(string, "Paintjob", 0);
							return 1;
						}
					}
				}
			}
			if(listitem == 1)					  // Estilo 2
			{
				ChangeVehiclePaintjob(car, 1);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TPaintjob", 1);
							DOF2_SetInt(string, "Paintjob", 1);
							return 1;
						}
					}
				}
			}
			if(listitem == 2)					  // Estilo 3
			{
				ChangeVehiclePaintjob(car, 2);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TPaintjob", 1);
							DOF2_SetInt(string, "Paintjob", 2);
							return 1;
						}
					}
				}
			}
			if(listitem == 3)					  // Voltar
			{
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");
			}
		}
	}

	if(dialogid == NEON)
	{
		if(response == 1)
		{
			if(listitem == 7)					  // Voltar
			{
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");
			}
			else
			{
				ChangeVehicleNeon(car, listitem);
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == car)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							DOF2_SetInt(string, "TNeon", 1);
							DOF2_SetInt(string, "Neon", listitem);
							return 1;
						}
					}
				}
			}
		}
	}

	// ================================= Míssil ======================================
	#if defined MissilesUser
	if(dialogid == missiles)
	{
		if(response == 1)
		{
			if(listitem == 0)					  // Instalar
			{
				format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
				if(DOF2_GetInt(file, "CartaoTelefonico") == 1)
			    {
		    		AddVehicleMissiles(GetPlayerVehicleID(playerid), 1.1, -0.2);
		    		ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");
		    		GameTextForPlayer(playerid, "~r~Missil instalado(s)!", 3500, 5);
		    	}
	     		else
	    		{
		    		SendClientMessage(playerid, Vermelho, "Você não tem um Kit de Missil");
	    		}
	    	}
			if(listitem == 1)					  // Retirar
			{
				RemoveVehicleMissiles(GetPlayerVehicleID(playerid));
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");
				GameTextForPlayer(playerid, "~r~Missil retirado(s)!", 3500, 5);
			}
			if(listitem == 2)					  // Voltar
			{
				ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");
			}
		}
	}
	#endif

    // ================================= Vcontrole =====================================
    #if defined VControleUser
	if(dialogid == vcontrole)
	{
		if(listitem == 0)
		{
			if(Lights[playerid] == 0)
			{
				new veh = GetPlayerVehicleID(playerid);
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(veh, engine, VEHICLE_PARAMS_ON, alarm, doors, bonnet, boot, objective);
				Lights[playerid] = 1;
			}
			else if(Lights[playerid] == 1)
			{
				new veh = GetPlayerVehicleID(playerid);
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(veh, engine, lights, alarm,doors, bonnet, boot, objective);
				SetVehicleParamsEx(veh, engine, VEHICLE_PARAMS_OFF, alarm, doors, bonnet, boot, objective);
				Lights[playerid] = 0;
			}
		}
		if(listitem == 1)
		{
			if(Bonnet[playerid] == 0)
			{
				new veh = GetPlayerVehicleID(playerid);
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(veh, engine, lights, alarm, doors, VEHICLE_PARAMS_ON, boot, objective);
				Bonnet[playerid] = 1;
			}
			else if(Bonnet[playerid] == 1)
			{
				new veh = GetPlayerVehicleID(playerid);
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(veh, engine, lights, alarm, doors, VEHICLE_PARAMS_OFF, boot, objective);
				Bonnet[playerid] = 0;
			}
		}
		if(listitem == 2)
		{
			if(Boot[playerid] == 0)
			{
				new veh = GetPlayerVehicleID(playerid);
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_ON, objective);
				Boot[playerid] = 1;
			}
			else if(Boot[playerid] == 1)
			{
				new veh = GetPlayerVehicleID(playerid);
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_OFF, objective);
				Boot[playerid] = 0;
			}
		}
		if(listitem == 3)
		{
			if(Engine[playerid] == 0)
			{
				new veh = GetPlayerVehicleID(playerid);
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(veh, VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);
				Engine[playerid] = 1;
			}
			else if(Engine[playerid] == 1)
			{
				new veh = GetPlayerVehicleID(playerid);
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(veh, VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objective);
				Engine[playerid] = 0;
			}
		}
		if(listitem == 4)
		{
			if(Alarm[playerid] == 0)
			{
				new veh = GetPlayerVehicleID(playerid);
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(veh, engine, lights, VEHICLE_PARAMS_ON, doors, bonnet, boot, objective);
				Alarm[playerid] = 1;
			}
			else if(Alarm[playerid] == 1)
			{
				new veh = GetPlayerVehicleID(playerid);
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(veh, engine, lights, VEHICLE_PARAMS_OFF, doors, bonnet, boot, objective);
				Alarm[playerid] = 0;
			}
		}
	}
	#endif

	#if defined SAMsitesUser
	if(dialogid == samcontroleg)
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
		if(response == 1)
		{
			if(gTeam[playerid] == 1)
			{
				foreach(Player, i)
				{
					gTeam[i] = 0;
				}
				format(string, sizeof(string), "%s ligou o sistema de Míssil do Pier 69.", aname);
				SendClientMessageToAll(Verde, string);
			}
			else
			{
				SendClientMessage(playerid, 0x6495EDAA, "O sistema de Míssil já está ligado.");
			}
		}
		else
		{
			if(gTeam[playerid] == 0)
			{
				foreach(Player, i)
				{
					gTeam[i] = 1;
				}
				format(string, sizeof(string), "%s desligou o sistema de Míssil do Pier 69.", aname);
				SendClientMessageToAll(Verde, string);
			}
			else
			{
				SendClientMessage(playerid, 0x6495EDAA, "O sistema de Míssil já está desligado.");
			}
		}
	}

	if(dialogid == samcontrolea)
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
		if(response == 1)
		{
			if(aTeam[playerid] == 1)
			{
				foreach(Player, i)
				{
					aTeam[i] = 0;
				}
				format(string, sizeof(string), "%s ligou o sistema de Míssil da Área 51.", aname);
				SendClientMessageToAll(Verde, string);
			}
			else
			{
				SendClientMessage(playerid, 0x6495EDAA, "O sistema de Míssil já está ligado.");
			}
		}
		else
		{
			if(aTeam[playerid] == 0)
			{
				foreach(Player, i)
				{
					aTeam[i] = 1;
				}
				format(string, sizeof(string), "%s desligou o sistema de Míssil da Área 51.", aname);
				SendClientMessageToAll(Verde, string);
			}
			else
			{
				SendClientMessage(playerid, 0x6495EDAA, "O sistema de Míssil já está desligado.");
			}
		}
	}
	#endif

	if(dialogid == deletcarconce)
	{
		if(response == 1)
		{
			new vid = GetPlayerVehicleID(playerid);
			for(new carro = 0; carro < MAX_CONCES; carro++)
			{
				format(string, sizeof(string), PASTA_CONCE, carro);
				if(vid == DOF2_GetInt(string, "Id"))
				{
					DOF2_SetInt(string, "TDono", 3);
					DOF2_SetString(string, "Dono", "Ninguem");
					DOF2_SetInt(string, "CarVIP", 0);

					DOF2_SetString(string, "Convidado1", "Ninguem");
					DOF2_SetString(string, "Convidado2", "Ninguem");
					DOF2_SetString(string, "Convidado3", "Ninguem");

					DOF2_SetInt(string, "Id", INVALID_VEHICLE_ID);
					DestroyDynamic3DTextLabel(ConceLabel[carro]);
					ConceLabel[carro] = Text3D:INVALID_3DTEXT_ID;

					DestroyVehicle(vid);
					vid = INVALID_VEHICLE_ID;
					return 1;
				}
			}
		}
	}

	if(dialogid == vehicleorder)
	{
		if(response == 1)
		{
			incar[playerid] = 0;
			intest[playerid] = 1;
			TogglePlayerControllable(playerid, 1);
			testtime = SetTimerEx("TestDrive", 60000, false, "e", playerid);
			SendClientMessage(playerid, Azul, "[ CONCE ] Test-Drive iniciado com sucesso!");
			SendClientMessage(playerid, Blue, "[ CONCE ] Você tem 1 minuto de teste, aproveite!");
		}
		else
		{
			new VehicleID = GetPlayerVehicleID(playerid),
			limite = MAX_PLAYER_CONCE, strlabel[256];

			if(pAdmin[playerid] > 0)
			{
				limite = MAX_ADM_CONCE;
			}
			else if(IsPlayerVIPT(playerid))
			{
				limite = MAX_VIPT_CONCE;
			}
			else if(IsPlayerVIPMT(playerid))
			{
				limite = MAX_VIPMT_CONCE;
			}
			else if(IsPlayerDJ(playerid))
			{
				limite = MAX_DJ_CONCE;
			}
			else if(IsPlayerVIP(playerid))
			{
				limite = MAX_VIP_CONCE;
			}
			for(new carro = 0; carro < MAX_CONCES; carro++)
			{
				format(file, sizeof(file), PASTA_CONCE, carro);
				if(DOF2_FileExists(file))
				{
					if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0 && VehicleID == DOF2_GetInt(file, "Id"))
					{
						if(GetPlayerGrana(playerid) >= DOF2_GetInt(file, "Preco"))
						{
							if(GetCarros(playerid) < limite)
							{
								DOF2_SetInt(file, "TDono", 1);
								DOF2_SetString(file, "Dono", GetPlayerNameEx(playerid));
								if(!IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
								{
									GivePlayerGrana(playerid, -DOF2_GetInt(file, "Preco"));
									TogglePlayerControllable(playerid, 1);
									DOF2_SetInt(file, "CarVIP", 0);
									DOF2_SetInt(file, "CarVIPT", 0);
									DOF2_SetInt(file, "CarVIPMT", 0);
									intest[playerid] = 0;
									format(string, sizeof(string), "{1E90FF}%s comprou um veiculo!", GetPlayerNameEx(playerid));
									SendClientMessageToAll(Azul, string);
									ClearChatbox(playerid, 10);
									SendClientMessage(playerid, Azul, "  Veículo comprado com sucesso!");
									SendClientMessage(playerid, Azul, "  Para ver os comandos do veículo, use: /meucarro");
									SendClientMessage(playerid, LARANJA, "|___________________________________________________________|");
									SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Não esqueça de estacionar seu novo veículo fora da concessionaria!");
									SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Veículos deixados na concessionaria serão deletados, sem reembolso!");
									SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Salve sempre seus veiculos em sua casa ou empresa ou estacionamento");
									SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Veículos salvos fora desses lugares seram deletados");
								}
								else
								{
									GivePlayerGrana(playerid, -DOF2_GetInt(file, "Preco"));
									TogglePlayerControllable(playerid, 1);
									DOF2_SetInt(file, "CarVIP", 1);
									DOF2_SetInt(file, "CarVIPT", 1);
									DOF2_SetInt(file, "CarVIPMT", 1);
									intest[playerid] = 0;
									format(string, sizeof(string), "{1E90FF}%s comprou um veiculo com alarme explosivo.", GetPlayerNameEx(playerid));
									SendClientMessageToAll(Azul, string);
									ClearChatbox(playerid, 10);
									SendClientMessage(playerid, Azul, "  Veículo comprado com sucesso!");
									SendClientMessage(playerid, Azul, "  Para ver os comandos do veículo, use: /meucarro");
									SendClientMessage(playerid, Amarelo, "  (VIP) Seu carro foi equipado com alarme explosivo.");
									SendClientMessage(playerid, LARANJA, "|___________________________________________________________|");
									SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Não esqueça de estacionar seu novo veículo fora da concessionaria!");
									SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Veículos deixados na concessionaria serão deletados, sem reembolso!");
									SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Salve sempre seus veiculos em sua casa ou empresa ou estacionamento");
									SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Veículos salvos fora desses lugares seram deletados");
								}
								format(strlabel, sizeof(strlabel), STRTEXT3D_CONCE, GetPlayerNameEx(playerid), carro, DOF2_GetString(file, "DataSet"));
								UpdateDynamic3DTextLabelText(ConceLabel[carro], -1, strlabel);
								return 1;
							}
							else
							{
								RemovePlayerFromVehicle(playerid);

								format(string, sizeof(string), "[ CONCE ] Você só pode ter %d carros!", limite);
								SendClientMessage(playerid, Amarelo, string);

								SendClientMessage(playerid, Vermelho, "[ CONCE ] Para comprar outro venda um de seus!");
								return 1;
							}
						}
						else
						{
							RemovePlayerFromVehicle(playerid);
							SendClientMessage(playerid, Vermelho, "[ CONCE ] Você não tem dinheiro suficiente!");
							return 1;
						}
					}
				}
			}
		}
	}

	if(dialogid == casaorder)
	{
		SetTimerEx("InOrder", OrderTime, 0, "d", playerid);
		if(response == 1)
		{
			new pickupid, iconid;
			for(new c = 0; c < MAX_CASAS; c++)
			{
				format(string, sizeof(string), PASTA_CASAS, c);
				if(DOF2_FileExists(string))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
					{
						if(GetPlayerGrana(playerid) >= DOF2_GetInt(string, "Preco"))
						{
							if(GetCasas(playerid) < 1)
							{
								DOF2_SetInt(string, "TDono", 1);
								DOF2_SetString(string, "Dono", GetPlayerNameEx(playerid));
								GivePlayerGrana(playerid, -DOF2_GetInt(string, "Preco"));
								DestroyDynamicPickup(DOF2_GetInt(string, "Id"));
								pickupid = CreateDynamicPickup(1272, 1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), -1, -1, -1, 200.0);
								DOF2_SetInt(string, "Id", pickupid);
								DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));
								iconid = CreateDynamicMapIcon(DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 32, 0, -1, -1, -1, 100.0);
								DOF2_SetInt(string, "IconId", iconid);
								format(STRX, sizeof(STRX), "{1E90FF}Casa ID: {FFFFFF}%d\n{1E90FF}Dono: {FFFFFF}%s\n{1E90FF}Morador: {FFFFFF}%s\n{1E90FF}Valor: {FFFFFF}$%d\n{1E90FF}Último uso: {FFFFFF}%s", c, GetPlayerNameEx(playerid), DOF2_GetString(string, "Morador"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
								UpdateDynamic3DTextLabelText(ctextoid[c], -1, STRX);
								format(string, sizeof(string), "{FFFFFF}(INFO) {FF0000}%s {FFFFFF}comprou a casa ID: {FF0000}%i", GetPlayerNameEx(playerid), c);
								SendClientMessageToAll(roxo, string);
								OnPlayerCommandText(playerid, "/nascercasa");
							}
							else
							{
								SendClientMessage(playerid, Vermelho, "Você só pode ter uma casa!");
							}
							return 1;
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "Você não tem dinheiro!");
							return 1;
						}
					}
				}
			}
		}
	}

	if(dialogid == proporder)
	{
		SetTimerEx("InOrder", OrderTime, 0, "d", playerid);
		if(response == 1)
		{
			new pickupid, iconid;
			for(new p = 0; p < MAX_PROPS; p++)
			{
				format(string, sizeof(string), PASTA_PROPS, p);
				if(DOF2_FileExists(string))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
					{
						if(GetPlayerGrana(playerid) >= DOF2_GetInt(string, "Preco"))
						{
							if(GetProps(playerid) < 1)
							{
								DOF2_SetInt(string, "TDono", 1);
								DOF2_SetString(string, "Dono", GetPlayerNameEx(playerid));
								GivePlayerGrana(playerid, -DOF2_GetInt(string, "Preco"));
								DestroyDynamicPickup(DOF2_GetInt(string, "Id"));
								pickupid = CreateDynamicPickup(1279, 1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), -1, -1, -1, 200.0);
								DOF2_SetInt(string, "Id", pickupid);
								DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));
								iconid = CreateDynamicMapIcon(DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 51, 0, -1, -1, -1, 100.0);
								DOF2_SetInt(string, "IconId", iconid);
								format(STRX, sizeof(STRX), "{696969}%s\n\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Dono: {696969}%s\n{00FF00}Valor: {696969}$%d\n{00FF00}Último uso: {696969}%s", DOF2_GetString(string, "Nome"), p, GetPlayerNameEx(playerid), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
								UpdateDynamic3DTextLabelText(ptextoid[p], -1, STRX);
								OnPlayerCommandText(playerid, "/salvarempresa");
							}
							else
							{
								SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você já possui uma empresa!");
							}
							return 1;
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem dinheiro suficiente!");
							return 1;
						}
					}
				}
			}
		}
	}

	if(dialogid == casaopt)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				new msg[256];
				for(new c = 0; c < MAX_CASAS; c++)
				{
					format(string, sizeof(string), PASTA_CASAS, c);
					if(DOF2_FileExists(string))
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							SetPlayerInterior(playerid, DOF2_GetInt(string, "IntID"));

							format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
							SetPlayerPos(playerid, DOF2_GetInt(file, "CasaX"), DOF2_GetInt(file, "CasaY"), DOF2_GetInt(file, "CasaZ"));

							TogglePlayerControllable(playerid, false);
							SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);

							format(msg, sizeof(msg), "Bem vindo(a) a sua casa %s.", GetPlayerNameEx(playerid));
							SendClientMessage(playerid, 0xFF0000AA, msg);
							return 1;
						}
					}
				}
			}
			if(listitem == 1)
			{
				for(new c = 0; c < MAX_CASAS; c++)
				{
					format(string, sizeof(string), PASTA_CASAS, c);
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(DOF2_GetInt(string, "Trancada") == 1)
						{
							DOF2_SetInt(string, "Trancada", 0);
							GameTextForPlayer(playerid, "~y~Casa ~r~Destrancada", 3000, 3);
							return 1;
						}
						if(DOF2_GetInt(string, "Trancada") == 0)
						{
							DOF2_SetInt(string, "Trancada", 1);
							GameTextForPlayer(playerid, "~y~Casa ~r~Trancada", 3000, 3);
							return 1;
						}
					}
				}
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, cvdmorador, DIALOG_STYLE_INPUT, "Convidar Morador", "{FFFF00}Você está prestes a convidar alguem para morar em sua casa.\n{FFFFFF}Digite o ID do(a) jogador(a) que deseja convidar:", "Convidar", "Cancelar");
			}
			if(listitem == 3)
			{
				ShowPlayerDialog(playerid, expmorador, DIALOG_STYLE_INPUT, "Expulsar Morador", "{FFFF00}Você está prestes a expulsar o morador de sua casa.\n{FFFFFF}Digite corretamente o Nick do(a) jogador(a) que deseja expulsar:", "Expulsar", "Cancelar");
			}
			if(listitem == 4)
			{
				new pickupid, iconid;
				for(new c = 0; c < MAX_CASAS; c++)
				{
					format(string, sizeof(string), PASTA_CASAS, c);
					if(DOF2_FileExists(string))
					{
						if(DOF2_GetInt(string, "TDono") == 1)
						{
							if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
							{
								format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
								if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
								{
									DOF2_SetFloat(file, "CasaX", Float:1568.4894);
									DOF2_SetFloat(file, "CasaY", Float:-1893.2423);
									DOF2_SetFloat(file, "CasaZ", Float:13.5597);
									DOF2_SetInt(file, "Casa", 0);
								}
								DOF2_SetInt(string, "TDono", 0);
								DOF2_SetString(string, "Dono", "Ninguem");
								GivePlayerGrana(playerid, DOF2_GetInt(string, "Preco"));
								DestroyDynamicPickup(DOF2_GetInt(string, "Id"));
								pickupid = CreateDynamicPickup(1273, 1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), -1, -1, -1, 200.0);
								DOF2_SetInt(string, "Id", pickupid);
								DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));
								iconid = CreateDynamicMapIcon(DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 31, 0, -1, -1, -1, 100.0);
								DOF2_SetInt(string, "IconId", iconid);
								format(STRX, sizeof(STRX), "{1E90FF}Casa ID: {FFFFFF}%d\n{1E90FF}Dono: {FFFFFF}Ninguem\n{1E90FF}Morador: {FFFFFF}%s\n{1E90FF}Valor: {FFFFFF}$%d\n{1E90FF}Último uso: {FFFFFF}%s", c, DOF2_GetString(string, "Morador"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
								UpdateDynamic3DTextLabelText(ctextoid[c], -1, STRX);
								format(string, sizeof(string), "{FFFFFF}(INFO) {FFA500}%s {FFFFFF}vendeu a casa ID: {FFA500}%i", GetPlayerNameEx(playerid), c);
								SendClientMessageToAll(roxo, string);
								GameTextForPlayer(playerid, "~y~Casa ~r~Vendida", 5000, 6);

								for (new P; P < MAX_PORTOES; P++)
								{
									format(string, sizeof(string), PASTA_PORTOES, P);
									if(!DOF2_FileExists(string)) continue;
									if(DOF2_GetInt(string, "CasaAssociada") == c) LiberarPortao(-1, P);
								}
								return 1;
							}
						}
					}
				}
			}
		}
	}
	
	if(dialogid == sacarobagulho)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
			    new strx[256];
				for(new p = 0; p < MAX_PROPS; p++)
				{
					format(string, sizeof(string), PASTA_PROPS, p);
					if(DOF2_FileExists(string))
					{
						if(DOF2_GetInt(string, "SaldoEmpresa") > 1999999)
						{
							if(DOF2_GetInt(string, "TDono") == 1)
							{
								if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)

								{	format(strx, sizeof(strx), "{FFFFFF}Sua Empresa atingiu a renda Maxima {D15FEE}'2kk'");
									SendClientMessage(playerid, Amarelo, strx);
								    format(strx, sizeof(strx), "{FFFFFF}Você pegou {D15FEE}$2000000 {FFFFFF}de sua empresa!");
									SendClientMessage(playerid, Amarelo, strx);
									GivePlayerGrana(playerid, 2000000);
									DOF2_SetInt(string, "SaldoEmpresa", 0);
									return 1;
								}
							}
						}
			            else
			            {
							if(DOF2_GetInt(string, "TDono") == 1)
							{
								if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
								{
									format(strx, sizeof(strx), "{FFFFFF}Você pegou {D15FEE}$%d {FFFFFF}de sua empresa!", DOF2_GetInt(string, "SaldoEmpresa"));
									SendClientMessage(playerid, Amarelo, strx);
									GivePlayerGrana(playerid, DOF2_GetInt(string, "SaldoEmpresa"));
									DOF2_SetInt(string, "SaldoEmpresa", 0);
									return 1;
								}
							}
			            }
					}
				}
			}
	    }
	}
	
	if(dialogid == propopt)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				new msg[256];
				for(new p = 0; p < MAX_PROPS; p++)
				{
					format(string, sizeof(string), PASTA_PROPS, p);
					if(DOF2_FileExists(string))
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							SetPlayerInterior(playerid, DOF2_GetInt(string, "IntID"));

							format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
							SetPlayerPos(playerid, DOF2_GetInt(file, "PropX"), DOF2_GetInt(file, "PropY"), DOF2_GetInt(file, "PropZ"));

							TogglePlayerControllable(playerid, false);
							SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);

							format(msg, sizeof(msg), "Bem vindo(a) a sua empresa %s.", GetPlayerNameEx(playerid));
							SendClientMessage(playerid, 0xFF0000AA, msg);
							return 1;
						}
					}
				}
			}
			if(listitem == 1)
			{
			    new strx[256];
				for(new p = 0; p < MAX_PROPS; p++)
				{
					format(string, sizeof(string), PASTA_PROPS, p);
					if(DOF2_FileExists(string))
					{
						if(DOF2_GetInt(string, "SaldoEmpresa") > 1999999)
						{
							if(DOF2_GetInt(string, "TDono") == 1)
							{
								if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
								
								{	format(strx, sizeof(strx), "{FFFFFF}Sua Empresa atingiu a renda Maxima {D15FEE}'2kk'");
									SendClientMessage(playerid, Amarelo, strx);
								    format(strx, sizeof(strx), "{FFFFFF}Você pegou {D15FEE}$2000000 {FFFFFF}de sua empresa!");
									SendClientMessage(playerid, Amarelo, strx);
									GivePlayerGrana(playerid, 2000000);
									DOF2_SetInt(string, "SaldoEmpresa", 0);
									return 1;
								}
							}
						}
			            else
			            {
							if(DOF2_GetInt(string, "TDono") == 1)
							{
								if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
								{
									format(strx, sizeof(strx), "{FFFFFF}Você pegou {D15FEE}$%d {FFFFFF}de sua empresa!", DOF2_GetInt(string, "SaldoEmpresa"));
									SendClientMessage(playerid, Amarelo, strx);
									GivePlayerGrana(playerid, DOF2_GetInt(string, "SaldoEmpresa"));
									DOF2_SetInt(string, "SaldoEmpresa", 0);
									return 1;
								}
							}
			            }
					}
				}
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, propnome, DIALOG_STYLE_INPUT, "Mudar Nome", "{FFFF00}Você está prestes a mudar o nome de sua empresa.\n{FFFFFF}Digite corretamente o novo nome de sua empresa:", "Mudar Nome", "Cancelar");
			}
			if(listitem == 3)
			{
				new pickupid, iconid;
				for(new p = 0; p < MAX_PROPS; p++)
				{
					format(string, sizeof(string), PASTA_PROPS, p);
					if(DOF2_FileExists(string))
					{
						if(DOF2_GetInt(string, "TDono") == 1)
						{
							if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
							{
								format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
								DOF2_SetInt(file, "Prop", 0);
								DOF2_SetInt(string, "TDono", 0);
								DOF2_SetString(string, "Dono", "Ninguem");
								GivePlayerGrana(playerid, DOF2_GetInt(string, "Preco"));
								DestroyDynamicPickup(DOF2_GetInt(string, "Id"));
								pickupid = CreateDynamicPickup(1279, 1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), -1, -1, -1, 200.0);
								DOF2_SetInt(string, "Id", pickupid);
								DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));
								iconid = CreateDynamicMapIcon(DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 11, 0, -1, -1, -1, 100.0);
								DOF2_SetInt(string, "IconId", iconid);
								format(STRX, sizeof(STRX), "{696969}%s\n\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Dono: {696969}Ninguem\n{00FF00}Valor: {696969}$%d\n{00FF00}Último uso: {696969}%s", DOF2_GetString(string, "Nome"), p, DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
								UpdateDynamic3DTextLabelText(ptextoid[p], -1, STRX);
								return 1;
							}
						}
					}
				}
			}
		}
	}

/*	if(dialogid == emplist)
	{
		if(response == 1)
		{
			if(listitem == 0)
			{
				new msg[256];
				for(new e = 0; e < MAX_PROPS; e++)
				{
					format(string, sizeof(string), PASTA_Emp, e);
					if(DOF2_FileExists(string))
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							SetPlayerInterior(playerid, DOF2_GetInt(string, "IntID"));

							format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
							SetPlayerPos(playerid, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"));

							TogglePlayerControllable(playerid, false);
							SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);

							format(msg, sizeof(msg), "Bem vindo(a) a sua empresa {FFFFFF}%s.", GetPlayerNameEx(playerid));
							SendClientMessage(playerid, 0xFF0000AA, msg);
							return 1;
						}
					}
				}
			}
			if(listitem == 1)
			{
				new strx[256];

				for(new e = 0; e < MAX_PROPS; e++)
				{
					format(string, sizeof(string), PASTA_Emp, e);
					if(DOF2_FileExists(string))
					{
						if(DOF2_GetInt(string, "TDono") == 1)
						{
							if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
							{
								format(strx, sizeof(strx), "{FFFFFF}Você pegou {D15FEE}$%d {FFFFFF}de sua empresa!", DOF2_GetInt(string, "SaldoEmpresa"));
								SendClientMessage(playerid, Amarelo, strx);
								GivePlayerGrana(playerid, DOF2_GetInt(string, "SaldoEmpresa"));
								DOF2_SetInt(string, "SaldoEmpresa", 0);
								return 1;
							}
						}
					}
				}
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, valorentrada, DIALOG_STYLE_INPUT, "Valor da Entrada", "{D15FEE}Digite o valor da entrada de 0 a 1200:", "Ok", "Sair");
			}

			if(listitem == 3)
			{
				for(new Emp = 0; Emp < MAX_Emp; Emp++)
				{
					format(string, sizeof(string), PASTA_Emp, Emp);
					if(DOF2_FileExists(string))
					{
						if(DOF2_GetInt(string, "TDono") == 1)
						{
							if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0 || pAdmin[playerid] == 5 || PlayerInfo[playerid][SCON] == true)
							{
								DOF2_SetInt(string, "TDono", 0);
								DOF2_SetString(string, "Dono", "Ninguem");

								format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
								DOF2_SetInt(file, "Emp", 0);
								DOF2_SetInt(file, "idempresa", 0);

								GivePlayerGrana(playerid, DOF2_GetInt(string, "Preco"));
								format(STRX, sizeof(STRX), "{FFFFFF}%s\n{FFFFFF}Preço: {CD6889}%d\n{FFFFFF}ID: {CD6889}%d\n{FFFFFF}Valor Entrada: {CD6889}$%d\n{FFFFFF}Esta Empresa Esta á Venda!", DOF2_GetString(string, "Nome"), DOF2_GetInt(string, "Preco"), Emp, DOF2_GetInt(string, "Entrada"));
								UpdateDynamic3DTextLabelText(Etextoid[Emp], -1, STRX);
								return 1;
							}
						}
					}
				}
			}
		}
	}
*/
	if(dialogid == cvdmorador)
	{
		if(response == 1)
		{
			if(!VBIsNumeric(inputtext))
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
			}
			else
			{
				if(IsPlayerConnected(StrToInt(inputtext)))
				{
					for(new c = 0; c < MAX_CASAS; c++)
					{
						format(string, sizeof(string), PASTA_CASAS, c);
						if(DOF2_FileExists(string))
						{
							if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
							{
								if(DOF2_GetInt(string, "TMorador") == 1)
								{
									SendClientMessage(playerid, Vermelho, "Já tem um morador em sua casa.");
									return 1;
								}
								morar[StrToInt(inputtext)] = 1;
								moradia[StrToInt(inputtext)] = c;
								convitede[StrToInt(inputtext)] = playerid;
								MoradiaTime[StrToInt(inputtext)] = SetTimerEx("Moradia", 30000, false, "d", StrToInt(inputtext));
								format(STRX, sizeof(STRX), "%s (ID: %d) está convidando você para morar na casa dele(a).", GetPlayerNameEx(playerid), playerid);
								SendClientMessage(StrToInt(inputtext), Amarelo, STRX);
								SendClientMessage(StrToInt(inputtext), Amarelo, "Para aceitar o convite, use: /aceitarmoradia   ||   Para recusar, use: /recusarmoradia");
								SendClientMessage(playerid, Vermelho, "Convite enviado.");
								return 1;
							}
						}
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Jogador não conectado, tente novamente!");
				}
			}
		}
	}

	if(dialogid == expmorador)
	{
		if(response == 1)
		{
			new string222[256], morador[256];
			for(new c = 0; c < MAX_CASAS; c++)
			{
				format(string, sizeof(string), PASTA_CASAS, c);
				if(DOF2_FileExists(string))
				{
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						if(strcmp(DOF2_GetString(string, "Morador"), inputtext, false) == 0 && DOF2_GetInt(string, "TMorador") == 1)
						{
							morador = DOF2_GetString(string, "Morador");
							DOF2_SetInt(string, "TMorador", 0);
							DOF2_SetString(string, "Morador", "Ninguem");
							format(file, sizeof(file), PASTA_CONTAS, morador);
							if(DOF2_FileExists(file))
							{
								DOF2_SetFloat(file, "CasaX", Float:1568.4894);
								DOF2_SetFloat(file, "CasaY", Float:-1893.2423);
								DOF2_SetFloat(file, "CasaZ", Float:13.5597);
								format(string222, sizeof(string222), "Morador Spawned: %s", morador);
								SendClientMessage(playerid, BLUEWHITE, string222);
							}
							format(STRX, sizeof(STRX), "{1E90FF}Casa ID: {FFFFFF}%d\n{1E90FF}Dono: {FFFFFF}%s\n{1E90FF}Morador: {FFFFFF}Ninguem\n{1E90FF}Valor: {FFFFFF}$%d\n{1E90FF}Último uso: {FFFFFF}%s", c, DOF2_GetString(string, "Dono"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
							UpdateDynamic3DTextLabelText(ctextoid[c], -1, STRX);
							SendClientMessage(playerid, 0x6495EDAA, "Expulso!");
							return 1;
						}
						else
						{
							SendClientMessage(playerid, Vermelho, "Esse jogador não mora aqui!");
							return 1;
						}
					}
				}
			}
		}
	}
	
	if(dialogid == propnome)
	{
		if(response == 1)
		{
			for(new p = 0; p < MAX_PROPS; p++)
			{
				format(string, sizeof(string), PASTA_PROPS, p);
				if(DOF2_GetInt(string, "TDono") == 1)
				{
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						DOF2_SetString(string, "Nome", inputtext);
						format(STRX, sizeof(STRX), "{696969}%s\n\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Dono: {696969}%s\n{00FF00}Valor: {696969}$%d\n{00FF00}Último uso: {696969}%s", inputtext, p, DOF2_GetString(string, "Dono"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
						UpdateDynamic3DTextLabelText(ptextoid[p], -1, STRX);
						format(string, sizeof(string), "Agora sua empresa chama-se %s", inputtext);
						SendClientMessage(playerid, Violeta, string);
						return 1;
					}
				}
			}
		}
	}

	if(dialogid == pedidocasamento)
	{
		if(response == 1)
		{
			casar[playerid] = 1;
			pedidode[pedidode[playerid]] = playerid;
			format(string, sizeof(string), "{FF00EE}%s {FFFFFF}aceitou seu pedido de casamento.\n{FFFF00}Agora é só vocês se encontrarem na Igreja em LS para a cerimônia.", GetPlayerNameEx(playerid));
			ShowPlayerDialog(pedidode[playerid], pedidoaceito, DIALOG_STYLE_MSGBOX, "Pedido de Casamento", string, "OK", "");
		}
		else
		{
			casar[pedidode[playerid]] = 0;
			format(string, sizeof(string), "{FF00EE}%s {FFFFFF}recusou seu pedido de casamento.\n{FFFF00}Não fique triste, sua hora ainda vai chegar. :)", GetPlayerNameEx(playerid));
			ShowPlayerDialog(pedidode[playerid], pedidorecusado, DIALOG_STYLE_MSGBOX, "Pedido de Casamento", string, "OK", "");
		}
	}
	if(dialogid == pedidoaceito)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(pedidode[playerid]));

		format(string, sizeof(string), "%s aceitou um pedido de casamento de %s, todos estão convidados.", GetPlayerNameEx(pedidode[playerid]), GetPlayerNameEx(playerid));
		SendClientMessageToAll(Amarelo, string);

		if(DOF2_GetInt(file, "Sexo") == Masculino && DOF2_GetInt(file2, "Sexo") == Masculino)
		{
			SendClientMessageToAll(Vermelho, "[ATENÇÃO] {FFFFFF}Temos um casamento Gay para ver, não quera perder. ;)");
		}
		if(DOF2_GetInt(file, "Sexo") == Feminino && DOF2_GetInt(file2, "Sexo") == Feminino)
		{
			SendClientMessageToAll(Vermelho, "[ATENÇÃO] {FFFFFF}Temos um casamento Lesbico para ver, não quera perder. ;)");
		}

		SendClientMessageToAll(Amarelo, "{FFFFFF}A cerimônia será realizada na {2F4F4F}Igreja {FFFFFF} em {2F4F4F}LS.");
	}
	if(dialogid == pedidorecusado)
	{
		pedidode[playerid] = INVALID_PLAYER_ID;
	}
	if(dialogid == cerimonia)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(response == 1)
		{
			DOF2_SetInt(file, "Casado", 1);
			DOF2_SetString(file, "CasouCom", GetPlayerNameEx(pedidode[playerid]));

			format(string, sizeof(string), "%s casou-se com %s, felicidades para os dois.", GetPlayerNameEx(playerid), GetPlayerNameEx(pedidode[playerid]));
			SendClientMessageToAll(Amarelo, string);

			casar[playerid] = 0;
			pedidode[playerid] = INVALID_PLAYER_ID;
		}
		else
		{
			if(DOF2_GetInt(file, "Sexo") == Masculino)
			{
				format(string, sizeof(string), "{003300}Ops, agora case!\n\n{FF00EE}%s, {FFFFFF}você aceita {FF00EE}%s {FFFFFF}como sua legitima esposa?\n{FFFF00}Deverá protege-la na saude e na doença até que suas conexões os separem.", GetPlayerNameEx(playerid), GetPlayerNameEx(pedidode[playerid]));
				ShowPlayerDialog(playerid, cerimonia, DIALOG_STYLE_MSGBOX, "Cerimônia de Casamento", string, "Aceito", "Não");
			}
			if(DOF2_GetInt(file, "Sexo") == Feminino)
			{
				format(string, sizeof(string), "{003300}Ops, agora case!\n\n{FF00EE}%s, {FFFFFF}você aceita {FF00EE}%s {FFFFFF}como seu legitimo esposo?\n{FFFF00}Deverá protege-lo na saude e na doença até que suas conexões os separem.", GetPlayerNameEx(playerid), GetPlayerNameEx(pedidode[playerid]));
				ShowPlayerDialog(playerid, cerimonia, DIALOG_STYLE_MSGBOX, "Cerimônia de Casamento", string, "Aceito", "Não");
			}
		}
	}

	if(dialogid == divorcio)
	{
		format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(response == 1)
		{
			format(file2, sizeof(file2), PASTA_CONTAS, DOF2_GetString(file, "CasouCom"));
			if(DOF2_FileExists(file2))
			{
				DOF2_SetInt(file2, "Casado", 3);
			}
			DOF2_SetInt(file, "Casado", 0);
			DOF2_SetString(file, "CasouCom", "Ninguem");
			SendClientMessage(playerid, Amarelo, "O divórcio foi concluído.");
		}
	}

	#if defined FGPSUser
	if(dialogid == GPSMenu && response)
	{
		if(listitem == 0)
		{
			ShowPlayerDialog(playerid, GPSDelegacias, DIALOG_STYLE_LIST, "Delegacias", "Las Venturas\nSan Fierro\nLos Santos\nVoltar", "Selecionar", "Cancelar");
		}
		if(listitem == 1)
		{
			ShowPlayerDialog(playerid, GPSPrefeituras, DIALOG_STYLE_LIST, "Prefeituras", "Las Venturas\nSan Fierro\nLos Santos\nVoltar", "Selecionar", "Cancelar");
		}
		if(listitem == 2)
		{
			ShowPlayerDialog(playerid, GPSLojas, DIALOG_STYLE_LIST, "Lojas e Diversos", "Las Venturas\nSan Fierro\nLos Santos\nVoltar", "Selecionar", "Cancelar");
		}
		if(listitem == 3)
		{
			ShowPlayerDialog(playerid, Igrejas, DIALOG_STYLE_LIST, "Igrejas", "Los Santos\nVoltar", "Selecionar", "Cancelar");
		}
		if(listitem == 4)
		{
			ShowPlayerDialog(playerid, Hoteis, DIALOG_STYLE_LIST, "Hoteis", "Los Santos\nVoltar", "Selecionar", "Cancelar");
		}
		if(listitem == 5)
		{
			ShowPlayerDialog(playerid, Hospitais, DIALOG_STYLE_LIST, "Hospitais", "Las Venturas\nSan Fierro\nLos Santos\nVoltar", "Selecionar", "Cancelar");
		}
		if(listitem == 6)
		{
			ShowPlayerDialog(playerid, Universidades, DIALOG_STYLE_LIST, "Universidades", "Los Santos\nVoltar", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == GPSDelegacias && response)
	{
		if(listitem == 0)
		{
			ShowPlayerLocationFromGPS(playerid, "Delegacia", 2286.7004, 2412.8510, 10.8717);
		}
		if(listitem == 1)
		{
			ShowPlayerLocationFromGPS(playerid, "Delegacia", -1605.6597, 726.8060, 11.8382);
		}
		if(listitem == 2)
		{
			ShowPlayerLocationFromGPS(playerid, "Delegacia", 1534.0075, -1675.4088, 13.3828);
		}
		if(listitem == 3)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == GPSPrefeituras && response)
	{
		if(listitem == 0)
		{
			ShowPlayerLocationFromGPS(playerid, "Prefeitura", 2427.2426, 2377.9062, 10.6718);
		}
		if(listitem == 1)
		{
			ShowPlayerLocationFromGPS(playerid, "Prefeitura", -2749.5737, 375.4750, 4.1397);
		}
		if(listitem == 2)
		{
			ShowPlayerLocationFromGPS(playerid, "Prefeitura", 1487.4212, -1732.4739, 13.5919);
		}
		if(listitem == 3)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == GPSLojas && response)
	{
		if(listitem == 0)
		{
			ShowPlayerDialog(playerid, LojasLV, DIALOG_STYLE_LIST, "Las Venturas", "Roupas\nBebidas\nBar VIP\nCassino\nVoltar", "Selecionar", "Cancelar");
		}
		if(listitem == 1)
		{
			ShowPlayerDialog(playerid, LojasSF, DIALOG_STYLE_LIST, "San Fierro", "Roupas\nVoltar", "Selecionar", "Cancelar");
		}
		if(listitem == 2)
		{
			ShowPlayerDialog(playerid, LojasLS, DIALOG_STYLE_LIST, "Los Santos", "Roupas\nUtilidades\nVoltar", "Selecionar", "Cancelar");
		}
		if(listitem == 3)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == LojasLV && response)
	{
		if(listitem == 0)
		{
			ShowPlayerLocationFromGPS(playerid, "Roupas", 2119.4873, 2263.1054, 10.6718);
		}
		if(listitem == 1)
		{
			ShowPlayerLocationFromGPS(playerid, "Bebidas", 2362.8173, 1973.2375, 10.8811);
		}
		if(listitem == 2)
		{
			ShowPlayerLocationFromGPS(playerid, "Bar VIP", 2490.1433, 2052.8674, 10.6718);
		}
		if(listitem == 3)
		{
			ShowPlayerLocationFromGPS(playerid, "Cassino", 2048.6284, 1006.2451, 10.6718);
		}
		if(listitem == 4)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == LojasSF && response)
	{
		if(listitem == 0)
		{
			ShowPlayerLocationFromGPS(playerid, "Roupas", -1714.2145, 951.6475, 24.7421);
		}
		if(listitem == 1)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == LojasLS && response)
	{
		if(listitem == 0)
		{
			ShowPlayerLocationFromGPS(playerid, "Roupas", 1149.7163, -1694.0635, 13.7812);
		}
		if(listitem == 1)
		{
			ShowPlayerLocationFromGPS(playerid, "Utilidades", 1346.8991, -1750.1191, 13.3665);
		}
		if(listitem == 2)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == Igrejas && response)
	{
		if(listitem == 0)
		{
			ShowPlayerLocationFromGPS(playerid, "Igreja", 2220.0803,-1337.2303,23.9844);
		}
		if(listitem == 1)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == Hoteis && response)
	{
		if(listitem == 0)
		{
			ShowPlayerDialog(playerid, HoteisLS, DIALOG_STYLE_LIST, "Los Santos", "Hotel 1\nHotel 2\nVoltar", "Selecionar", "Cancelar");
		}
		if(listitem == 1)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == HoteisLS && response)
	{
		if(listitem == 0)
		{
			ShowPlayerLocationFromGPS(playerid, "Hotel 1", 1082.1359, -1852.5067, 13.3894);
		}
		if(listitem == 1)
		{
			ShowPlayerLocationFromGPS(playerid, "Hotel 2", 2220.6374, -1138.4396, 25.6250);
		}
		if(listitem == 2)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == Hospitais && response)
	{
		if(listitem == 0)
		{
			ShowPlayerDialog(playerid, HospitaisLV, DIALOG_STYLE_LIST, "Las Venturas", "Hospital Principal\nVoltar", "Selecionar", "Cancelar");
		}
		if(listitem == 1)
		{
			ShowPlayerDialog(playerid, HospitaisSF, DIALOG_STYLE_LIST, "San Fierro", "Hospital Principal\nVoltar", "Selecionar", "Cancelar");
		}
		if(listitem == 2)
		{
			ShowPlayerDialog(playerid, HospitaisLS, DIALOG_STYLE_LIST, "Los Santos", "Hospital 1\nHospital 2\nVoltar", "Selecionar", "Cancelar");
		}
		if(listitem == 3)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == HospitaisLV && response)
	{
		if(listitem == 0)
		{
			ShowPlayerLocationFromGPS(playerid, "Hospital Principal", 1567.2166, 1770.3668, 10.8099);
		}
		if(listitem == 1)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == HospitaisSF && response)
	{
		if(listitem == 0)
		{
			ShowPlayerLocationFromGPS(playerid, "Hospital Principal", -2665.9592, 565.6161, 14.4609);
		}
		if(listitem == 1)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == HospitaisLS && response)
	{
		if(listitem == 0)
		{
			ShowPlayerLocationFromGPS(playerid, "Hospital 1", 1987.1071, -1458.3327, 13.3906);
		}
		if(listitem == 1)
		{
			ShowPlayerLocationFromGPS(playerid, "Hospital 2", 1201.1469, -1313.2821, 13.3984);
		}
		if(listitem == 2)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == Universidades && response)
	{
		if(listitem == 0)
		{
			ShowPlayerDialog(playerid, UniversidadesLS, DIALOG_STYLE_LIST, "Los Santos", "Biblioteca\nFaculdade\nVoltar", "Selecionar", "Cancelar");
		}
		if(listitem == 1)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	if(dialogid == UniversidadesLS && response)
	{
		if(listitem == 0)
		{
			ShowPlayerLocationFromGPS(playerid, "Biblioteca", 1080.6519, -1712.3020, 13.3828);
		}
		if(listitem == 1)
		{
			ShowPlayerLocationFromGPS(playerid, "Faculdade", 1213.3887, -1852.5722, 13.3828);
		}
		if(listitem == 2)
		{
			ShowPlayerDialog(playerid, GPSMenu, DIALOG_STYLE_LIST, "GPS", "Delegacias\nPrefeituras\nLojas e Diversos\nIgrejas\nHoteis\nHospitais\nUniversidades", "Selecionar", "Cancelar");
		}
	}
	#endif
	

	if(dialogid == 4501)						  // Menu
	{
		if(response == 1)
		{
			if(listitem == 0)					  // Entrar no Carro
			{
				if(NaFaculdade[playerid] == 1) return SendClientMessage(playerid, Vermelho, "Você está na biblioteca e está incapacitado de fazer isto.");
				if(preso[playerid] == 1) return SendClientMessage(playerid, Vermelho, "Você está incapacitado de fazer isto pois está preso.");
				if(ptemp[playerid] == 1) return SendClientMessage(playerid, Vermelho, "Você não pode usar nenhum comando pois está preso.");
				if(algemado[playerid] == 1) return SendClientMessage(playerid, Vermelho, "Você está incapacitado de fazer isto pois está algemado.");
				if(cercado[playerid] == 1) return SendClientMessage(playerid, Vermelho, "Você está incapacitado de fazer isto pois está cercado.");
				if(autoescola[playerid] == 1) return SendClientMessage(playerid, Vermelho, "Você está incapacitado de fazer isto pois está na Auto-Escola!");

				new stringj[256], count = 1, st[256], stringk[256];
				for(new cars = 0; cars < MAX_CONCES; cars++)
				{
					format(stringk, sizeof(stringk), PASTA_CONCE, cars);
					if(DOF2_FileExists(stringk))
					{
						if(strcmp(DOF2_GetString(stringk, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							format(stringj, sizeof(stringj), "Carro ID: %d\n", cars);
							strcat(st, stringj, sizeof(st));
							count++;
							if(count == 2)
							{
		                        MyCars[playerid][0] = cars;
		                    }
		                    if(count == 3)
							{
		                        MyCars[playerid][1] = cars;
		                    }
		                    if(count == 4)
							{
		                        MyCars[playerid][2] = cars;
		                    }
		                    if(count == 5)
							{
		                        MyCars[playerid][3] = cars;
		                    }
		                    if(count == 6)
							{
		                        MyCars[playerid][4] = cars;
		                    }
		                    if(count == 7)
							{
		                        MyCars[playerid][5] = cars;
		                    }
		                    if(count == 8)
							{
		                        MyCars[playerid][6] = cars;
		                    }
		                    if(count == 9)
							{
		                        MyCars[playerid][7] = cars;
		                    }
		                    if(count == 10)
							{
		                        MyCars[playerid][8] = cars;
		                    }
		                    if(count == 11)
							{
		                        MyCars[playerid][9] = cars;
		                    }
		                    if(count == 12)
							{
		                        MyCars[playerid][10] = cars;
		                    }
		                    if(count == 13)
							{
		                        MyCars[playerid][11] = cars;
		                    }
		                    if(count == 14)
							{
		                        MyCars[playerid][12] = cars;
		                    }
		                    if(count == 15)
							{
		                        MyCars[playerid][13] = cars;
		                    }
		                    if(count == 16)
							{
		                        MyCars[playerid][14] = cars;
		                    }
		                    if(count == 17)
							{
		                        MyCars[playerid][15] = cars;
		                    }
		                    if(count == 18)
							{
		                        MyCars[playerid][16] = cars;
		                    }
		                    if(count == 19)
							{
		                        MyCars[playerid][17] = cars;
		                    }
		                    if(count == 20)
							{
		                        MyCars[playerid][18] = cars;
		                    }
		                    if(count == 21)
							{
		                        MyCars[playerid][19] = cars;
		                    }
		                    ShowPlayerDialog(playerid, 431, DIALOG_STYLE_LIST, "Meus Carros", st, "Ok", "Voltar");
		                }
					}
				}
			}
			if(listitem == 1)					  // Salvar Posição
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					new Float:carroX, Float:carroY, Float:carroZ, Float:carroA;
					new vid = GetPlayerVehicleID(playerid), strlabel[256];

					GetVehiclePos(vid, carroX, carroY, carroZ);
					GetVehicleZAngle(vid, carroA);

					for(new carro = 0; carro < MAX_CONCES; carro++)
					{
						format(string, sizeof(string), PASTA_CONCE, carro);
						if(DOF2_GetInt(string, "Id") == vid)
						{
							if(IsPlayerConnected(playerid))
							{
								if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
								{
									format(STRX, sizeof(STRX), "%s", GetPlayerArea(playerid));
									if(strcmp("Pershing Square", STRX, true) == 0)
									{
										SendClientMessage(playerid, Amarelo, "Você não pode salvar veículos neste local.");
										return 1;
									}
									else
									{
										DOF2_SetFloat(string, "CordX", Float:carroX);
										DOF2_SetFloat(string, "CordY", Float:carroY);
										DOF2_SetFloat(string, "CordZ", Float:carroZ);
										DOF2_SetFloat(string, "Angulo", Float:carroA);

										DestroyDynamic3DTextLabel(ConceLabel[carro]);
										ConceLabel[carro] = Text3D:INVALID_3DTEXT_ID;
										DestroyVehicle(DOF2_GetInt(string, "Id"));

										vid = AddStaticVehicle(DOF2_GetInt(string, "Modelo"), DOF2_GetFloat(string, "CordX"), DOF2_GetFloat(string, "CordY"), DOF2_GetFloat(string, "CordZ"), DOF2_GetFloat(string, "Angulo"), DOF2_GetInt(string, "Cor1"), DOF2_GetInt(string, "Cor2"));
										format(strlabel, sizeof(strlabel), STRTEXT3D_CONCE, DOF2_GetString(string, "Dono"), carro, DOF2_GetString(string, "DataSet"));

										ConceLabel[carro] = CreateDynamic3DTextLabel(strlabel, -1, 0.0, 0.0, 0.15, 10.0, INVALID_PLAYER_ID, vid, 1, -1, -1, -1, 50.0);
										DOF2_SetInt(string, "Id", vid);

										SendClientMessage(playerid, 0x6495EDAA, "Seu veículo foi salvo na sua posição.");
										return 1;
									}
								}
								else
								{
									SendClientMessage(playerid, Vermelho, "Este veículo não é seu!");
									return 1;
								}
							}
						}
					}
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Para salvar a posição você presisa estar em seu veículo.");
				}
			}
			if(listitem == 2)					  // Cópia das Chaves
			{
				ShowPlayerDialog(playerid, 4505, DIALOG_STYLE_LIST, "Chaves", "{0000FF}Copiar\n{00EEFF}Tomar", "OK", "Cancelar");
			}
			if(listitem == 3)					  // Alterar Primeira Cor
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					format(STRX, sizeof(STRX), "{FFA500}Alterar Primeira Cor\n\n{33AAFF}Digite o ID da cor desejada:");
					ShowPlayerDialog(playerid, 4502, DIALOG_STYLE_INPUT, "Meu Carro", STRX, "Alterar", "Cancelar");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Para mudar a cor você presisa estar em seu veículo.");
				}
			}
			if(listitem == 4)					  // Alterar Segunda Cor
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					format(STRX, sizeof(STRX), "{FFA500}Alterar Segunda Cor\n\n{33AAFF}Digite o ID da cor desejada:");
					ShowPlayerDialog(playerid, 4503, DIALOG_STYLE_INPUT, "Meu Carro", STRX, "Alterar", "Cancelar");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Para mudar a cor você presisa estar em seu veículo.");
				}
			}
			if(listitem == 5)					  // Respawnar Carro
			{
				new carroid, strlabel[256];

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_FileExists(string))
					{
						if(IsPlayerConnected(playerid))
						{
							if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
							{
								DestroyDynamic3DTextLabel(ConceLabel[carro]);
								ConceLabel[carro] = Text3D:INVALID_3DTEXT_ID;
								DestroyVehicle(DOF2_GetInt(string, "Id"));

								carroid = AddStaticVehicle(DOF2_GetInt(string, "Modelo"), DOF2_GetFloat(string, "CordX"), DOF2_GetFloat(string, "CordY"), DOF2_GetFloat(string, "CordZ"), DOF2_GetFloat(string, "Angulo"), DOF2_GetInt(string, "Cor1"), DOF2_GetInt(string, "Cor2"));
								format(strlabel, sizeof(strlabel), STRTEXT3D_CONCE, DOF2_GetString(string, "Dono"), carro, DOF2_GetString(string, "DataSet"));
								ConceLabel[carro] = CreateDynamic3DTextLabel(strlabel, -1, 0.0, 0.0, 0.15, 10.0, INVALID_PLAYER_ID, carroid, 1, -1, -1, -1, 50.0);

								DOF2_SetInt(string, "Id", carroid);

								if(DOF2_GetInt(string, "TRoda") == 1)
								{
									AddVehicleComponent(carroid, DOF2_GetInt(string, "Roda"));
								}
								if(DOF2_GetInt(string, "TPaintjob") == 1)
								{
									ChangeVehiclePaintjob(carroid, DOF2_GetInt(string, "Paintjob"));
								}
								if(DOF2_GetInt(string, "TNitro") == 1)
								{
									AddVehicleComponent(carroid, DOF2_GetInt(string, "Nitro"));
								}
								if(DOF2_GetInt(string, "TSuspensao") == 1)
								{
									AddVehicleComponent(carroid, DOF2_GetInt(string, "Suspensao"));
								}
								if(DOF2_GetInt(string, "TNeon") == 1)
								{
									ChangeVehicleNeon(carroid, DOF2_GetInt(string, "Neon"));
								}
								if(DOF2_GetInt(string, "TAutoTunning") == 1)
								{
									AutoTunningRun(carroid);
								}
							}
						}
					}
				}
			}
			if(listitem == 6)					  // Ferramentas
			{
				if(!IsPlayerInAnyVehicle(playerid))
				{
					SendClientMessage(playerid, 0xCC0000FF, "Você precisa estar no veículo para usar esta opção.");
				}
				else
				{
					ShowPlayerDialog(playerid, vcontrole, DIALOG_STYLE_LIST, "Controle", "{FF0000}Luzes\n{0800FF}Abrir/Fechar Capo\n{00FF08}Abrir/Fechar Boot\n{FFFF00}Motor\n{AE00FF}Alarme", "Confirmar", "Cancelar");
				}
			}
			if(listitem == 7)					  // Vender Carro
			{
//				new VehicleID = GetPlayerVehicleID(playerid), strlabel[256];
				new VehicleID = GetPlayerVehicleID(playerid);

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0 && VehicleID == DOF2_GetInt(string, "Id"))
					{
						if(IsPlayerConnected(playerid))
						{
							if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
							{
								DOF2_SetInt(string, "TDono", 3);
								DOF2_SetString(string, "Dono", "Ninguem");
								DOF2_SetInt(string, "CarVIP", 0);
								DOF2_SetInt(string, "CarVIPT", 0);
								DOF2_SetInt(string, "CarVIPMT", 0);

								DOF2_SetString(string, "Convidado1", "Ninguem");
								DOF2_SetString(string, "Convidado2", "Ninguem");
								DOF2_SetString(string, "Convidado3", "Ninguem");

								GivePlayerGrana(playerid, DOF2_GetInt(string, "Preco"));
								format(STRX, sizeof(STRX), "{FFFFFF}%s {B22222}vendeu um veículo", GetPlayerNameEx(playerid));
								SendClientMessageToAll(Azul, STRX);

								DOF2_SetInt(string, "Id", INVALID_VEHICLE_ID);
								DestroyDynamic3DTextLabel(ConceLabel[carro]);
								ConceLabel[carro] = Text3D:INVALID_3DTEXT_ID;

								DestroyVehicle(VehicleID);
								VehicleID = INVALID_VEHICLE_ID;
								return 1;
							}
							else
							{
								SendClientMessage(playerid, Vermelho, "Este veículo não é seu!");
								return 1;
							}
						}
					}
				}
				SendClientMessage(playerid, Vermelho, "Você precisa estar dentro de seu veículo para vende-lo.");
			}
			if(listitem == 8)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					ShowPlayerDialog(playerid, tunar, DIALOG_STYLE_LIST, "Tuning Menu", STRD_TUNNING, "OK", "Cancelar");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você precisa estar em seu veículo para tuna-lo.");
				}
			}
			if(listitem == 9)
			{
				new VehicleID = GetPlayerVehicleID(playerid);

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_GetInt(string, "Id") == VehicleID)
					{
						if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
						{
							if(DOF2_GetInt(string, "TRoda") == 1)
							{
								DOF2_SetInt(string, "TRoda", 0);
								RemoveVehicleComponent(VehicleID, DOF2_GetInt(string, "Roda"));
							}
							if(DOF2_GetInt(string, "TPaintjob") == 1)
							{
								DOF2_SetInt(string, "TPaintjob", 0);
								ChangeVehiclePaintjob(VehicleID, 3);
							}
							if(DOF2_GetInt(string, "TNitro") == 1)
							{
								DOF2_SetInt(string, "TNitro", 0);
								RemoveVehicleComponent(VehicleID, DOF2_GetInt(string, "Nitro"));
							}
							if(DOF2_GetInt(string, "TSuspensao") == 1)
							{
								DOF2_SetInt(string, "TSuspensao", 0);
								RemoveVehicleComponent(VehicleID, DOF2_GetInt(string, "Suspensao"));
							}
							if(DOF2_GetInt(string, "TNeon") == 1)
							{
								DOF2_SetInt(string, "TNeon", 0);
								ChangeVehicleNeon(VehicleID, 6);
							}
							if(DOF2_GetInt(string, "TAutoTunning") == 1)
							{
								DOF2_SetInt(string, "TAutoTunning", 0);
								AutoTunningRemove(VehicleID);
							}
							return 1;
						}
					}
				}
				SendClientMessage(playerid, Vermelho, "Você precisa estar em seu veículo para destuna-lo.");
			}
		}
	}

	if(dialogid == 4502)
	{
		if(response == 1)
		{
			if(!VBIsNumeric(inputtext))
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
				return 1;
			}
			else
			{
				new VehicleID = GetPlayerVehicleID(playerid);

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_FileExists(string))
					{
						if(VehicleID == DOF2_GetInt(string, "Id"))
						{
							DOF2_SetInt(string, "Cor1", StrToInt(inputtext));
							ChangeVehicleColor(DOF2_GetInt(string, "Id"), DOF2_GetInt(string, "Cor1"), DOF2_GetInt(string, "Cor2"));
							return 1;
						}
					}
				}
				SendClientMessage(playerid, Vermelho, "Este veículo não é seu!");
			}
		}
	}

	if(dialogid == 4503)
	{
		if(response == 1)
		{
			if(!VBIsNumeric(inputtext))
			{
				SendClientMessage(playerid, Vermelho, "Valor inválido, tente novamente!");
				return 1;
			}
			else
			{
				new VehicleID = GetPlayerVehicleID(playerid);

				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(string, sizeof(string), PASTA_CONCE, carro);
					if(DOF2_FileExists(string))
					{
						if(VehicleID == DOF2_GetInt(string, "Id"))
						{
							DOF2_SetInt(string, "Cor2", StrToInt(inputtext));
							ChangeVehicleColor(DOF2_GetInt(string, "Id"), DOF2_GetInt(string, "Cor1"), DOF2_GetInt(string, "Cor2"));
							return 1;
						}
					}
				}
				SendClientMessage(playerid, Vermelho, "Este veículo não é seu!");
			}
		}
	}
	if(dialogid == 4505)
	{
		if(response == 1)
		{
			if(listitem == 0) // Copiar
			{
				ShowPlayerDialog(playerid, 4506, DIALOG_STYLE_INPUT, "Chaves", "{009E77}Digite o ID ou o Nome da pessoa (online)\n{009E77}em seguida dê espaço o digite o Conce ID do veículo:\n\n{009E69}OBS: {00899E}Use /infocarro para ver o Conce ID de algum veículo.", "OK", "Cancelar");
			}
			if(listitem == 1) // Tomar
			{
				ShowPlayerDialog(playerid, 4507, DIALOG_STYLE_INPUT, "Chaves", "{009E77}Digite corretamente o Nome da pessoa\n{009E77}em seguida dê espaço o digite o Conce ID do veículo:", "OK", "Cancelar");
			}
		}
	}
	if(dialogid == 4506)
	{
		if(response == 1)
		{
			new plid, id;

			if(sscanf(inputtext, "ud", plid, id))
			{
				ShowPlayerDialog(playerid, 4506, DIALOG_STYLE_INPUT, "Chaves", "{99009E}Opss, você digitou algo errado!\n\n{009E77}Digite o ID ou o Nome da pessoa (online)\n{009E77}em seguida dê espaço o digite o Conce ID do veículo:\n\n{009E69}OBS: {00899E}Use /infocarro para ver o Conce ID de algum veículo.", "OK", "Cancelar");
				return 1;
			}
			format(file, sizeof(file), PASTA_CONCE, id);
			if(DOF2_FileExists(file))
			{
				if(strcmp(DOF2_GetString(file, "Dono"), GetPlayerNameEx(playerid), false) == 0 || pAdmin[playerid] >= 2)
				{
					if(strcmp(DOF2_GetString(file, "Convidado1"), "Ninguem", false) == 0)
					{
						DOF2_SetString(file, "Convidado1", GetPlayerNameEx(plid));

						format(string, sizeof(string), "%s te deu uma cópia da chave do veículo: %d", GetPlayerNameEx(playerid), id);
						SendClientMessage(plid, Blue, string);

						format(string, sizeof(string), "Cópia gerada com sucesso, agora %s pode usar seu veículo!", GetPlayerNameEx(plid));
						SendClientMessage(playerid, 0x6495EDAA, string);
						return 1;
					}
					if(strcmp(DOF2_GetString(file, "Convidado2"), "Ninguem", false) == 0)
					{
						DOF2_SetString(file, "Convidado2", GetPlayerNameEx(plid));

						format(string, sizeof(string), "%s te deu uma cópia da chave do veículo: %d", GetPlayerNameEx(playerid), id);
						SendClientMessage(plid, Blue, string);

						format(string, sizeof(string), "Cópia gerada com sucesso, agora %s pode usar seu veículo!", GetPlayerNameEx(plid));
						SendClientMessage(playerid, 0x6495EDAA, string);
						return 1;
					}
					if(strcmp(DOF2_GetString(file, "Convidado3"), "Ninguem", false) == 0)
					{
						DOF2_SetString(file, "Convidado3", GetPlayerNameEx(plid));

						format(string, sizeof(string), "%s te deu uma cópia da chave do veículo: %d", GetPlayerNameEx(playerid), id);
						SendClientMessage(plid, Blue, string);

						format(string, sizeof(string), "Cópia gerada com sucesso, agora %s pode usar seu veículo!", GetPlayerNameEx(plid));
						SendClientMessage(playerid, 0x6495EDAA, string);
						return 1;
					}
					SendClientMessage(playerid, Vermelho, "O limite de chaves foi ecedido!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não é dono deste veículo.");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Veículo inválido, tente novamente!");
			}
			return 1;
		}
	}
	if(dialogid == 4507)
	{
		if(response == 1)
		{
			new nick[MAX_PLAYER_NAME], id;

			if(sscanf(inputtext, "s[24]d", nick, id))
			{
				ShowPlayerDialog(playerid, 4507, DIALOG_STYLE_INPUT, "Chaves", "{99009E}Opss, você digitou algo errado!\n\n{009E77}Digite corretamente o Nome da pessoa\n{009E77}em seguida dê espaço o digite o Conce ID do veículo:", "OK", "Cancelar");
				return 1;
			}
			format(file, sizeof(file), PASTA_CONCE, id);
			if(DOF2_FileExists(file))
			{
				if(strcmp(DOF2_GetString(file, "Dono"), GetPlayerNameEx(playerid), false) == 0 || pAdmin[playerid] >= 2)
				{
					if(strcmp(DOF2_GetString(file, "Convidado1"), nick, false) == 0)
					{
						DOF2_SetString(file, "Convidado1", "Ninguem");

						format(string, sizeof(string), "Você tomou a chave de %s agora ele(a) não pode usar seu veículo!", nick);
						SendClientMessage(playerid, 0x6495EDAA, string);
						return 1;
					}
					if(strcmp(DOF2_GetString(file, "Convidado2"), nick, false) == 0)
					{
						DOF2_SetString(file, "Convidado2", "Ninguem");

						format(string, sizeof(string), "Você tomou a chave de %s agora ele(a) não pode usar seu veículo!", nick);
						SendClientMessage(playerid, 0x6495EDAA, string);
						return 1;
					}
					if(strcmp(DOF2_GetString(file, "Convidado3"), nick, false) == 0)
					{
						DOF2_SetString(file, "Convidado3", "Ninguem");

						format(string, sizeof(string), "Você tomou a chave de %s agora ele(a) não pode usar seu veículo!", nick);
						SendClientMessage(playerid, 0x6495EDAA, string);
						return 1;
					}
					SendClientMessage(playerid, Vermelho, "Verifique se digitou o nome corretamente!");
				}
				else
				{
					SendClientMessage(playerid, Vermelho, "Você não é dono deste veículo.");
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "Veículo inválido, tente novamente!");
			}
		}
	}
	return 1;
}

encrypt(name[])
{
	static charset[] = "qwertyaQWERTYUIOPZXCVBNMLKJHGFDSAsdfghzxcvbnuiopjklm1324657809_", css = 63;
	new target[MAX_PLAYER_NAME+1], j = strlen(name), sum = j, tmpp = 0, i, modw;
	for (i = 0; i < MAX_PLAYER_NAME || i < j; i++)
	{
		modw = i % MAX_PLAYER_NAME;
		tmpp = (i >= j) ? charset[(7*i) % css] : name[i];
		sum = (sum+chrfind(tmpp, charset)+1) % css;
		target[modw] = charset[(sum+target[modw]) % css];
	}
	target[MAX_PLAYER_NAME] = '\0';
	return target;
}

public RandomMSGs()
{
	new string[256], string2[256],
	random1, random2;

	random1 = random(sizeof(MSGs));
	random2 = random(sizeof(COLORS));

	format(string, sizeof(string), "%s", MSGs[random1]);
	if(strcmp(string, "announcevip", false) == 0)
	{
		format(string2, sizeof(string2), "» Vá até a loja [Loja de Cash] Comprar o seu vip!", weburl);
		SendClientMessageToAll(COLORS[random2], string2);
	}
	else
	{
		SendClientMessageToAll(COLORS[random2], string);
	}
	return 1;
}

public Up()
{
	for(new p = 0; p < MAX_PROPS; p++)
	{
		new strx[256];

		format(strx, sizeof(strx), PASTA_PROPS, p);
		if(DOF2_FileExists(strx))
		{
			if(DOF2_GetInt(strx, "TDono") == 1)
			{
				new grana = (DOF2_GetInt(strx, "Preco") /100);
				if(DOF2_GetInt(strx, "Grana") +grana >= 700000)
				{
					DOF2_SetInt(strx, "SaldoEmpresa", 8000);
				}
				else
				{
					DOF2_SetInt(strx, "SaldoEmpresa", DOF2_GetInt(strx, "SaldoEmpresa") +grana);
				}
			}
		}
	}
	SendClientMessageToAll(Amarelo, "As rendas das empresa foram depositadas nelas.");
	
	new string[256];
	new file[128];
	new aname[MAX_PLAYER_NAME];

	foreach(Player, i)
	{
		PlayerPlaySound(i, 1057, 0, 0, 0);
		GetPlayerName(i, aname, MAX_PLAYER_NAME);
		format(file, sizeof(file), PASTA_CONTAS, aname);

		if(DOF2_GetInt(file, "Profissao") == Desempregado)
		{
			SendClientMessage(i, Vermelho, "[ATENÇÃO] {FFFFFF}(INFO) Você não tem um emprego e não recebeu sálario, você pode conseguir um emprego na prefeitura.");
		}
		if(DOF2_GetInt(file, "Emprestimo") == 0)
		{

		}
		else
		{
			if(DOF2_GetInt(file, "TEmprestimo") == 1)
			{
				DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")-1000);
				DOF2_SetInt(file, "Emprestimo", DOF2_GetInt(file, "Emprestimo")-1000);

				SendClientMessage(i, Verde, "{DADADA}Foi descontado $1000 {DADADA}de sua conta bancaria pelo seu emprestimo.");
			}
			if(DOF2_GetInt(file, "TEmprestimo") == 2)
			{

				DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")-2000);
				DOF2_SetInt(file, "Emprestimo", DOF2_GetInt(file, "Emprestimo")-2000);

				SendClientMessage(i, Verde, "{DADADA}Foi descontado {FF0000}$2000 {DADADA}de sua conta bancaria pelo seu emprestimo.");
			}
			if(DOF2_GetInt(file, "TEmprestimo") == 3)
			{

				DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")-3000);
				DOF2_SetInt(file, "Emprestimo", DOF2_GetInt(file, "Emprestimo")-3000);

				SendClientMessage(i, Verde, "Foi descontado {FF0000}$3000 de sua conta bancaria pelo seu emprestimo.");
			}
			if(DOF2_GetInt(file, "TEmprestimo") == 4)
			{

				DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")-4000);
				DOF2_SetInt(file, "Emprestimo", DOF2_GetInt(file, "Emprestimo")-4000);

				SendClientMessage(i, Verde, "{DADADA}Foi descontado {FF0000}$4000 {DADADA}de sua conta bancaria pelo seu emprestimo.");
			}
			if(DOF2_GetInt(file, "TEmprestimo") == 5)
			{

				DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")-5000);
				DOF2_SetInt(file, "Emprestimo", DOF2_GetInt(file, "Emprestimo")-5000);

				SendClientMessage(i, Verde, "{DADADA}Foi descontado {FF0000}$5000 {DADADA}de sua conta bancaria pelo seu emprestimo.");
			}
		}
		if(DOF2_GetInt(file, "Casa") == 1)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")-3500);
			SendClientMessage(i, Verde, "{DADADA}Você tem uma casa,empresa e carros e foi cobrado {FF0000}R$500 {DADADA}de água e luz e {FF0000}R$3000 {DADADA}de Impostos.");
		}
		if(DOF2_GetInt(file, "Profissao") == MotoristaP)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_MotoristaP);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_MotoristaP);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Guarda)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Guarda);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Guarda);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Policial_R)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Policial_R);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Policial_R);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Policial_M)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Policial_M);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Policial_M);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Policial_C)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Policial_C);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Policial_C);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Policial_F)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Policial_F);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Policial_F);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Delegado)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Delegado);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Delegado);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Bope)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Bope);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Bope);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Swat)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Swat);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Swat);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Narcoticos)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Narcoticos);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Narcoticos);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Exercito)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Exercito);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Exercito);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Empresario)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Empresario);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Empresario);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == ExercitoMilitar)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_ExercitoMilitar);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_ExercitoMilitar);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == ExercitoAero)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_ExercitoAero);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_ExercitoAero);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == FuzileiroMilitar)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_FuzileiroMilitar);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_FuzileiroMilitar);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == General)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_General);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_General);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Major)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Major);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Major);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Marechal)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Marechal);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Marechal);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Tenente)
		{
	    	DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Tenente);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Tenente);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Traficante)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Traficante);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Traficante);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Assasino)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Assasino);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Assasino);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Terrorista)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Terrorista);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Terrorista);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == AssasinoProfissional)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_AssasinoProfissional);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_AssasinoProfissional);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Jornalista)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Jornalista);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Jornalista);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Fotografo)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Fotografo);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Fotografo);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Reporter)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Reporter);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Reporter);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Ancora)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Ancora);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Ancora);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Meteorologista)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Meteorologista);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Meteorologista);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Mecanico)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Mecanico);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Mecanico);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Rapper)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Rapper);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Rapper);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Mcarroforte)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Mcarroforte);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Mcarroforte);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Uber)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Uber);
			format(string, sizeof(string), "{6666ff}[SALARIO] {660000}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Uber);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Frentista)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Frentista);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Frentista);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == FBI)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_FBI);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_FBI);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Interpol)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Interpol);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Interpol);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Aposentado)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Aposentado);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Aposentado);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Advogado)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Advogado);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Advogado);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Contrabando)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Contrabando);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Contrabando);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Promotor)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Promotor);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Promotor);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == SegVila)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_SegVila);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_SegVila);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Assaltante)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Assaltante);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Assaltante);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Bibliotecario)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Bibliotecario);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Bibliotecario);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Ator)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Ator);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Ator);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Deputado)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Deputado);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Deputado);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Vereador)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Vereador);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Vereador);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == TraficanteD)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_TraficanteD);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_TraficanteD);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == DonoM)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_DonoM);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_DonoM);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == JogadorF)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_JogadorF);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_JogadorF);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == LSPD)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_LSPD);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_LSPD);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == YKZ)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_YKZ);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_YKZ);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == MRN)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_MRN);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_MRN);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Empresario)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Empresario);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Empresario);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Imobiliario)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Imobiliario);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Imobiliario);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Gari)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Gari);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Gari);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Lixeiro)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Lixeiro);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Lixeiro);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Bombeiro)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Bombeiro);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Bombeiro);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Hotdog)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Hotdog);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Hotdog);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Desembargador)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Desembargador);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Desembargador);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Astronauta)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Astronauta);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Astronauta);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Estudante)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Estudante);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Estudante);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Correios)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Correios);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Correios);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Cantor)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Cantor);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Cantor);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Poeta)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Poeta);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Poeta);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Mafia)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Mafia);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Mafia);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Drifter)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Drifter);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Drifter);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Ayrton)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Ayrton);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Ayrton);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Professor)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Professor);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Professor);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Empregador)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Empregador);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Empregador);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == AtiradorElite)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_AtiradorElite);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_AtiradorElite);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Ninja)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Ninja);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Ninja);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Maquinista)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Maquinista);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Maquinista);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Caminhoneiro)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Caminhoneiro);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Caminhoneiro);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Petroleiro)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Petroleiro);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Petroleiro);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Piloto)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Piloto);
	    	format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Piloto);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Cozinheiro)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Cozinheiro);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Cozinheiro);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Eletricista)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Eletricista);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Eletricista);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == MOD)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_MOD);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_MOD);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == MotoqueiroFantasma)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_MotoqueiroFantasma);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_MotoqueiroFantasma);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == ACG)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_ACG);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_ACG);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == CAM)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_CAM);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_CAM);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == CAP)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_CAP);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_CAP);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == AVA)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_AVA);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_AVA);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
        if(DOF2_GetInt(file, "Profissao") == BAH)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_BAH);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_BAH);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == BOT)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_BOT);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_BOT);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == CHA)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_CHA);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_CHA);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == COR)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_COR);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_COR);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == CFC)
     	{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_CFC);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_CFC);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == CRU)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_CRU);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_CRU);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == FLA)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_FLA);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_FLA);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == FLU)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_FLU);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_FLU);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == GRE)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_GRE);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_GRE);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == INT)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_INT);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_INT);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == PAL)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_PAL);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_PAL);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == PON)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_PON);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_PON);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == SAN)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_SAN);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_SAN);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == SAO)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_SAO);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_SAO);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == SPO)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_SPO);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_SPO);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == VIT)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_VIT);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_VIT);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Hacker)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Hacker);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Hacker);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Goku)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Goku);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Goku);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == FTSA)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_FTSA);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_FTSA);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Cientista)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Cientista);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Cientista);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Astronauta)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Astronauta);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Astronauta);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Mercenario)
		{
	    	DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Mercenario);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Mercenario);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Coveiro)
		{
	    	DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Coveiro);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Coveiro);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Jardineiro)
		{
	    	DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Jardineiro);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Jardineiro);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Obras)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Obras);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Obras);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Cafetão)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Cafetão);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Cafetão);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Governador)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Governador);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_LanternaV);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Gringo)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Gringo);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Gringo);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Juiz)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Juiz);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Juiz);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == JogadorSamp)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_JogadorSamp);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_JogadorSamp);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Mercenario)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Mercenario);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Mercenario);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == JogadorMine)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_JogadorMine);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_JogadorMine);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == CapitaoA)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_CapitaoA);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_CapitaoA);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Robin)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Robin);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Robin);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == LanternaV)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_LanternaV);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_LanternaV);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Batman)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Batman);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Batman);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Flash)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Flash);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Flash);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Thor)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Thor);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Thor);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Supervisor)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Supervisor);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Supervisor);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Bancario)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Bancario);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Bancario);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Robin)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Robin);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Robin);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Crackudo)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Crackudo);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Crackudo);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Medico)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Medico);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Medico);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Comandante)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Comandante);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Comandante);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Mente)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Mente);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Mente);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == VigilanteS)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_VigilanteS);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_VigilanteS);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
        if(DOF2_GetInt(file, "Profissao") == Corretor)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Corretor);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Corretor);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
        if(DOF2_GetInt(file, "Profissao") == Noel)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Noel);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Noel);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Mascara)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Mascara);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Mascara);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Ben10)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Ben10);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Ben10);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Patata)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Patata);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Patata);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Hulk)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Hulk);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Hulk);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == TEC)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_TEC);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_TEC);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == AgenteDoPT)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_AgenteDoPT);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_AgenteDoPT);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Marido)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Marido);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Marido);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == TTA)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_TTA);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_TTA);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == VagabundoBVL)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_VagabundoBVL);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_VagabundoBVL);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Wolverine)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Wolverine);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Wolverine);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == TécnicoInformática)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_TécnicoInformática);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_TécnicoInformática);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Engenheiro)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Engenheiro);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Engenheiro);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Acessor)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Acessor);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Acessor);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Empresarial)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Empresarial);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Empresarial);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Recursos)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Recursos);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Recursos);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Analista)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Analista);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Analista);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Atendimento)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Atendimento);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Atendimento);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Marketing)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Marketing);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Marketing);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Consultor)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Consultor);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Consultor);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Profissao") == Comercial)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salario_Comercial);
			format(string, sizeof(string), "{6666ff}[SALARIO] {DADADA}Você tem um emprego e recebeu seu salário: {00FF0C}$%d", Salario_Comercial);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "VIPT") == 1)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+SalarioMaximo);
			DOF2_SetInt(file, "CASH", DOF2_GetInt(file, "CASH")+CASH_VIPSALARIO);
			format(string, sizeof(string), "{6666ff}[INFO] {DADADA}Você recebeu seu salário VIP PREMIUM {00FF0C}$%d{DADADA} +{00FF0C}16 {DADADA}de cash ", SalarioMaximo);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "VIPMT") == 1)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+SalarioVipm);
			DOF2_SetInt(file, "CASH", DOF2_GetInt(file, "CASH")+CASH_VIPMSALARIO);
			format(string, sizeof(string), "{6666ff}[INFO] {DADADA}Você recebeu seu salário VIP $Prestige$ {00FF0C}$%d{DADADA} +{00FF0C}26 {DADADA}de cash ", SalarioVipm);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "DJ") == 1)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salariodj);
			DOF2_SetInt(file, "CASH", DOF2_GetInt(file, "CASH")+CASH_DJSALARIO);
			format(string, sizeof(string), "{6666ff}[INFO] {DADADA}Você recebeu seu salário DJ {00FF0C}$%d{DADADA} +{00FF0C}50 {DADADA}de cash ", Salariodj);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "musica") == 1)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+Salariodj);
			DOF2_SetInt(file, "CASH", DOF2_GetInt(file, "CASH")+CASH_DJSALARIO);
			format(string, sizeof(string), "{6666ff}[INFO] {DADADA}Você recebeu seu salário DJ {00FF0C}$%d{DADADA} +{00FF0C}50 {DADADA}de cash ", Salariodj);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "VIP") == 1)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")+SalarioMaximo2);
			format(string, sizeof(string), "{6666ff}[INFO] {DADADA}Você recebeu seu salário VIP {00FF0C}$%d{DADADA} +{00FF0C}6 {DADADA}de cash ", SalarioMaximo2);
			SendClientMessage(i, 0xCAFF95AA, string);
		}
		if(DOF2_GetInt(file, "Luta") == 1)
		{
			DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario")-250);
			format(string, sizeof(string), "{6666ff}[INFO] {DADADA}Você está aprendendo a lutar e foi descontado {ff0000} - $250 {DADADA}do seu salário.");
			SendClientMessage(i, 0xCAFF95AA, string);
		}
	}
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new nname[MAX_PLAYER_NAME],
		pname[MAX_PLAYER_NAME],
		aname[MAX_PLAYER_NAME];

	new string[256], string2[256], vid, modelo,
		Float:X, Float:Y, Float:Z;

	GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
	GetPlayerName(playerid, nname, MAX_PLAYER_NAME);

	vid = GetPlayerVehicleID(playerid);
	modelo = GetVehicleModel(vid);
	
	new file[128];

	#if defined FGPSUser
	if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER && GetPVarInt(playerid, "YEAH") == 1)
	{
		DestroyDynamicRaceCP(PlayerInfo[playerid][FGPS_RCP]);
		DestroyDynamicObject(PlayerInfo[playerid][FGPSObject]);

		SetPVarInt(playerid, "YEAH", 0);
		DeletePVar(playerid, "Spongebob");
		DeletePVar(playerid, "Mario");
		DeletePVar(playerid, "SpiderPig");
		DeletePVar(playerid, "FAIL");

		#if defined UseTd
		PlayerTextDrawHide(playerid, PlayerInfo[playerid][F_GPSTD]);
		PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][F_GPSTD]);
		PlayerInfo[playerid][F_GPSTD] = PlayerText:INVALID_TEXT_DRAW;
		#endif
	}
	#endif

	format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
	
	// Capacete
	#if defined CapaceteUser
	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		if(IsABike(vid))
		{
			if(DOF2_GetInt(file, "TCapacete") == 1)
			{
				switch(GetPlayerSkin(playerid))
				{
					#define SPAO{%0,%1,%2,%3,%4,%5} SetPlayerAttachedObject(playerid, SlotCapacete, 18976, 2, (%0), (%1), (%2), (%3), (%4), (%5));
					case 0, 65, 74, 149, 208, 273:  SPAO{0.070000, 0.000000, 0.000000, 88.000000, 75.000000, 0.000000}
					case 1..6, 8, 14, 16, 22, 27, 29, 33, 41..49, 82..84, 86, 87, 119, 289: SPAO{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}
					case 7, 10: SPAO{0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
					case 9: SPAO{0.059999, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
					case 11..13: SPAO{0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
					case 15: SPAO{0.059999, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
					case 17..21: SPAO{0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
					case 23..26, 28, 30..32, 34..39, 57, 58, 98, 99, 104..118, 120..131: SPAO{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
					case 40: SPAO{0.050000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
					case 50, 100..103, 148, 150..189, 222: SPAO{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
					case 51..54: SPAO{0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
					case 55, 56, 63, 64, 66..73, 75, 76, 78..81, 133..143, 147, 190..207, 209..219, 221, 247..272, 274..288, 290..293: SPAO{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
					case 59..62: SPAO{0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
					case 77: SPAO{0.059999, 0.019999, 0.000000, 87.000000, 82.000000, 0.000000}
					case 85, 88, 89: SPAO{0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}
					case 90..97: SPAO{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
					case 132: SPAO{0.000000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
					case 144..146: SPAO{0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
					case 220: SPAO{0.029999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
					case 223, 246: SPAO{0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}
					case 224..245: SPAO{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
					case 294: SPAO{0.070000, 0.019999, 0.000000, 91.000000, 84.000000, 0.000000}
					case 295: SPAO{0.050000, 0.019998, 0.000000, 86.000000, 82.000000, 0.000000}
					case 296..298: SPAO{0.064999, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
					case 299: SPAO{0.064998, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
					#undef SPAO
				}
			}
			else
			{
				infratores[playerid] = 1;
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você está sem Capacete e poderá ser multado.");
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Compre um em qualquer Loja de Utilidades.");
			}
		}
	}
	else
	{
		if(DOF2_GetInt(file, "TCapacete") == 1)
		{
			RemovePlayerAttachedObject(playerid, SlotCapacete);
		}
	}
	#endif

	if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(Taximetro[playerid][0] == 1)
		{
			GivePlayerGrana(playerid, -PrecoCorrida[playerid]);
			GivePlayerGrana(Taximetro[playerid][1], PrecoCorrida[playerid]);

			PrecoCorrida[playerid] = 0;
			Taximetro[playerid][1] = 0;
			Taximetro[playerid][0] = 0;

			SendClientMessage(playerid, COLOR_GREEN, "Você saiu do taxi, e pagou o taxista.");
			SendClientMessage(Taximetro[playerid][1], Vermelho, "Você recebeu o valor da corrida até aqui.");
		}

		#if defined CameraUser
		SetCameraBehindPlayer(playerid);
		#endif
	}

	#if defined CameraUser
	if(newstate == PLAYER_STATE_DRIVER && VeiculoValido[GetPlayerVehicleID(playerid)] == 1)
	{
		SendClientMessage(playerid, Blue, "{FF0000}(INFO) {FFFFFF}Você pode ativar a câmera em 1ª pessoa apertando a letra Y.");
	}
	#endif

	if(newstate == PLAYER_STATE_DRIVER)
	{
		if(GetTickCount() > FloodTimer[playerid])
		{
			FloodAlert[playerid] = 0;
		}

		FloodTimer[playerid] = GetTickCount() +TimerFlood;
		FloodAlert[playerid]++;

		if(FloodAlert[playerid] == AlertFlood)
		{
			format(string, sizeof(string), "{FF0000}O(a) jogador(a) {FFFFFF}%s {FF0000}foi kickado(a) Motivo: {FFFFFF}Flood State", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Amarelo, string);
			SendClientMessageToAll(Vermelho, "Jogue com paciência e calmamente para que isso não venha a acontecer com você.");
			KickLog(string);
			Kick(playerid);
			return 1;
		}

		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(GetPlayerState(i) == PLAYER_STATE_SPECTATING && gSpectateType[i] == ADMIN_SPEC_TYPE_PLAYER && gSpectateID[i] == playerid)
			{
				PlayerSpectateVehicle(i, vid);
				gSpectateType[i] = ADMIN_SPEC_TYPE_VEHICLE;
			}
		}

		if(noevento[playerid] == 1)
		{
			if(Proibido == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(i != playerid)
						{
							SetVehicleParamsForPlayer(vid, i, 0, 1);
						}
					}
				}
				GetPlayerPos(playerid, X, Y, Z);
				PlayerPlaySound(playerid, 1056, X, Y, Z);
				TogglePlayerControllable(playerid, false);
				SendClientMessage(playerid, Azul, "[EVENTO] Você entrou em um carro, aguarde o evento começar.");
			}
		}

		for(new carro = 0; carro < MAX_CONCES; carro++)
		{
			format(file2, sizeof(file2), PASTA_CONCE, carro);
			if(DOF2_FileExists(file2))
			{
				if(vid == DOF2_GetInt(file2, "Id"))
				{
					cCarro[playerid] = DOF2_GetInt(file2, "Combustivel");
				}
			}
		}


		#if defined CarInfosUser
		if(CarInfos1[playerid] != PlayerText:INVALID_TEXT_DRAW) {
			format(string, sizeof(string), "%d", GetVehicleSpeed(playerid));
			PlayerTextDrawSetString(playerid, CarInfos1[playerid], string);
		}
		if(CarInfos2[playerid] != PlayerText:INVALID_TEXT_DRAW) {
			format(string, sizeof(string), "  %s", GetVehicleName(vid));
			PlayerTextDrawSetString(playerid, CarInfos2[playerid], string);
		}
		if(CarInfos3[playerid] != PlayerText:INVALID_TEXT_DRAW) {
			format(string, sizeof(string), "%s", GetPlayerArea(playerid));
			PlayerTextDrawSetString(playerid, CarInfos3[playerid], string);
		}

		PlayerTextDrawShow(playerid, CarInfos1[playerid]);
		PlayerTextDrawShow(playerid, CarInfos2[playerid]);
		PlayerTextDrawShow(playerid, CarInfos3[playerid]);
		PlayerTextDrawShow(playerid, CarInfos4[playerid]);
		PlayerTextDrawShow(playerid, CarInfos5[playerid]);
		PlayerTextDrawShow(playerid, CarInfos6[playerid]);
		PlayerTextDrawShow(playerid, CarInfos7[playerid]);
		PlayerTextDrawShow(playerid, CarInfos8[playerid]);
		PlayerTextDrawShow(playerid, CarInfos9[playerid]);
		#endif

		for(new carro = 0; carro < MAX_CONCES; carro++)
		{
			format(string2, sizeof(string2), PASTA_CONCE, carro);
			if(DOF2_FileExists(string2))
			{
				if(vid == DOF2_GetInt(string2, "Id"))
				{
					new strlabel[256];

					GetVehiclePos(vid, X, Y, Z);
					if(DOF2_GetInt(string2, "TDono") == 1)
					{
						if(strcmp(DOF2_GetString(string2, "Dono"), pname, false) == 0 || strcmp(DOF2_GetString(string2, "Convidado1"), pname, false) == 0 || strcmp(DOF2_GetString(string2, "Convidado2"), pname, false) == 0 || strcmp(DOF2_GetString(string2, "Convidado3"), pname, false) == 0)
						{
							new year, month, day, data[128];

							getdate(year, month, day);
							format(data, sizeof(data), "%d/%d/%d", day, month, year);
							DOF2_SetString(string2, "DataSet", data);
							if(strcmp(DOF2_GetString(string2, "Dono"), pname, false) == 0)
							{
                                SendClientMessage(playerid, Azul, "Você é o dono(a) deste veículo, seja bem vindo(a)!");
                            }
                            if(strcmp(DOF2_GetString(string2, "Convidado1"), pname, false) == 0 || strcmp(DOF2_GetString(string2, "Convidado2"), pname, false) == 0 || strcmp(DOF2_GetString(string2, "Convidado3"), pname, false) == 0)
						    {
                                SendClientMessage(playerid, Azul, "Você tem a chave deste veículo, seja bem vindo(a)!");
                            }
							format(strlabel, sizeof(strlabel), STRTEXT3D_CONCE, DOF2_GetString(string2, "Dono"),carro, data);
                            UpdateDynamic3DTextLabelText(ConceLabel[carro], -1, strlabel);
						}
						else
						{
							if(DOF2_GetInt(string2, "CarVIP") == 1)
							{
								if(pAdmin[playerid] > 0)
								{
									SendClientMessage(playerid, Amarelo, "Olá admin, seja bem-vindo(a)!");
									SendClientMessage(playerid, Azul, "Este veículo é ou foi de um VIP.");
								}
								else
								{
									SetTimerEx("CriarExplosao", 5000, false, "fffdf", X, Y, Z, 7, 10.0);
									SetTimerEx("CriarExplosao", 6000, false, "fffdf", X, Y, Z, 10, 10.0);
									SetTimerEx("CriarExplosao", 7000, false, "fffdf", X, Y, Z, 2, 10.0);
									SetTimerEx("CriarExplosao", 8000, false, "fffdf", X, Y, Z, 7, 10.0);
									SetTimerEx("CriarExplosao", 9000, false, "fffdf", X, Y, Z, 10, 10.0);
									SetTimerEx("CriarExplosao", 10000, false, "fffdf", X, Y, Z, 2, 10.0);

									CreatePlayerCountdown(playerid, 5, 1);
									TogglePlayerControllable(playerid, 0);
									incar[playerid] = 1;

									format(string, sizeof(string), " - ALARME VIP: Este carro é de %s e você não tem a chave.", DOF2_GetString(string2, "Dono"));
									SendClientMessage(playerid, Vermelho, string);
									SendClientMessage(playerid, LARANJA, " - Auto-destruição foi ativada, vai explodir em 5 segundos.");
									SendClientMessage(playerid, LARANJA, "|____________________________________________________|");
								}
							}
							else
							{
								if(pAdmin[playerid] > 0)
								{
									SendClientMessage(playerid, Amarelo, "Olá admin, seja bem-vindo(a)!");
								}
								else
								{
									new engine, lights, alarm, doors, bonnet, boot, objective;
									GetVehicleParamsEx(vid, engine, lights, alarm, doors, bonnet, boot, objective);
									SetVehicleParamsEx(vid, engine, lights, VEHICLE_PARAMS_ON, doors, bonnet, boot, objective);

									SetTimerEx("DesligarAlarmeCar", 5000, false, "e", vid);
									TogglePlayerControllable(playerid, 0);
									incar[playerid] = 1;

									format(string, sizeof(string), " - ALARME: Este carro é de %s e você não tem a chave.", DOF2_GetString(string2, "Dono"));
									SendClientMessage(playerid, Vermelho, string);
									SendClientMessage(playerid, LARANJA, "|____________________________________________________|");
								}
							}
						}
					}
					else
					{
						format(string, sizeof(string), "{FFFFFF}Este veículo está a venda.\n\n{FFFFFF}Modelo: {FF0000}%s\n{FFFFFF}Conce ID: {FF0000}%d\n{FFFFFF}Dono: {FF0000}%s\n{FFFFFF}Valor: {FF0000}$%d\n\n{FFFFFF}Oque deseja?", GetVehicleName(vid), carro, DOF2_GetString(string2, "Dono"), DOF2_GetInt(string2, "Preco"));
						ShowPlayerDialog(playerid, vehicleorder, DIALOG_STYLE_MSGBOX, "Informações", string, "Testar", "Comprar");
					}
				}
			}
		}

		if(vid == VehiclesFix[101])
		{
   		if(autoescola[playerid] == 0)
		{
			SendClientMessage(playerid, Amarelo, "{FFFFFF}Você não está em um teste da {FF0000}Auto-Escola!");
			RemovePlayerFromVehicle(playerid);
		}
		}
		if(vid == VehiclesFix[102])
		{
   		if(autoescola[playerid] == 0)
		{
			SendClientMessage(playerid, Amarelo, "{FFFFFF}Você não está em um teste da {FF0000}Auto-Escola!");
			RemovePlayerFromVehicle(playerid);
		}
		}
		else if(IsATruk(vid) && DOF2_GetInt(file, "Profissao") == Caminhoneiro)
		{
			PlayerInfo[playerid][pPoloArea] = 1;
			SendClientMessage(playerid, Amarelo, "Bem vindo caminhoneiro use /trabalhar para fazer seus serviços.");
		}
		else if(modelo == 596 || modelo == 427 || modelo == 523 || modelo == 574 || modelo == 601 || modelo == 528 || modelo == 490)
		{
			if(DOF2_GetInt(file, "Profissao") == Policial_M || DOF2_GetInt(file, "Profissao") == Policial_C || DOF2_GetInt(file, "Profissao") == Policial_F || DOF2_GetInt(file, "Profissao") == Delegado || DOF2_GetInt(file, "Profissao") == Bope || DOF2_GetInt(file, "Profissao") == Swat || DOF2_GetInt(file, "Profissao") == Narcoticos || DOF2_GetInt(file, "Profissao") == FBI || DOF2_GetInt(file, "Profissao") == Interpol || DOF2_GetInt(file, "Profissao") == LSPD || DOF2_GetInt(file, "aAdmin") == 1)
			{
				//SetPlayerArmour(playerid, 100.0);
				//SendClientMessage(playerid, Amarelo, "Bem vindo um colete vai te ajudar.");
			}
			else if(DOF2_GetInt(file, "Profissao") == Exercito || DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file, "Profissao") == ExercitoMilitar || DOF2_GetInt(file, "Profissao") == ExercitoAero || DOF2_GetInt(file, "Profissao") == FuzileiroMilitar || DOF2_GetInt(file, "Profissao") == General || DOF2_GetInt(file, "Profissao") == Major || DOF2_GetInt(file, "Profissao") == Marechal || DOF2_GetInt(file, "Profissao") == Tenente)
			{
				//SetPlayerArmour(playerid, 100.0);
				//SendClientMessage(playerid, Amarelo, "Bem vindo um colete vai te ajudar.");
			}
			else
			{
				incar[playerid] = 1;
				TogglePlayerControllable(playerid, 0);
				SendClientMessage(playerid, Vermelho, "Você não é um policial.");
			}
		}
		else if(modelo == 000)
		{
			if(DOF2_GetInt(file, "Profissao") == Paramedico ||  DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
			{
				SendClientMessage(playerid, 0x6495EDAA, "Bem vindo paramédico.");
			}
			else
			{
				//incar[playerid] = 1;
				//TogglePlayerControllable(playerid, 0);
				//SendClientMessage(playerid, Vermelho, "Você não é um paramédico.");
			}
		}
		else if(modelo == 000 || modelo == 000)
		{
			if(DOF2_GetInt(file, "Profissao") == Jornalista ||  DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file, "Profissao") == Reporter || DOF2_GetInt(file, "Profissao") == Ancora || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
			{
				//SendClientMessage(playerid, Amarelo, "Bem vindo jornalista.");
			}
			else
			{
				//incar[playerid] = 1;
				//TogglePlayerControllable(playerid, 0);
				//SendClientMessage(playerid, Vermelho, "Você não é um jornalista.");
			}
		}
		else if(modelo == 420 || modelo == 438)
		{
			if(DOF2_GetInt(file, "Profissao") == Taxista || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
			{
				SendClientMessage(playerid, Amarelo, "Bem vindo taxista.");
			}
			else
			{
				incar[playerid] = 1;
				TogglePlayerControllable(playerid, 0);
				SendClientMessage(playerid, Vermelho, "Você não é um taxista.");
			}
		}
		else if(modelo == 431 || modelo == 437)
		{
			if(DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
			{
				SendClientMessage(playerid, Amarelo, "Bem vindo motorista.");
			}
			else
			{
				incar[playerid] = 1;
				TogglePlayerControllable(playerid, 0);
				SendClientMessage(playerid, Vermelho, "Você não é um motorista.");
			}
		}
		else if(modelo == 537 || modelo == 538)
		{
			if(DOF2_GetInt(file, "Profissao") == Maquinista ||  DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
			{
				// Maquinista
				InRacePistaTrain[playerid] = 1;
				CreatePlayerPistaRaceTrain(playerid);
				SendClientMessage(playerid, Amarelo, "Bem vindo maquinista.");
			}
			else
			{
				incar[playerid] = 1;
				TogglePlayerControllable(playerid, 0);
				SendClientMessage(playerid, Vermelho, "Você não é um maquinista.");
			}
		}
		else if(modelo == 407 || modelo == 544)
		{
			if(DOF2_GetInt(file, "Profissao") == Bombeiro ||  DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file, "aAdmin") == 1 == true)
			{
				SendClientMessage(playerid, Amarelo, "Bem vindo Bombeiro.");
			}
			else
			{
				incar[playerid] = 1;
				TogglePlayerControllable(playerid, 0);
				SendClientMessage(playerid, Vermelho, "Você não é um Bombeiro.");
			}
		}
		else if(modelo == 417 || modelo == 488 || modelo == 487 || modelo == 548 || modelo == 525 || modelo == 497 || modelo == 563 || modelo == 447 || modelo == 469 || modelo == 592 || modelo == 577 || modelo == 511 || modelo == 512 || modelo == 593 ||modelo == 520 || modelo == 553 || modelo == 476 || modelo == 519 || modelo == 460 || modelo == 513 || modelo == 425)
		{
			if(DOF2_GetInt(file, "HabAerea") == 0)
			{
				incar[playerid] = 1;
				TogglePlayerControllable(playerid, 0);
				SendClientMessage(playerid, Vermelho, "Você não possui habilitação aérea.");
			}
		}
		else
		{
			if(modelo == 472 || modelo == 473 || modelo == 493 || modelo == 595 || modelo == 484 || modelo == 430 || modelo == 453 || modelo == 452 || modelo == 446 || modelo == 454)
			{
				if(DOF2_GetInt(file, "HabNautica") == 0)
				{
					SendClientMessage(playerid, Vermelho, "Você não possui habilitação náutica.");
				}
			}
			else if(DOF2_GetInt(file, "HabTerrestre") == 0)
			{
				if(autoescola[playerid] == 1)
				{
					SendClientMessage(playerid, Amarelo, "Você está fazendo teste de Auto-Escola.");
					SendClientMessage(playerid, Amarelo, "Se você sair do carro o teste é cancelado.");
				}
				else if(modelo == 509 || modelo == 510 || modelo == 481)
				{
					SendClientMessage(playerid, Vermelho, "Você está dirigindo uma bicicleta e não precisa de habilitação.");
				}
				else
				{
					incar[playerid] = 1;
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, Vermelho, "Você não possui habilitação terrestre.");
					SendClientMessage(playerid, Vermelho, "{FFFFFF}Tire uma carteira terrestre na {FF0000}Auto Escola {FFFFFF}para poder dirigir.");
				}
			}
		}

		for(new carro = 0; carro < MAX_CONCES; carro++)
		{
			format(file2, sizeof(file2), PASTA_CONCE, carro);
			if(DOF2_FileExists(file2))
			{
				if(vid == DOF2_GetInt(file2, "Id"))
				{
					if(cCarro[playerid] < 10 && cCarro[playerid] > 5)
					{
						if(!(modelo == 509 || modelo == 510 || modelo == 481))
						{
							SendClientMessage(playerid, Vermelho, "{FF0000}(INFO) {FFFFFF}Seu combustível está acabando, abasteça!");
							//SendClientMessage(playerid, Vermelho, "[ATENÇÃO] Abasteça no posto mais próximo.");
						}
					}
					else if(cCarro[playerid] <= 0)
					{
						if(!(modelo == 509 || modelo == 510 || modelo == 481))
						{
							new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(vid, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(vid, VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objective);

							SendClientMessage(playerid, Vermelho, "Este veículo está sem combustível.");
						}
					}
				}
			}
		}
	}

	if(oldstate == PLAYER_STATE_DRIVER)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(GetPlayerState(i) == PLAYER_STATE_SPECTATING && gSpectateType[i] == ADMIN_SPEC_TYPE_VEHICLE && gSpectateID[i] == playerid)
			{
				PlayerSpectatePlayer(i, playerid);
				gSpectateType[i] = ADMIN_SPEC_TYPE_PLAYER;
			}
		}

		if(noevento[playerid] == 1)
		{
			if(Proibido == 0)
			{
				GetPlayerPos(playerid, X, Y, Z);
				PlayerPlaySound(playerid, 1056, X, Y, Z);
				TogglePlayerControllable(playerid, true);
				SendClientMessage(playerid, Azul, "[EVENTO] Você saiu do carro, o evento já vai começar.");
			}
		}

		cCarro[playerid] = -1;
		
		#if defined CarInfosUser
		Loop(o, 4)
		{
			PlayerTextDrawHide(playerid, CarInfos1[playerid]);
			PlayerTextDrawHide(playerid, CarInfos2[playerid]);
			PlayerTextDrawHide(playerid, CarInfos3[playerid]);
			PlayerTextDrawHide(playerid, CarInfos4[playerid]);
			PlayerTextDrawHide(playerid, CarInfos5[playerid]);
			PlayerTextDrawHide(playerid, CarInfos6[playerid]);
			PlayerTextDrawHide(playerid, CarInfos7[playerid]);
			PlayerTextDrawHide(playerid, CarInfos8[playerid]);
			PlayerTextDrawHide(playerid, CarInfos9[playerid]);
		}
		#endif
		
		// Maquinista
		if(InRacePistaTrain[playerid] == 1)
		{
			InRacePistaTrain[playerid] = 0;
			DeletePlayerPistaRaceTrain(playerid);
		}

		if(crioucarro[playerid] == 1)
		{
			DestroyDynamic3DTextLabel(CarTMPLabel[VehicleOldID[playerid]]);
			CarTMPLabel[VehicleOldID[playerid]] = Text3D:INVALID_3DTEXT_ID;

			DestroyVehicle(VehicleOldID[playerid]);
			VehicleOldID[playerid] = INVALID_VEHICLE_ID;
			crioucarro[playerid] = 0;
		}
	}
	return 1;
}

public Pesca()
{
	new random1, string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1 && PescaInProgress[i] == 1)
		{
			QtPescas[i]++;
			PescaInProgress[i] = 0;
			SendClientMessage(i, 0x4E9C9CAA, "Opaaaaa, um peixe mordeu sua isca e você conseguiu traze-lo até o barco parabéns.");
			SendClientMessage(i, 0x4E9C9CAA, "Você pode continuar pescando /pescar ou você pode vender seus peixes.");
			SendClientMessage(i, 0x4E9C9CAA, "O local de venda de peixes, está localizado na praia por um simbolo ''Vermelho''.");
			random1 = random(sizeof(peixes));
			format(string, sizeof(string), "Você pescou um(a) %s e agora tem %d peixe(s).", peixes[random1], QtPescas[i]);
			SendClientMessage(i, 0xFF0000AA, string);
		}
	}
	return 0;
}

public cacas()
{
	new string[256], random1;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1 && cacando[i] == 1)
		{
			Qtcacas[i]++;
			cacando[i] = 0;
			random1 = random(sizeof(Presa));
			format(string, sizeof(string), "Sua arvore caiu, Você conseguiu um(a) %s ilegalmente e agora tem %d madeira(s).", Presa[random1], Qtcacas[i]);
			SendClientMessage(i, 0x4E9C9CAA, string);
			SendClientMessage(i, 0x4E9C9CAA, "Para vender sua madeira vá até o símbolo de um ''Boneco Verde''.");
			SendClientMessage(i, 0x4E9C9CAA, "Ou continue cortando madeiras, digite /cortar");
		}
	}
	return 0;
}

public DestogglePlayerControllable(playerid)
{
	TogglePlayerControllable(playerid, true);
	return 1;
}

public DestogglePlayerDynamicRaceCP(playerid, checkpointid)
{
	TogglePlayerDynamicRaceCP(playerid, checkpointid, true);
	return 1;
}

// =============================== Início do Tutorial ===============================
public DynTutorialStart(playerid)
{
	new stringa[900];
	TogglePlayerControllable(playerid, false);

	ClearChatbox(playerid, 10);
	new tutorial1[800];
	format(stringa, sizeof(stringa), "Deseja ver este tutorial agora?"); strcat(tutorial1, stringa);
	ShowPlayerDialog(playerid,901, DIALOG_STYLE_MSGBOX, "Tutorial", tutorial1, "Sim", "Não");

  	return 1;
}
// =============================== Fim do Tutorial =================================
public OnPlayerDeath(playerid, killerid, reason)
{
    SendDeathMessage(killerid,playerid,reason);
	new string[256];
	new aname[MAX_PLAYER_NAME];
	new kname[MAX_PLAYER_NAME];
	new file[128];
	GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
	GetPlayerName(killerid, kname, MAX_PLAYER_NAME);
	format(file, sizeof(file), PASTA_CONTAS, aname);
	format(file2, sizeof(file2), PASTA_CONTAS, kname);
	
	if(GetTickCount() > FloodTimer[playerid])
	{
		FloodAlert[playerid] = 0;
	}

	FloodTimer[playerid] = GetTickCount() +TimerFlood;
	FloodAlert[playerid]++;

	if(FloodAlert[playerid] > 1 && FloodAlert[playerid] < AlertFlood-1)
	{
		format(string, sizeof(string), "[ANTI-FLOOD] Você tem %d/%d avisos.", FloodAlert[playerid], AlertFlood);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	else if(FloodAlert[playerid] == AlertFlood-1)
	{
		format(string, sizeof(string), "[ANTI-FLOOD] Você tem %d/%d avisos. Mais um e você será kickado.", FloodAlert[playerid], AlertFlood);
		SendClientMessage(playerid, Amarelo, string);
	}
	else if(FloodAlert[playerid] == AlertFlood)
	{
		format(string, sizeof(string), "{FF0000}O(a) {FFFFFF}%s {FF0000}foi kickado(a). Motivo: {FFFFFF}Flood Kill", GetPlayerNameEx(playerid));
		SendClientMessageToAll(Amarelo, string);
		KickLog(string);
		Kick(playerid);
		return 1;
	}
	
	new terridplay = GetPlayerTerri(playerid);
	if(TerriGuerra[terridplay]!=0)
	{
	    new terridkill = GetPlayerTerri(killerid);
		if(terridkill==terridplay)
		    if(TerriGuerra[terridplay]==GetGang(killerid)&&DOF2_GetInt(FormatTerri(terridplay),"Gang")==GetGang(playerid))
		        Pontos[terridplay][0]+=PONTO_POR_KILL;
		    else if(TerriGuerra[terridplay]==GetGang(playerid)&&DOF2_GetInt(FormatTerri(terridplay),"Gang")==GetGang(killerid))
		        Pontos[terridplay][1]+=PONTO_POR_KILL;
	}
	
	if(NaCorrida[playerid] == true)
	{
		JoinCount--;
		NaCorrida[playerid] = false;
		DestroyVehicle(CriarVehCorrida[playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		PlayerTextDrawHide(playerid, CorridaInfo[playerid]);
		CPProgesso[playerid] = 0;
		KillTimer(InfoTimer[playerid]);
		DisableRemoteVehicleCollisions(playerid, 0);

  		format(string, sizeof(string), "{FFFFFF}[{FF4500}ANTI DM{FFFFFF}] {FF4500}Jogador(a) %s morreu em uma corrida!", GetPlayerNameEx(playerid));
    	SendClientMessageToAll(Vermelho, string);

		#if defined RACE_IN_OTHER_WORLD
		SetPlayerVirtualWorld(playerid, 0);
		#endif
	}
	if(ConstruindoCorrida == playerid+1) ConstruindoCorrida = 0;

	#if defined BomberUser
	if(GetPVarInt(playerid, "nearExp") != INVALID_PLAYER_ID && killerid == INVALID_PLAYER_ID)
	{
		killerid = GetPVarInt(playerid, "nearExp");
		if(killerid == playerid)
		{
			killerid = INVALID_PLAYER_ID;
		}
		reason = 51;
	}
	#endif

	#if defined FGPSUser
	if(GetPVarInt(playerid, "YEAH") == 1)
	{
		DestroyDynamicRaceCP(PlayerInfo[playerid][FGPS_RCP]);
		DestroyDynamicObject(PlayerInfo[playerid][FGPSObject]);

		SetPVarInt(playerid, "YEAH", 0);
		DeletePVar(playerid, "Spongebob");
		DeletePVar(playerid, "Mario");
		DeletePVar(playerid, "SpiderPig");
		DeletePVar(playerid, "FAIL");

		#if defined UseTd
		PlayerTextDrawHide(playerid, PlayerInfo[playerid][F_GPSTD]);
		PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][F_GPSTD]);
		PlayerInfo[playerid][F_GPSTD] = PlayerText:INVALID_TEXT_DRAW;
		#endif
	}
	#endif

	if(cercado[playerid] == 1)
	{
		cercado[playerid] = 0;
		UncagePlayer(playerid);
	}

	// ================================ Anim Loops =====================================
	#if defined AnimLoopsUser
	if(gPlayerUsingLoopingAnim[playerid])
	{
		gPlayerUsingLoopingAnim[playerid] = 0;
		SendClientMessage(playerid, Blue, "Para sair do anime tecle 'Espaço'.");
	}
	#endif
	// =================================================================================

	if(autoescola[playerid] == 1)
	{
		autoescola[playerid] = 0;
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		}
	}

	if(DOF2_FileExists(file))
	{
		if(DOF2_GetInt(file, "usoudroga") == 1)
		{
			DOF2_SetInt(file, "usoudroga", 0);
			TextDrawHideForPlayer(playerid, drogas1);
			TextDrawHideForPlayer(playerid, drogas2);
		}
		DOF2_SetInt(file, "convitent", 0);
		DOF2_SetInt(file, "Entrevista", 0);
	}

	if(GetClosestHospital(playerid) == 0)
	{
		SetSpawnInfo(playerid, 1, DOF2_GetInt(file, "Skin"), -2651.6501, 634.4510, 14.4531, 180.0000, 0, 0, 0, 0, 0, 0);
	}
	else if(GetClosestHospital(playerid) == 1)
	{
		SetSpawnInfo(playerid, 1 ,DOF2_GetInt(file, "Skin"), 1173.5842, -1324.5615, 15.1953, 278.4624, 0, 0, 0, 0, 0, 0);
	}
	else if(GetClosestHospital(playerid) == 2)
	{
		SetSpawnInfo(playerid, 1, DOF2_GetInt(file, "Skin"), 2031.9415, -1404.3578, 17.2614, 165.8180, 0, 0, 0, 0, 0, 0);
	}
	else if(GetClosestHospital(playerid) == 3)
	{
		SetSpawnInfo(playerid, 1, DOF2_GetInt(file, "Skin"), 1582.5615, 1768.7921, 10.8203, 93.7454, 0, 0, 0, 0, 0, 0);
	}

	if(DOF2_GetInt(file, "Preso") == 1)
	{
		PrenderPlayer(playerid);
		SendClientMessage(playerid, msgdm, "Você está preso, para ser solto consulte um advogado");
		SendClientMessage(playerid, msgdm, "ou pague fiança pelo saldo bancário /fianca");
	}

	algemado[playerid] = 0;
	sequestro[playerid] = 0;
	xsequestrado[playerid] = 0;
	xprefls[playerid] = 0;
	prefsf[playerid] = 0;
	preflv[playerid] = 0;
	nobanco[playerid] = 0;
	nobarls[playerid] = 0;
	nobarsf[playerid] = 0;
	nobarlv[playerid] = 0;
	nobarfc[playerid] = 0;
	nautlls[playerid] = 0;
	nautllv[playerid] = 0;
	SpawnHospital[playerid] = true;

	if(reason == 53 || reason == 54 || reason == 255)
	{
		morreu[playerid]++;

		if(DMlb == 1)
		{
			format(string, sizeof(string), "{B22222}O(a) {FFFFFF}%s {B22222}morreu com DM liberado!", aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
		if(DMBloqueado[playerid] == 1)
		{
			format(string, sizeof(string), "{B22222}O(a) {FFFFFF}%s {B22222}morreu em área pública!", aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
		if(DMLiberado[playerid][1] == 1)
		{
			format(string, sizeof(string), "{B22222}O(a) {FFFFFF}%s {B22222}morreu na base dos Skatistas!", aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
		if(DMLiberado[playerid][2] == 1)
		{
			format(string, sizeof(string), "{B22222}O(a) {FFFFFF}%s {B22222}morreu na base da CV!", aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
		if(DMLiberado[playerid][3] == 1)
		{
			format(string, sizeof(string), "{B22222}O(a) {FFFFFF}%s {B22222}morreu na Favela!", aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
		if(DMLiberado[playerid][4] == 1)
		{
			format(string, sizeof(string), "{B22222}O(a) {FFFFFF}%s {B22222}morreu no Navio!", aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
		if(DMLiberado[playerid][5] == 1)
		{
			format(string, sizeof(string), "{B22222}O(a) {FFFFFF}%s {B22222}morreu na Arena!", aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
		if(noevento[playerid] == 1)
		{
			format(string, sizeof(string), "{B22222}O(a) {FFFFFF}%s {B22222}morreu em um Evento!", aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
	}
	else if(reason == 49 || reason == 50)
	{
		morreu[playerid]++;
		matou[killerid]++;
		DOF2_SetInt(file2, "DM", 1);

		if(DMlb == 1)
		{
			format(string, sizeof(string), "{B22222}O(a) {FFFFFF}%s {B22222}matou {FFFFFF}%s {B22222}com DM liberado!", kname, aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
	    else
	    {
		    PrenderPlayer(killerid);
			xplayerDM[killerid] = 0;
			format(string, sizeof(string), "{B22222}O(a) {FFFFFF}%s {B22222}cometeu DB em {FFFFFF}%s, {B22222}e foi preso.", kname, aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
	}
	else
	{
		morreu[playerid]++;
		matou[killerid]++;
		DOF2_SetInt(file2, "DM", 1);

		if(DMlb == 1)
		{
			format(string, sizeof(string), "{DE0B0B}O(a) {FFFFFF}%s {DE0B0B}matou {FFFFFF}%s {DE0B0B}com DM liberado!", kname, aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
		if(DMLiberado[playerid][1] == 1)
		{
			format(string, sizeof(string), "{DE0B0B}O(a) {FFFFFF}%s {DE0B0B}matou {FFFFFF}%s {DE0B0B}na base dos Skatistas!", kname, aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
		if(DMLiberado[playerid][2] == 1)
		{
			format(string, sizeof(string), "{DE0B0B}O(a) {FFFFFF}%s {DE0B0B}matou {FFFFFF}%s {DE0B0B}na base da CV!", kname, aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
		if(DMLiberado[playerid][3] == 1)
		{
			format(string, sizeof(string), "{DE0B0B}O(a) {FFFFFF}%s {DE0B0B}matou {FFFFFF}%s {DE0B0B}na Favela!", kname, aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
		if(DMLiberado[playerid][4] == 1)
		{
			format(string, sizeof(string), "{DE0B0B}O(a) {FFFFFF}%s {DE0B0B}matou {FFFFFF}%s {DE0B0B}no Navio!", kname, aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
		if(DMLiberado[playerid][5] == 1)
		{
			format(string, sizeof(string), "{DE0B0B}O(a) {FFFFFF}%s {DE0B0B}matou {FFFFFF}%s {DE0B0B}no Maracanã!", kname, aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
		if(noevento[playerid] == 1)
		{
			format(string, sizeof(string), "{DE0B0B}O(a) {FFFFFF}%s {DE0B0B}matou {FFFFFF}%s {DE0B0B}em um Evento!", kname, aname);
			SendClientMessageToAll(msgdm3, string);
			return 1;
		}
		if(DOF2_GetInt(file2, "DM") == 1)
		{
			if(DOF2_GetInt(file2, "Profissao") == Policial_C ||  DOF2_GetInt(file, "Profissao") == FTSA || DOF2_GetInt(file2, "Profissao") == Policial_F || DOF2_GetInt(file2, "Profissao") == Delegado || DOF2_GetInt(file2, "Profissao") == Bope || DOF2_GetInt(file2, "Profissao") == Swat || DOF2_GetInt(file2, "Profissao") == Narcoticos || DOF2_GetInt(file2, "Profissao") == Interpol || DOF2_GetInt(file2, "Profissao") == Policial_M || DOF2_GetInt(file2, "Profissao") == FBI || DOF2_GetInt(file2, "Profissao") == LSPD)
			{
			    if(Procurados[playerid] == 1)
			    {
					format(string, sizeof(string), "{DE0B0B}O(a) Policial {FFFFFF}%s {DE0B0B}matou o(a) procurado(a): {FFFFFF}%s.", kname, aname);
					SendClientMessageToAll(msgdm3, string);
					return 1;
				}
			}
			if(xplayerDM[killerid] == 2)
			{
			   	PrenderPlayer(killerid);
				xplayerDM[killerid] = 0;
				format(string, sizeof(string), "{DE0B0B}O(a) {FFFFFF}%s {DE0B0B}foi preso(a) por matar {FFFFFF}%s. {B22222}(3/3)", kname, aname);
				SendClientMessageToAll(Amarelo, string);
			}
			else if(xplayerDM[killerid] == 1)
			{
				Procurados[killerid] = 2;
				DOF2_SetInt(file2, "Procurado", 1);
				SetPlayerWantedLevel(killerid, 4);
           	    xplayerDM[killerid] = 2;
				format(string, sizeof(string), "{DE0B0B}O(a) {FFFFFF}%s {DE0B0B}ficou procurado(a) por matar {FFFFFF}%s. {DE0B0B}(2/3)", kname, aname);
				SendClientMessageToAll(Amarelo, string);
			}
			else
			{
				Procurados[killerid] = 1;
				DOF2_SetInt(file2, "Procurado", 1);
				SetPlayerWantedLevel(killerid, 4);
           	    xplayerDM[killerid] = 1;
				format(string, sizeof(string), "{DE0B0B}O(a) {FFFFFF}%s {DE0B0B}ficou procurado(a) por matar {FFFFFF}%s. {DE0B0B}(1/3)", kname, aname);
				SendClientMessageToAll(Amarelo, string);
			}
			return 1;
		}
	}
	
	antifakekill[playerid]++;
    SetTimerEx("antifakekill2", 1000,false,"i",playerid);
	return 1;
}
public OnVehicleDeath(vehicleid, killerid)
{
	ChangeVehicleNeon(vehicleid, 6);
	return 1;
}

public Combustivel()
{
	new vid, modelo, estado;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInAnyVehicle(i) == 1)
			{
				vid = GetPlayerVehicleID(i);
				modelo = GetVehicleModel(vid);
				estado = GetPlayerVehicleSeat(i);
				for(new carro = 0; carro < MAX_CONCES; carro++)
				{
					format(file2, sizeof(file2), PASTA_CONCE, carro);
					if(DOF2_FileExists(file2))
					{
						if(vid == DOF2_GetInt(file2, "Id"))
						{
							cCarro[i] = DOF2_GetInt(file2, "Combustivel");
							if(modelo == 509 || modelo == 510 || modelo == 481)
							{
								SendClientMessage(i, Vermelho, " Você está em uma bicicleta e não gastará combustível.");
							}
							else
							{
								if(estado == 0)
								{
									if(cCarro[i] <= 0)
									{
										DOF2_SetInt(file2, "Combustivel", 0);
									}
									else
									{
										DOF2_SetInt(file2, "Combustivel", cCarro[i]-1);
									}
								}
								if(cCarro[i] <= 0)
								{
									new engine, lights, alarm, doors, bonnet, boot, objective;
									GetVehicleParamsEx(vid, engine, lights, alarm, doors, bonnet, boot, objective);
									SetVehicleParamsEx(vid, VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objective);

									SendClientMessage(i, Vermelho, " Seu combustível acabou vá até um posto mais próximo e abasteça.");
								}
							}
						}
					}
				}
			}
		}
	}
	return 1;
}

public MoverObjeto(id, Float:X, Float:Y, Float:Z, Float:speed) MoveDynamicObject(id, X, Y, Z, speed);
public DestruirObjeto(objid) DestroyDynamicObject(objid);
public CriarExplosao(Float:X, Float:Y, Float:Z, tipo, Float:diam) CreateExplosion(X, Y, Z, tipo, diam);

public PlantouBomba(playerid)
{
	pbomba[playerid] = 0;
	return 1;
}

public semporte(playerid)
{
	new nomepl[MAX_PLAYER_NAME];
	GetPlayerName(playerid, nomepl, sizeof(nomepl));
	format(file2, sizeof(file2), PASTA_CONTAS, nomepl);
	if(DOF2_FileExists(file2))
	{
		if(DOF2_GetInt(file2, "Porte") == 0)
		{
			ResetPlayerWeapons(playerid);
		}
	}
	return 1;
}

public liberar(playerid)
{
	new plid, string[256];
	if(GetDistanceBetweenPlayers(plid, playerid) < 10)
	{
		if(sequestro[playerid] == 1)
		{
			sequestro[playerid] = 0;
			xsequestrado[plid] = 0;
			TogglePlayerControllable(plid, 1);
			RemovePlayerFromVehicle(plid);
			format(string, sizeof(string), "Player %s liberado por ter passado muito tempo sequestrado.", GetPlayerNameEx(plid));
			SendClientMessageToAll(COLOR_GREEN, string);
		}
	}
	return 1;
}

public Logarprof(playerid)
{
	new string[256], string2[256];
	new nomepl[MAX_PLAYER_NAME];
	GetPlayerName(playerid, nomepl, sizeof(nomepl));
	format(file2, sizeof(file2), PASTA_CONTAS, nomepl);
    if(DOF2_GetInt(file2, "SGang") == 0)
	{
		if(IsValidDynamic3DTextLabel(GangLabel[playerid]))
		{
			UpdateDynamic3DTextLabelText(GangLabel[playerid], Amarelo, "[SEM CLAN]");
		}
	}
	if(DOF2_GetInt(file2, "SGang") == 1)
	{
		if(IsValidDynamic3DTextLabel(GangLabel2[playerid]))
		{
			format(string2, sizeof(string2), "{FF4500}Membro do Clan:{FFFFFF}%s", DOF2_GetString(FormatGang(GangID[playerid]),"Nome"));
			UpdateDynamic3DTextLabelText(GangLabel2[playerid], -1, string2);
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Desempregado)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 14, 1);
		SetPlayerColor(playerid, Branco);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], Branco, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], Branco, "[Desempregado(a)]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == MotoristaP)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 1, 1);
		GivePlayerWeapon(playerid, 26, 100);
		SetPlayerColor(playerid, C_MotoristaP);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_MotoristaP, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_MotoristaP, "[Motorista Particular]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Guarda)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 24, 200);
		SetPlayerColor(playerid, C_Guarda);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Guarda, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Guarda, "[Guarda]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Policial_R)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 28, 200);
		GivePlayerWeapon(playerid, 27, 200);
		SetPlayerColor(playerid, C_PR);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_PR, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_PR, "[PR]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Policial_M)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 24, 300);
		GivePlayerWeapon(playerid, 28, 300);
		GivePlayerWeapon(playerid, 31, 300);
		GivePlayerWeapon(playerid, 27, 300);
		SetPlayerColor(playerid, C_PM);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_PM, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_PM, "[PM]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Policial_C)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 24, 350);
		GivePlayerWeapon(playerid, 28, 350);
		GivePlayerWeapon(playerid, 31, 350);
		SetPlayerColor(playerid, C_PC);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_PC, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_PC, "[PC]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Policial_F)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 400);
		GivePlayerWeapon(playerid, 28, 400);
		GivePlayerWeapon(playerid, 24, 400);
		SetPlayerColor(playerid, C_PF);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_PF, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_PF, "[PF]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Delegado)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 28, 400);
		GivePlayerWeapon(playerid, 24, 400);
		SetPlayerColor(playerid, C_Delegado);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Delegado, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Delegado, "[Delegado]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Bope)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 500);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 31, 500);
		SetPlayerColor(playerid, C_Bope);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Bope, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Bope, "[Bope]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Swat)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 500);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 31, 500);
		SetPlayerColor(playerid, C_Swat);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Swat, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Swat, "[Swat]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Narcoticos)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 500);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 31, 500);
		SetPlayerColor(playerid, C_Narcoticos);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Narcoticos, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Narcoticos, "[Narcóticos]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Exercito)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 500);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 31, 500);
		SetPlayerColor(playerid, C_Exercito);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Exercito, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Exercito, "[Exercito]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Traficante)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 32, 300);
		GivePlayerWeapon(playerid, 30, 300);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 24, 300);
		SetPlayerColor(playerid, C_Traficante);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Traficante, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Traficante, "[Traficante]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Assasino)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 32, 350);
		GivePlayerWeapon(playerid, 26, 350);
		SetPlayerColor(playerid, C_Assasino);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Assasino, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Assasino, "[Assasino]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Terrorista)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 32, 400);
		GivePlayerWeapon(playerid, 30, 400);
		GivePlayerWeapon(playerid, 26, 400);
		GivePlayerWeapon(playerid, 24, 400);
		SetPlayerColor(playerid, C_Terrorista);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Terrorista, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Terrorista, "[Terrorista]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == AssasinoProfissional)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 32, 400);
		GivePlayerWeapon(playerid, 30, 400);
		GivePlayerWeapon(playerid, 26, 400);
		GivePlayerWeapon(playerid, 24, 400);
		SetPlayerColor(playerid, C_AssasinoP);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_AssasinoP, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_AssasinoP, "[Assasino Professional]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Jornalista)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 23, 200);
		SetPlayerColor(playerid, C_Jornalista);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Jornalista, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Jornalista, "[Jornalista]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Fotografo)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 43, 20);
		GivePlayerWeapon(playerid, 23, 200);
		SetPlayerColor(playerid, C_Fotografo);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Fotografo, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Fotografo, "[Fotografo(a)]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Reporter)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 23, 200);
		SetPlayerColor(playerid, C_Reporter);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Reporter, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Reporter, "[Reporter]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Ancora)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 23, 200);
		SetPlayerColor(playerid, C_Ancora);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Ancora, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Ancora, "[Ancora]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Meteorologista)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 23, 200);
		SetPlayerColor(playerid, C_Meteoro);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Meteoro, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Meteoro, "[Meteorologista]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Mecanico)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		SetPlayerColor(playerid, C_Mecanico);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Mecanico, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Mecanico, "[Mecânico]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Rapper)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 30, 200);
		GivePlayerWeapon(playerid, 23, 200);
		SetPlayerColor(playerid, C_Rapper);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Rapper, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Rapper, "[Rapper]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Mcarroforte)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 15, 1);
		GivePlayerWeapon(playerid, 23, 200);
		SetPlayerColor(playerid, C_Mcarroforte);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Mcarroforte, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Mcarroforte, "[M. Carro Forte]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Uber)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 15, 1);
		GivePlayerWeapon(playerid, 23, 200);
		SetPlayerColor(playerid, C_Uber);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Uber, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Uber, "[M. Uber]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Frentista)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 15, 1);
		GivePlayerWeapon(playerid, 23, 200);
		SetPlayerColor(playerid, C_Frentista);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Frentista, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Frentista, "[Frentista]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Taxista)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 22, 50);
		SetPlayerColor(playerid, C_Taxista);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Taxista, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Taxista, "[Taxista]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Paramedico)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 6, 1);
		GivePlayerWeapon(playerid, 23, 50);
		SetPlayerColor(playerid, C_Paramedico);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Paramedico, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Paramedico, "[Paramédico]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == FBI)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 1000);
		GivePlayerWeapon(playerid, 28, 1000);
		GivePlayerWeapon(playerid, 24, 1000);
		GivePlayerWeapon(playerid, 31, 1000);
		GivePlayerWeapon(playerid, 34, 1000);
		SetPlayerColor(playerid, C_FBI);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_FBI, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_FBI, "[FBI]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Interpol)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Interpol);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Interpol, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Interpol, "[Interpol]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Aposentado)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 15, 1);
		GivePlayerWeapon(playerid, 24, 100);
		SetPlayerColor(playerid, C_Aposentado);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Aposentado, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Aposentado, "[Aposentado(a)]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Advogado)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 24, 50);
		SetPlayerColor(playerid, C_Advogado);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Advogado, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Advogado, "[Advogado(a)]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == GuardaCostas)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 24, 50);
		SetPlayerColor(playerid, C_GuardaCostas);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_GuardaCostas, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_GuardaCostas, "[Guarda Costas]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == MOnibus)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 24, 60);
		GivePlayerWeapon(playerid, 32, 200);
		SetPlayerColor(playerid, C_MOnibus);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_MOnibus, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_MOnibus, "[M. Onibus]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Contrabando)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 32, 300);
		GivePlayerWeapon(playerid, 30, 300);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 24, 300);
		SetPlayerColor(playerid, C_Contrabando);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Contrabando, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Contrabando, "[Contrabando]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Promotor)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 1, 1);
		SetPlayerColor(playerid, C_Promotor);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Promotor, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Promotor, "[Promotor]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == SegVila)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 32, 300);
		GivePlayerWeapon(playerid, 30, 300);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 24, 300);
		SetPlayerColor(playerid, C_SegVila);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_SegVila, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_SegVila, "[Segurança]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Assaltante)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 32, 300);
		GivePlayerWeapon(playerid, 30, 300);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 24, 300);
		SetPlayerColor(playerid, C_Assaltante);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Assaltante, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Assaltante, "[Assaltante]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Bibliotecario)
	{
		ResetPlayerWeapons(playerid);
		SetPlayerColor(playerid, C_Bibliotecario);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Bibliotecario, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Bibliotecario, "[Bibliotecário(a)]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == TraficanteD)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 32, 300);
		GivePlayerWeapon(playerid, 30, 300);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 24, 300);
		SetPlayerColor(playerid, C_TraficanteD);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_TraficanteD, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_TraficanteD, "[Traficante de Armas]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == DonoM)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 32, 300);
		GivePlayerWeapon(playerid, 30, 300);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 24, 300);
		SetPlayerColor(playerid, C_DonoM);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_DonoM, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_DonoM, "[Dono do Morro]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Deputado)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 15, 1);
		SetPlayerColor(playerid, C_Deputado);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Deputado, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Deputado, "[Deputado]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Ator)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 15, 1);
		SetPlayerColor(playerid, C_Ator);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Ator, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Ator, "[Ator(a)]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Vereador)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 15, 1);
		SetPlayerColor(playerid, C_Vereador);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Vereador, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Vereador, "[Vereador]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == JogadorF)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 1, 1);
		GivePlayerWeapon(playerid, 6, 1);
		SetPlayerColor(playerid, C_JogadorF);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_JogadorF, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_JogadorF, "[Jogador de Futebol]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Empresario)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 14, 1);
		GivePlayerWeapon(playerid, 42, 700);
		SetPlayerColor(playerid, C_Empresario);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Empresario, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Empresario, "[Empresario]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Imobiliario)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 6, 1);
		GivePlayerWeapon(playerid, 41, 700);
		GivePlayerWeapon(playerid, 12, 1);
		SetPlayerColor(playerid, C_Imobiliario);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Imobiliario, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Imobiliario, "[A. Imobiliario]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Gari)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 46, 1);
		GivePlayerWeapon(playerid, 6, 1);
		GivePlayerWeapon(playerid, 4, 1);
		SetPlayerColor(playerid, C_Gari);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Gari, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Gari, "[Gari]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Lixeiro)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 46, 1);
		GivePlayerWeapon(playerid, 42, 700);
		GivePlayerWeapon(playerid, 1, 1);
		SetPlayerColor(playerid, C_Lixeiro);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Lixeiro, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Lixeiro, "[Lixeiro]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Bombeiro)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 23, 500);
		GivePlayerWeapon(playerid, 2, 1);
		GivePlayerWeapon(playerid, 4, 1);
		SetPlayerColor(playerid, C_Bombeiro);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Bombeiro, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Bombeiro, "[Bombeiro]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Hotdog)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 46, 1);
		GivePlayerWeapon(playerid, 1, 1);
		GivePlayerWeapon(playerid, 4, 1);
		SetPlayerColor(playerid, C_Hotdog);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Hotdog, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Hotdog, "[Hotdogs]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Estudante)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 2, 1);
		GivePlayerWeapon(playerid, 1, 1);
		SetPlayerColor(playerid, C_Estudante);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Estudante, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Estudante, "[Estudante]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Correios)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 4, 1);
		GivePlayerWeapon(playerid, 1, 1);
		SetPlayerColor(playerid, C_Correios);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Correios, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Correios, "[Correios]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Cantor)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 1, 1);
		SetPlayerColor(playerid, C_Cantor);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Cantor, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Cantor, "[Cantor(a)]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Poeta)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 2, 1);
		SetPlayerColor(playerid, C_Poeta);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Poeta, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Poeta, "[Poeta]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == LSPD)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_LSPD);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_LSPD, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_LSPD, "[LSPD]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == YKZ)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_YKZ);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_YKZ, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_YKZ, "[Yakuza]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == MRN)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 4, 1);
		GivePlayerWeapon(playerid, 24, 999);
		GivePlayerWeapon(playerid, 25, 999);
		GivePlayerWeapon(playerid, 29, 999);
		GivePlayerWeapon(playerid, 30, 999);
		GivePlayerWeapon(playerid, 34, 999);
		GivePlayerWeapon(playerid, 42, 999);
		SetPlayerColor(playerid, C_MRN);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_MRN, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_MRN, "[Marines]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Mafia)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 4, 1);
		GivePlayerWeapon(playerid, 24, 300);
		GivePlayerWeapon(playerid, 27, 300);
		GivePlayerWeapon(playerid, 29, 300);
		GivePlayerWeapon(playerid, 30, 300);
		GivePlayerWeapon(playerid, 34, 300);
		GivePlayerWeapon(playerid, 42, 900);
		SetPlayerColor(playerid, C_Mafia);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Mafia, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Mafia, "[Máfia]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Drifter)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 4, 1);
		GivePlayerWeapon(playerid, 16, 999);
		GivePlayerWeapon(playerid, 22, 999);
		GivePlayerWeapon(playerid, 26, 999);
		GivePlayerWeapon(playerid, 28, 999);
		GivePlayerWeapon(playerid, 34, 999);
		GivePlayerWeapon(playerid, 46, 1);
		GivePlayerWeapon(playerid, 31, 999);
		SetPlayerColor(playerid, C_Drifter);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Drifter, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Drifter, "[DK]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Ayrton)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 4, 1);
		GivePlayerWeapon(playerid, 16, 999);
		GivePlayerWeapon(playerid, 22, 999);
		GivePlayerWeapon(playerid, 26, 999);
		GivePlayerWeapon(playerid, 28, 999);
		GivePlayerWeapon(playerid, 34, 999);
		GivePlayerWeapon(playerid, 46, 1);
		GivePlayerWeapon(playerid, 31, 999);
		SetPlayerColor(playerid, C_Ayrton);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Ayrton, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Ayrton, "[Ayrton Senna]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Professor)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 1, 1);
		GivePlayerWeapon(playerid, 2, 1);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 22, 300);
		GivePlayerWeapon(playerid, 33, 100);
		SetPlayerColor(playerid, C_Professor);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Professor, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Professor, "[Professor]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Empregador)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 9, 1);
		GivePlayerWeapon(playerid, 17, 30);
		GivePlayerWeapon(playerid, 30, 300);
		GivePlayerWeapon(playerid, 43, 20);
		SetPlayerColor(playerid, C_Empregador);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Empregador, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Empregador, "[Empregador]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == AtiradorElite)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 4, 1);
		GivePlayerWeapon(playerid, 16, 50);
		GivePlayerWeapon(playerid, 24, 300);
		GivePlayerWeapon(playerid, 26, 500);
		GivePlayerWeapon(playerid, 31, 900);
		GivePlayerWeapon(playerid, 32, 900);
		GivePlayerWeapon(playerid, 34, 400);
		SetPlayerColor(playerid, C_AtiradorElite);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_AtiradorElite, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_AtiradorElite, "[AE]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Ninja)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 17, 50);
		GivePlayerWeapon(playerid, 23, 500);
		GivePlayerWeapon(playerid, 31, 300);
		GivePlayerWeapon(playerid, 32, 500);
		GivePlayerWeapon(playerid, 34, 300);
		SetPlayerColor(playerid, C_Ninja);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Ninja, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Ninja, "[Ninja]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Desembargador)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 26, 200000);
		GivePlayerWeapon(playerid, 32, 200000);
		GivePlayerWeapon(playerid, 24, 200000);
		GivePlayerWeapon(playerid, 31, 200000);
		GivePlayerWeapon(playerid, 34, 200000);
		SetPlayerColor(playerid, C_Desembargador);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Desembargador, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Desembargador, "[Desembargador]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Astronauta)
	{
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 17, 50);
		GivePlayerWeapon(playerid, 22, 900);
     	GivePlayerWeapon(playerid, 31, 900);
     	GivePlayerWeapon(playerid, 26, 900);
		GivePlayerWeapon(playerid, 32, 900);
		GivePlayerWeapon(playerid, 34, 300);
		SetPlayerColor(playerid, C_Astronauta);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Astronauta, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Astronauta, "[Astronauta]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Maquinista)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 6, 1);
		GivePlayerWeapon(playerid, 9, 1);
		GivePlayerWeapon(playerid, 18, 100);
		GivePlayerWeapon(playerid, 25, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 33, 300);
		SetPlayerColor(playerid, C_Maquinista);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Maquinista, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Maquinista, "[Maquinista]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Piloto)
	{
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 17, 50);
		GivePlayerWeapon(playerid, 22, 900);
     	GivePlayerWeapon(playerid, 31, 900);
     	GivePlayerWeapon(playerid, 26, 900);
		GivePlayerWeapon(playerid, 32, 900);
		GivePlayerWeapon(playerid, 34, 300);
		SetPlayerColor(playerid, C_Piloto);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Piloto, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Piloto, "[Piloto]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Cozinheiro)
	{
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 17, 50);
		GivePlayerWeapon(playerid, 22, 900);
     	GivePlayerWeapon(playerid, 31, 900);
     	GivePlayerWeapon(playerid, 26, 900);
		GivePlayerWeapon(playerid, 32, 900);
		GivePlayerWeapon(playerid, 34, 300);
		SetPlayerColor(playerid, C_Cozinheiro);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Cozinheiro, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Cozinheiro, "[Cozinheiro]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Eletricista)
	{
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 17, 50);
		GivePlayerWeapon(playerid, 22, 900);
     	GivePlayerWeapon(playerid, 31, 900);
     	GivePlayerWeapon(playerid, 26, 900);
		GivePlayerWeapon(playerid, 32, 900);
		GivePlayerWeapon(playerid, 34, 300);
		SetPlayerColor(playerid, C_Eletricista);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Eletricista, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Eletricista, "[Eletricista]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Caminhoneiro)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 6, 1);
		GivePlayerWeapon(playerid, 9, 1);
		GivePlayerWeapon(playerid, 18, 100);
		GivePlayerWeapon(playerid, 25, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 33, 300);
		SetPlayerColor(playerid, C_Caminhoneiro);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Caminhoneiro, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Caminhoneiro, "[Caminhoneiro]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Petroleiro)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 6, 1);
		GivePlayerWeapon(playerid, 9, 1);
		GivePlayerWeapon(playerid, 18, 100);
		GivePlayerWeapon(playerid, 25, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 33, 300);
		SetPlayerColor(playerid, C_Petroleiro);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Petroleiro, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Petroleiro, "[Petroleiro]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == MotoqueiroFantasma)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 4, 1);
		GivePlayerWeapon(playerid, 18, 500);
		GivePlayerWeapon(playerid, 24, 100);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 30, 300);
		SetPlayerColor(playerid, C_MotoqueiroFantasma);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_MotoqueiroFantasma, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_MotoqueiroFantasma, "[MF]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == ACG)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_ACG);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_ACG, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_ACG, "[ACG]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == CAM)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_CAM);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_CAM, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_CAM, "[CAM]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == CAP)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_CAP);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_CAP, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_CAP, "[CAP]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == AVA)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_AVA);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_AVA, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_AVA, "[AVA]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == BAH)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_BAH);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_BAH, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_BAH, "[BAH]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == BOT)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_BOT);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_BOT, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_BOT, "[BOT]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == CHA)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_CHA);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_CHA, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_CHA, "[CHA]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == COR)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_COR);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_COR, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_COR, "[COR]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == CFC)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_CFC);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_CFC, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_CFC, "[CFC]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == CRU)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_CRU);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_CRU, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_CRU, "[CRU]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == FLA)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_FLA);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_FLA, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_FLA, "[FLA]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == FLU)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_FLU);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_FLU, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_FLU, "[FLU]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == GRE)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_GRE);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_GRE, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_GRE, "[GRE]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == PAL)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_PAL);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_PAL, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_PAL, "[PAL]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == PON)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_PON);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_PON, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_PAL, "[PON]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == SAN)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_SAN);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_SAN, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_SAN, "[SAN]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == SAO)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_SAO);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_SAO, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_SAO, "[SAO]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == SPO)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_SPO);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_SPO, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_SPO, "[SPO]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == ExercitoMilitar)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 26, 200000);
		GivePlayerWeapon(playerid, 32, 200000);
		GivePlayerWeapon(playerid, 24, 200000);
		GivePlayerWeapon(playerid, 31, 200000);
		GivePlayerWeapon(playerid, 34, 200000);
		SetPlayerColor(playerid, C_ExercitoMilitar);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_ExercitoMilitar, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_ExercitoMilitar, "[Exercito Militar]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == ExercitoAero)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 26, 200000);
		GivePlayerWeapon(playerid, 32, 200000);
		GivePlayerWeapon(playerid, 24, 200000);
		GivePlayerWeapon(playerid, 31, 200000);
		GivePlayerWeapon(playerid, 34, 200000);
		SetPlayerColor(playerid, C_ExercitoAero);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_ExercitoAero, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_ExercitoAero, "[Exercito Aeronáutica]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == FuzileiroMilitar)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 26, 200000);
		GivePlayerWeapon(playerid, 32, 200000);
		GivePlayerWeapon(playerid, 24, 200000);
		GivePlayerWeapon(playerid, 31, 200000);
		GivePlayerWeapon(playerid, 34, 200000);
		SetPlayerColor(playerid, C_FuzileiroMilitar);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_FuzileiroMilitar, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_FuzileiroMilitar, "[Fuzileiro Militar]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == General)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 26, 200000);
		GivePlayerWeapon(playerid, 32, 200000);
		GivePlayerWeapon(playerid, 24, 200000);
		GivePlayerWeapon(playerid, 31, 200000);
		GivePlayerWeapon(playerid, 34, 200000);
		SetPlayerColor(playerid, C_General);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_General, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_General, "[General]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Major)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 26, 200000);
		GivePlayerWeapon(playerid, 32, 200000);
		GivePlayerWeapon(playerid, 24, 200000);
		GivePlayerWeapon(playerid, 31, 200000);
		GivePlayerWeapon(playerid, 34, 200000);
		SetPlayerColor(playerid, C_Major);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Major, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Major, "[Major]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Marechal)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 26, 200000);
		GivePlayerWeapon(playerid, 32, 200000);
		GivePlayerWeapon(playerid, 24, 200000);
		GivePlayerWeapon(playerid, 31, 200000);
		GivePlayerWeapon(playerid, 34, 200000);
		SetPlayerColor(playerid, C_Marechal);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Marechal, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Marechal, "[Marechal]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Tenente)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 26, 200000);
		GivePlayerWeapon(playerid, 32, 200000);
		GivePlayerWeapon(playerid, 24, 200000);
		GivePlayerWeapon(playerid, 31, 200000);
		GivePlayerWeapon(playerid, 34, 200000);
		SetPlayerColor(playerid, C_Tenente);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Tenente, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Tenente, "[Tenente]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Cientista)
	{
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 17, 50);
		GivePlayerWeapon(playerid, 22, 900);
     	GivePlayerWeapon(playerid, 31, 900);
     	GivePlayerWeapon(playerid, 26, 900);
		GivePlayerWeapon(playerid, 32, 900);
		GivePlayerWeapon(playerid, 34, 300);
		SetPlayerColor(playerid, C_Cientista);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Cientista, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Cientista, "[Cientista]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Astronauta)
	{
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 17, 50);
		GivePlayerWeapon(playerid, 22, 900);
     	GivePlayerWeapon(playerid, 31, 900);
     	GivePlayerWeapon(playerid, 26, 900);
		GivePlayerWeapon(playerid, 32, 900);
		GivePlayerWeapon(playerid, 34, 300);
		SetPlayerColor(playerid, C_Astronauta);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Astronauta, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Astronauta, "[Astronauta]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Mercenario)
	{
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 17, 50);
		GivePlayerWeapon(playerid, 22, 900);
     	GivePlayerWeapon(playerid, 31, 900);
     	GivePlayerWeapon(playerid, 26, 900);
		GivePlayerWeapon(playerid, 32, 900);
		GivePlayerWeapon(playerid, 34, 300);
		SetPlayerColor(playerid, C_Mercenario);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Mercenario, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Mercenario, "[Mercenario]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == MotoqueiroFantasma)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 4, 1);
		GivePlayerWeapon(playerid, 18, 500);
		GivePlayerWeapon(playerid, 24, 100);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 30, 300);
		SetPlayerColor(playerid, C_MotoqueiroFantasma);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_MotoqueiroFantasma, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_MotoqueiroFantasma, "[MF]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Hacker)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 17, 50);
		GivePlayerWeapon(playerid, 23, 500);
		GivePlayerWeapon(playerid, 31, 300);
		GivePlayerWeapon(playerid, 32, 500);
		GivePlayerWeapon(playerid, 34, 300);
		SetPlayerColor(playerid, C_Hacker);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Hacker, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Hacker, "[Hacker]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Goku)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 17, 50);
		GivePlayerWeapon(playerid, 23, 500);
		GivePlayerWeapon(playerid, 31, 300);
		GivePlayerWeapon(playerid, 32, 500);
		GivePlayerWeapon(playerid, 34, 300);
		SetPlayerColor(playerid, C_Hacker);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Hacker, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Hacker, "[Hacker]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Obras)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Obras);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Obras, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Obras, "[Mestre de Obras]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Cafetão)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Cafetão);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Cafetão, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Cafetão, "[Cafetão]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Governador)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Governador);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Governador, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Governador, "[Governador de Los Santos]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Gringo)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Gringo);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Gringo, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Gringo, "[Gringo]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Juiz)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Juiz);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Juiz, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Juiz, "[Juiz Federal]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == JogadorSamp)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_JogadorSamp);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_JogadorSamp, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_JogadorSamp, "[Jogador de SAMP]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Mercenario)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Mercenario);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Mercenario, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Mercenario, "[Mercenário]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == JogadorMine)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_JogadorMine);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_JogadorMine, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_JogadorMine, "[JogadorMine]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == CapitaoA)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_CapitaoA);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_CapitaoA, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_CapitaoA, "[Capitão América]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Robin)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Robin);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Robin, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Robin, "[Robin]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == LanternaV)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_LanternaV);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_LanternaV, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_LanternaV, "[Lanterna Verde]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Batman)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Batman);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Batman, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Batman, "[Batman]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Flash)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Flash);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Flash, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Flash, "[Flash]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Marido)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Marido);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
 				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Marido, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Marido, "[Marido de Aluguel]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Thor)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Thor);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Thor, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Thor, "[Thor]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Mascara)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Mascara);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Mascara, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Mascara, "[Mascará]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Ben10)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Ben10);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Ben10, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Ben10, "[BEN 10]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Patata)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Patata);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Patata, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Patata, "[Patatá]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Hulk)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Hulk);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Hulk, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Hulk, "[O Incrivél Hulk]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == TEC)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_TEC);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_TEC, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_TEC, "[Torcida Esquadrão Colorado]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == AgenteDoPT)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_AgenteDoPT);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_AgenteDoPT, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_AgenteDoPT, "[Agente do Partido Trabalhista - PT]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == TTA)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_TTA);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_TTA, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_TTA, "[Torcida Organizada Trovão Azul]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == VagabundoBVL)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_VagabundoBVL);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_VagabundoBVL, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_VagabundoBVL, "[Vagabundo(a) [BSL]]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == TécnicoInformática)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_TécnicoInformática);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_TécnicoInformática, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_TécnicoInformática, "[Técnico Em Informática]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Engenheiro)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Engenheiro);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Engenheiro, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Engenheiro, "[Engenheiro Ambiental]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Acessor)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Acessor);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Acessor, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Acessor, "[Acessor Jurídico]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Empresarial)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Empresarial);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Empresarial, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Empresarial, "[Advogado Empresarial]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Recursos)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Recursos);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Recursos, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Recursos, "[Diretor de Recursos Humanos]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Analista)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Analista);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Analista, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Analista, "[Analista de Sistemas]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Atendimento)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Atendimento);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Atendimento, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Atendimento, "[Gerente de Atendimento]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Comercial)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Comercial);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
 				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Comercial, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Comercial, "[Diretor Comercial]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Consultor)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Consultor);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Consultor, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Consultor, "[Consultor Financeiro]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Supervisor)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Supervisor);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Supervisor, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Supervisor, "[Supervisor Administrativo]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Bancario)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Bancario);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Bancario, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Bancario, "[Bancário]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Crackudo)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Crackudo);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Crackudo, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Crackudo, "[Crackudo]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Comandante)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Comandante);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Comandante, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Comandante, "[Comandante da Crackolândia]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Mente)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Mente);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Mente, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Mente, "[Mente Criminosa]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == VigilanteS)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_VigilanteS);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_VigilanteS, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_VigilanteS, "[Vigilante Sanitário]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Medico)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		GivePlayerWeapon(playerid, 28, 800);
		GivePlayerWeapon(playerid, 24, 800);
		GivePlayerWeapon(playerid, 31, 800);
		GivePlayerWeapon(playerid, 34, 200);
		SetPlayerColor(playerid, C_Medico);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Medico, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Medico, "[Médico VIP]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Corretor)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		SetPlayerColor(playerid, C_Corretor);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Corretor, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Corretor, "[Corretor Imobiliário]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Noel)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 3, 1);
		GivePlayerWeapon(playerid, 26, 800);
		SetPlayerColor(playerid, C_Noel);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Noel, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Noel, "[Papai Noel [BSL]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == FTSA)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 26, 200000);
		GivePlayerWeapon(playerid, 32, 200000);
		GivePlayerWeapon(playerid, 24, 200000);
		GivePlayerWeapon(playerid, 31, 200000);
		GivePlayerWeapon(playerid, 34, 200000);
		SetPlayerColor(playerid, C_FTSA);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_FTSA, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_FTSA, "[FTSA]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == GovernadorSA)
	{
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 17, 50);
		GivePlayerWeapon(playerid, 22, 900);
     	GivePlayerWeapon(playerid, 31, 900);
     	GivePlayerWeapon(playerid, 26, 900);
		GivePlayerWeapon(playerid, 32, 900);
		GivePlayerWeapon(playerid, 34, 300);
		SetPlayerColor(playerid, C_GovernadorSA);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_GovernadorSA, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_GovernadorSA, "[Governador]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Jardineiro)
	{
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 1, 1);
		GivePlayerWeapon(playerid, 2, 1);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 22, 300);
		GivePlayerWeapon(playerid, 33, 100);
		SetPlayerColor(playerid, C_Jardineiro);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Jardineiro, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Jardineiro, "[Jardineiro]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == Coveiro)
	{
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 1, 1);
		GivePlayerWeapon(playerid, 6, 1);
		SetPlayerColor(playerid, C_Coveiro);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_Coveiro, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_Coveiro, "[Coveiro]");
			}
		}
	}
	if(DOF2_GetInt(file2, "Profissao") == VIT)
	{
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 17, 500);
		GivePlayerWeapon(playerid, 24, 500);
		GivePlayerWeapon(playerid, 26, 300);
		GivePlayerWeapon(playerid, 28, 500);
		GivePlayerWeapon(playerid, 31, 300);
		SetPlayerColor(playerid, C_VIT);
		if(IsPlayerNPC(playerid))
		{
			if(IsValidDynamic3DTextLabel(NPCLabel[playerid]))
			{
				format(string, sizeof(string), "%s (%d)", nomepl, playerid);
				UpdateDynamic3DTextLabelText(NPCLabel[playerid], C_VIT, string);
			}
		}
		else
		{
			if(IsValidDynamic3DTextLabel(ProfLabel[playerid]))
			{
				UpdateDynamic3DTextLabelText(ProfLabel[playerid], C_VIT, "[VIT]");
			}
		}
	}
	PlayerPlaySound(playerid, 1057, 0, 0, 0);
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(GetPlayerState(i) == PLAYER_STATE_SPECTATING && gSpectateType[i] == ADMIN_SPEC_TYPE_PLAYER && gSpectateID[i] == playerid)
		{
			SetPlayerInterior(i, newinteriorid);
			SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
		}
	}
	return 1;
}

public destinoviagen(playerid)
{
	if(Aerols[playerid] == 1)
	{
		SetPlayerPos(playerid, 2085.4761, -2468.5957, 13.5469);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: Aero Los Santos.");
		Aerols[playerid] = 0;
		return 1;
	}
	if(Aerosf[playerid] == 1)
	{
		SetPlayerPos(playerid, -1408.5679, -166.7956, 14.1411);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: Aero San Fierro.");
		Aerosf[playerid] = 0;
		return 1;
	}
	if(Aerolv[playerid] == 1)
	{
		SetPlayerPos(playerid, 1318.9139, 1251.1759, 10.8203);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: Aero Las Venturas.");
		Aerolv[playerid] = 0;
		return 1;
	}
	if(Aeroabd[playerid] == 1)
	{
		SetPlayerPos(playerid, 432.6364, 2529.2515, 16.7646);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: Aero Abandonado.");
		Aeroabd[playerid] = 0;
		return 1;
	}
	if(bayside[playerid] == 1)
	{
		SetPlayerPos(playerid, -2244.8035, 2343.6038, 4.9863);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: Vila Bayside.");
		bayside[playerid] = 0;
		return 1;
	}
	if(EQ[playerid] == 1)
	{
		SetPlayerPos(playerid, -1445.6693, 2631.0288, 55.8359);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: El Quebrados.");
		EQ[playerid] = 0;
		return 1;
	}
	if(LP[playerid] == 1)
	{
		SetPlayerPos(playerid, -237.6759, 2692.3823, 62.6875);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: Las Payasadas.");
		LP[playerid] = 0;
		return 1;
	}
	if(a51[playerid] == 1)
	{
		SetPlayerPos(playerid, 192.0514, 1880.9296, 17.6406);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: Area51.");
		a51[playerid] = 0;
		return 1;
	}
	if(LB[playerid] == 1)
	{
		SetPlayerPos(playerid, -777.0883, 1541.5990, 26.9609);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: Las Barrancas.");
		LB[playerid] = 0;
		return 1;
	}
	if(FC[playerid] == 1)
	{
		SetPlayerPos(playerid, -94.3555, 1157.0327, 19.7422);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: Forte Carson.");
		FC[playerid] = 0;
		return 1;
	}
	if(MG[playerid] == 1)
	{
		SetPlayerPos(playerid, 1409.6783, 277.5197, 19.5469);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: Monte Gomery.");
		MG[playerid] = 0;
		return 1;
	}
	if(PC[playerid] == 1)
	{
		SetPlayerPos(playerid, 2388.7761, 40.0404, 26.4844);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: Palomino Creek.");
		PC[playerid] = 0;
		return 1;
	}
	if(DME[playerid] == 1)
	{
		SetPlayerPos(playerid, 671.8423, -522.4174, 16.3359);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: Dillimore.");
		DME[playerid] = 0;
		return 1;
	}
	if(MC[playerid] == 1)
	{
		SetPlayerPos(playerid, -2341.3350, -1599.7168, 483.6694);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: Monte Chiliad.");
		MC[playerid] = 0;
		return 1;
	}
	if(AP[playerid] == 1)
	{
		SetPlayerPos(playerid, -83.6938, -1455.5828, 7.0306);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, 0xC0C0C0AA, "Você chegou ao destino: Angel Pine.");
		AP[playerid] = 0;
		return 1;
	}
	return 1;
}

public ABroadCast(COLOR, const string[], level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(pAdmin[i] >= level)
			{
				SendClientMessage(i, COLOR, string);
			}
		}
	}
	return 0;
}

public ABroadCastPM(COLOR, const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(verpms[i] == 1)
			{
				SendClientMessage(i, COLOR, string);
			}
		}
	}
	return 0;
}

public ABroadCastVIP(COLOR, const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerVIP(i))
			{
				SendClientMessage(i, COLOR, string);
			}
		}
	}
	return 0;
}

public Chatp(COLOR, const string[], level, playerid)
{
    new file[128];
    
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(i));

			if(DOF2_GetInt(file, "Profissao") == DOF2_GetInt(file2, "Profissao"))
			{
				SendClientMessage(i, COLOR, string);
			}
		}
	}
	return 0;
}

forward Kickar(playerid);
public Kickar(playerid) return Kick(playerid);

public Relatorio(COLOR, const string[], level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(pAdmin[i] > 0)
			{
				SendClientMessage(i, COLOR, string);
				GameTextForPlayer(i, "~r~NOVO ~b~PEDIDO", 3000, 4);
				PlayerPlaySound(i, 1057, 0, 0, 0);
			}
		}
	}
	return 0;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	new grana = GetPlayerGrana(playerid);

	if(pickupid == PickupsFix[1])
	{
		SetPlayerPos(playerid, 324.6059, 304.3401, 999.1484);
		SetPlayerInterior(playerid, 5);
	}
	if(pickupid == PickupsFix[0])
	{
		SetPlayerPos(playerid, -212.6779, 979.6142, 19.3291);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[55])
	{
		if(nobanco[playerid] == 1)
		{
			SetPlayerPos(playerid, 1466.9325, -1012.2369, 26.8438);
			SetPlayerInterior(playerid, 0);
			nobanco[playerid] = 0;
		}
		if(nobanco[playerid] == 2)
		{
			SetPlayerPos(playerid, 1200.1720,-1744.8708,13.5914);
			SetPlayerInterior(playerid, 0);
			nobanco[playerid] = 0;
		}
		if(nobanco[playerid] == 3)
		{
			SetPlayerPos(playerid, -1882.9195, 824.4190, 35.1747);
			SetPlayerInterior(playerid, 0);
			nobanco[playerid] = 0;
		}
		if(nobanco[playerid] == 4)
		{
			SetPlayerPos(playerid, -2650.8605, 376.0171, 6.1095);
			SetPlayerInterior(playerid, 0);
			nobanco[playerid] = 0;
		}
		if(nobanco[playerid] == 5)
		{
			SetPlayerPos(playerid, 1933.2949, 1345.2982, 9.9687);
			SetPlayerInterior(playerid, 0);
			nobanco[playerid] = 0;
		}
		if(nobanco[playerid] == 6)
		{
			SetPlayerPos(playerid, 2180.2832, 2294.2443, 10.8203);
			SetPlayerInterior(playerid, 0);
			nobanco[playerid] = 0;
		}
	}
	if(pickupid == PickupsFix[3])
	{
		SetPlayerPos(playerid, 1351.3582,-1756.5243,13.5078);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[2])
	{
		SetPlayerPos(playerid, -33.5122, -89.9078, 1003.5469);
		SetPlayerInterior(playerid, 18);
	}
	if(pickupid == PickupsFix[4])
	{
		SetPlayerPos(playerid, 513.8825,-11.2699,1001.5653);
		SetPlayerInterior(playerid, 3);
	}
	if(pickupid == PickupsFix[5])
	{
		SetPlayerPos(playerid, 2154.8842,-1071.1025,39.2741);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[11])
	{
		SetPlayerPos(playerid, 2022.4974, 1007.9083, 10.8203);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[10])
	{
		SetPlayerPos(playerid, 2016.2699, 1017.7790, 996.8750);
		SetPlayerInterior(playerid, 10);
	}
	if(pickupid == PickupsFix[49])
	{
		SetPlayerPos(playerid, 830.5774, 7.3999, 1004.1796);
		SetPlayerInterior(playerid, 3);
		nobanco[playerid] = 1;
	}
	if(pickupid == PickupsFix[50])
	{
		SetPlayerPos(playerid, 830.5774, 7.3999, 1004.1796);
		SetPlayerInterior(playerid, 3);
		nobanco[playerid] = 2;
	}
	if(pickupid == PickupsFix[51])
	{
		SetPlayerPos(playerid, 830.5774, 7.3999, 1004.1796);
		SetPlayerInterior(playerid, 3);
		nobanco[playerid] = 3;
	}
	if(pickupid == PickupsFix[52])
	{
		SetPlayerPos(playerid, 830.5774, 7.3999, 1004.1796);
		SetPlayerInterior(playerid, 3);
		nobanco[playerid] = 4;
	}
	if(pickupid == PickupsFix[53])
	{
		SetPlayerPos(playerid, 830.5774, 7.3999, 1004.1796);
		SetPlayerInterior(playerid, 3);
		nobanco[playerid] = 5;
	}
	if(pickupid == PickupsFix[54])
	{
		SetPlayerPos(playerid, 830.5774, 7.3999, 1004.1796);
		SetPlayerInterior(playerid, 3);
		nobanco[playerid] = 6;
	}
	if(pickupid == PickupsFix[14])
	{
		SetPlayerPos(playerid, 771.9539, -1.7038, 1000.7278);
		SetPlayerInterior(playerid, 5);
	}
	if(pickupid == PickupsFix[15])
	{
		SetPlayerPos(playerid, -146.3821, 1078.9905, 20.3192);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[45])
	{
		SetPlayerPos(playerid, 315.5569, -141.2360, 999.6016);
		SetPlayerInterior(playerid, 7);
	}
	if(pickupid == PickupsFix[46])
	{
		SetPlayerPos(playerid, 1366.2430, -1279.4869, 13.5469);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[18])
	{
		SetPlayerPos(playerid, 316.4616, -168.2046, 999.5938);
		SetPlayerInterior(playerid, 6);
	}
	if(pickupid == PickupsFix[19])
	{
		SetPlayerPos(playerid, -313.7262, 830.2489, 14.2422);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[20])
	{
		SetPlayerPos(playerid, 246.7995, 65.9249, 1003.6406);
		SetPlayerInterior(playerid, 6);
	}
	if(pickupid == PickupsFix[21])
	{
		SetPlayerPos(playerid, 1552.5618, -1675.5143, 16.1953);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[44])
	{
		nautlls[playerid] = 1;
		SetPlayerPos(playerid, -25.9833, -186.0034, 1003.5469);
		SetPlayerInterior(playerid, 17);
	}
	if(pickupid == PickupsFix[26])
	{
		nautllv[playerid] = 1;
		SetPlayerPos(playerid, -25.9833, -186.0034, 1003.5469);
		SetPlayerInterior(playerid, 17);
	}
	if(pickupid == PickupsFix[27])
	{
		if(nautlls[playerid] == 1)
		{
			SetPlayerPos(playerid, 1829.3083, -1842.6304, 13.5781);
			SetPlayerInterior(playerid, 0);
			nautlls[playerid] = 0;
		}
		if(nautllv[playerid] == 1)
		{
			SetPlayerPos(playerid, 613.1134, -492.4037, 16.3359);
			SetPlayerInterior(playerid, 0);
			nautllv[playerid] = 0;
		}
	}
	if(pickupid == PickupsFix[32])
	{
		SetPlayerPos(playerid, 2581.4500, 1063.3763, 10.8203);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[32])
	{
		nobarsf[playerid] = 1;
		SetPlayerPos(playerid, -227.2845, 1400.7986, 27.7656);
		SetPlayerInterior(playerid, 18);
	}
	if(pickupid == PickupsFix[37])
	{
		nobarlv[playerid] = 1;
		SetPlayerPos(playerid, -227.2845, 1400.7986, 27.7656);
		SetPlayerInterior(playerid, 18);
	}
	if(pickupid == PickupsFix[12])
	{
		nobarfc[playerid] = 1;
		SetPlayerPos(playerid, -227.2845, 1400.7986, 27.7656);
		SetPlayerInterior(playerid, 18);
	}
	if(pickupid == PickupsFix[43])
	{
		nobarls[playerid] = 1;
		SetPlayerPos(playerid, 493.390991,-22.722799,1000.679687);
		SetPlayerInterior(playerid, 17);
	}
	if(pickupid == PickupsFix[13])
	{
		if(nobarfc[playerid] == 1)
		{
			SetPlayerPos(playerid, -144.0950, 1221.2968, 19.8992);
			SetPlayerInterior(playerid, 0);
			nobarfc[playerid] = 0;
		}
		if(nobarlv[playerid] == 1)
		{
			SetPlayerPos(playerid, 2367.2222, 1982.4575, 10.8125);
			SetPlayerInterior(playerid, 0);
			nobarlv[playerid] = 0;
		}
		if(nobarsf[playerid] == 1)
		{
			SetPlayerPos(playerid, -2214.5269, 201.0192, 35.3203);
			SetPlayerInterior(playerid, 0);
			nobarsf[playerid] = 0;
		}
		if(nobarls[playerid] == 1)
		{
			SetPlayerPos(playerid, 1830.9293,-1684.4761,13.5469);
			SetPlayerInterior(playerid, 0);
			nobarls[playerid] = 0;
		}
	}
	if(pickupid == PickupsFix[33])
	{
		SetPlayerPos(playerid, 6.4397, -27.7275, 1003.5494);
		SetPlayerInterior(playerid, 10);
	}
	if(pickupid == PickupsFix[34])
	{
		SetPlayerPos(playerid, -2443.1655, 744.0441, 35.0156);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[35])
	{
		SetPlayerPos(playerid, 207.0726, -136.3809, 1002.8743);
		SetPlayerInterior(playerid, 3);
	}
	if(pickupid == PickupsFix[36])
	{
		SetPlayerPos(playerid, -1696.8417, 949.7108, 24.8906);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[8])
	{
		SetPlayerPos(playerid, 207.7466, -108.4223, 1005.1328);
		SetPlayerInterior(playerid, 15);
	}
	if(pickupid == PickupsFix[9])
	{
		SetPlayerPos(playerid, 1160.4045, -1693.9617, 14.0507);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[40])
	{
		SetPlayerPos(playerid, 385.4674, 173.9319, 1008.3828);
		SetPlayerInterior(playerid, 3);
	}
	if(pickupid == PickupsFix[6])
	{
		SetPlayerPos(playerid, 385.4674, 173.9319, 1008.3828);
		SetPlayerInterior(playerid, 3);
	}
	if(pickupid == PickupsFix[7])
	{
		SetPlayerPos(playerid, 1481.1007, -1768.5459, 18.7958);
		SetPlayerInterior(playerid, 0);
	}
	// Armas
	if(pickupid == PickupsFix[56] || pickupid == PickupsFix[60] || pickupid == PickupsFix[64] || pickupid == PickupsFix[68] || pickupid == PickupsFix[72])
	{
		if(grana > 99)
		{
			GivePlayerGrana(playerid, -100);
			GivePlayerWeapon(playerid, 22, 100000); // Colt 45 Pistol
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem grana o suficiente!");
		}
	}
	if(pickupid == PickupsFix[57] || pickupid == PickupsFix[61] || pickupid == PickupsFix[65] || pickupid == PickupsFix[69] || pickupid == PickupsFix[73])
	{
		if(grana > 199)
		{
			GivePlayerGrana(playerid, -200);
			GivePlayerWeapon(playerid, 24, 100000); // Desert Eagle
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem grana o suficiente!");
		}
	}
	if(pickupid == PickupsFix[58] || pickupid == PickupsFix[62] || pickupid == PickupsFix[66] || pickupid == PickupsFix[70] || pickupid == PickupsFix[74])
	{
		if(grana > 299)
		{
			GivePlayerGrana(playerid, -300);
			GivePlayerWeapon(playerid, 31, 100000); // M4 Assault Rifle
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem grana o suficiente!");
		}
	}
	if(pickupid == PickupsFix[59] || pickupid == PickupsFix[63] || pickupid == PickupsFix[67] || pickupid == PickupsFix[71] || pickupid == PickupsFix[75])
	{
		if(grana > 199)
		{
			GivePlayerGrana(playerid, -200);
			GivePlayerWeapon(playerid, 32, 100000); // Tec-9
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você não tem grana o suficiente!");
		}
 }
	if(pickupid == PickupsFix[76])
	{
		SetPlayerInterior(playerid, 1);
		SetPlayerPos(playerid, 1175.1365,-1340.5284,480.5669);
		GameTextForPlayer(playerid, "~r~Hospital", 5000, 1);

		TogglePlayerControllable(playerid, false);
		SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);

		SetPlayerFacingAngle(playerid, 90);
		SetCameraBehindPlayer(playerid);
	}

	if(pickupid == PickupsFix[78])
	{
		SetPlayerPos(playerid, 1310.3771, -1373.8054, 13.6202);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[79])
	{
		SetPlayerPos(playerid, 2214.7678,-1150.5229,1025.7969);
		SetPlayerInterior(playerid, 15);
	}
	if(pickupid == PickupsFix[81])
	{
		SetPlayerPos(playerid, -2170.2080, 642.8691, 1052.3750);
		SetPlayerInterior(playerid, 1);
	}
	if(pickupid == PickupsFix[82])
	{
		SetPlayerPos(playerid, 1080.6626,-1705.5150,13.5469);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[83])
	{
    SetPlayerPos(playerid, 2315.3799, -3.3975, 26.7422);
    SetPlayerInterior(playerid,0);
	}
	if(pickupid == PickupsFix[84])
	{
		SetPlayerPos(playerid, 1384.2396, -1753.0806, 13.3828);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[85])
	{
		SetPlayerPos(playerid, 773.6412, -45.3771, 1000.5859);
		SetPlayerInterior(playerid, 6);
	}
	if(pickupid == PickupsFix[86])
	{
		SetPlayerPos(playerid, 2226.0020,-1724.4469,13.5586);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == PickupsFix[89])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 134.5808,1700.7284,1001.3410);
	}
	if(pickupid == PickupsFix[90])
	{
	    SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, 1414.9437,-1700.3629,13.5395);
	}
	
	new string[256];
	for(new p = 0; p < MAX_PROPS; p++)
	{
		format(string, sizeof(string), PASTA_PROPS, p);
		if(DOF2_FileExists(string))
		{
			if(pickupid == DOF2_GetInt(string, "Id"))
			{
				if(DOF2_GetInt(string, "TDono") == 0)
				{
					if(order[playerid] == 0)
					{
						order[playerid] = 1;
						format(STRX, sizeof(STRX), "{00FF00}Esta empresa está a venda.\n\n{00FF00}Valor: {696969}$%d\n{00FF00}Dono: {696969}%s\n{00FF00}Renda: {696969}$%d\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Nome: {696969}%s\n\n{FFFFFF}Oque deseja?", DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "Dono"), DOF2_GetString(string, "Grana"), p, DOF2_GetString(string, "Nome"));
						ShowPlayerDialog(playerid, proporder, DIALOG_STYLE_MSGBOX, "Informações", STRX, "Comprar", "Cancelar");
						return 1;
					}
				}
				else
				{
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						new year, month, day, data[128];

						getdate(year, month, day);
						format(data, sizeof(data), "%d/%d/%d", day, month, year);
						DOF2_SetString(string, "DataSet", data);
						return 1;
					}
				}
			}
		}
	}
	for(new c = 0; c < MAX_CASAS; c++)
	{
		format(string, sizeof(string), PASTA_CASAS, c);
		if(DOF2_FileExists(string))
		{
			if(pickupid == DOF2_GetInt(string, "Id"))
			{
				if(DOF2_GetInt(string, "TDono") == 0)
				{
					if(order[playerid] == 0)
					{
						order[playerid] = 1;
						format(STRX, sizeof(STRX), "{FFFFFF}Esta casa está a venda.\n\n{FFFFFF}Valor: {FF0000}$%d\n{FFFFFF}Dono: {FF0000}%s\n{FFFFFF}Morador: {FF0000}%s\n{FFFFFF}Casa ID: {FF0000}%d\n{FFFFFF}Int ID: {FF0000}%d\n\n{FFFFFF}Oque deseja?", DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "Dono"), DOF2_GetString(string, "Morador"), c, DOF2_GetInt(string, "Int"));
						ShowPlayerDialog(playerid, casaorder, DIALOG_STYLE_MSGBOX, "Informações", STRX, "Comprar", "Cancelar");
						return 1;
					}
				}
				else
				{
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0)
					{
						new year, month, day, data[256];

						getdate(year, month, day);
						format(data, sizeof(data), "%d/%d/%d", day, month, year);
						DOF2_SetString(string, "DataSet", data);
						return 1;
					}
				}
			}
		}
	}
	return 1;
}

#if defined MissilesUser
public VM_OnVehicleFire(vehicleid, slot)
{
	return 1;
}
#endif

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	new string[256];
	new pname[MAX_PLAYER_NAME];

	if((newkeys & KEY_WALK ) && !(oldkeys & KEY_WALK ) || (newkeys & 2 ) && !(oldkeys & 2 ))
	{
		if(IsPlayerInRangeOfPoint(playerid, 30.0, 1570.8325195313, -1635.4766845703, 12.728549957275))
		{
			MoveDynamicObject(ObjectsFix[18], 1570.8934326172, -1635.2736816406, 27.561433792114, 3.0);
			SetTimerEx("MoverObjeto", 10000, false, "iffff", ObjectsFix[18], 1570.8325195313, -1635.4766845703, 12.728549957275, 3.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Subindo o elevador da DP!");
			SendClientMessage(playerid, Amarelo, "O elevador desce em 10 segundos!");
		}

		if(IsPlayerInRangeOfPoint(playerid, 20.0, 1058.928344, 1290.362426, 10.020320))
		{
			MoveDynamicObject(ObjectsFix[25], 1058.928344, 1290.362426, 19.420310, 3.0);
			SetTimerEx("MoverObjeto", 10000, false, "iffff", ObjectsFix[25], 1058.928344, 1290.362426, 10.020320, 3.0);
			SendClientMessage(playerid, 0xFFFFFFAA, "Subindo o elevador da Conce!");
			SendClientMessage(playerid, Amarelo, "O elevador desce em 10 segundos!");
		}
	}
 	if(newkeys == KEY_HORN)
	{
		if(IsPlayerInRangeOfPoint(playerid, 15.0, 1588.0791015625, -1638.140625, 15.172611236572))
		{
			if(IsACop(playerid))
			{
				MoveDynamicObject(ObjectsFix[20], 1598.3291015625, -1638.1206054688, 15.172611236572, 3.0);
				SetTimerEx("MoverObjeto", 5000, false, "iffff", ObjectsFix[20], 1588.0791015625, -1638.140625, 15.172611236572, 3.0);
				SendClientMessage(playerid, 0xFFFFFFAA, "Abrindo Portão da {FF0000} Delegacia");
				SendClientMessage(playerid, Amarelo, "{FFFFFF}O portão fecha em {FF0000}5{FFFFFF} segundos{FF0000}!");
			}
			else
			{
				GameTextForPlayer(playerid,"~y~apenas policiais podem abrir o portao da dp!", 8000, 3);
			}
		}
		else
		{
		}

		if(IsPlayerInRangeOfPoint(playerid, 15.0, 1541.9384765625, -1627.7314453125, 15.156204223633))
		{
			if(IsACop(playerid))
			{
				MoveDynamicObject(ObjectsFix[19], 1541.9780273438, -1639.4814453125, 15.156204223633, 3.0);
				SetTimerEx("MoverObjeto", 5000, false, "iffff", ObjectsFix[19], 1541.9384765625, -1627.7314453125, 15.156204223633, 3.0);
				SendClientMessage(playerid, 0xFFFFFFAA, "Abrindo Portão da {FF0000} Delegacia");
				SendClientMessage(playerid, Amarelo, "{FFFFFF}O portão fecha em {FF0000}5{FFFFFF} segundos{FF0000}!");
			}
			else
			{
				GameTextForPlayer(playerid,"~r~Voce Nao e da lei!", 8000, 3);
			}
		}
		else
		{
		}
	}

	if(newkeys == KEY_CTRL_BACK)
	{
		if(IsPlayerInRangeOfPoint(playerid, 15.0, 1588.0791015625, -1638.140625, 15.172611236572))
		{
			if(IsACop(playerid))
			{
				MoveDynamicObject(ObjectsFix[20], 1598.3291015625, -1638.1206054688, 15.172611236572, 3.0);
				SetTimerEx("MoverObjeto", 5000, false, "iffff", ObjectsFix[20], 1588.0791015625, -1638.140625, 15.172611236572, 3.0);
				SendClientMessage(playerid, 0xFFFFFFAA, "Abrindo Portão da {FF0000} Delegacia");
				SendClientMessage(playerid, Amarelo, "{FFFFFF}O portão fecha em {FF0000}5{FFFFFF} segundos{FF0000}!");
			}
			else
			{
				GameTextForPlayer(playerid,"~r~Voce Nao e da lei!", 8000, 3);
			}
		}
		else
		{
		}

		if(IsPlayerInRangeOfPoint(playerid, 15.0, 1541.9384765625, -1627.7314453125, 15.156204223633))
		{
			if(IsACop(playerid))
			{
				MoveDynamicObject(ObjectsFix[19], 1541.9780273438, -1639.4814453125, 15.156204223633, 3.0);
				SetTimerEx("MoverObjeto", 5000, false, "iffff", ObjectsFix[19], 1541.9384765625, -1627.7314453125, 15.156204223633, 3.0);
				SendClientMessage(playerid, 0xFFFFFFAA, "Abrindo Portão da {FF0000} Delegacia");
				SendClientMessage(playerid, Amarelo, "{FFFFFF}O portão fecha em {FF0000}5{FFFFFF} segundos{FF0000}!");
			}
			else
			{
				GameTextForPlayer(playerid,"~r~Voce Nao e da lei!", 8000, 3);
			}
		}
		else
		{
		}
	}
	
	if(newkeys == KEY_HORN && IsPlayerInAnyVehicle(playerid) || newkeys == KEY_CTRL_BACK) {
	    for(new P; P < MAX_PORTOES; P++)
		{
			new FromF[90];
	    	format(FromF, sizeof(FromF), PASTA_PORTOES, P);
	        if(!DOF2_FileExists(FromF)) continue;
	        if(!IsPlayerInRangeOfPoint(playerid, 18.0, DOF2_GetFloat(FromF, "PosX"), DOF2_GetFloat(FromF, "PosY"), DOF2_GetFloat(FromF, "PosZ"))) continue;
	        if(!strcmp(DOF2_GetString(FromF, "Dono"), GetPlayerNameEx(playerid)) || !strcmp(DOF2_GetString(FromF, "Chave1"), GetPlayerNameEx(playerid)) || !strcmp(DOF2_GetString(FromF, "Chave2"), GetPlayerNameEx(playerid))
	        || !strcmp(DOF2_GetString(FromF, "Chave3"), GetPlayerNameEx(playerid)) || !strcmp(DOF2_GetString(FromF, "Chave4"), GetPlayerNameEx(playerid)) || !strcmp(DOF2_GetString(FromF, "Chave5"), GetPlayerNameEx(playerid)) || pAdmin[playerid] > 2) {
				MoveDynamicObject(_Portao[DOF2_GetInt(FromF, "ID")], DOF2_GetFloat(FromF, "PosAX"), DOF2_GetFloat(FromF, "PosAY"), DOF2_GetFloat(FromF, "PosAZ"), DOF2_GetFloat(FromF, "Velocidade"), DOF2_GetFloat(FromF, "PosAXr"), DOF2_GetFloat(FromF, "PosAYr"), DOF2_GetFloat(FromF, "PosAZr"));
				SetTimerEx("FecharPortao", 10000, 0, "i", DOF2_GetInt(FromF, "ID"));
				DOF2_SetBool(FromF, "PortaoEstado", true);
	         }
	    }
	}

	if ((newkeys & KEY_HORN ) && !(oldkeys & KEY_HORN ))
 	{
  		for(new p = 0; p < MAX_PORTOES; p++)
		{
		  	format(string, sizeof(string), PASTA_PORTOES, p);
		   	{
		    	if(!IsPlayerInRangeOfPoint(playerid, 50.0, DOF2_GetFloat(string, "aCordX"), DOF2_GetFloat(string, "aCordY"), DOF2_GetFloat(string, "aCordZ")))
		    	{
				}
				else
				{
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0 || strcmp(DOF2_GetString(string, "Convidado1"), GetPlayerNameEx(playerid), false) == 0 || strcmp(DOF2_GetString(string, "Convidado2"), GetPlayerNameEx(playerid), false) == 0 || strcmp(DOF2_GetString(string, "Convidado3"), GetPlayerNameEx(playerid), false) == 0 || pAdmin[playerid] > 2)
		    		{
		     			MoveDynamicObject(DOF2_GetInt(string, "Id"), DOF2_GetFloat(string, "aCordX"), DOF2_GetFloat(string, "aCordY"), DOF2_GetFloat(string, "aCordZ"), 4.0);
		     			SetTimerEx("portaob", 4000, 0,"i", playerid);

					}
					else
					{
						GameTextForPlayer(playerid,"~r~Este portao nao e seu!", 2000, 3);
					}
				}
			}
  		}
  	}

	if ((newkeys & KEY_CTRL_BACK ) && !(oldkeys & KEY_CTRL_BACK ))
 	{
  		for(new p = 0; p < MAX_PORTOES; p++)
		{
		  	format(string, sizeof(string), PASTA_PORTOES, p);
		   	{
		    	if(!IsPlayerInRangeOfPoint(playerid, 50.0, DOF2_GetFloat(string, "aCordX"), DOF2_GetFloat(string, "aCordY"), DOF2_GetFloat(string, "aCordZ")))
		    	{
				}
				else
				{
					if(strcmp(DOF2_GetString(string, "Dono"), GetPlayerNameEx(playerid), false) == 0 || strcmp(DOF2_GetString(string, "Convidado1"), GetPlayerNameEx(playerid), false) == 0 || strcmp(DOF2_GetString(string, "Convidado2"), GetPlayerNameEx(playerid), false) == 0 || strcmp(DOF2_GetString(string, "Convidado3"), GetPlayerNameEx(playerid), false) == 0 || pAdmin[playerid] > 2)
		    		{
		     			MoveDynamicObject(DOF2_GetInt(string, "Id"), DOF2_GetFloat(string, "aCordX"), DOF2_GetFloat(string, "aCordY"), DOF2_GetFloat(string, "aCordZ"), 4.0);
		     			SetTimerEx("portaob", 6000, 0,"i", playerid);

					}
					else
					{
						GameTextForPlayer(playerid,"~r~Este portao nao e seu!", 8000, 3);
					}
				}
			}
  		}
  	}


	
	if(newkeys == KEY_SECONDARY_ATTACK && IsPlayerInRangeOfPoint(playerid, 2.0, 250.7371,63.4540,1003.6406))
	{
		new count = 0, msg[1000];

		SendClientMessage(playerid, 0x008000AA, "{FFFFFF}Jogadores {FF0000}Presos ");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && preso[i])
			{
				format(msg,sizeof(msg), "%s (ID: %d)", GetPlayerNameEx(i), i);
				SendClientMessage(playerid, 0x0088CAAA, msg);
				count++;
			}
		}
		if(count == 0)
		{
			SendClientMessage(playerid, 0xFF0000AA, "Ninguém online está preso!");
		}
		return 1;
	}

	if(IsPlayerInRangeOfPoint(playerid, 10, -1412.3848, 812.9502, 47.7167))
	{
		if ((newkeys & KEY_HORN ) && !(oldkeys & KEY_HORN ))
		{
		MoveObject(cancelas[6],-1404.05, 817.20, 47.18, 0.0, 360.00, 0.00, -48.40);
        SetTimer("GateClose6", 6000, 0);
        SendClientMessage(playerid, COLOR_BLUE,"{FF0000}[PEDAGIO]{FFFFFF} Pedagio pago {FF0000}50$ {FFFFFF}tenha uma boa viagem e dirija com cuidado.");
        GivePlayerGrana(playerid,-50);
        }
		return 1;
   }

//////////////////////////////////////////////////////////////////////////////////////////////////////////
	if(IsPlayerInRangeOfPoint(playerid, 10, -1403.4413,822.1852,47.8172))
 	{
		if ((newkeys & KEY_HORN ) && !(oldkeys & KEY_HORN ))
		{
        MoveObject(cancelas[5], -1411.68, 818.56, 47.18, 5.5, 360.00, 0.00, -48.40);
        SetTimer("GateClose5", 6000, 0);
        SendClientMessage(playerid, COLOR_BLUE,"{FF0000}[PEDAGIO]{FFFFFF} Pedagio pago {FF0000}50$ {FFFFFF}tenha uma boa viagem e dirija com cuidado.");
        GivePlayerGrana(playerid,-50);
		}
		return 1;
  	}
//////////////////////////////////////////////////////////////////////////////////////////////////////////
	if(IsPlayerInRangeOfPoint(playerid, 10, 71.9957,-1534.3894,5.2046))
	{
		if ((newkeys & KEY_HORN ) && !(oldkeys & KEY_HORN ))
		{
	 	MoveObject(cancelas[1],67.83, -1529.78, 4.79, 5.5, 0.00, 0.00, 90.00);//portão da direita
  	 	SetTimer("GateClose1", 6000, 0);
   	 	SendClientMessage(playerid, COLOR_BLUE,"{FF0000}[PEDAGIO]{FFFFFF} Pedagio pago {FF0000}50$ {FFFFFF}tenha uma boa viagem e dirija com cuidado.");
    	GivePlayerGrana(playerid,-50);
		}
 		return 1;
 	}
//////////////////////////////////////////////////////////////////////////////////////////////////////////
	if(IsPlayerInRangeOfPoint(playerid, 10, 63.0989,-1540.5431,5.0593))
	{
		if ((newkeys & KEY_HORN ) && !(oldkeys & KEY_HORN ))
		{
	 	MoveObject(cancelas[2], 67.47, -1537.44, 4.79, 5.5, 0.00, 0.0, -90.0);//portão da esquerda
  	 	SetTimer("GateClose2", 6000, 0);
   	 	SendClientMessage(playerid, COLOR_BLUE,"{FF0000}[PEDAGIO]{FFFFFF} Pedagio pago {FF0000}50$ {FFFFFF}tenha uma boa viagem e dirija com cuidado.");
     	GivePlayerGrana(playerid,-50);
		}
 		return 1;
 	}
//////////////////////////////////////////////////////////////////////////////////////////////////////////
	if(IsPlayerInRangeOfPoint(playerid, 10, 1733.1107,506.8286,28.9694))
	{
		if ((newkeys & KEY_HORN ) && !(oldkeys & KEY_HORN ))
		{
	 	MoveObject(cancelas[4], 1738.09, 509.31, 28.57, 5.5, 0.00, 0.00, -20.00);//portão da direita
  	 	SetTimer("GateClose4", 6000, 0);
   	 	SendClientMessage(playerid, COLOR_BLUE,"{FF0000}[PEDAGIO]{FFFFFF} Pedagio pago {FF0000}50$ {FFFFFF}tenha uma boa viagem e dirija com cuidado.");
     	GivePlayerGrana(playerid,-50);
		}
 		return 1;
 	}
//////////////////////////////////////////////////////////////////////////////////////////////////////////
	if(IsPlayerInRangeOfPoint(playerid, 10,	1737.4161,518.6452,28.1503))
	{
		if ((newkeys & KEY_HORN ) && !(oldkeys & KEY_HORN ))
		{
	 	MoveObject(cancelas[3],1731.04, 511.49, 28.48, 5.5, 0.00, 0.00, -20.00);//portão da esquerda
  	 	SetTimer("GateClose3", 60000, 0);
   	 	SendClientMessage(playerid, COLOR_BLUE,"{FF0000}[PEDAGIO]{FFFFFF} Pedagio pago {FF0000}50$ {FFFFFF}tenha uma boa viagem e dirija com cuidado.");
     	GivePlayerGrana(playerid,-50);
		}
 		return 1;
	}


	if(newkeys == KEY_SECONDARY_ATTACK && IsPlayerInRangeOfPoint(playerid, 2.0, 250.7371,63.4540,1003.6406))
	{
		new count = 0, msg[1000];

		SendClientMessage(playerid, 0x008000AA, "{FFFFFF}Jogadores {FF0000}Presos");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && preso[i])
			{
				format(msg,sizeof(msg), "%s (ID: %d)", GetPlayerNameEx(i), i);
				SendClientMessage(playerid, 0x0088CAAA, msg);
				count++;
			}
		}
		if(count == 0)
		{
			SendClientMessage(playerid, 0xFF0000AA, "Ninguém online está preso!");
		}
		return 1;
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 217.6061, -5.2586, 1001.2109))
	{
		SendClientMessage(playerid, 0x6495EDAA, "================ Loja de Roupas ================");
		SendClientMessage(playerid, COLOR_WHITE, "Digite a skin e clique em comprar, cada skin custa $50.");
		SendClientMessage(playerid, VERMELHO, "ATENÇÃO COM O ID DA SKIN, USE ID's DE: 1 a 298.");
		SendClientMessage(playerid, 0x6495EDAA, "================ Loja de roupas ================");
		ShowPlayerDialog(playerid, SkinType, DIALOG_STYLE_LIST, "Skins", "Ver opções de skins\nDigitar o ID de uma skin", "Ok", "Sair");
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 207.0640, -129.7776, 1003.5078))
	{
		SendClientMessage(playerid, 0x6495EDAA, "================ Loja de Roupas ================");
		SendClientMessage(playerid, COLOR_WHITE, "Digite a skin e clique em comprar, cada skin custa $50.");
		SendClientMessage(playerid, VERMELHO, "ATENÇÃO COM O ID DA SKIN, USE ID's DE: 1 a 298.");
		SendClientMessage(playerid, 0x6495EDAA, "================ Loja de roupas ================");
		ShowPlayerDialog(playerid, SkinType, DIALOG_STYLE_LIST, "Skins", "Ver opções de skins\nDigitar o ID de uma skin", "Ok", "Sair");
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 207.6851, -100.7055, 1005.2578))
	{
		SendClientMessage(playerid, 0x6495EDAA, "================ Loja de Roupas ================");
		SendClientMessage(playerid, COLOR_WHITE, "Digite a skin e clique em comprar, cada skin custa $50.");
		SendClientMessage(playerid, VERMELHO, "ATENÇÃO COM O ID DA SKIN, USE ID's DE: 1 a 298.");
		SendClientMessage(playerid, 0x6495EDAA, "================ Loja de roupas ================");
		ShowPlayerDialog(playerid, SkinType, DIALOG_STYLE_LIST, "Skins", "Ver opções de skins\nDigitar o ID de uma skin", "Ok", "Sair");
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 1289.4828,-1867.9094,13.6020))
	{
		format(STRX, sizeof(STRX), "Ajuda Level\nAjuda Caixa\nAjuda Cash\nAjuda Casa\nAjuda Empresa\nAjuda Radar\nAjuda Clan\nAjuda Portao");
		ShowPlayerDialog(playerid, ajudalist, DIALOG_STYLE_LIST, "Algumas Duvidas ", STRX, "OK", "Cancelar");
		return 1;
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 1289.6373,-1875.4091,13.6020))  //creditos
	{
		new strcmd[1000];

		strcat(strcmd, "{33FF33}» Dono/Fundador {FFFFFF} {3399FF}Ruighost\n", sizeof(strcmd));
        strcat(strcmd, "{33FF33}» Sub-Dono {FFFFFF} {3399FF}Não Defenido\n", sizeof(strcmd));
        strcat(strcmd, "{33FF33}» Scripter {FFFFFF} {3399FF}Não Defenido\n", sizeof(strcmd));
        strcat(strcmd, "{33FF33}» Mapper {FFFFFF} {3399FF}Não Defenido\n", sizeof(strcmd));
        strcat(strcmd, "{33FF33}» Discord {FFFFFF} {3399FF}https://discord.gg/CMFBNJ8UgD\n", sizeof(strcmd));
        strcat(strcmd, "{33FF33}» Site {FFFFFF} {3399FF}Em construção\n", sizeof(strcmd));
        strcat(strcmd, "{33FF33}» YouTube {FFFFFF} {3399FF}https://youtube.com/@BrasilSemLimites_\n", sizeof(strcmd));
        strcat(strcmd, "{33FF33}» TikTok {FFFFFF} {3399FF}Em construção\n", sizeof(strcmd));


		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Créditos do Servidor", strcmd, "OK", "");
		return 1;
    }

    if(newkeys == 8)
	{
		if(AFK[playerid] == 1)
		{
			AFK[playerid] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			TogglePlayerControllable(playerid, 1);

			TextDrawHideForPlayer(playerid, AfkText);
			TextDrawHideForPlayer(playerid, AfkBackText);

			format(string, sizeof(string), "{ffffff}%s {FF0040}Está de volta ao jogo{ffffff}!", GetPlayerNameEx(playerid));
			SendClientMessageToAll(0x2BFF95AA, string);
		}
		return 1;
	}

	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 363.1501, 173.5224, 1008.3828))
	{
		ShowPlayerDialog(playerid, menuprof, DIALOG_STYLE_LIST, "{FFFFFF}Profissões", "{33AAFF}Classe Baixa\n{9ACD32}Classe Média\n{FFA500}Classe Alta\n{FFFF00}Criminosas\n{FFFFFF}Funcionários Públicos\n{BDBD33}Funcionários Industriais\n{2200FF}Organizadores\n{CEFF00}Exército\n{00FF00}Especiais\n{FFFFFF}Torcidas\n{FFFFFF}Torcidas2\n{FF0000}Heróis\n{298A08}Classe Nova\n{FF0000}[TOPPER/MASTER] Classe Extrema\n{1E90FF}[TOPPER/MASTER] Classe Extrema II", "OK", "Voltar");
		return 1;
	}
	
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 1219.2466,-1811.7041,16.6199))
	{
		GameTextForPlayer(playerid, "~r~Faculdade", 5000, 6);
		format(string, sizeof(string), "{FFFFFF}Olá senhor {FFFF00}%s {ffffff}aqui você terá "#TEMPO_ESTUDO" minutos de estudo.\n{FFFFFF}A mensalidade para estudar é $500!\n{ffff00}Bons Estudos!", GetPlayerNameEx(playerid));
		ShowPlayerDialog(playerid, Faculdade, DIALOG_STYLE_MSGBOX, "Estudo", string, "Estudar", "Cancelar");
		return 1;
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 312.3051, -165.6246, 999.6010))
	{
		GameTextForPlayer(playerid, "~r~Menu de Armas", 5000, 6);
		ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Ammu Nation", "{FFFF00}9mm $149,00\n{9955DE}9mm Silenciada $169,00\n{FF0000}Deagle $349,00\n{99FFFF}Mac-10 $399,00\n{FFFFFF}MP5 $389,00\n{16EB43}AK-47 $699,00\n{C0C0C0}M4 $749,00\n{ff0000}Sniper $999,00\n{33AAFF}Shotgun $489,00\n{BDBD33}Sawnoff$499,00\n{2200FF}Combat$499,00\n{CEFF00}Chainsaw $1200,00\n{CEFF00}Granada de Gás $1500,00\n{CEFF00}Molotov $1500,00\n{298A08}Paraquedas $4000,00\n{FF0000}Flamethrower $5000,00", "OK", "Cancelar");
		return 1;
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 313.8173, -133.7504, 999.6016))
	{
		GameTextForPlayer(playerid, "~r~Menu de Armas", 5000, 6);
		ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Ammu Nation", "{FFFF00}9mm $149,00\n{9955DE}9mm Silenciada $169,00\n{FF0000}Deagle $349,00\n{99FFFF}Mac-10 $399,00\n{FFFFFF}MP5 $389,00\n{16EB43}AK-47 $699,00\n{C0C0C0}M4 $749,00\n{ff0000}Sniper $999,00\n{33AAFF}Shotgun $489,00\n{BDBD33}Sawnoff $499,00\n{2200FF}Combat$499,00\n{CEFF00}Chainsaw $1200,00\n{CEFF00}Granada de Gás $1500,00\n{CEFF00}Molotov $1500,00\n{298A08}Paraquedas $4000,00\n{FF0000}Flamethrower $5000,00", "OK", "Cancelar");
		return 1;
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 135.3619,1713.7705,1000.0667))
	{
		ShowPlayerDialog(playerid, lote, DIALOG_STYLE_LIST, "Multas", "Multas", "OK", "Cancelar");
		return 1;
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 1342.7427, -1763.8678, 13.5674))
	{
		SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}Bem Vindo(a) a loja de utilidades.");
		SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Escolha o produto que deseja e clique em '{9370DB}COMPRAR{FFFFFF}'.");
		ShowPlayerDialog(playerid, lojautilidades, DIALOG_STYLE_LIST, "Loja", STRD_UTILIDADES, "Comprar", "Cancelar");
		return 1;
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 248.7789, 69.1560, 1003.6406))
	{
		SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}Olá, Seja Bem-Vindo(a) a Delegacia de {9370DB}LS{FFFFFF}!");
		SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Escolha o serviço desejado e clique em '{9370DB}Comprar{FFFFFF}'.");
		ShowPlayerDialog(playerid, DP, DIALOG_STYLE_LIST, "Delegacia", STRD_DP, "Comprar", "Cancelar");
		return 1;
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 248.7789, 69.1560, 1003.6406))
	{
		SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}Olá, Seja Bem-Vindo(a) a Delegacia de {9370DB}LS{FFFFFF}!");
		SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Escolha o serviço desejado e clique em '{9370DB}Comprar{FFFFFF}'.");
		ShowPlayerDialog(playerid, DP, DIALOG_STYLE_LIST, "Delegacia", STRD_DP, "Comprar", "Cancelar");
		return 1;
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 1805.1637,-1773.3004,13.5469)) // conce terrestre
	{
		ShowPlayerDialog(playerid, AJUDACONCE, DIALOG_STYLE_LIST, "Oque voce deseja fazer?","{FFFFFF}Comprar um carro\nVer os preços","Selecionar","Cancelar");
		return 1;
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 1114.9344,-1769.6338,14.6385)) // conce bike
	{
		SendClientMessage(playerid, 0x6495EDAA, "======================== Bikes ========================");
		SendClientMessage(playerid, COLOR_WHITE, "Bem vindo a loja de Bicicletas!");
		SendClientMessage(playerid, 0x6495EDAA, "======================== Bikes ========================");
		ShowPlayerDialog(playerid, lojabike, DIALOG_STYLE_LIST, "{FF0000}Compre sua Bike ( Nome / Preço )", "{FFFFFF}BMX/1200\n{FFFFFF}Bike/1200\n{FFFFFF}Mountain Bike/1200", "Comprar", "Sair");
		return 1;
	}
	// fim conce bikes
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 151.1001,-1601.2192,13.8220)) // Conce barcos
	{
		SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}========================== Conce de barcos ==============================");
		SendClientMessage(playerid, COLOR_WHITE, "Após comprar o seu veiculo aquático, ele será levado para a agua");
		SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}========================== Conce de barcos ==============================");
		ShowModelSelectionMenu(playerid, boatlist, "Concessionaria");
		return 1;
	}
	
	/* 
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 1300.4492,-1864.7468,13.5668))
	{
		format(STRX, sizeof(STRX), "Caixa Avançada\nCaixa basica\nCaixa Diaria\nCaixa de Novato");
		ShowPlayerDialog(playerid, sistcaixa, DIALOG_STYLE_LIST, "Caixas", STRX, "OK", "Cancelar");
		return 1;
	}
	*/

	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 2217.4761,-1147.2814,1025.7969))
	{
		ShowPlayerDialog(playerid, menubco, DIALOG_STYLE_LIST, "{FF0000}Loja Cash", "{FF6600}Comprar Dias Vip\n{FF6600}Comprar Level\n{FF6600}Comprar Estudo\n{FF6600}Caixa Basica\n{FF6600}Caixa Avançada\n{FFFFFF}[TOPPER]{FF6600}Comprar Level\n{FFFFFF}[TOPPER]{FF6600}Comprar Estudo", "OK", "Voltar");
		return 1;
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 822.0115, 1.8573, 1004.1797))
	{
	    new file[128];
	    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
        if(DOF2_GetInt(file, "ContaBancaria") == 0)
		{
			DOF2_SetInt(file, "ContaBancaria", 1);

			format(string, sizeof(string), "{9955DE}O(A) Jogador(a) {FFFFFF}%s {9955DE}abriu uma conta bancaria no {ffffff}/banco", GetPlayerNameEx(playerid));
			SendClientMessageToAll(roxo, string);
			SelectTextDraw(playerid, 0xFF0000FF);
            for(new i = 0; i < sizeof(Banco); i++) TextDrawShowForPlayer(playerid, Banco[i]);
		}
		else
		{
		    SelectTextDraw(playerid, 0xFF0000FF);
            for(new i = 0; i < sizeof(Banco); i++) TextDrawShowForPlayer(playerid, Banco[i]);
		}
		return 1;
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 325.2503, 307.0072, 999.1484))
	{
		SendClientMessage(playerid, 0x6495EDAA, "{FFFFFF}Olá, Seja Bem-Vindo(a) a Delegacia de {9370DB}LS{FFFFFF}!");
		SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Escolha o serviço desejado e clique em '{9370DB}Comprar{FFFFFF}'.");
		ShowPlayerDialog(playerid, DP, DIALOG_STYLE_LIST, "Delegacia", "{33AA33}Carteira Terrestre $500\n{FFFF00}Carteira Aérea $550\n{FF6600}Carteira Náutica $550\n{FF0000}Carteira de Trabalho $150\n{FFFFFF}Porte de Armas $5000\n{0000FF}Limpar Ficha $1000", "Comprar", "Cancelar");
		return 1;
	}
	if (newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 5.0, 1366.11, -1765.25, 13.56))
	{
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    
    new welcomeText[128];
    format(welcomeText, sizeof(welcomeText), "Bem-vindo ao Cartório, %s", name);
    SendClientMessage(playerid, -1, welcomeText);
    SendClientMessage(playerid, -1, "[Atenção]: Escolha uma das opções abaixo para continuar.");

    new dialog[256];
    strcat(dialog, "Licença de Casamento\n");
    strcat(dialog, "Carteira de Trabalho");

    ShowPlayerDialog(playerid, CARTORIO, DIALOG_STYLE_LIST, "Cartório", dialog, "Comprar", "Cancelar");
    return 1;
	}
	if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, -2160.3662, 640.9449, 1052.3817))
	{
		SendClientMessage(playerid, Azul, "{FFFFFF}Bem Vindo(a) a auto escola.");
		SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}{FFFFFF}Escolha o Serviço desejado e clique em comprar.");
		ShowPlayerDialog(playerid, DETRAN, DIALOG_STYLE_LIST, "{FFFFFF}Auto-Escola » {228B22}Valor", "{FFFFFF}Habilitação Terrestre » {228B22}$500\n{FFFFFF}Habilitação Aérea » {228B22}$3000 \n{FFFFFF}Habilitação Náutica » {228B22}$800", "Comprar", "Cancelar");
		return 1;
	}
    if(newkeys == KEY_YES && IsPlayerInRangeOfPoint(playerid, 2.0, 1198.7941,-1769.0587,13.5847))
	{
		ShowPlayerDialog(playerid, hacker, DIALOG_STYLE_LIST, "{33AAFF}Hacker", "{00FF00}Hackear Grana\n{00FFFF}Hackear Nivel\n{FF0000}Hackear Cash\n", "OK", "Cancelar");
		return 1;
	}

	if(IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid) || pAdmin[playerid] == 1 || pAdmin[playerid] == 2 || pAdmin[playerid] == 3 || pAdmin[playerid] == 4 || pAdmin[playerid] == 5 || pAdmin[playerid] == 6 || pAdmin[playerid] == 7)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			new var0 = GetPlayerVehicleID(playerid);
			if(function218(var0) && (oldkeys & 1 || oldkeys & 4))
			{
			    if(NaCorrida[playerid] == true) RemoveVehicleComponent(var0, 1010);
				else RemoveVehicleComponent(var0, 1010), AddVehicleComponent(var0, 1010);
			}
		}
	}

	if(newkeys == KEY_SECONDARY_ATTACK && incar[playerid] == 1)
	{
		incar[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
		RemovePlayerFromVehicle(playerid);
	}
	if(newkeys == KEY_SECONDARY_ATTACK && naemp[playerid] == 1)
	{
		naemp[playerid] = 0;
		SetPlayerPos(playerid, EmpX[playerid], EmpY[playerid], EmpZ[playerid]);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você saiu da empresa.");
	}

	for(new Emp = 0; Emp < MAX_Emp; Emp++)
	{
		format(string, sizeof(string), PASTA_Emp, Emp);
		if(newkeys == KEY_WALK && IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
		{
			GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
			if(strcmp(DOF2_GetString(string, "Dono"), pname, false) == 0 || PlayerInfo[playerid][SCON] == true)
			{
				if(DOF2_GetInt(string, "Trancada") == 1)
				{
					DOF2_SetInt(string, "Trancada", 0);
					SendClientMessage(playerid, 0x6495EDAA, "Empresa destrancada!");
				}
				if(DOF2_GetInt(string, "Trancada") == 0)
				{
					DOF2_SetInt(string, "Trancada", 1);
					SendClientMessage(playerid, 0x6495EDAA, "Empresa trancada!");
				}
			}
		}

		if(newkeys == KEY_SECONDARY_ATTACK && IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
		{
			new file[128];
			format(file, sizeof(file), PASTA_Emp, Emp);
			if(DOF2_FileExists(file))
			{
			if(DOF2_GetInt(file, "SInt") == 1)
			{
				if(DOF2_GetInt(string, "Trancada") == 1)
				{
					GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
					format(file, sizeof(file), PASTA_Emp, Emp);
					if(strcmp(DOF2_GetString(string, "Dono"), pname, false) == 0 || PlayerInfo[playerid][SCON] == true)
					{
						DOF2_SetInt(file, "SaldoEmpresa", DOF2_GetInt(file, "SaldoEmpresa")+DOF2_GetInt(file, "Entrada"));
						GivePlayerGrana(playerid, -DOF2_GetInt(string, "Entrada"));
						SetPlayerPos(playerid, DOF2_GetFloat(string, "PosXs"), DOF2_GetFloat(string, "PosYs"), DOF2_GetFloat(string, "PosZs"));
						new Float:X, Float:Y, Float:Z;
						GetPlayerPos(playerid, X, Y, Z);
						EmpX[playerid] = X;
						EmpY[playerid] = Y;
						EmpZ[playerid] = Z;
						naemp[playerid] = 1;
						SetPlayerInterior(playerid, DOF2_GetInt(string, "Int"));
						SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você entrou na empresa para sair use ENTER.");
					}

				}
				else
				{
					if(GetPlayerGrana(playerid) >= DOF2_GetInt(string, "Entrada"))
					{
						format(file, sizeof(file), PASTA_Emp, Emp);
						if(DOF2_FileExists(file))
						{
							SetPlayerPos(playerid, DOF2_GetFloat(string, "PosXs"), DOF2_GetFloat(string, "PosYs"), DOF2_GetFloat(string, "PosZs"));
							DOF2_SetInt(file, "SaldoEmpresa", DOF2_GetInt(file, "SaldoEmpresa")+DOF2_GetInt(file, "Entrada"));
							GivePlayerGrana(playerid, -DOF2_GetInt(string, "Entrada"));
							new Float:X, Float:Y, Float:Z;
							GetPlayerPos(playerid, X, Y, Z);
							EmpX[playerid] = X;
							EmpY[playerid] = Y;
							EmpZ[playerid] = Z;
							naemp[playerid] = 1;
							SetPlayerInterior(playerid, DOF2_GetInt(string, "Int"));
							SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você entrou na empresa para sair use ENTER.");
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Esta Empresa não tem interior.");
			}
			}
		}
	}
	
	#if defined MissilesUser
	VM_OnPlayerKeyStateChange(playerid, newkeys);
	#endif
	
    // ================================ Anim Loops =====================================
	#if defined AnimLoopsUser
	if(gPlayerUsingLoopingAnim[playerid] == 1)
	{
		if(IsKeyJustDown(KEY_SPRINT, newkeys, oldkeys))
		{
			ClearAnimations(playerid);
			StopLoopingAnim(playerid);
			SendClientMessage(playerid, Blue, "Você parou o anime!");
		}
	}
	#endif
	// =================================================================================

	if(pAdmin[playerid] == 1 || pAdmin[playerid] == 2 || pAdmin[playerid] == 3 || pAdmin[playerid] == 4 || pAdmin[playerid] == 5 || pAdmin[playerid] == 6 || pAdmin[playerid] == 7)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			new var0 = GetPlayerVehicleID(playerid);
			if(function218(var0) && (oldkeys & 1 || oldkeys & 4))
			{
				RemoveVehicleComponent(var0, 1010);
				AddVehicleComponent(var0, 1010);
			}
		}
	}

	if(newkeys == KEY_SECONDARY_ATTACK && incar[playerid] == 1)
	{
		incar[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
		RemovePlayerFromVehicle(playerid);
	}

	if(newkeys == KEY_SECONDARY_ATTACK && emcasa[playerid] == 1)
	{
		emcasa[playerid] = 0;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, CasaX[playerid], CasaY[playerid], CasaZ[playerid]);

		TogglePlayerControllable(playerid, false);
		SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);

		SendClientMessage(playerid, Vermelho, "Você saiu da casa.");
	}

	for(new c = 0; c < MAX_CASAS; c++)
	{
		format(string, sizeof(string), PASTA_CASAS, c);
		if(newkeys == KEY_WALK && IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
		{
			GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
			if(strcmp(DOF2_GetString(string, "Dono"), pname, false) == 0 || PlayerInfo[playerid][SCON] == true)
			{
				if(DOF2_GetInt(string, "Trancada") == 1)
				{
					DOF2_SetInt(string, "Trancada", 0);
					SendClientMessage(playerid, 0x6495EDAA, "Casa destrancada!");
				}
				else
				{
					if(DOF2_GetInt(string, "Trancada") == 0)
					{
						DOF2_SetInt(string, "Trancada", 1);
						SendClientMessage(playerid, 0x6495EDAA, "Casa trancada!");
					}
				}
			}
		}
		if(newkeys == KEY_SECONDARY_ATTACK && IsPlayerInRangeOfPoint(playerid, 2.0, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ")))
		{
			if(DOF2_GetInt(string, "Trancada") == 1)
			{
				GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
				if(strcmp(DOF2_GetString(string, "Dono"), pname, false) == 0 || PlayerInfo[playerid][SCON] == true)
				{
					new strx[256];
					format(strx, sizeof(strx), PASTA_Int, DOF2_GetInt(string, "Int"));
					if(DOF2_FileExists(strx))
					{
						new Float:X, Float:Y, Float:Z;
						GetPlayerPos(playerid, X, Y, Z);
						CasaX[playerid] = X;
						CasaY[playerid] = Y;
						CasaZ[playerid] = Z;
						emcasa[playerid] = 1;
						SetPlayerVirtualWorld(playerid, c);
						SetPlayerInterior(playerid, DOF2_GetInt(strx, "Int"));
						SetPlayerPos(playerid, DOF2_GetFloat(strx, "EX"), DOF2_GetFloat(strx, "EY"), DOF2_GetFloat(strx, "EZ"));

						TogglePlayerControllable(playerid, false);
						SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);

						SendClientMessage(playerid, Vermelho, "Você entrou na casa para sair use ENTER.");
					}
				}
			}
			else
			{
				new strx[256];
				format(strx, sizeof(strx), PASTA_Int, DOF2_GetInt(string, "Int"));
				if(DOF2_FileExists(strx))
				{
					new Float:X, Float:Y, Float:Z;
					GetPlayerPos(playerid, X, Y, Z);
					CasaX[playerid] = X;
					CasaY[playerid] = Y;
					CasaZ[playerid] = Z;
					emcasa[playerid] = 1;
					SetPlayerVirtualWorld(playerid, c);
					SetPlayerInterior(playerid, DOF2_GetInt(strx, "Int"));
					SetPlayerPos(playerid, DOF2_GetFloat(strx, "EX"), DOF2_GetFloat(strx, "EY"), DOF2_GetFloat(strx, "EZ"));

					TogglePlayerControllable(playerid, false);
					SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);

					SendClientMessage(playerid, Vermelho, "Você entrou na casa para sair use ENTER.");
				}
			}
		}
	}

	if(pAdmin[playerid] == 3 || pAdmin[playerid] == 4 || pAdmin[playerid] == 5 || pAdmin[playerid] == 6 || pAdmin[playerid] == 7)
	{
		new Float:px,
			Float:py,
			Float:pz,
			Float:paa;

		if(newkeys == KEY_SECONDARY_ATTACK && amod[playerid] == 1) // Enter
		{
			GetPlayerFacingAngle(playerid, paa);
			if(paa >= 0.0 && paa <= 22.5)		  // n1
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px, py+20, pz);
			}
			if(paa >= 332.5)					  // n2
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px, py+20, pz);
			}
			if(paa >= 22.5 && paa <= 67.5)		  // nw
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px-10, py+10, pz);
			}
			if(paa >= 67.5 && paa <= 112.5)		  // w
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px-20, py, pz);
			}
			if(paa >= 112.5 && paa <= 157.5)	  // sw
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px-10, py-10, pz);
			}
			if(paa >= 157.5 && paa <= 202.5)	  // s
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px, py-20, pz);
			}
			if(paa >= 202.5 && paa <= 247.5)	  // se
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px+10, py-10, pz);
			}
			if(paa >= 247.5 && paa <= 292.5)	  // e
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px+20, py, pz);
			}
			if(paa >= 292.5 && paa <= 332.5)	  // e
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px+10, py+10, pz);
			}
		}

		if(newkeys == KEY_YES && amod[playerid] == 1) // Y
		{
			GetPlayerFacingAngle(playerid, paa);
			if(paa >= 0.0 && paa <= 22.5)		  // n1
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px, py+2, pz);
			}
			if(paa >= 332.5)					  // n2
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px, py+2, pz);
			}
			if(paa >= 22.5 && paa <= 67.5)		  // nw
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px-1, py+1, pz);
			}
			if(paa >= 67.5 && paa <= 112.5)		  // w
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px-2, py, pz);
			}
			if(paa >= 112.5 && paa <= 157.5)	  // sw
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px-1, py-1, pz);
			}
			if(paa >= 157.5 && paa <= 202.5)	  // s
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px, py-2, pz);
			}
			if(paa >= 202.5 && paa <= 247.5)	  // se
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px+1, py-1, pz);
			}
			if(paa >= 247.5 && paa <= 292.5)	  // e
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px+2, py, pz);
			}
			if(paa >= 292.5 && paa <= 332.5)	  // e
			{
				GetPlayerPos(playerid, px, py, pz);
				SetPlayerPos(playerid, px+1, py+1, pz);
			}
		}

		if(newkeys == KEY_SPRINT && amod[playerid] == 1) // Espaço
		{
			GetPlayerPos(playerid, px, py, pz);
			SetPlayerPos(playerid, px, py, pz+5);
		}

		if(newkeys == KEY_WALK && amod[playerid] == 1) // Alt
		{
			if(gmod[playerid] == 0)
			{
				gmod[playerid] = 1;
				SetPlayerHealth(playerid, 999999.0);
				SendClientMessage(playerid, 0x0016DDFF, "Godmod: ATIVADO");
			}
			else
			{
				if(gmod[playerid] == 1)
				{
					gmod[playerid] = 0;
					SetPlayerHealth(playerid, 100.0);
					SendClientMessage(playerid, 0x0016DDFF, "Godmod: DESATIVADO");
				}
			}
		}
	}

	#if defined CameraUser
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && newkeys & KEY_YES)
	{
		if(VeiculoValido[GetPlayerVehicleID(playerid)] == 1)
		{
			if(NovaCamera[playerid] == 0)
			{
				GameTextForPlayer(playerid, "~w~camera~g~ ligada", 5000, 6);
				AttachCameraToDynamicObject(playerid, ObjetoCarro[GetPlayerVehicleID(playerid)]);
				NovaCamera[playerid] = 1;
			}
			else if(NovaCamera[playerid] == 1)
			{
				GameTextForPlayer(playerid, "~w~camera~r~ desligada", 5000, 6);
				SetCameraBehindPlayer(playerid);
				NovaCamera[playerid] = 0;

			}
		}
		else
		{
			SendClientMessage(playerid, 0xFF0000, "Este veículo ainda não suporta câmera em 1ª pessoa.");
		}
	}
	#endif

	return 1;
}

function218(arg0)
{
	new var0 = GetVehicleModel(arg0);
	switch(var0)
	{
		case 444:
			return 0;
		case 581:
			return 0;
		case 586:
			return 0;
		case 481:
			return 0;
		case 509:
			return 0;
		case 446:
			return 0;
		case 556:
			return 0;
		case 443:
			return 0;
		case 452:
			return 0;
		case 453:
			return 0;
		case 454:
			return 0;
		case 472:
			return 0;
		case 473:
			return 0;
		case 484:
			return 0;
		case 493:
			return 0;
		case 595:
			return 0;
		case 462:
			return 0;
		case 463:
			return 0;
		case 468:
			return 0;
		case 521:
			return 0;
		case 522:
			return 0;
		case 417:
			return 0;
		case 425:
			return 0;
		case 447:
			return 0;
		case 487:
			return 0;
		case 488:
			return 0;
		case 497:
			return 0;
		case 501:
			return 0;
		case 548:
			return 0;
		case 563:
			return 0;
		case 406:
			return 0;
		case 520:
			return 0;
		case 539:
			return 0;
		case 553:
			return 0;
		case 557:
			return 0;
		case 573:
			return 0;
		case 460:
			return 0;
		case 593:
			return 0;
		case 464:
			return 0;
		case 476:
			return 0;
		case 511:
			return 0;
		case 512:
			return 0;
		case 577:
			return 0;
		case 592:
			return 0;
		case 471:
			return 0;
		case 448:
			return 0;
		case 461:
			return 0;
		case 523:
			return 0;
		case 510:
			return 0;
		case 430:
			return 0;
		case 465:
			return 0;
		case 469:
			return 0;
		case 513:
			return 0;
		case 519:
			return 0;
	}
	return 1;
}

forward fecharcova(playerid);
public fecharcova(playerid)
{
MoveObject(coveiro, 889.15906, -1077.77966, 23.19150, 4);// Posição do portão fechado.
return 1;
}

forward portaob(playerid);
public portaob(playerid)
{
	new file[128];
	for(new p = 0; p < MAX_PORTOES; p++)
	{
		format(file, sizeof(file), PASTA_PORTOES, p);
		{
	    	if(!IsPlayerInRangeOfPoint(playerid, 50.0, DOF2_GetFloat(file, "aCordX"), DOF2_GetFloat(file, "aCordY"), DOF2_GetFloat(file, "aCordZ")))
	    	{
			}
			else
			{
				if(strcmp(DOF2_GetString(file, "Dono"), GetPlayerNameEx(playerid), false) == 0 || strcmp(DOF2_GetString(file, "Convidado1"), GetPlayerNameEx(playerid), false) == 0 || strcmp(DOF2_GetString(file, "Convidado2"), GetPlayerNameEx(playerid), false) == 0 || strcmp(DOF2_GetString(file, "Convidado3"), GetPlayerNameEx(playerid), false) == 0 || pAdmin[playerid] > 2)
		    	{
	    			MoveDynamicObject(DOF2_GetInt(file, "Id"), DOF2_GetFloat(file, "fCordX"), DOF2_GetFloat(file, "fCordY"), DOF2_GetFloat(file, "fCordZ"), 4.0);
				}
			}
		}
  	}
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	new file[128];
	format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
	if(clickedid == Registro[5] )
	{
		if(PlayerInfo[playerid][Logged] == 0)
		{
			if(DOF2_FileExists(file))
			{
				SendClientMessage(playerid, COR_AVISO, "| AVISO | Atenção Você ja tem uma Conta, Clique em Logar para Logar.");
			}
			else
			{
				format(STRX, sizeof(STRX), "{FFFFFF}Nick: {FF0000}%s\n{FFFFFF}Conta: {FF0000}não registrada\n\n{FFFFFF}Registre-se, digite sua senha:", GetPlayerNameEx(playerid));
				ShowPlayerDialog(playerid, REGISTRO, DIALOG_STYLE_PASSWORD, "Brasil Vida da Loucura", STRX, "Registrar", "Sair");
			}
		}
	}
	if(clickedid == Registro[6])
	{
		if(PlayerInfo[playerid][Logged] == 0)
		{
			if(DOF2_FileExists(file))
			{
				format(STRX, sizeof(STRX), "{FFFFFF}Nick: {FF0000}%s\n{FFFFFF}Conta: {FF0000}registrada\n\n{FFFFFF}Logue-se, digite sua senha:", GetPlayerNameEx(playerid));
				ShowPlayerDialog(playerid, LOGIN, DIALOG_STYLE_PASSWORD, "Brasil Vida da Loucura", STRX, "Logar", "Sair");
			}
			else
			{
				SendClientMessage(playerid, COR_AVISO, "| AVISO | Atenção Você não tem uma Conta, Clique em Registrar para Registrar.");
			}
		}
	}
	if(clickedid == Registro[7])
	{
		new strcmd[1000];

 		strcat(strcmd, "{FFFF00}Brasil {FFFFFF}Vida da {337EFF} Loucura\n");
		strcat(strcmd, "{FFFFFF}Mais informações sobre o servidor:\n\n");

		strcat(strcmd, "{337EFF}x {FFFFFF}Este é um servidor RPG onde você terá que se comportar como se fosse sua segunda vida\n");
        strcat(strcmd, "{337EFF}x {FFFFFF}Neste servidor você pode ter casa, carros, empresas e muito mais bens materiais\n");
		strcat(strcmd, "{337EFF}x {FFFFFF}Neste servidor tem vários sistemas inovadores para você se divertir com seus amigos\n");
		strcat(strcmd, "{337EFF}x {FFFFFF}Aqui a diversão é sem limites, você pode roubar caixas eletronicos, eventos e muito mais !\n");
		strcat(strcmd, "{337EFF}x {FFFFFF}Temos uma staff preparada para te ajudar, caso tenha duvidas, chame um admin ou Helper usando /relatorio\n\n");

		strcat(strcmd, "{337EFF} Para mais informações acesse nosso fórum: {FFFF00}http://bvlrpgsamp.x10.bz");
		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "{FFFFFF}Brasil Vida da Loucura: Informações+", strcmd, "Informado","");
	}
	if(clickedid == Registro[8])
	{
		format(STRX, sizeof(STRX), "{FF0000}O(a) {FFFFFF}%s {FF0000}foi kickado(a). {FF0000}Motivo: {FFFFFF}Não registrou/logou.", GetPlayerNameEx(playerid));
		SendClientMessageToAll(Amarelo, STRX);
		KickLog(STRX);
		Kick(playerid);
	}
	if(clickedid == Registro[9])
	{
        ShowPlayerDialog(playerid, 8724, DIALOG_STYLE_MSGBOX, "Site do: {FFFF00}Brasil Vida da Loucura", "Entre em nosso site: {FFFF00}http://bvlrpgsamp.x10.bz", "Informado","");
	}
	if(clickedid == Registro[10])
	{
        new strcmd[1000];

		strcat(strcmd, "{33AAFF}1ª Não insulte os administradores! eles estão aqui para lhe ajudar!\n", sizeof(strcmd));
		strcat(strcmd, "{FFA500}2ª Não use nenhum tipo de hacker/cheat pois é proibido! Viu hacker? /relatorio\n", sizeof(strcmd));
		strcat(strcmd, "{33AAFF}3ª Não abuse de comandos existentes nas profissões.\n", sizeof(strcmd));
		strcat(strcmd, "{FFA500}4ª Caso descumpra uma regra vital poderá ser banido.\n", sizeof(strcmd));
		strcat(strcmd, "{33AAFF}5ª Seja honesto e jogue limpo conosco.\n", sizeof(strcmd));
		strcat(strcmd, "{FFA500}6ª Os gerentes escolhem os administradores, por tanto não peça!\n", sizeof(strcmd));
		strcat(strcmd, "{33AAFF}7ª Não peça nenhum tipo de itens como: Level, Grana, VIP, Admin, Estudo e Cash.\n", sizeof(strcmd));
		strcat(strcmd, "{FFA500}8ª Lembre-se o servidor é um RPG, não mata-mata\n", sizeof(strcmd));
		strcat(strcmd, "{33AAFF}9ª Faça DM apenas em áreas específicas tais como: /favela e /maracana\n", sizeof(strcmd));
		strcat(strcmd, "{FFA500}10ª Caso precise de ajuda, use: /relatorio\n", sizeof(strcmd));

		ShowPlayerDialog(playerid, Regras, DIALOG_STYLE_MSGBOX, "Regras do BVL", strcmd, "Aceitar", "");
		return 1;
	}
	if(clickedid == Registro[12])
	{
       	new strcmd[1000];

        strcat(strcmd, "{9E3EFF}Fundadores: {FFFFFF}Bruno Henrique, Edu Lopes, Victor Ramos, Samu\n");
		strcat(strcmd, "{FF0000}Scripter(s): {FFFFFF}Victor Ramos & Lucas Pauletti\n");
		strcat(strcmd, "{FF0000}Mapper(s): {FFFFFF}Bernardo Felipe\n");
        strcat(strcmd, "{FF0000}Gerente(s): {FFFFFF}Victor Ramos\n");
        strcat(strcmd, "{9E3EFF}Responsável Geral: {FFFFFF}Samuel Bellinazzi");

		ShowPlayerDialog(playerid, playersimp, DIALOG_STYLE_MSGBOX, "Créditos do Servidor", strcmd, "OK", "");
	}
	
	new string[256];
	if(clickedid == Banco[6]) // Saldo
	{
    	format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "ContaBancaria") == 1)
		{
			format(string, sizeof(string), "[SALDO BANCARIO] {FFFFFF}Seu saldo atual é de: {17881B}$%d{FFFFFF}.", DOF2_GetInt(file, "SaldoBancario"));
			SendClientMessage(playerid, 0x6495EDAA, string);
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[BANCO] {FFFFFF}Você não tem uma conta bancária.");
		}
	}
	if(clickedid == Banco[8]) // X sair
	{
		for(new i = 0; i < sizeof(Banco); i++) TextDrawHideForPlayer(playerid, Banco[i]);
		CancelSelectTextDraw(playerid);
	}

    if(clickedid == Banco[2]) ShowPlayerDialog(playerid, sacar, DIALOG_STYLE_INPUT, "BANCO DO BRASIL - SAQUE", "\nPor favor digite a quantia que deseja sacar:\n\n", "Ok", "Cancelar");
    if(clickedid == Banco[3]) ShowPlayerDialog(playerid, depositar, DIALOG_STYLE_INPUT, "BANCO DO BRASIL - DEPÓSITO", "\nPor favor digite a quantia que deseja depositar:\n\n", "Ok", "Cancelar");
    if(clickedid == Banco[4]) // emprestimo
	{
		ShowPlayerDialog(playerid, Emprestimo, DIALOG_STYLE_LIST, "{FFFFFF}Escolha seu Emprestimo - Valor/Level", "{FFFFFF}Emprestimo 80000/50\n{FFFFFF}Emprestimo 160000/100\n{FFFFFF}Emprestimo 230000/150\n{FFFFFF}Pagar Emprestimo", "OK", "Cancelar");
	}
    if(clickedid == Banco[5])
    {
    	format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
		if(DOF2_GetInt(file, "rouboubanco") == 0)
		{
			if(DOF2_GetInt(file, "Profissao") == Assaltante || DOF2_GetInt(file, "aAdmin") == 1 || PlayerInfo[playerid][SCON] == true)
			{
				new Float:x, Float:y, Float:z;

				DOF2_SetInt(file, "Procurado", 1);
				DOF2_SetInt(file, "rouboubanco", 1);
				Procurados[playerid]= 1;

				SetPlayerWantedLevel(playerid, 6);
				GivePlayerGrana(playerid, 10000);

				GetPlayerPos(playerid, x, y, z);
				SetTimerEx("CriarExplosao", 2500, false, "fffdf", x, y, z, 2, 50.0);

				SetPlayerAttachedObject(playerid, 10, 1550, 15, 0.057000, 0.214000, -0.174000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000);
				GameTextForPlayer(playerid, "~w~Assalto Efetuado ~g~+$6000", 1000, 4);
				format(STRX, sizeof(STRX), "{FFFF00}[{FFFFFF}CAMÊRA{FFFF00}] {FFFFFF}O Bandido {FFFF00}%s{FFFFFF} assaltou o banco e está sendo procurado pela {FF0000}polícia!", GetPlayerNameEx(playerid));
				SendClientMessageToAll(msgdm, STRX);
			}
			else
			{
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Voce não é assaltante!");
			}
		}
		else
		{
			SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você já assaltou o banco aguarde você upar!");
		}
    }
	return 1;
}

public Taxi(playerid)
{
	if(!Taximetro[playerid][0]) return 1;
	if(!IsPlayerConnected(playerid)) return 1;

    if(GetPlayerGrana(playerid) > PrecoCorrida[playerid]+5)
	{
		PrecoCorrida[playerid] = PrecoCorrida[playerid]+5;

		new string[120];
		format(string, sizeof(string), "[COBRANÇA] O Valor a pagar: $%d", PrecoCorrida[playerid]);
		SendClientMessage(playerid, 0xFFFF00AA, string);
		SendClientMessage(Taximetro[playerid][1], COLOR_GREEN, string);
		SetTimerEx("Taxi", 9000, 0, "u", playerid);
		return 1;
	}
	if(GetPlayerGrana(playerid) < PrecoCorrida[playerid]+3)
	{
		PrecoCorrida[playerid] = 0;
		Taximetro[playerid][1] = 0;

		RemovePlayerFromVehicle(playerid);
		GivePlayerGrana(playerid, -PrecoCorrida[playerid]);
		GivePlayerGrana(Taximetro[playerid][1], PrecoCorrida[playerid]);

		SendClientMessage(playerid, Vermelho, "[TAXIMETRO] Você não tem mais dinheiro, e foi expulso do veículo.");
		SendClientMessage(Taximetro[playerid][1], Vermelho, "Seu passageiro ficou sem dinheiro e por isso foi expulso do veiculo.");
		return 1;
	}
	return 0;
}

public CasaLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\r\n", string);
	new File:hFile;
	hFile = fopen("Logs/Casas.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return 1;
}

public PropLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\r\n", string);
	new File:hFile;
	hFile = fopen("Logs/Props.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return 1;
}

public PortaoLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\r\n", string);
	new File:hFile;
	hFile = fopen("Logs/Portoes.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return 1;
}

public SamuGayLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\r\n", string);
	new File:hFile;
	hFile = fopen("Logs/Portoes.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return 1;
}

public KickLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\r\n", string);
	new File:hFile;
	hFile = fopen("Logs/Kicks.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return 1;
}

public GetClosestHospital(playerid)
{
	if(!IsPlayerConnected(playerid))
	{
		return -1;
	}
	new prevhosp;
	new Float:prevdist = 100000.000;
	for(new hospid = 0; hospid < 4; hospid++)
	{
		new Float:dist;
		if(hospid == 0)
		{
			dist = GetPlayerDistanceToPoint(playerid, -2651.6501, 634.1177, 0.0);
		}
		else if(hospid == 1)
		{
			dist = GetPlayerDistanceToPoint(playerid, 1173.5842, -1324.5615, 0.0);
		}
		else if(hospid == 2)
		{
			dist = GetPlayerDistanceToPoint(playerid, 2031.9415, -1404.3578, 0.0);
		}
		else if(hospid == 3)
		{
			dist = GetPlayerDistanceToPoint(playerid, 1582.5615, 1768.7921, 0.0);
		}
		if((dist < prevdist))
		{
			prevdist = dist;
			prevhosp = hospid;
		}
	}
	return prevhosp;
}

public GetClosestDelegacia(playerid)
{
	if(!IsPlayerConnected(playerid))
	{
		return -1;
	}
	new prevdp;
	new Float:prevdist = 100000.000;
	for(new dpid = 0; dpid < 4; dpid++)
	{
		new Float:dist;
		if(dpid == 0)
		{
			dist = GetPlayerDistanceToPoint(playerid, 1538.7277, -1675.6129, 0.0);
		}
		else if(dpid == 1)
		{
			dist = GetPlayerDistanceToPoint(playerid, -1605.3535, 718.0169, 0.0);
		}
		else if(dpid == 2)
		{
			dist = GetPlayerDistanceToPoint(playerid, 2287.0131, 2421.5007, 0.0);
		}
		else if(dpid == 3)
		{
			dist = GetPlayerDistanceToPoint(playerid, -204.9153, 979.9788, 0.0);
		}
		if((dist < prevdist))
		{
			prevdist = dist;
			prevdp = dpid;
		}
	}
	return prevdp;
}

public GetClosestCargas(playerid)
{
	if(!IsPlayerConnected(playerid))
	{
		return -1;
	}
	new prevcargas;
	new Float:prevdist = 100000.000;
	for(new cargasid = 0; cargasid < 4; cargasid++)
	{
		new Float:dist;
		if(cargasid == 0)
		{
			dist = GetPlayerDistanceToPoint(playerid, 2413.9599, -2089.2497, 13.4353); // Carga em LS
		}
		else if(cargasid == 1)
		{
			dist = GetPlayerDistanceToPoint(playerid, -1636.4776, 57.9578, 3.2608); // Carga em SF
		}
		else if(cargasid == 2)
		{
			dist = GetPlayerDistanceToPoint(playerid, -493.0995, -541.6450, 25.5234); // Carga em SF
		}
		else if(cargasid == 3)
		{
			dist = GetPlayerDistanceToPoint(playerid, 1387.3312, 2302.7683, 10.8127); // Carga em LV
		}
		else if(cargasid == 4)
		{
			dist = GetPlayerDistanceToPoint(playerid, 1007.4269, 2133.3259, 10.6718); // Carga em LV
		}
		else if(cargasid == 5)
		{
			dist = GetPlayerDistanceToPoint(playerid, 2347.7038, 2713.3149, 10.8818); // Carga em LV
		}
		if((dist < prevdist))
		{
			prevdist = dist;
			prevcargas = cargasid;
		}
	}
	return prevcargas;
}

public GetClosestPassageiros(playerid)
{
	if(!IsPlayerConnected(playerid))
	{
		return -1;
	}
	new prevpassageiros;
	new Float:prevdist = 100000.000;
	for(new passageirosid = 0; passageirosid < 4; passageirosid++)
	{
		new Float:dist;
		if(passageirosid == 0)
		{
			dist = GetPlayerDistanceToPoint(playerid, 1407.15, -1838.88, 13.55); // Carga em LS
		}
		else if(passageirosid == 1)
		{
			dist = GetPlayerDistanceToPoint(playerid, -2240.44, -1713.86, 480.61); // Carga em MC
		}
		if((dist < prevdist))
		{
			prevdist = dist;
			prevpassageiros = passageirosid;
		}
	}
	return prevpassageiros;
}

public Moradia(playerid)
{
	if(morar[playerid] == 1)
	{
		morar[playerid] = 0;
		moradia[playerid] = 0;
		SendClientMessage(convitede[playerid], Vermelho, "O convidado demorou muito para aceitar, convite dado como recusado.");
		convitede[playerid] = INVALID_PLAYER_ID;
	}
	return 1;
}

public Clima()
{
	new texto[256], Previsao;
	Previsao = random(sizeof(WeatherName));
	if(Previsao >= 1 && Previsao <= 50)
	{
		SetWeather(Previsao);
	}
	format(texto, sizeof(texto), "{ADD8E6}Clima: %s", WeatherName[Previsao]);
	SendClientMessageToAll(0x93FFFFAA, texto);
	return 1;
}

// Hospital
public BlockCurarMe(playerid)
{
	return CuraRapida[playerid] = true, 1;
}

public RecuperouSe(playerid)
{
	if(SeMorreu[playerid] == true)
	{
		new Float:vida;

		TempoHospital[playerid]++;
		GetPlayerHealth(playerid, vida);

		switch(TempoHospital[playerid])
		{
			case 1..49:
			{
				SetPlayerHealth(playerid, vida+2);
			}
			case 50:
			{
				SeMorreu[playerid] = false;

				if(gPlayerUsingLoopingAnim[playerid] == 1)
				{
					gPlayerUsingLoopingAnim[playerid] = 0;
					TogglePlayerControllable(playerid, true);
					ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
				}

				SetCameraBehindPlayer(playerid);
				SetPlayerFacingAngle(playerid, 177.8791);
				KillTimer(TimerExRecuperou[playerid]);
				TempoHospital[playerid] = 0;

				ClearChatbox(playerid, 1);
				SendClientMessage(playerid, -1, "{DD2222}Médico diz: {FFFFFF}Você foi recuperado. Seja mais cuidadoso a partir de agora.");
			}
		}
	}
	return 1;
}

public LevelUP()
{
	new string[256],
		aname[MAX_PLAYER_NAME],
		Float:X, Float:Y, Float:Z;

	new file[128];

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			GetPlayerName(i, aname, MAX_PLAYER_NAME);
			format(file, sizeof(file), PASTA_CONTAS, aname);

			GetPlayerPos(i, X, Y, Z);

			if(AFK[i] == 0)
			{
				DOF2_SetInt(file, "Tempo", DOF2_GetInt(file, "Tempo")+1);
			    DOF2_SetInt(file, "TempoCash", DOF2_GetInt(file, "TempoCash")+1);
			    DOF2_SetInt(file, "TempoCX", DOF2_GetInt(file, "TempoCX")+1);
			}
			// EXP =============================================================================
			if(DOF2_GetInt(file, "Tempo") >= TEMPO_EXP-1)
			{
				DOF2_SetInt(file, "EXP", DOF2_GetInt(file, "EXP")+EXP_POR_TEMPO);
				DOF2_SetInt(file, "Tempo", 0);
				PlayerPlaySound(i, 1057, X, Y, Z);
				format(string, sizeof(string), "{FF0000}[EXP] {FFFFFF}Você ganhou {FF0000}+1 {FFFFFF}de experiência.");
				SendClientMessage(i, Verde, string);
			}
			// LEVEL UP ========================================================================
			if(DOF2_GetInt(file, "EXP") >= MAX_PLAYER_EXP-1)
			{
		    	DOF2_SetInt(file, "Level", DOF2_GetInt(file, "Level")+LEVEL_POR_EXP);
		    	DOF2_SetInt(file, "EXP", 0);
		    	DOF2_SetInt(file, "Presente", 0);
			    DOF2_SetInt(file, "rouboubanco", 0);
		     	DOF2_SetInt(file, "hackeou", 0);
		     	DOF2_SetInt(file, "fezpatrulha", 0);
				jasequestro[i] = 0;
				PlayerPlaySound(i, 1057, X, Y, Z);
				format(string, sizeof(string), "{FF0000}[UP] {FFFFFF}Você juntou {FF0000}5 {FFFFFF}de experiência, e ganhou {FF0000}+3 {FFFFFF}de level.");
				SendClientMessage(i, Verde, string);
			}
			// CASH UP =========================================================================
			if(DOF2_GetInt(file, "TempoCash") >= TEMPO_CASH-1)
			{
				DOF2_SetInt(file, "Cash", DOF2_GetInt(file, "Cash")+3);
				format(string, sizeof(string), "{FF0000}[CASH] {FFFFFF}Você juntou {FF0000}9 {FFFFFF}minutos jogando e ganhou {FF0000}+3 {FFFFFF}de cash. {FF0000}[%d]", DOF2_GetInt(file, "CASH"));
				SendClientMessage(i, -1, string);
				PlayerPlaySound(i, 1133, 0, 0, 0);
				DOF2_SetInt(file, "TempoCash",0);
			}

			if(DOF2_GetInt(file, "TempoCX") >= TEMPO_CX-1)
			{
				DOF2_SetInt(file, "CX", DOF2_GetInt(file, "CX")+CX_POR_TEMPO);
				DOF2_SetInt(file, "TempoCX", 0);
				PlayerPlaySound(i, 1057, X, Y, Z);
				format(string, sizeof(string), "{FF0000}[RP] {FFFFFF}Você ganhou {FF0000}+1 {FFFFFF}RP!");
				SendClientMessage(i, -1, string);
			}
			// LEVEL UP ========================================================================
			if(DOF2_GetInt(file, "CX") >= MAX_PLAYER_CX-1)
			{
				DOF2_SetInt(file, "CxDiaria", 1);
				DOF2_SetInt(file, "CX", 0);
				PlayerPlaySound(i, 1057, X, Y, Z);
				format(string, sizeof(string), "{FF0000}[RP] {FFFFFF}Você juntou {FF0000}20 {FFFFFF}de RP, e ganhou {FF0000}1 {FFFFFF}uma chave de caixa diária");
				SendClientMessage(i, -1, string);
			}
			// =================================== Outros ======================================
			if(DOF2_GetInt(file, "Preso") == 1)
			{
				PresoTempo[i]++;
				PlayerPlaySound(i, 1076, X, Y, Z);
				format(string, sizeof(string), "Você está preso por %d/%d minutos!", PresoTempo[i], TEMPO_PRESO);
				SendClientMessage(i, Verde, string);
				if(PresoTempo[i] >= TEMPO_PRESO-1)
				{
					SoltarPlayer(i);
					xplayerDM[i] = 0;
					SendClientMessage(i, Vermelho, "Você foi solto, não cometa mais crimes.");
				}
			}

			if(AFK[i] == 0 && PlayerInfo[i][Logged] == 1)
		    {
				DOF2_SetInt(file, "Tempo", DOF2_GetInt(file, "Tempo")+1);
            }

   			if(NaFaculdade[i] == 1)
			{
				minutos[i]++;
				if(minutos[i] >= TEMPO_ESTUDO-1)
				{
					minutos[i] = 0;
					NaFaculdade[i] = 0;
					SetPlayerHealth(i, 100.0);
					SetPlayerInterior(i, 0);
					SpawnPlayer(i);
					DOF2_SetInt(file, "Faculdade", DOF2_GetInt(file, "Faculdade")+ESTUDO_POR_TEMPO);
					format(string, sizeof(string), "(INFO) {FFFFFF}A aula acabou, seu estudo: {FF0000}%d", DOF2_GetInt(file, "Faculdade"));
					SendClientMessage(i, Verde, string);
				}
				format(string, sizeof(string), "Você estudou por %d/%d minutos.", minutos[i], TEMPO_ESTUDO);
				SendClientMessage(i, Verde, string);
			}
			UpdatePlayerInfo(i);
		}
	}
	return 0;
}

public ClearChatbox(playerid, lines)
{
	if(IsPlayerConnected(playerid))
	{
		for(new i = 0; i < lines; i++)
		{
			SendClientMessage(playerid, -1, " ");
		}
	}
	return 1;
}

public RespawnSystem(playerid)
{
	new string[256];

	LoadTextDraws();
	Load3DTextsFix();
	LoadCheckpointsFix();
	LoadGangZonesFix();
	LoadMapIconsFix();
	LoadPickupsFix();
	LoadObjectsFix();
	LoadVehiclesFix();
	LoadFilesIniItens();

	LoadDynamicObjectsFromFile("Objetos/Casas.txt");
	LoadPlayerRemovedBuildings(playerid, "Buildings/Dten.txt");
	
	LoadStaticVehiclesFromFile("Conce/setados.txt");
	LoadStaticVehiclesFromFile("vehicles/trains.txt");
	LoadStaticVehiclesFromFile("vehicles/lv_law.txt");
	LoadStaticVehiclesFromFile("vehicles/sf_law.txt");
	LoadStaticVehiclesFromFile("vehicles/ls_law.txt");
	

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			LoadPlayerTextDraws(i);

			#if defined gText1User
			PlayerTextDrawShow(i, PlayerInfo[i][gText1]);
			#endif

			#if defined gText2User
			PlayerTextDrawShow(i, PlayerInfo[i][gText2]);
			#endif
			
			#if defined gText3User
			PlayerTextDrawShow(i, PlayerInfo[i][gText3]);
			#endif
			
			TextDrawShowForPlayer(i, Relogio);
			TextDrawShowForPlayer(i, Facebook);
			TextDrawShowForPlayer(i, IPTXT);
			
			if(AFK[playerid] == 1)
			{
				TextDrawShowForPlayer(i, AfkText);
				TextDrawShowForPlayer(i, AfkBackText);
			}

			GangZoneShowForPlayer(i, GangZonesFix[1], Vermelho);
			GangZoneShowForPlayer(i, GangZonesFix[2], Vermelho);
			GangZoneShowForPlayer(i, GangZonesFix[3], Vermelho);
			GangZoneShowForPlayer(i, GangZonesFix[5], Vermelho);
			GangZoneShowForPlayer(i, GangZonesFix[6], Verde);
			GangZoneShowForPlayer(i, GangZonesFix[7], Branco);
			GangZoneShowForPlayer(i, GangZonesFix[8], Branco);
			GangZoneShowForPlayer(i, GangZonesFix[9], Branco);
		}
	}

	new pname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pname, MAX_PLAYER_NAME);

	format(string, sizeof(string), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}recarregou todos itens do servidor.", pname);
	SendClientMessageToAll(tcadm, string);

	format(string, sizeof(string), "{FFFFFF}Total de Objetos: %d\n{FFFFFF}Total de Pickups: %d\n{FFFFFF}Total de Checkpoints: %d\n{FFFFFF}Total de Race Checkpoints: %d\n{FFFFFF}Total de MapIcons: %d\n{FFFFFF}Total de TextLabels: %d\n{FFFFFF}Total de Areas: %d", CountDynamicObjects(), CountDynamicPickups(), CountDynamicCPs(), CountDynamicRaceCPs(), CountDynamicMapIcons(), CountDynamic3DTextLabels(), CountDynamicAreas());
	ShowPlayerDialog(playerid, rmovinfo, DIALOG_STYLE_MSGBOX, "Total de Itens do Servidor", string, "OK", "");
	return 0;
}

public locais()
{
	foreach(Player, i)
	{
		// ================================ Áreas Públicas =================================
		if(IsPlayerInPlace(i, 1383.386, -1772.66, 1596.345, -1583.168) // pref
			|| IsPlayerInPlace(i, 1178.033, -1875.301, 1345.357, -1705.548)) // facul
	 	{
			DMBloqueado[i] = 1;
		}
		else if(DMBloqueado[i] == 1) DMBloqueado[i] = 0;

		// ============================== Skatistas =======================================
		if(IsPlayerInPlace(i, 1821.749, -1483.09, 2113.696, -1331.278)) DMLiberado[i][1] = 1, GangZoneFlashForAll(GangZonesFix[6], BRANCO);
		else if(DMLiberado[i][1] == 1) DMLiberado[i][1] = 0, GangZoneStopFlashForAll(GangZonesFix[6]);
		// ================================ Base COT =========================================
		if(IsPlayerInPlace(i, 2649.73,-2593.79,2794.238,-2337.187)) DMLiberado[i][2] = 1, GangZoneFlashForAll(GangZonesFix[5], BRANCO);
		else if(DMLiberado[i][2] == 1) DMLiberado[i][2] = 0, GangZoneStopFlashForAll(GangZonesFix[5]);
		// ================================ Favela =========================================
		if(IsPlayerInPlace(i, 2016.010, -1161.922, 2324.010, -923.518)) DMLiberado[i][3] = 1, GangZoneFlashForAll(GangZonesFix[1], BRANCO);
		else if(DMLiberado[i][3] == 1) DMLiberado[i][3] = 0, GangZoneStopFlashForAll(GangZonesFix[1]);
		// ============================== Navio DM =========================================
		if(IsPlayerInPlace(i, -2545.777, 1483.09, -2230.474, 1623.225)) DMLiberado[i][4] = 1, GangZoneFlashForAll(GangZonesFix[2], BRANCO);
		else if(DMLiberado[i][4] == 1) DMLiberado[i][4] = 0, GangZoneStopFlashForAll(GangZonesFix[2]);
		// ============================== Area DM LV =======================================
		if(IsPlayerInPlace(i, 1267.535, 2084.409, 1408.109, 2235.263)) DMLiberado[i][5] = 1, GangZoneFlashForAll(GangZonesFix[3], BRANCO);
		else if(DMLiberado[i][5] == 1) DMLiberado[i][5] = 0, GangZoneStopFlashForAll(GangZonesFix[3]);
		// =========================== Postos de Combustível ==============================
											  // Postos em FC
		if(PlayerToPoint(7.0, i, 70.4532, 1219.1954, 18.8117)
			|| PlayerToPoint(7.0, i, -90.2719, -1169.9579, 2.3964)
			|| PlayerToPoint(7.0, i, -2411.5728, 976.1896, 45.4609)
			|| PlayerToPoint(7.0, i, 2114.8413, 919.9194, 10.8203))
		{
			GameTextForPlayer(i, "~w~/abastecer", 3000, 4);
			AreaPosto[i] = 1;
		}
		else
		{
			if(AreaPosto[i] == 1) AreaPosto[i] = 0; // Postos em LV
			if(PlayerToPoint(7.0, i, 2638.9553, 1107.1788, 10.8203)
				|| PlayerToPoint(7.0, i, 1595.6233, 2199.6162, 10.8203)
				|| PlayerToPoint(7.0, i, 1940.8671, -1773.2283, 13.3906)
				|| PlayerToPoint(7.0, i, -2243.8435, -2560.5598, 31.9219)
				|| PlayerToPoint(7.0, i, -1328.8868, 2677.6269, 50.0625))
			{
				GameTextForPlayer(i, "~w~/abastecer", 3000, 4);
				AreaPosto[i] = 1;
			}
			else
			{
				if(AreaPosto[i] == 1) AreaPosto[i] = 0; // Postos em LS/SF
				if(PlayerToPoint(7.0, i, 1382.3647, 459.0785, 20.3452)
					|| PlayerToPoint(7.0, i, -1675.4781, 413.1594, 7.1797)
					|| PlayerToPoint(7.0, i, 655.5922, -565.3943, 16.3359)
					|| PlayerToPoint(7.0, i, -1606.3616, -2713.5872, 48.5335))
				{
					GameTextForPlayer(i, "~w~/abastecer", 3000, 4);
					AreaPosto[i] = 1;
				}
				else
				{
					if(AreaPosto[i] == 1) AreaPosto[i] = 0; // Postos em Acima FC
					if(PlayerToPoint(7.0, i, 576.3771, 1662.789, 619.3304)
						|| PlayerToPoint(7.0, i, 1004.1403, -937.8801, 42.1797)
						|| PlayerToPoint(7.0, i, 2202.1230, 2476.8582, 10.8203)
						|| PlayerToPoint(7.0, i, 417.2369, -1912.7708, 1.5641))
					{
						GameTextForPlayer(i, "~w~/abastecer", 3000, 4);
						AreaPosto[i] = 1;
					}
					else if(AreaPosto[i] == 1) AreaPosto[i] = 0;
				}
			}
		}
	}
	return 1;
}


public CronServe()
{
    new file[128];
	new string[256];
	new year, month, day;
	new hour, minute, second;
	new aname[MAX_PLAYER_NAME], strmes[24], ChangeTime;
	
	new random1;
	random1 = random(sizeof(SVNAMES)), format(string, sizeof(string), "hostname %s", SVNAMES[random1]);
	SendRconCommand(string);

	new time[3];
	gettime(time[0], time[1], time[2]);
	if(time[0] == 0 && time[1] == 0 && time[2] == 0) LiberarItens();

	new H,M,S;
	gettime(H,M,S);
	
	if(H == 4 && M == 0 && S == 0) ReiniciarServidor();
	
	if(H == 9 && M == 0 && S == 0) CaixaPorHora();
	if(H == 18 && M == 0 && S == 0) CaixaPorHora();
	if(H == 22 && M == 0 && S == 0) CaixaPorHora();

	///////////////RECUPERAR VIDA
	if(H == 0 && M == 0 && S == 0) HpPorTempo();
	if(H == 0 && M == 30 && S == 0) HpPorTempo();
	if(H == 1 && M == 0 && S == 0) HpPorTempo();
	if(H == 1 && M == 30 && S == 0) HpPorTempo();
	if(H == 2 && M == 0 && S == 0) HpPorTempo();
	if(H == 2 && M == 30 && S == 0) HpPorTempo();
	if(H == 3 && M == 0 && S == 0) HpPorTempo();
	if(H == 3 && M == 30 && S == 0) HpPorTempo();
	if(H == 4 && M == 0 && S == 0) HpPorTempo();
	if(H == 4 && M == 30 && S == 0) HpPorTempo();
	if(H == 5 && M == 0 && S == 0) HpPorTempo();
	if(H == 5 && M == 30 && S == 0) HpPorTempo();
	if(H == 6 && M == 0 && S == 0) HpPorTempo();
	if(H == 6 && M == 30 && S == 0) HpPorTempo();
	if(H == 7 && M == 0 && S == 0) HpPorTempo();
	if(H == 7 && M == 30 && S == 0) HpPorTempo();
	if(H == 8 && M == 0 && S == 0) HpPorTempo();
	if(H == 8 && M == 30 && S == 0) HpPorTempo();
	if(H == 9 && M == 1 && S == 0) HpPorTempo();
	if(H == 9 && M == 30 && S == 0) HpPorTempo();
	if(H == 10 && M == 0 && S == 0) HpPorTempo();
	if(H == 10 && M == 30 && S == 0) HpPorTempo();
	if(H == 11 && M == 0 && S == 0) HpPorTempo();
	if(H == 11 && M == 30 && S == 0) HpPorTempo();
	if(H == 12 && M == 0 && S == 0) HpPorTempo();
	if(H == 12 && M == 30 && S == 0) HpPorTempo();
	if(H == 13 && M == 0 && S == 0) HpPorTempo();
	if(H == 13 && M == 30 && S == 0) HpPorTempo();
	if(H == 14 && M == 0 && S == 0) HpPorTempo();
	if(H == 14 && M == 30 && S == 0) HpPorTempo();
	if(H == 15 && M == 0 && S == 0) HpPorTempo();
	if(H == 15 && M == 30 && S == 0) HpPorTempo();
	if(H == 16 && M == 0 && S == 0) HpPorTempo();
	if(H == 16 && M == 30 && S == 0) HpPorTempo();
	if(H == 17 && M == 0 && S == 0) HpPorTempo();
	if(H == 17 && M == 30 && S == 0) HpPorTempo();
	if(H == 18 && M == 1 && S == 0) HpPorTempo();
	if(H == 18 && M == 30 && S == 0) HpPorTempo();
	if(H == 19 && M == 0 && S == 0) HpPorTempo();
	if(H == 19 && M == 30 && S == 0) HpPorTempo();
	if(H == 20 && M == 0 && S == 0) HpPorTempo();
	if(H == 21 && M == 30 && S == 0) HpPorTempo();
	if(H == 22 && M == 1 && S == 0) HpPorTempo();
	if(H == 22 && M == 30 && S == 0) HpPorTempo();
	if(H == 23 && M == 0 && S == 0) HpPorTempo();
	if(H == 23 && M == 30 && S == 0) HpPorTempo();
	
    minu++;
	if(horas == 0)
	{
		SetWorldTime(0);
		Faculdade2 = 0;
	}
	if(minu > 59)
	{
		minu = 0;
		horas++;
		SetWorldTime(horas);
	}
	if(horas > 23)
	{
		horas = 0;
	}
	if(Relogio != Text:INVALID_TEXT_DRAW)
	{
		format(string, 128, "%02d:%02d", horas, minu);
		TextDrawSetString(Relogio, string);
	}

	if(horas == 9 && minu == 00)
	{
		Faculdade2 = 1;
		GameTextForAll("~w~Faculdade ~p~Aberta!", 6000, 1);

	}
	if(horas == 12 && minu == 00)
	{
		Faculdade2 = 0;
		GameTextForAll("~w~Faculdade ~p~Fechada!", 6000, 1);
	}
	if(horas == 14 && minu == 00)
	{
		Faculdade2 = 1;
		GameTextForAll("~w~Faculdade ~p~Aberta!", 6000, 1);
	}
	if(horas == 17 && minu == 00)
	{
		Faculdade2 = 0;
		GameTextForAll("~w~Faculdade ~p~Fechada!", 6000, 1);
	}
	if(horas == 21 && minu == 00)
	{
		Faculdade2 = 1;
		GameTextForAll("~w~Faculdade ~p~Aberta!", 6000, 1);
	}
	if(horas == 00 && minu == 00)
	{
		Faculdade2 = 0;
		GameTextForAll("~w~Faculdade ~p~Fechada!", 6000, 1);
	}
	if(horas == 15 && minu == 00)
	{
		print(" pago ao(s) empregado(s) online!");
		Up();
	}
	
	ChangeTime++;

	totalon = 0;

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(!IsPlayerNPC(i))
			{
				if(totalon == 0)
				{
					totalon = 1;
				}
				else if(totalon > 0)
				{
					totalon++;
				}
			}

            GetPlayerName(i, aname, MAX_PLAYER_NAME);
			format(file, sizeof(file), PASTA_CONTAS, aname);

			UpdateSpeed(i);
			
			SetPlayerScore(i, DOF2_GetInt(file, "Level"));

			getdate(year, month, day);
			gettime(hour, minute, second);

			if(month == 1)
			{
			    format(strmes, sizeof(strmes), "01");
			}
			if(month == 2)
			{
			    format(strmes, sizeof(strmes), "02");
			}
			if(month == 3)
			{
			    format(strmes, sizeof(strmes), "03");
			}
			if(month == 4)
            {
			    format(strmes, sizeof(strmes), "04");
			}
			if(month == 5)
			{
			    format(strmes, sizeof(strmes), "05");
			}
			if(month == 6)
			{
			    format(strmes, sizeof(strmes), "06");
			}
			if(month == 7)
			{
			    format(strmes, sizeof(strmes), "07");
			}
			if(month == 8)
			{
			    format(strmes, sizeof(strmes), "08");
			}
			if(month == 9)
			{
			    format(strmes, sizeof(strmes), "09");
			}
			if(month == 10)
			{
			    format(strmes, sizeof(strmes), "10");
			}
			if(month == 11)
			{
			    format(strmes, sizeof(strmes), "11");
			}
			if(month == 12)
			{
			    format(strmes, sizeof(strmes), "12");
			}
            // textdraw do level
            #if defined gText1User
			if(PlayerInfo[i][gText1] != PlayerText:INVALID_TEXT_DRAW)
			{
 				format(string, sizeof(string), "~w~Caixa: ~r~%d/%d ~w~- EXP: ~g~%d/%d~w~ - Nivel: ~b~%d ~n~~w~Estudos: ~g~~h~%d~w~ - Cash: ~y~%d",DOF2_GetInt(file, "CX"), MAX_PLAYER_CX, DOF2_GetInt(file, "EXP"), MAX_PLAYER_EXP, DOF2_GetInt(file, "Level"), DOF2_GetInt(file, "Faculdade"), DOF2_GetInt(file, "CASH"));
				PlayerTextDrawSetString(i, PlayerInfo[i][gText1], string);
			}
			#endif

	        #if defined gText2User
			if(PlayerInfo[i][gText2] != PlayerText:INVALID_TEXT_DRAW)
			{
  	            format(string, sizeof(string), "    Hora: %02d:%02d:%02d~r~ Jogadores Online: ~w~%d/50~n~--------------------------------------------------------------", hour, minute, second, GetOnLinePlayers());
				PlayerTextDrawSetString(i, PlayerInfo[i][gText2], string);
			}
	        #endif

	        #if defined gText3User
			if(PlayerInfo[i][gText3] != PlayerText:INVALID_TEXT_DRAW) //tela game?
			{
				format(string, sizeof(string), "VIP: ~r~%02d - ~w~PREMIUM: ~r~%02d - ~w~$Prestige$: ~r~%02d",  GetVIPDays(i), GetVIPTDays(i), GetVIPMTDays(i));
				PlayerTextDrawSetString(i, PlayerInfo[i][gText3], string);
			}
	        #endif
		 // fim dela

			if(GetPlayerMoney(i) != GetPlayerGrana(i))
			{
				ResetPlayerMoney(i);
				GivePlayerMoney(i, GetPlayerGrana(i));
			}

			GetPlayerPos(i, PlayerCurrentPos[0], PlayerCurrentPos[1], PlayerCurrentPos[2]);

			if(!floatcmp(PlayerCurrentPos[0], PlayerLastPos[i][LastX]) && !floatcmp(PlayerCurrentPos[1], PlayerLastPos[i][LastY]))
			{
				PlayerAfkTicks[i]++;
			}
			else
			{
				PlayerAfkTicks[i] = 0;
			}
			PlayerLastPos[i][LastX] = PlayerCurrentPos[0];
			PlayerLastPos[i][LastY] = PlayerCurrentPos[1];
			PlayerLastPos[i][LastZ] = PlayerCurrentPos[2];
			
			if(PlayerInfo[i][Logged] == 0) SetPVarInt(i, "TempoNoLogin", GetPVarInt(i, "TempoNoLogin") + 1);
			if(GetPVarInt(i, "TempoNoLogin") >= 100)
			{
				new sms[80];
				format(sms, sizeof(sms), "{696969}%s {00FF00}foi kickado por passar {696969}2 {00FF00}min no login.", GetPlayerNameEx(i));
				ABroadCast(Vermelho, sms, 1);
				SetTimerEx("Kickar", 100, 0, "u", i);
			}
			
			if(PlayerAfkTicks[i] == MAX_IDLE_TIME*60 && PlayerInfo[i][Logged] == 1)
			{
			    if(!IsPlayerNPC(i))
			    {
					AFK[i] = 1;
					SetPlayerVirtualWorld(i, 1);
					SetCameraBehindPlayer(i);
					TogglePlayerControllable(i, 0);
					TextDrawShowForPlayer(i, AfkText);
					TextDrawShowForPlayer(i, AfkBackText);
					format(string, sizeof(string), "{FFFFFF}%s {FF0000}está ausente e foi impedido de upar!", GetPlayerNameEx(i));
					SendClientMessageToAll(0xFF9595AA, string);
				}
			}

			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(i));
			if(DOF2_FileExists(file))
			{
				new Float:health;

				GetPlayerHealth(i, health);

				DOF2_SetInt(file, "Matou", matou[i]);
				DOF2_SetInt(file, "Morreu", morreu[i]);

				if(DOF2_GetInt(file, "usoudroga") == 1)
				{
					SetPlayerHealth(i, health-2);
				}
				if(DOF2_GetInt(file, "Level") > MAX_PLAYER_LEVEL-1)
				{
					DOF2_SetInt(file, "Level", MAX_PLAYER_LEVEL);
				}
				if(DOF2_GetInt(file, "Faculdade") > MAX_PLAYER_ESTUDO-1)
				{
					DOF2_SetInt(file, "Faculdade", MAX_PLAYER_ESTUDO);
				}
				if(pAdmin[i] > 0)
				{
					DOF2_SetInt(file, "Admin", pAdmin[i]);
				}
			}
		}
	}
	return 1;
}

public SalvePlayerPos(playerid)
{
	new string[256];
	format(string, sizeof(string), "/salvarpos %s", GetPlayerNameEx(playerid));
	OnPlayerCommandText(playerid, string);
	return 1;
}

public AutoRestart()
{
	SendRconCommand("gmx");
	return 1;
}

// Anti Rcon Hack
public AfterPlayerConnect(playerid)
{
	PlayerInfo[playerid][SCON] = false;
	return 1;
}

public ChangeRCONPassword()
{
	new string[39], password[25];

	new letters[][] =
	{
		"a", "b", "c", "d",
		"e", "f", "g", "h",
		"i", "j", "k", "l",
		"m", "n", "o", "p",
		"q", "r", "s", "t",
		"u", "v", "w", "x",
		"y", "z"
	};

	new bool:numlet = false;

	for(new i = 0; i < 20; i++)
	{
		if(numlet == false)
		{
			new number = random(10);
			format(string, sizeof(string), "%d", number);
			strins(password, string, i, 1);
			numlet = true;
		}
		else if(numlet == true)
		{
			new letter = random(26);
			strins(password, letters[letter], i, 1);
			numlet = false;
		}
	}

	format(string, sizeof(string), "rcon_password %s", password);
	SendRconCommand(string);

	//print(string);
}
// =================================================================================

#if defined CameraUser
public AttachObject()
{
	for(new carro = 1; carro < MAX_VEHICLES; carro++)
	{
		if(GetVehicleModel(carro) == 560 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0, 0.0+0.5, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;

		}
		if(GetVehicleModel(carro) == 458 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0, 0.0+0.4, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 490 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0+0.3, 0.0+0.7, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 599 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0-0.2, 0.0+0.7, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 596 || GetVehicleModel(carro) == 597 || GetVehicleModel(carro) == 420 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0-0.1, 0.0+0.5, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 411 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.3, 0.0-0.1, 0.0+0.4, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 559 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0-0.4, 0.0+0.4, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 442 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0+0.2, 0.0+0.4, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 480 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0-0.4, 0.0+0.5, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 567 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0+0.1, 0.0+0.5, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 462 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0-0.0, 0.0+0.9, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 522 || GetVehicleModel(carro) == 521 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0+0.1, 0.0+1.0, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 463 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0-0.3, 0.0+0.8, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 470 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.6, 0.0-0.2, 0.0+0.7, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 500 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0-0.3, 0.0+0.6, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 431 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.1, 0.0+4.3, 0.0+1.2, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 523 || GetVehicleModel(carro) == 468 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0-0.0, 0.0+0.9, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 562 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.3, 0.0-0.2, 0.0+0.5, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 579 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0-0.4, 0.0+0.8, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 418 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0+0.3, 0.0+0.5, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
		if(GetVehicleModel(carro) == 586 && !(IsValidDynamicObject(ObjetoCarro[carro])))
		{
			ObjetoCarro[carro] = CreateDynamicObject(1927, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 100.0);
			SetDynamicObjectMaterialText(ObjetoCarro[carro], 0, "-", OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, BRANCO, 0, 0);
			AttachDynamicObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0-0.2, 0.0+0.9, 0.0, 0.0, 0.0);
			VeiculoValido[carro] = 1;
		}
	}
	return true;
}
#endif

public OnPlayerUpdate(playerid)
{
    new file[128];
    
	new Float:x, Float:y, Float:z,
		objectid, keys, ud, lr;

	objectid = GetPVarInt(playerid, "objToEdit");
	GetPlayerKeys(playerid, keys, ud, lr);

	UpdateHP(playerid);

	#if defined FGPSUser
	if(GetPVarInt(playerid, "YEAH") == 1 && IsPlayerInAnyVehicle(playerid))
	{
		new Float:VPos[3], Float:Rotation, TDString[128];
		GetVehiclePos(GetPlayerVehicleID(playerid), VPos[0], VPos[1], VPos[2]);
		Rotation = PointAngle(playerid, VPos[0], VPos[1], GetPVarFloat(playerid, "Spongebob"), GetPVarFloat(playerid, "Mario"));
		AttachDynamicObjectToVehicle(PlayerInfo[playerid][FGPSObject], GetPlayerVehicleID(playerid), 0.0, 0.0, 1.5, 0.0, 90.0, Rotation);

		#if defined UseTd
		if(PlayerInfo[playerid][F_GPSTD] != PlayerText:INVALID_TEXT_DRAW)
		{
			format(TDString, sizeof(TDString), "Distancia: %.1f Metros", GetDistanceBetweenPoints(VPos[0], VPos[1], VPos[2], GetPVarFloat(playerid, "Spongebob"), GetPVarFloat(playerid, "Mario"), GetPVarFloat(playerid, "SpiderPig")));
			PlayerTextDrawSetString(playerid, PlayerInfo[playerid][F_GPSTD], TDString);
		}
		#endif
	}
	#endif

	if(algemado[playerid] == 1 && AlgemaAttached[playerid] == 0)
	{
		AlgemaAttached[playerid] = 1;
		SetPlayerAttachedObject(playerid, SlotAlgema, 19418, 6, -0.031999, 0.024000, -0.024000, -7.900000, -32.000011, -72.299987, 1.115998, 1.322000, 1.406000);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
	}
	else if(algemado[playerid] == 0 && AlgemaAttached[playerid] == 1)
	{
		AlgemaAttached[playerid] = 0;
		RemovePlayerAttachedObject(playerid, SlotAlgema);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	}

	// LASER
	#if defined LaserUser
	if(GetPVarInt(playerid, "laser"))
	{
		RemovePlayerAttachedObject(playerid, SlotLaser);
		if(!(IsPlayerInAnyVehicle(playerid)) || (IsPlayerInWater(playerid)))
		{
			switch(GetPlayerWeapon(playerid))
			{
				case 23:
				{
					if(IsPlayerAiming(playerid))
					{
						if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
						{
												  // SP standing aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.108249, 0.030232, 0.118051, 1.468254, 350.512573, 364.284240);
						}
						else
						{
												  // SP crouched aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.108249, 0.030232, 0.118051, 1.468254, 349.862579, 364.784240);
						}
					}
					else
					{
						if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
						{
												  // SP standing not aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);
						}
						else
						{
												  // SP crouched not aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);
						}
					}
				}
				case 27:
				{
					if(IsPlayerAiming(playerid))
					{
						if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
						{
												  // SPAS standing aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.588246, -0.022766, 0.138052, -11.531745, 347.712585, 352.784271);
						}
						else
						{
												  // SPAS crouched aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.588246, -0.022766, 0.138052, 1.468254, 350.712585, 352.784271);
						}
					}
					else
					{
						if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
						{
												  // SPAS standing not aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.563249, -0.01976, 0.134051, -11.131746, 351.602722, 351.384216);
						}
						else
						{
												  // SPAS crouched not aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.563249, -0.01976, 0.134051, -11.131746, 351.602722, 351.384216);
						}
					}
				}
				case 30:
				{
					if(IsPlayerAiming(playerid))
					{
						if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
						{
												  // AK standing aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.628249, -0.027766, 0.078052, -6.621746, 352.552642, 355.084289);
						}
						else
						{
												  // AK crouched aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.628249, -0.027766, 0.078052, -1.621746, 356.202667, 355.084289);
						}
					}
					else
					{
						if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
						{
												  // AK standing not aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.663249, -0.02976, 0.080051, -11.131746, 358.302734, 353.384216);
						}
						else
						{
												  // AK crouched not aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.663249, -0.02976, 0.080051, -11.131746, 358.302734, 353.384216);
						}
					}
				}
				case 31:
				{
					if(IsPlayerAiming(playerid))
					{
						if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
						{
												  // M4 standing aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
						}
						else
						{
												  // M4 crouched aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
						}
					}
					else
					{
						if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
						{
												  // M4 standing not aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
						}
						else
						{
												  // M4 crouched not aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
						}
					}
				}
				case 34:
				{
					if(IsPlayerAiming(playerid))
					{

					}
					else
					{
						if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
						{
												  // Sniper standing not aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.658248, -0.03276, 0.133051, -11.631746, 355.302673, 353.584259);
						}
						else
						{
												  // Sniper crouched not aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.658248, -0.03276, 0.133051, -11.631746, 355.302673, 353.584259);
						}
					}
				}
				case 29:
				{
					if(IsPlayerAiming(playerid))
					{
						if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
						{
												  // MP5 standing aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.298249, -0.02776, 0.158052, -11.631746, 359.302673, 357.584259);
						}
						else
						{
												  // MP5 crouched aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.298249, -0.02776, 0.158052, 8.368253, 358.302673, 352.584259);
						}
					}
					else
					{
						if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
						{
												  // MP5 standing not aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
						}
						else
						{
												  // MP5 crouched not aiming
							SetPlayerAttachedObject(playerid, SlotLaser, GetPVarInt(playerid, "color"), 6,
								0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
						}
					}
				}
			}
		}
	}
	#endif

	if(keys & KEY_SECONDARY_ATTACK)
	{
		if(GetPVarInt(playerid, "EditingXMode") == 1)
		{
			DeletePVar(playerid, "EditingXMode");
			SetTimerEx("ShowEditDialog", 600, false, "i", playerid);
		}
		if(GetPVarInt(playerid, "EditingYMode") == 1)
		{
			DeletePVar(playerid, "EditingYMode");
			SetTimerEx("ShowEditDialog", 600, false, "i", playerid);
		}
		if(GetPVarInt(playerid, "EditingZMode") == 1)
		{
			DeletePVar(playerid, "EditingZMode");
			SetTimerEx("ShowEditDialog", 600, false, "i", playerid);
		}
		if(GetPVarInt(playerid, "EditingRXMode") == 1)
		{
			DeletePVar(playerid, "EditingRXMode");
			SetTimerEx("ShowEditDialog", 600, false, "i", playerid);
		}
		if(GetPVarInt(playerid, "EditingRYMode") == 1)
		{
			DeletePVar(playerid, "EditingRYMode");
			SetTimerEx("ShowEditDialog", 600, false, "i", playerid);
		}
		if(GetPVarInt(playerid, "EditingRZMode") == 1)
		{
			DeletePVar(playerid, "EditingRZMode");
			SetTimerEx("ShowEditDialog", 600, false, "i", playerid);
		}
	}

	if(keys & KEY_ANALOG_LEFT)
	{
		if(GetPVarInt(playerid, "EditingXMode") == 1)
		{
			GetObjectPos(objectid, x, y, z);
			SetObjectPos(objectid, x-0.2, y, z);
		}
		if(GetPVarInt(playerid, "EditingYMode") == 1)
		{
			GetObjectPos(objectid, x, y, z);
			SetObjectPos(objectid, x, y-0.2, z);
		}
		if(GetPVarInt(playerid, "EditingZMode") == 1)
		{
			GetObjectPos(objectid, x, y, z);
			SetObjectPos(objectid, x, y, z-0.2);
		}
		if(GetPVarInt(playerid, "EditingRXMode") == 1)
		{
			GetObjectRot(objectid, x, y, z);
			SetObjectRot(objectid, x-0.2, y, z);
		}
		if(GetPVarInt(playerid, "EditingRYMode") == 1)
		{
			GetObjectRot(objectid, x, y, z);
			SetObjectRot(objectid, x, y-0.2, z);
		}
		if(GetPVarInt(playerid, "EditingRZMode") == 1)
		{
			GetObjectRot(objectid, x, y, z);
			SetObjectRot(objectid, x, y, z-0.2);
		}
	}

	if(keys & KEY_ANALOG_RIGHT)
	{
		if(GetPVarInt(playerid, "EditingXMode") == 1)
		{
			GetObjectPos(objectid, x, y, z);
			SetObjectPos(objectid, x+1, y, z);
		}
		if(GetPVarInt(playerid, "EditingYMode") == 1)
		{
			GetObjectPos(objectid, x, y, z);
			SetObjectPos(objectid, x, y+1, z);
		}
		if(GetPVarInt(playerid, "EditingZMode") == 1)
		{
			GetObjectPos(objectid, x, y, z);
			SetObjectPos(objectid, x, y, z+1);
		}
		if(GetPVarInt(playerid, "EditingRXMode") == 1)
		{
			GetObjectRot(objectid, x, y, z);
			SetObjectRot(objectid, x+1, y, z);
		}
		if(GetPVarInt(playerid, "EditingRYMode") == 1)
		{
			GetObjectRot(objectid, x, y, z);
			SetObjectRot(objectid, x, y+1, z);
		}
		if(GetPVarInt(playerid, "EditingRZMode") == 1)
		{
			GetObjectRot(objectid, x, y, z);
			SetObjectRot(objectid, x, y, z+1);
		}
	}

	if(IsATruk(GetPlayerVehicleID(playerid)) && IsPlayerInAnyVehicle(playerid) && IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)) && PlayerInfo[playerid][pPoloArea] == 1)
	{
		new aname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, aname, MAX_PLAYER_NAME);
		format(file, sizeof(file), PASTA_CONTAS, aname);

		PlayerInfo[playerid][pPoloArea] = 0;
		if(DOF2_GetInt(file, "Profissao") == Caminhoneiro)
		{
			GetVehiclePos(GetPlayerVehicleID(playerid), PlayerInfo[playerid][pPosX], PlayerInfo[playerid][pPosY], PlayerInfo[playerid][pPosZ]);
			if(GetClosestCargas(playerid) != 0)
			{
				ShowPlayerLocationFromGPS(playerid, "Próximo Polo", 2413.9599, -2089.2497, 13.4353); // LS
			}
			else if(GetClosestCargas(playerid) != 1)
			{
				ShowPlayerLocationFromGPS(playerid, "Próximo Polo", -1636.4776, 57.9578, 3.2608); // SF
			}
			else if(GetClosestCargas(playerid) != 2)
			{
				ShowPlayerLocationFromGPS(playerid, "Próximo Polo", -493.0995, -541.6450, 25.5234); // SF
			}
			else if(GetClosestCargas(playerid) != 3)
			{
				ShowPlayerLocationFromGPS(playerid, "Próximo Polo", 1387.3312, 2302.7683, 10.8127); // LV
			}
			else if(GetClosestCargas(playerid) != 4)
			{
				ShowPlayerLocationFromGPS(playerid, "Próximo Polo", 1007.4269, 2133.3259, 10.6718); // LV
			}
			else if(GetClosestCargas(playerid) != 5)
			{
				ShowPlayerLocationFromGPS(playerid, "Próximo Polo", 2347.7038, 2713.3149, 10.8818); // LV
			}
		}
	}

	if(GetPlayerPing(playerid) >= 1500)
	{
		if(PingCfg == 1)
		{
			VBanID(-1, playerid, "Ping Alto, Max: 1500");
		}
		if(PingCfg == 2)
		{
			format(STRX, sizeof(STRX), "{FFFF00}O(a) jogador(a) {FFFFFF}%s {FFFF00}foi kickado(a) por {FFFFFF}[BSL]Bot. {FFFF00}Motivo: {FFFFFF}Ping Alto, Max: 1500", GetPlayerNameEx(playerid));
			SendClientMessageToAll(Amarelo, STRX);
			KickLog(STRX);
			Kick(playerid);
		}
	}
	return 1;
}

stock LoadFilesIniItens()
{
	for(new stri[128], interior = 0; interior < MAX_INT; interior++)
	{
		if(proximoint != MAX_INT)
		{
			format(stri, sizeof(stri), PASTA_Int, interior);
			if(DOF2_FileExists(stri))
			{
				proximoint++;
			}
		}
	}

	for(new strc[128], pickupid, iconid, c = 0; c < MAX_CASAS; c++)
	{
		if(proximacasa != MAX_CASAS)
		{
			format(strc, sizeof(strc), PASTA_CASAS, c);
			if(DOF2_FileExists(strc))
			{
				if(DOF2_GetInt(strc, "TDono") == 0)
				{
					pickupid = CreateDynamicPickup(1273, 1, DOF2_GetFloat(strc, "PosX"), DOF2_GetFloat(strc, "PosY"), DOF2_GetFloat(strc, "PosZ"), -1, -1, -1, 200.0);
					DOF2_SetInt(strc, "Id", pickupid);
					iconid = CreateDynamicMapIcon(DOF2_GetFloat(strc, "PosX"), DOF2_GetFloat(strc, "PosY"), DOF2_GetFloat(strc, "PosZ"), 31, 0, -1, -1, -1, 100.0);
					DOF2_SetInt(strc, "IconId", iconid);
					format(STRX, sizeof(STRX), "{1E90FF}Casa ID: {FFFFFF}%d\n{1E90FF}Dono: {FFFFFF}%s\n{1E90FF}Morador: {FFFFFF}%s\n{1E90FF}Valor: {FFFFFF}$%d\n{1E90FF}Último uso: {FFFFFF}%s", c, DOF2_GetString(strc, "Dono"), DOF2_GetString(strc, "Morador"), DOF2_GetInt(strc, "Preco"), DOF2_GetString(strc, "DataSet"));
					ctextoid[c] = CreateDynamic3DTextLabel(STRX, -1, DOF2_GetFloat(strc, "PosX"), DOF2_GetFloat(strc, "PosY"), DOF2_GetFloat(strc, "PosZ"), 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
					DOF2_SetInt(strc, "Mundo", proximacasa);
					proximacasa++;
				}
				else
				{
					if(DOF2_GetInt(strc, "TDono") == 1)
					{
						pickupid = CreateDynamicPickup(1272, 1, DOF2_GetFloat(strc, "PosX"), DOF2_GetFloat(strc, "PosY"), DOF2_GetFloat(strc, "PosZ"), -1, -1, -1, 200.0);
						DOF2_SetInt(strc, "Id", pickupid);
						iconid = CreateDynamicMapIcon(DOF2_GetFloat(strc, "PosX"), DOF2_GetFloat(strc, "PosY"), DOF2_GetFloat(strc, "PosZ"), 32, 0, -1, -1, -1, 100.0);
						DOF2_SetInt(strc, "IconId", iconid);
						format(STRX, sizeof(STRX), "{1E90FF}Casa ID: {FFFFFF}%d\n{1E90FF}Dono: {FFFFFF}%s\n{1E90FF}Morador: {FFFFFF}%s\n{1E90FF}Valor: {FFFFFF}$%d\n{1E90FF}Último uso: {FFFFFF}%s", c, DOF2_GetString(strc, "Dono"), DOF2_GetString(strc, "Morador"), DOF2_GetInt(strc, "Preco"), DOF2_GetString(strc, "DataSet"));
						ctextoid[c] = CreateDynamic3DTextLabel(STRX, -1, DOF2_GetFloat(strc, "PosX"), DOF2_GetFloat(strc, "PosY"), DOF2_GetFloat(strc, "PosZ"), 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
						DOF2_SetInt(strc, "Mundo", proximacasa);
						proximacasa++;
					}
					else
					{
						DOF2_SetInt(strc, "TDono", 3);
						DOF2_SetString(strc, "Dono", "Ninguem");
						DOF2_SetInt(strc, "Id", 999);
						DOF2_SetInt(strc, "IconId", 999);
						DOF2_SetInt(strc, "Mundo", proximacasa);
						proximacasa++;
					}
				}
			}
		}
	}

	for(new strp[128], pickupid, iconid, p = 0; p < MAX_PROPS; p++)
	{
		if(proximaprop != MAX_PROPS)
		{
			format(strp, sizeof(strp), PASTA_PROPS, p);
			if(DOF2_FileExists(strp))
			{
				if(DOF2_GetInt(strp, "TDono") == 0)
				{
					pickupid = CreateDynamicPickup(1279, 1, DOF2_GetFloat(strp, "PosX"), DOF2_GetFloat(strp, "PosY"), DOF2_GetFloat(strp, "PosZ"), -1, -1, -1, 200.0);
					DOF2_SetInt(strp, "Id", pickupid);
					iconid = CreateDynamicMapIcon(DOF2_GetFloat(strp, "PosX"), DOF2_GetFloat(strp, "PosY"), DOF2_GetFloat(strp, "PosZ"), 11, 0, -1, -1, -1, 100.0);
					DOF2_SetInt(strp, "IconId", iconid);
     				format(STRX, sizeof(STRX), "{696969}%s\n\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Dono: {696969}%s\n{00FF00}Valor: {696969}$%d\n{00FF00}Último uso: {696969}%s", DOF2_GetString(strp, "Nome"), p, DOF2_GetString(strp, "Dono"), DOF2_GetInt(strp, "Preco"), DOF2_GetString(strp, "DataSet"));
					ptextoid[p] = CreateDynamic3DTextLabel(STRX, -1, DOF2_GetFloat(strp, "PosX"), DOF2_GetFloat(strp, "PosY"), DOF2_GetFloat(strp, "PosZ"), 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
					DOF2_SetInt(strp, "Mundo", proximaprop);
					proximaprop++;
				}
				else
				{
					if(DOF2_GetInt(strp, "TDono") == 1)
					{
						pickupid = CreateDynamicPickup(1279, 1, DOF2_GetFloat(strp, "PosX"), DOF2_GetFloat(strp, "PosY"), DOF2_GetFloat(strp, "PosZ"), -1, -1, -1, 200.0);
						DOF2_SetInt(strp, "Id", pickupid);
						iconid = CreateDynamicMapIcon(DOF2_GetFloat(strp, "PosX"), DOF2_GetFloat(strp, "PosY"), DOF2_GetFloat(strp, "PosZ"), 51, 0, -1, -1, -1, 100.0);
						DOF2_SetInt(strp, "IconId", iconid);
      					format(STRX, sizeof(STRX), "{696969}%s\n\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Dono: {696969}%s\n{00FF00}Valor: {696969}$%d\n{00FF00}Último uso: {696969}%s", DOF2_GetString(strp, "Nome"), p, DOF2_GetString(strp, "Dono"), DOF2_GetInt(strp, "Preco"), DOF2_GetString(strp, "DataSet"));
						ptextoid[p] = CreateDynamic3DTextLabel(STRX, -1, DOF2_GetFloat(strp, "PosX"), DOF2_GetFloat(strp, "PosY"), DOF2_GetFloat(strp, "PosZ"), 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
						DOF2_SetInt(strp, "Mundo", proximaprop);
						proximaprop++;
					}
					else
					{
						DOF2_SetInt(strp, "TDono", 3);
						DOF2_SetString(strp, "Dono", "Ninguem");
						DOF2_SetInt(strp, "Id", 999);
						DOF2_SetInt(strp, "IconId", 999);
						DOF2_SetInt(strp, "Mundo", proximaprop);
						proximaprop++;
					}
				}
			}
		}
	}

	for(new strv[128], carro = 0; carro < MAX_CONCES; carro++)
	{
		if(proximocarro != MAX_CONCES)
		{
			format(strv, sizeof(strv), PASTA_CONCE, carro);
			if(DOF2_FileExists(strv))
			{
				if(DOF2_GetInt(strv, "TDono") == 0)
				{
					if(DOF2_GetInt(strv, "Modelo") >= 400 && DOF2_GetInt(strv, "Modelo") <= 611)
					{
						CriarVeiculo3(carro, DOF2_GetInt(strv, "Modelo"), DOF2_GetFloat(strv, "CordX"), DOF2_GetFloat(strv, "CordY"), DOF2_GetFloat(strv, "CordZ"), DOF2_GetFloat(strv, "Angulo"), DOF2_GetInt(strv, "Cor1"), DOF2_GetInt(strv, "Cor2"));
					}
					else
					{
						CriarVeiculo3(carro, 400, DOF2_GetFloat(strv, "CordX"), DOF2_GetFloat(strv, "CordY"), DOF2_GetFloat(strv, "CordZ"), DOF2_GetFloat(strv, "Angulo"), DOF2_GetInt(strv, "Cor1"), DOF2_GetInt(strv, "Cor2"));
					}
					proximocarro++;
				}
				else
				{
					if(DOF2_GetInt(strv, "TDono") == 1)
					{
						if(DOF2_GetInt(strv, "Modelo") >= 400 && DOF2_GetInt(strv, "Modelo") <= 611)
						{
							CriarVeiculo3(carro, DOF2_GetInt(strv, "Modelo"), DOF2_GetFloat(strv, "CordX"), DOF2_GetFloat(strv, "CordY"), DOF2_GetFloat(strv, "CordZ"), DOF2_GetFloat(strv, "Angulo"), DOF2_GetInt(strv, "Cor1"), DOF2_GetInt(strv, "Cor2"));
						}
						else
						{
							CriarVeiculo3(carro, 400, DOF2_GetFloat(strv, "CordX"), DOF2_GetFloat(strv, "CordY"), DOF2_GetFloat(strv, "CordZ"), DOF2_GetFloat(strv, "Angulo"), DOF2_GetInt(strv, "Cor1"), DOF2_GetInt(strv, "Cor2"));
						}
						proximocarro++;
					}
					else
					{
						DOF2_SetInt(strv, "TDono", 3);
						DOF2_SetString(strv, "Dono", "Ninguem");
						DOF2_SetInt(strv, "CarVIP", 0);
						DOF2_SetInt(strv, "Id", INVALID_VEHICLE_ID);
						proximocarro++;
					}
				}
			}
		}
	}
	for(new strc[128], pickupid, Emp = 0; Emp < MAX_Emp; Emp++)
	{
		if(proximaemp != MAX_Emp)
		{
			format(strc, sizeof(strc), PASTA_Emp, Emp);
			if(DOF2_FileExists(strc))
			{
				if(DOF2_GetInt(strc, "TDono") == 0)
				{
					pickupid = CreateDynamicPickup(DOF2_GetInt(strc, "Pickupemp"), 1, DOF2_GetFloat(strc, "PosX"), DOF2_GetFloat(strc, "PosY"), DOF2_GetFloat(strc, "PosZ"), -1, -1, -1, 200.0);
         			format(STRX, sizeof(STRX), "{FFFFFF}%s\n{FFFFFF}Preço: {CD6889}%d\n{FFFFFF}ID: {CD6889}%d\n{FFFFFF}Valor Entrada: {CD6889}$%d\n{FFFFFF}Esta Empresa Esta á Venda!", DOF2_GetString(strc, "Nome"), DOF2_GetInt(strc, "Preco"), Emp, DOF2_GetInt(strc, "Entrada"));
					Etextoid[Emp] = CreateDynamic3DTextLabel(STRX, -1, DOF2_GetFloat(strc, "PosX"), DOF2_GetFloat(strc, "PosY"), DOF2_GetFloat(strc, "PosZ"), 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
					DOF2_SetInt(strc, "PId", pickupid);
				}
				else
				{
					if(DOF2_GetInt(strc, "TDono") == 1)
					{
						pickupid = CreateDynamicPickup(DOF2_GetInt(strc, "Pickupemp"), 1, DOF2_GetFloat(strc, "PosX"), DOF2_GetFloat(strc, "PosY"), DOF2_GetFloat(strc, "PosZ"), -1, -1, -1, 200.0);
						format(STRX, sizeof(STRX), "{FFFFFF}\t%s\nDono: {F08080}%s\n{FFFFFF}Emp ID: {F08080}%d\n{FFFFFF}Valor Entrada: {F08080}$%d\n\n{FFFFFF}Último uso: {F08080}%s", DOF2_GetString(strc, "Nome"), DOF2_GetString(strc, "Dono"), Emp, DOF2_GetInt(strc, "Entrada"), DOF2_GetString(strc, "DataSet"));
						Etextoid[Emp] = CreateDynamic3DTextLabel(STRX, -1, DOF2_GetFloat(strc, "PosX"), DOF2_GetFloat(strc, "PosY"), DOF2_GetFloat(strc, "PosZ"), 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
                        DOF2_SetInt(strc, "PId", pickupid);
					}
					else
					{
						DOF2_SetInt(strc, "TDono", 3);
						DOF2_SetString(strc, "Dono", "Ninguem");
						DOF2_SetInt(strc, "Id", 999);
					}
				}
			}
		}
	}

	for(new strpt[128], samuid, samu = 0; samu < MAX_SAMUGAY; samu++)
	{
		if(proximosamugay != MAX_SAMUGAY)
		{
			format(strpt, sizeof(strpt), PASTA_SAMUGAY, samu);
			if(DOF2_FileExists(strpt))
			{
				if(DOF2_GetInt(strpt, "TDono") == 0)
				{
					samuid = CreateObject(DOF2_GetInt(strpt, "Modelo"), DOF2_GetFloat(strpt, "fCordX"), DOF2_GetFloat(strpt, "fCordY"), DOF2_GetFloat(strpt, "fCordZ"), DOF2_GetFloat(strpt, "fCordRX"), DOF2_GetFloat(strpt, "fCordRY"), DOF2_GetFloat(strpt, "fCordRZ"), 200.0);
					DOF2_SetInt(strpt, "Id", samuid);
					proximosamugay++;
				}
				else
				{
					if(DOF2_GetInt(strpt, "TDono") == 1)
					{
						samuid = CreateObject(DOF2_GetInt(strpt, "Modelo"), DOF2_GetFloat(strpt, "fCordX"), DOF2_GetFloat(strpt, "fCordY"), DOF2_GetFloat(strpt, "fCordZ"), DOF2_GetFloat(strpt, "fCordRX"), DOF2_GetFloat(strpt, "fCordRY"), DOF2_GetFloat(strpt, "fCordRZ"), 200.0);
						DOF2_SetInt(strpt, "Id", samuid);
						proximosamugay++;
					}
					else
					{
						DOF2_SetInt(strpt, "TDono", 3);
						DOF2_SetString(strpt, "Dono", "Ninguem");
						DOF2_SetInt(strpt, "Id", INVALID_OBJECT_ID);
						proximosamugay++;
					}
				}
			}
		}
	}
	return 1;

}

stock UnloadFilesIniItens()
{
	for(new strc[128], c = 0; c < MAX_CASAS; c++)
	{
		format(strc, sizeof(strc), PASTA_CASAS, c);
		if(DOF2_FileExists(strc))
		{
			if(DOF2_GetInt(strc, "TDono") == 0)
			{
				DestroyDynamicPickup(DOF2_GetInt(strc, "Id"));
				DestroyDynamicMapIcon(DOF2_GetInt(strc, "IconId"));
				DestroyDynamic3DTextLabel(ctextoid[c]);
				ctextoid[c] = Text3D:INVALID_3DTEXT_ID;
			}
			if(DOF2_GetInt(strc, "TDono") == 1)
			{
				DestroyDynamicPickup(DOF2_GetInt(strc, "Id"));
				DestroyDynamicMapIcon(DOF2_GetInt(strc, "IconId"));
				DestroyDynamic3DTextLabel(ctextoid[c]);
				ctextoid[c] = Text3D:INVALID_3DTEXT_ID;
			}
		}
	}
	proximacasa = 0;

	for(new strp[128], p = 0; p < MAX_PROPS; p++)
	{
		format(strp, sizeof(strp), PASTA_PROPS, p);
		if(DOF2_FileExists(strp))
		{
			if(DOF2_GetInt(strp, "TDono") == 0)
			{
				DestroyDynamicPickup(DOF2_GetInt(strp, "Id"));
				DestroyDynamicMapIcon(DOF2_GetInt(strp, "IconId"));
				DestroyDynamic3DTextLabel(ptextoid[p]);
				ptextoid[p] = Text3D:INVALID_3DTEXT_ID;
			}
			if(DOF2_GetInt(strp, "TDono") == 1)
			{
				DestroyDynamicPickup(DOF2_GetInt(strp, "Id"));
				DestroyDynamicMapIcon(DOF2_GetInt(strp, "IconId"));
				DestroyDynamic3DTextLabel(ptextoid[p]);
				ptextoid[p] = Text3D:INVALID_3DTEXT_ID;
			}
		}
	}
	proximaprop = 0;

	for(new strv[128], carro = 0; carro < MAX_CONCES; carro++)
	{
		format(strv, sizeof(strv), PASTA_CONCE, carro);
		if(DOF2_FileExists(strv))
		{
			if(!(DOF2_GetInt(strv, "TDono") == 3))
			{
				DestroyDynamic3DTextLabel(ConceLabel[carro]);
				ConceLabel[carro] = Text3D:INVALID_3DTEXT_ID;
				DestroyVehicle(DOF2_GetInt(strv, "Id"));
			}
		}
	}
	proximocarro = 0;
	
	for(new strpt[128], samu = 0; samu < MAX_SAMUGAY; samu++)
	{
		format(strpt, sizeof(strpt), PASTA_SAMUGAY, samu);
		if(DOF2_FileExists(strpt))
		{
			if(!(DOF2_GetInt(strpt, "TDono") == 3))
			{
				DestroyObject(DOF2_GetInt(strpt, "Id"));
			}
		}
	}
	proximosamugay = 0;
	return 1;
}

stock UpdatePlayerInfo(playerid)
{
	new fileinfo[128];

	format(fileinfo, sizeof(fileinfo), PASTA_CONTAS, GetPlayerNameEx(playerid));
	if(DOF2_FileExists(fileinfo))
	{
		PlayerInfo[playerid][_Faculdade] = DOF2_GetInt(fileinfo, "Faculdade");
		PlayerInfo[playerid][_Level] = DOF2_GetInt(fileinfo, "Level");
		PlayerInfo[playerid][_EXP] = DOF2_GetInt(fileinfo, "EXP");
		PlayerInfo[playerid][_SaldoBancario] = DOF2_GetInt(fileinfo, "SaldoBancario");
		PlayerInfo[playerid][_Profissao] = DOF2_GetInt(fileinfo, "Profissao");
		format(PlayerInfo[playerid][_CasouCom], sizeof(fileinfo), "%s", DOF2_GetString(fileinfo, "CasouCom"));
		PlayerInfo[playerid][_CartaoTelefonico] = DOF2_GetInt(fileinfo, "CartaoTelefonico");
		PlayerInfo[playerid][_CartaoTelefonico] = DOF2_GetInt(fileinfo, "Concerto");
		PlayerInfo[playerid][_Celular] = DOF2_GetInt(fileinfo, "Celular");
		PlayerInfo[playerid][_MP3] = DOF2_GetInt(fileinfo, "MP3");
		PlayerInfo[playerid][_Skin] = DOF2_GetInt(fileinfo, "Skin");
		PlayerInfo[playerid][_LaserP] = DOF2_GetInt(fileinfo, "LaserP");
		PlayerInfo[playerid][_TCapacete] = DOF2_GetInt(fileinfo, "TCapacete");
		PlayerInfo[playerid][_AntiHS] = DOF2_GetInt(fileinfo, "AntiHS");
		PlayerInfo[playerid][_Porte] = DOF2_GetInt(fileinfo, "Porte");
		PlayerInfo[playerid][_HabTerrestre] = DOF2_GetInt(fileinfo, "HabTerrestre");
		PlayerInfo[playerid][_HabNautica] = DOF2_GetInt(fileinfo, "HabNautica");
		PlayerInfo[playerid][_HabAerea] = DOF2_GetInt(fileinfo, "HabAerea");
		PlayerInfo[playerid][_Cash] = DOF2_GetInt(fileinfo, "Cash");
	}
	return 1;
}

stock GivePlayerGrana(playerid, ammount)
{
	new ammgive[128];
	GivePlayerMoney(playerid, DOF2_GetInt(ammgive, "Dinheiro")+ammount);
	format(ammgive, sizeof(ammgive), PASTA_CONTAS, GetPlayerNameEx(playerid));
	if(DOF2_FileExists(ammgive))
	{
		return DOF2_SetInt(ammgive, "Dinheiro", DOF2_GetInt(ammgive, "Dinheiro")+ammount);
	}
	return 1;
}

stock GetPlayerGrana(playerid)
{
	new ammget[128];
	format(ammget, sizeof(ammget), PASTA_CONTAS, GetPlayerNameEx(playerid));
	if(DOF2_FileExists(ammget))
	{
		return DOF2_GetInt(ammget, "Dinheiro");
	}
	return 1;
}

stock ResetPlayerGrana(playerid)
{
	new ammreset[128];
	ResetPlayerMoney(playerid);
	format(ammreset, sizeof(ammreset), PASTA_CONTAS, GetPlayerNameEx(playerid));
	if(DOF2_FileExists(ammreset))
	{
		return DOF2_SetInt(ammreset, "Dinheiro", 0);
	}
	return 1;
}

stock IsVehicleOccupied(vehicleid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER || GetPlayerState(i) == PLAYER_STATE_PASSENGER)
			{
				if(GetPlayerVehicleID(i) == vehicleid)
				{
					return 1;
				}
			}
		}
	}
	return 0;
}

stock PlayerCreateEvent(playerid, vagas, nome[], Float:eX, Float:eY, Float:eZ, eI)
{
	if(EventoCriado == 1)
	{
		SendClientMessage(playerid, Vermelho, "Um evento já foi criado, espere terminar para criar outro.");
		return 1;
	}
	if(Proibido == 1)
	{
		Proibido = 0;
	}
	EventoTextDraw = 1;
 	EventoCriado = 1;
	VagasNoEvento = vagas;

	eventoX = eX,
	eventoY = eY,
	eventoZ = eZ,
	interiore = eI;

	guerra = GangZoneCreate(eX-100, eY-100, eX+100, eY+100);
	GangZoneShowForAll(guerra, Branco);
	
	#if defined EventTextUser
	TextDrawShowForAll(Stakline);
	#endif

	Staktimer = SetTimerEx("Nupdate", 900, 1, "e", playerid);
	
	new string[400];

	format(string, sizeof(string), "{00BFFF}Novo evento criado com {FFFFFF}%d {00BFFF}vaga(s) Nome: {FFFFFF}%s {00BFFF}Digite: {FFFFFF}/irevento", vagas, nome);
	SendClientMessageToAll(Amarelo, string);

	SendClientMessage(playerid, 0x008000FF, "Evento criado com sucesso use: /comecarevento quando você for iniciá-lo.");
	SendClientMessage(playerid, 0x008000FF, "Caso você queira cancela-lo use: /cancelarevento.");
	SendClientMessage(playerid, 0x008000FF, "Para fechar o evento quando acabar use: /fecharevento.");
	return 1;
}

stock PlayerCancelEvent(playerid)
{
	if(EventoCriado == 0)
	{
		SendClientMessage(playerid, Vermelho, "Não tem nenhum evento para cancelar.");
		return 1;
	}
	if(Proibido == 0)
	{
		Proibido = 1;
	}
	EventoCriado = 0;
	VagasNoEvento = 0;
	PlayersNoEvento = 0;

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			noevento[i] = 0;
			ExpulsoEvento[i] = 0;
		}
	}

	if(EventoTextDraw == 1)
	{
		KillTimer(Staktimer);

		#if defined EventTextUser
		TextDrawHideForAll(Stakline);
		#endif

		EventoTextDraw = 0;
	}

	GangZoneHideForAll(guerra);
	GangZoneDestroy(guerra);

	format(STRX, sizeof(STRX), "{EAEDE8}O(a) ADM {FFFFFF}%s {EAEDE8}cancelou o evento.", GetPlayerNameEx(playerid));
	SendClientMessageToAll(0xFFFF00AA, STRX);
	return 1;
}

stock PlayerCloseEvent(playerid)
{
	if(EventoCriado == 0)
	{
		SendClientMessage(playerid, Vermelho, "Não tem nenhum evento para fechar.");
		return 1;
	}
	if(Proibido == 0)
	{
		Proibido = 1;
	}
	EventoCriado = 0;
	VagasNoEvento = 0;
	PlayersNoEvento = 0;

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			noevento[i] = 0;
			ExpulsoEvento[i] = 0;
		}
	}

	if(EventoTextDraw == 1)
	{
		KillTimer(Staktimer);

		#if defined EventTextUser
		TextDrawHideForAll(Stakline);
		#endif

		EventoTextDraw = 0;
	}

	GangZoneHideForAll(guerra);
	GangZoneDestroy(guerra);

	format(STRX, sizeof(STRX), "{EAEDE8}O(a) ADM {FFFFFF}%s {EAEDE8}fechou o evento.", GetPlayerNameEx(playerid));
	SendClientMessageToAll(tcadm, STRX);
	return 1;
}

stock PlayerExpulsePlayerEvent(playerid, plid, motivo[])
{
	if(EventoCriado == 0)
	{
		SendClientMessage(playerid, Vermelho, "Não tem nenhum evento aberto.");
		return 1;
	}
	if(!IsPlayerConnected(plid))
	{
		SendClientMessage(playerid, Vermelho, "Jogador não conectado.");
		return 1;
	}
	if(noevento[plid] == 1)
	{
	    PlayersNoEvento--;
		ExpulsoEvento[plid] = 1;
		noevento[plid] = 0;
		SpawnPlayer(plid);
		format(STRX, sizeof(STRX), "{FFFF00}O(a) {FFFFFF}%s {FFFF00}foi expulso do evento. Motivo: {FFFFFF}%s", GetPlayerNameEx(plid), motivo);
		SendClientMessageToAll(Amarelo, STRX);
	}
	else
	{
		format(STRX, sizeof(STRX), "%s não está em um evento.", GetPlayerNameEx(plid));
		SendClientMessage(playerid, Vermelho, STRX);
	}
	return 1;
}

stock PlayerInitEvent(playerid)
{
	if(Proibido == 1)
	{
		SendClientMessage(playerid, Vermelho, "Evento cancelado ou já começou.");
		return 1;
	}
	if(EventoCriado == 0)
	{
		SendClientMessage(playerid, Vermelho, "Não tem nenhum evento para começa-lo.");
		return 1;
	}
	if(Proibido == 0)
	{
		Proibido = 1;
	}

	if(EventoTextDraw == 1)
	{
		KillTimer(Staktimer);

		#if defined EventTextUser
		TextDrawHideForAll(Stakline);
		#endif

		EventoTextDraw = 0;
	}

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(noevento[i] == 1)
			{
				CreatePlayerCountdown(i, 5, 1);
				if(IsPlayerInAnyVehicle(i))
				{
					SetTimerEx("DestogglePlayerControllable", 6000, 0, "d", i);
				}
			}
		}
	}

	format(STRX, sizeof(STRX), "{EAEDE8}O(a) ADM {FFFFFF}%s {EAEDE8}começou o evento.", GetPlayerNameEx(playerid));
	SendClientMessageToAll(tcadm, STRX);

	SendClientMessage(playerid, 0x008000AA, "O evento começou, quando terminar use: /fecharevento");
	return 1;
}

stock SetPlayerEventPos(playerid)
{
	if(ExpulsoEvento[playerid] == 1)
	{
		SendClientMessage(playerid, Vermelho, "Você foi expulso do evento.");
		return 1;
	}
	if(noevento[playerid] == 1)
	{
		SendClientMessage(playerid, Vermelho, "Você já está no evento.");
		return 1;
	}
	if(Proibido == 1)
	{
		SendClientMessage(playerid, Vermelho, "Evento cancelado ou já começou.");
		return 1;
	}
	if(EventoCriado == 1)
	{
		if(PlayersNoEvento == VagasNoEvento)
		{
			SendClientMessage(playerid, Amarelo, "Acabaram-se as vagas no evento, tente no próximo.");
		}
		else
		{
			PlayersNoEvento++;
			noevento[playerid] = 1;
			ResetPlayerWeapons(playerid);
			SetPlayerInterior(playerid, interiore);
			SetPlayerPos(playerid, eventoX, eventoY, eventoZ);

			TogglePlayerControllable(playerid, false);
			SetTimerEx("DestogglePlayerControllable", 1000, 0, "d", playerid);

			format(STRX, sizeof(STRX), "{FFFFFF}O(a) {00BFFF}%s {FFFFFF}foi para o evento. Quer ir? Use: {00BFFF}/irevento - Vagas: {FFFFFF}%d/%d", GetPlayerNameEx(playerid), PlayersNoEvento, VagasNoEvento);
			SendClientMessageToAll(Vermelho, STRX);
		}
	}
	return 1;
}

stock SetPlayerEventExit(playerid)
{
	if(noevento[playerid] == 1)
	{
	    PlayersNoEvento--;
		noevento[playerid] = 0;
		SpawnPlayer(playerid);
		format(STRX, sizeof(STRX), "{FF0000}O(a) {FFFFFF}%s {FF0000}saiu do evento. {FFFFFF}( /sairevento ).", GetPlayerNameEx(playerid));
		SendClientMessageToAll(Amarelo, STRX);
	}
	else
	{
		SendClientMessage(playerid, Amarelo, "Você não está em um evento.");
	}
	return 1;
}

stock ChatProximo(playerid, text[])
{
	new Float:chatx, Float:chaty, Float:chatz;
	GetPlayerPos(playerid, chatx, chaty, chatz);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInRangeOfPoint(i, 50.0, chatx, chaty, chatz))
			{
				format(STRX, sizeof(STRX), "[ID: %d] (») Chat Próximo (») %s", playerid, text);
				SendPlayerMessageToPlayer(i, playerid, STRX);
			}
		}
	}
	return 1;
}

stock GetNumberOfPlayersOnThisIP(test_ip[])
{
	new against_ip[32+1];
	new i = 0;
	new ip_count = 0;
	for(i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			GetPlayerIp(i, against_ip, 32);
			if(!strcmp(against_ip, test_ip)) ip_count++;
		}
	}
	return ip_count;
}

stock aKick(playerid, pname[])
{
	new szIP[16];
	bIllegalPlayer[playerid] = true;

	#if _CHANGE_NAME_BEFORE_KICK
	SetPlayerName(playerid, szTmpKickName);
	#endif

	GetPlayerIp(playerid, szIP, 16);

	SendClientMessage(playerid, BLUEWHITE, "~~ ~~ ~~ ~~ ~~~~ ~~ ~~ ~~ ~~~~ ~~ ~~ ~~ ~~~~ ~~ ~~");
	SendClientMessage(playerid, Vermelho, " Este tipo de nick não está mais sendo permitido no servidor.");
	SendClientMessage(playerid, Amarelo, " Use um nick no formato \"Nome_Sobrenome\" para se registrar/logar.");
	SendClientMessage(playerid, BLUEWHITE, "~~ ~~ ~~ ~~ ~~~~ ~~ ~~ ~~ ~~~~ ~~ ~~ ~~ ~~~~ ~~ ~~");

	print("\n================================================");
	printf("[protetor] %s kickado por usar um nick proibido.", pname);
	printf("ID: %d | IP: %s", playerid, szIP);
	print("================================================\n");

	Kick(playerid);
	return 0;
}

// Corrida Pista 1
stock DestroyVehiclesPista1()
{
	Loop(o, sizeof(VehiclesFixPista1))
	{
		DestroyVehicle(VehiclesFixPista1[o]);
		VehiclesFixPista1[o] = INVALID_VEHICLE_ID;
	}
	return 1;
}

stock AddVehiclesPista1()
{
	VehiclesFixPista1[0] = AddStaticVehicle(411, 1871.5778, -73.0314, 34.6071, 161.6082, -1, -1);
	VehiclesFixPista1[1] = AddStaticVehicle(411, 1876.3944, -74.4538, 34.5786, 162.9435, -1, -1);
	VehiclesFixPista1[2] = AddStaticVehicle(451, 1879.8948, -63.5898, 34.5591, 162.6328, -1, -1);
	VehiclesFixPista1[3] = AddStaticVehicle(451, 1875.4145, -61.9993, 34.5584, 160.0901, -1, -1);
	VehiclesFixPista1[4] = AddStaticVehicle(541, 1882.9382, -54.6106, 34.4766, 162.5410, -1, -1);
	VehiclesFixPista1[5] = AddStaticVehicle(541, 1878.2509, -53.0440, 34.4764, 160.5117, -1, -1);
	return 1;
}

stock DeletePlayerPistaRace1(playerid)
{
	Loop(o, 20)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista1[playerid][o]))
		{
			DestroyDynamicRaceCP(RaceChecksPista1[playerid][o]);
			RaceChecksPista1[playerid][o] = -1;
		}
	}
	return 1;
}

stock CreatePlayerPistaRace1(playerid)
{
	RaceChecksPista1[playerid][0] = CreateDynamicRaceCP(2, 1864.0175, -105.7350, 34.5942, 1443.5744, -316.3446, 2.9241, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][1] = CreateDynamicRaceCP(0, 1443.5744, -316.3446, 2.9241, 1234.4022, -417.5328, 3.5927, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][2] = CreateDynamicRaceCP(0, 1234.4022, -417.5328, 3.5927, 831.9293, -559.8767, 15.8123, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][3] = CreateDynamicRaceCP(0, 831.9293, -559.8767, 15.8123, 722.7717, -521.7700, 15.8093, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][4] = CreateDynamicRaceCP(0, 722.7717, -521.7700, 15.8093, 643.0751, -475.2996, 15.8131, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][5] = CreateDynamicRaceCP(0, 643.0751, -475.2996, 15.8131, 429.1912, -405.9950, 27.2360, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][6] = CreateDynamicRaceCP(0, 429.1912, -405.9950, 27.2360, 220.4114, -281.4731, 1.0546, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][7] = CreateDynamicRaceCP(0, 220.4114, -281.4731, 1.0546, 236.7087, -213.0933, 1.0533, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][8] = CreateDynamicRaceCP(0, 236.7087, -213.0933, 1.0533, 330.6267, -207.3919, 0.5423, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][9] = CreateDynamicRaceCP(0, 330.6267, -207.3919, 0.5423, 339.6791, -143.0006, 1.0497, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][10] = CreateDynamicRaceCP(0, 339.6791, -143.0006, 1.0497, 526.2964, -133.2704, 37.4582, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][11] = CreateDynamicRaceCP(0, 526.2964, -133.2704, 37.4582, 523.1275, 243.1618, 14.0824, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][12] = CreateDynamicRaceCP(0, 523.1275, 243.1618, 14.0824, 661.4911, 311.4994, 19.5078, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][13] = CreateDynamicRaceCP(0, 661.4911, 311.4994, 19.5078, 1043.5396, 519.7297, 19.5075, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][14] = CreateDynamicRaceCP(0, 1043.5396, 519.7297, 19.5075, 1371.6448, 432.7203, 19.3973, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][15] = CreateDynamicRaceCP(0, 1371.6448, 432.7203, 19.3973, 1283.4089, 235.7068, 19.0302, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][16] = CreateDynamicRaceCP(0, 1283.4089, 235.7068, 19.0302, 1243.6182, 30.8573, 24.6406, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][17] = CreateDynamicRaceCP(0, 1243.6182, 30.8573, 24.6406, 1288.2038, -89.7702, 36.3855, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][18] = CreateDynamicRaceCP(0, 1288.2038, -89.7702, 36.3855, 1207.5178, -148.9743, 39.6301, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista1[playerid][19] = CreateDynamicRaceCP(1, 1207.5178, -148.9743, 39.6301, 0.0, 0.0, 0.0, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);

	Loop(o, 20)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista1[playerid][o]))
		{
			TogglePlayerDynamicRaceCP(playerid, RaceChecksPista1[playerid][o], false);
		}
	}
	return 1;
}

// Corrida Pista 2
stock DestroyVehiclesPista2()
{
	Loop(o, sizeof(VehiclesFixPista2))
	{
		DestroyVehicle(VehiclesFixPista2[o]);
		VehiclesFixPista2[o] = INVALID_VEHICLE_ID;
	}
	return 1;
}

stock AddVehiclesPista2()
{
	VehiclesFixPista2[0] = AddStaticVehicle(451, 2112.0083, 837.2313, 6.4514, 92.1345, -1, -1);
	VehiclesFixPista2[1] = AddStaticVehicle(451, 2112.1135, 831.5401, 6.4417, 89.6593, -1, -1);
	VehiclesFixPista2[2] = AddStaticVehicle(429, 2122.7131, 831.3756, 6.5733, 88.9166, -1, -1);
	VehiclesFixPista2[3] = AddStaticVehicle(429, 2122.7868, 837.2678, 6.5807, 88.5652, -1, -1);
	VehiclesFixPista2[4] = AddStaticVehicle(541, 2134.4777, 831.0501, 6.3943, 90.0049, -1, -1);
	VehiclesFixPista2[5] = AddStaticVehicle(541, 2134.5703, 837.0393, 6.3668, 88.6232, -1, -1);
	VehiclesFixPista2[6] = AddStaticVehicle(415, 2144.5908, 831.1053, 6.4947, 90.1793, -1, -1);
	VehiclesFixPista2[7] = AddStaticVehicle(415, 2144.4125, 836.7017, 6.5131, 89.9270, -1, -1);
	VehiclesFixPista2[8] = AddStaticVehicle(402, 2153.7216, 831.4035, 6.5658, 91.2441, -1, -1);
	VehiclesFixPista2[9] = AddStaticVehicle(402, 2153.8432, 836.9471, 6.5736, 91.3767, -1, -1);
	return 1;
}

stock DeletePlayerPistaRace2(playerid)
{
	Loop(o, 16)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista2[playerid][o]))
		{
			DestroyDynamicRaceCP(RaceChecksPista2[playerid][o]);
			RaceChecksPista2[playerid][o] = -1;
		}
	}
	return 1;
}

stock CreatePlayerPistaRace2(playerid)
{
	RaceChecksPista2[playerid][0] = CreateDynamicRaceCP(2, 2088.8320, 834.1641, 6.3132, 1799.6763, 834.1615, 10.2377, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][1] = CreateDynamicRaceCP(0, 1799.6763, 834.1615, 10.2377, 1361.4133, 833.7824, 6.3914, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][2] = CreateDynamicRaceCP(0, 1361.4133, 833.7824, 6.3914, 1067.6418, 785.2622, 10.2447, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][3] = CreateDynamicRaceCP(0, 1067.6418, 785.2622, 10.2447, 403.2198, 748.8020, 5.6085, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][4] = CreateDynamicRaceCP(0, 403.2198, 748.8020, 5.6085, -38.8023, 598.0864, 11.5255, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][5] = CreateDynamicRaceCP(0, -38.8023, 598.0864, 11.5255, -599.5037, 630.3817, 16.2100, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][6] = CreateDynamicRaceCP(0, -599.5037, 630.3817, 16.2100, -904.2575, 923.9509, 18.4233, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][7] = CreateDynamicRaceCP(0, -904.2575, 923.9509, 18.4233, -1025.5784, 1255.0361, 32.1752, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][8] = CreateDynamicRaceCP(0, -1025.5784, 1255.0361, 32.1752, -1185.5380, 1637.4984, 15.7092, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][9] = CreateDynamicRaceCP(0, -1185.5380, 1637.4984, 15.7092, -1605.8580, 1775.7564, 9.4187, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][10] = CreateDynamicRaceCP(0, -1605.8580, 1775.7564, 9.4187, -1757.1572, 2177.3037, 16.0770, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][11] = CreateDynamicRaceCP(0, -1757.1572, 2177.3037, 16.0770, -1959.5710, 2510.3256, 55.1704, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][12] = CreateDynamicRaceCP(0, -1959.5710, 2510.3256, 55.1704, -2645.7451, 2593.6086, 72.3064, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][13] = CreateDynamicRaceCP(0, -2645.7451, 2593.6086, 72.3064, -2736.5612, 2351.3815, 71.5684, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][14] = CreateDynamicRaceCP(0, -2736.5612, 2351.3815, 71.5684, -2676.8994, 1275.4371, 54.9945, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista2[playerid][15] = CreateDynamicRaceCP(1, -2676.8994, 1275.4371, 54.9945, 0.0, 0.0, 0.0, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);

	Loop(o, 16)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista2[playerid][o]))
		{
			TogglePlayerDynamicRaceCP(playerid, RaceChecksPista2[playerid][o], false);
		}
	}
	return 1;
}

// Corrida Pista 3
stock DestroyVehiclesPista3()
{
	Loop(o, sizeof(VehiclesFixPista3))
	{
		DestroyVehicle(VehiclesFixPista3[o]);
		VehiclesFixPista3[o] = INVALID_VEHICLE_ID;
	}
	return 1;
}

stock AddVehiclesPista3()
{
	VehiclesFixPista3[0] = AddStaticVehicle(424, -1814.8714, -608.2200, 16.0187, 181.7880, -1, -1);
	VehiclesFixPista3[1] = AddStaticVehicle(424, -1821.1149, -608.2612, 16.0183, 181.6147, -1, -1);
	VehiclesFixPista3[2] = AddStaticVehicle(434, -1815.6009, -597.2133, 16.1386, 184.2243, -1, -1);
	VehiclesFixPista3[3] = AddStaticVehicle(434, -1820.6834, -597.2591, 16.1334, 178.9229, -1, -1);
	VehiclesFixPista3[4] = AddStaticVehicle(426, -1816.0809, -584.9099, 16.1681, 179.3025, -1, -1);
	VehiclesFixPista3[5] = AddStaticVehicle(426, -1820.7562, -585.0967, 16.1681, 180.3774, -1, -1);
	VehiclesFixPista3[6] = AddStaticVehicle(500, -1816.0817, -574.6522, 16.1611, 179.7405, -1, -1);
	VehiclesFixPista3[7] = AddStaticVehicle(500, -1820.9528, -574.6641, 16.1759, 179.4728, -1, -1);
	VehiclesFixPista3[8] = AddStaticVehicle(573, -1816.2117, -562.1856, 16.0870, 180.5198, -1, -1);
	VehiclesFixPista3[9] = AddStaticVehicle(573, -1821.0740, -562.4643, 16.0927, 181.3700, -1, -1);
	return 1;
}

stock DeletePlayerPistaRace3(playerid)
{
	Loop(o, 45)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista3[playerid][o]))
		{
			DestroyDynamicRaceCP(RaceChecksPista3[playerid][o]);
			RaceChecksPista3[playerid][o] = -1;
		}
	}
	return 1;
}

stock CreatePlayerPistaRace3(playerid)
{
	RaceChecksPista3[playerid][0] = CreateDynamicRaceCP(2, -1817.0369, -635.8119, 16.2020, -1813.6044, -928.5433, 45.3811, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][1] = CreateDynamicRaceCP(0, -1813.6044, -928.5433, 45.3811, -1715.6846, -1222.2409, 52.8900, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][2] = CreateDynamicRaceCP(0, -1715.6846, -1222.2409, 52.8900, -1527.1934, -1415.7718, 41.4916, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][3] = CreateDynamicRaceCP(0, -1527.1934, -1415.7718, 41.4916, -1694.7965, -1129.3333, 72.6468, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][4] = CreateDynamicRaceCP(0, -1694.7965, -1129.3333, 72.6468, -1635.1198, -818.0968, 92.2724, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][5] = CreateDynamicRaceCP(0, -1635.1198, -818.0968, 92.2724, -1596.7639, -1143.8266, 102.4493, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][6] = CreateDynamicRaceCP(0, -1596.7639, -1143.8266, 102.4493, -1448.1711, -1321.7893, 100.0249, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][7] = CreateDynamicRaceCP(0, -1448.1711, -1321.7893, 100.0249, -1262.8804, -1361.0379, 119.1807, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][8] = CreateDynamicRaceCP(0, -1262.8804, -1361.0379, 119.1807, -903.5512, -1342.2023, 120.4510, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][9] = CreateDynamicRaceCP(0, -903.5512, -1342.2023, 120.4510, -896.4017, -1110.6635, 98.4010, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][10] = CreateDynamicRaceCP(0, -896.4017, -1110.6635, 98.4010, -1220.1328, -760.1655, 62.8508, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][11] = CreateDynamicRaceCP(0, -1220.1328, -760.1655, 62.8508, -995.7064, -427.2893, 35.8337, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][12] = CreateDynamicRaceCP(0, -995.7064, -427.2893, 35.8337, -942.3453, -211.4680, 40.0952, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][13] = CreateDynamicRaceCP(0, -942.3453, -211.4680, 40.0952, -727.7973, -77.2746, 67.7901, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][14] = CreateDynamicRaceCP(0, -727.7973, -77.2746, 67.7901, -739.5809, -5.3137, 54.2076, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][15] = CreateDynamicRaceCP(0, -739.5809, -5.3137, 54.2076, -817.0096, 13.1030, 32.7930, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][16] = CreateDynamicRaceCP(0, -817.0096, 13.1030, 32.7930, -739.1218, 112.1506, 14.4399, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][17] = CreateDynamicRaceCP(0, -739.1218, 112.1506, 14.4399, -685.2813, 248.5755, 1.6427, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][18] = CreateDynamicRaceCP(0, -685.2813, 248.5755, 1.6427, -198.6988, 251.3305, 11.6478, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][19] = CreateDynamicRaceCP(0, -198.6988, 251.3305, 11.6478, -140.3588, 533.6779, 6.7430, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][20] = CreateDynamicRaceCP(0, -140.3588, 533.6779, 6.7430, -399.5688, 557.3222, 16.4369, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][21] = CreateDynamicRaceCP(0, -399.5688, 557.3222, 16.4369, -801.4528, 722.5551, 18.0903, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][22] = CreateDynamicRaceCP(0, -801.4528, 722.5551, 18.0903, -961.1530, 1135.4577, 29.4100, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][23] = CreateDynamicRaceCP(0, -961.1530, 1135.4577, 29.4100, -1123.3880, 1471.4958, 24.5688, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][24] = CreateDynamicRaceCP(0, -1123.3880, 1471.4958, 24.5688, -1389.2344, 1708.0734, 4.0375, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][25] = CreateDynamicRaceCP(0, -1389.2344, 1708.0734, 4.0375, -1611.4854, 1781.8427, 9.7396, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][26] = CreateDynamicRaceCP(0, -1611.4854, 1781.8427, 9.7396, -1729.4720, 2166.1196, 16.9425, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][27] = CreateDynamicRaceCP(0, -1729.4720, 2166.1196, 16.9425, -1976.2796, 2538.6701, 55.0909, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][28] = CreateDynamicRaceCP(0, -1976.2796, 2538.6701, 55.0909, -2362.4697, 2634.3100, 53.1894, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][29] = CreateDynamicRaceCP(0, -2362.4697, 2634.3100, 53.1894, -2738.4631, 2361.9433, 71.5715, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][30] = CreateDynamicRaceCP(0, -2738.4631, 2361.9433, 71.5715, -2673.8652, 1884.2237, 65.6271, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][31] = CreateDynamicRaceCP(0, -2673.8652, 1884.2237, 65.6271, -2645.3686, 1207.8115, 54.7219, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][32] = CreateDynamicRaceCP(0, -2645.3686, 1207.8115, 54.7219, -2457.9172, 1217.5419, 34.6462, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][33] = CreateDynamicRaceCP(0, -2457.9172, 1217.5419, 34.6462, -2444.0495, 1376.9058, 6.6119, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][34] = CreateDynamicRaceCP(0, -2444.0495, 1376.9058, 6.6119, -2238.5917, 1332.2816, 6.6039, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][35] = CreateDynamicRaceCP(0, -2238.5917, 1332.2816, 6.6039, -2014.4545, 1308.8612, 6.6053, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][36] = CreateDynamicRaceCP(0, -2014.4545, 1308.8612, 6.6053, -1722.4250, 1335.7371, 6.6043, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][37] = CreateDynamicRaceCP(0, -1722.4250, 1335.7371, 6.6043, -1583.3269, 1063.9428, 6.6064, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][38] = CreateDynamicRaceCP(0, -1583.3269, 1063.9428, 6.6064, -1559.3967, 841.3081, 6.6034, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][39] = CreateDynamicRaceCP(0, -1559.3967, 841.3081, 6.6034, -1559.0845, 665.1401, 6.6061, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][40] = CreateDynamicRaceCP(0, -1559.0845, 665.1401, 6.6061, -1759.4393, 294.5697, 7.0207, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][41] = CreateDynamicRaceCP(0, -1759.4393, 294.5697, 7.0207, -1799.5322, -26.5773, 14.6058, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][42] = CreateDynamicRaceCP(0, -1799.5322, -26.5773, 14.6058, -1799.1837, -254.4425, 18.5745, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][43] = CreateDynamicRaceCP(0, -1799.1837, -254.4425, 18.5745, -1818.1372, -612.6794, 15.7208, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista3[playerid][44] = CreateDynamicRaceCP(1, -1823.7214, -527.1090, 14.9372, 0.0, 0.0, 0.0, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);

	Loop(o, 45)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista3[playerid][o]))
		{
			TogglePlayerDynamicRaceCP(playerid, RaceChecksPista3[playerid][o], false);
		}
	}
	return 1;
}

// Fliping Pista 4
stock DestroyVehiclesPista4()
{
	Loop(o, sizeof(VehiclesFixPista4))
	{
		DestroyVehicle(VehiclesFixPista4[o]);
		VehiclesFixPista4[o] = INVALID_VEHICLE_ID;
	}
	return 1;
}

stock AddVehiclesPista4()
{
	VehiclesFixPista4[0] = AddStaticVehicle(513, -1543.2855, -61.5240, 14.7013, 314.1155, -1, -1);
	VehiclesFixPista4[1] = AddStaticVehicle(513, -1554.3980, -50.6917, 14.6961, 313.2176, -1, -1);
	VehiclesFixPista4[2] = AddStaticVehicle(513, -1566.8707, -64.4562, 14.7006, 315.9618, -1, -1);
	VehiclesFixPista4[3] = AddStaticVehicle(513, -1557.3172, -74.4843, 14.7005, 312.9379, -1, -1);
	return 1;
}

stock DeletePlayerPistaRace4(playerid)
{
	Loop(o, 24)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista4[playerid][o]))
		{
			DestroyDynamicRaceCP(RaceChecksPista4[playerid][o]);
			RaceChecksPista4[playerid][o] = -1;
		}
	}
	return 1;
}

stock CreatePlayerPistaRace4(playerid)
{
	RaceChecksPista4[playerid][0] = CreateDynamicRaceCP(2, -1497.1588, -4.4474, 14.6941, -1243.4791, 245.9857, 41.5711, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][1] = CreateDynamicRaceCP(3, -1243.4791, 245.9857, 41.5711, -937.8276, 570.9155, 89.6367, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][2] = CreateDynamicRaceCP(3, -937.8276, 570.9155, 89.6367, -610.6488, 837.3283, 153.8237, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][3] = CreateDynamicRaceCP(3, -610.6488, 837.3283, 153.8237, -217.9287, 930.1102, 231.6722, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][4] = CreateDynamicRaceCP(3, -217.9287, 930.1102, 231.6722, 193.2444, 841.7366, 296.5800, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][5] = CreateDynamicRaceCP(3, 193.2444, 841.7366, 296.5800, 581.5132, 652.4037, 358.6132, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][6] = CreateDynamicRaceCP(3, 581.5132, 652.4037, 358.6132, 1013.5503, 642.3397, 412.1338, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][7] = CreateDynamicRaceCP(3, 1013.5503, 642.3397, 412.1338, 1387.2994, 895.2841, 435.9366, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][8] = CreateDynamicRaceCP(3, 1387.2994, 895.2841, 435.9366, 1781.7132, 1135.0363, 424.8243, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][9] = CreateDynamicRaceCP(3, 1781.7132, 1135.0363, 424.8243, 2234.0419, 931.6644, 333.3006, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][10] = CreateDynamicRaceCP(3, 2234.0419, 931.6644, 333.3006, 2411.1594, 487.3965, 285.4300, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][11] = CreateDynamicRaceCP(3, 2411.1594, 487.3965, 285.4300, 2354.5695, -2.4241, 242.9647, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][12] = CreateDynamicRaceCP(3, 2354.5695, -2.4241, 242.9647, 2299.7028, -467.5471, 253.9732, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][13] = CreateDynamicRaceCP(3, 2299.7028, -467.5471, 253.9732, 2110.8857, -877.4959, 272.3986, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][14] = CreateDynamicRaceCP(3, 2110.8857, -877.4959, 272.3986, 1845.9390, -1265.5473, 277.1255, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][15] = CreateDynamicRaceCP(3, 1845.9390, -1265.5473, 277.1255, 1466.6323, -1572.3651, 228.8670, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][16] = CreateDynamicRaceCP(3, 1466.6323, -1572.3651, 228.8670, 1026.1445, -1844.4003, 134.1884, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][17] = CreateDynamicRaceCP(3, 1026.1445, -1844.4003, 134.1884, 689.6018, -2223.6774, 52.4772, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][18] = CreateDynamicRaceCP(3, 689.6018, -2223.6774, 52.4772, 824.7373, -2674.1745, 22.1783, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][19] = CreateDynamicRaceCP(3, 824.7373, -2674.1745, 22.1783, 1232.5562, -2659.0332, 33.7494, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][20] = CreateDynamicRaceCP(3, 1232.5562, -2659.0332, 33.7494, 1606.7535, -2598.4724, 28.1646, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][21] = CreateDynamicRaceCP(3, 1606.7535, -2598.4724, 28.1646, 1863.4034, -2592.2314, 14.1199, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][22] = CreateDynamicRaceCP(3, 1863.4034, -2592.2314, 14.1199, 2024.8247, -2592.8437, 14.1473, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista4[playerid][23] = CreateDynamicRaceCP(4, 2024.8247, -2592.8437, 14.1473, 2076.1113, -2592.9821, 14.0925, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);

	Loop(o, 24)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista4[playerid][o]))
		{
			TogglePlayerDynamicRaceCP(playerid, RaceChecksPista4[playerid][o], false);
		}
	}
	return 1;
}

// Fliping Pista 5
stock DestroyVehiclesPista5()
{
	Loop(o, sizeof(VehiclesFixPista5))
	{
		DestroyVehicle(VehiclesFixPista5[o]);
		VehiclesFixPista5[o] = INVALID_VEHICLE_ID;
	}
	return 1;
}

stock AddVehiclesPista5()
{
	VehiclesFixPista5[0] = AddStaticVehicle(520, 1484.7895, 1681.1741, 11.2739, 180.5462, -1, -1);
	VehiclesFixPista5[1] = AddStaticVehicle(520, 1469.2293, 1681.3697, 11.2706, 180.8195, -1, -1);
	VehiclesFixPista5[2] = AddStaticVehicle(520, 1468.7080, 1701.7501, 11.2721, 181.0956, -1, -1);
	VehiclesFixPista5[3] = AddStaticVehicle(520, 1486.6396, 1702.5288, 11.2775, 181.0976, -1, -1);
	return 1;
}

stock DeletePlayerPistaRace5(playerid)
{
	Loop(o, 36)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista5[playerid][o]))
		{
			DestroyDynamicRaceCP(RaceChecksPista5[playerid][o]);
			RaceChecksPista5[playerid][o] = -1;
		}
	}
	return 1;
}

stock CreatePlayerPistaRace5(playerid)
{
	RaceChecksPista5[playerid][0] = CreateDynamicRaceCP(2, 1477.1896, 1630.1248, 11.2711, 1478.0155, 1353.0626, 33.1948, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][1] = CreateDynamicRaceCP(3, 1478.0155, 1353.0626, 33.1948, 1477.4868, 990.9283, 90.2106, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][2] = CreateDynamicRaceCP(3, 1477.4868, 990.9283, 90.2106, 1477.3276, 638.8137, 158.1636, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][3] = CreateDynamicRaceCP(3, 1477.3276, 638.8137, 158.1636, 1465.0842, 301.3023, 224.6444, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][4] = CreateDynamicRaceCP(3, 1465.0842, 301.3023, 224.6444, 1212.0548, 96.9810, 278.6677, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][5] = CreateDynamicRaceCP(3, 1212.0548, 96.9810, 278.6677, 895.9951, 196.7801, 350.3612, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][6] = CreateDynamicRaceCP(3, 895.9951, 196.7801, 350.3612, 612.8447, 329.6661, 421.0056, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][7] = CreateDynamicRaceCP(3, 612.8447, 329.6661, 421.0056, 312.6764, 470.9323, 490.9841, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][8] = CreateDynamicRaceCP(3, 312.6764, 470.9323, 490.9841, 26.6336, 458.1849, 562.3390, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][9] = CreateDynamicRaceCP(3, 26.6336, 458.1849, 562.3390, -162.1933, 244.1264, 627.2599, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][10] = CreateDynamicRaceCP(3, -162.1933, 244.1264, 627.2599, -373.9301, -2.0307, 697.6351, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][11] = CreateDynamicRaceCP(3, -373.9301, -2.0307, 697.6351, -610.9032, -185.9042, 772.1887, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][12] = CreateDynamicRaceCP(3, -610.9032, -185.9042, 772.1887, -857.3960, -362.0125, 825.2572, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][13] = CreateDynamicRaceCP(3, -857.3960, -362.0125, 825.2572, -1190.4766, -614.6792, 708.0275, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][14] = CreateDynamicRaceCP(3, -1190.4766, -614.6792, 708.0275, -1436.5609, -1015.9446, 682.2529, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][15] = CreateDynamicRaceCP(3, -1436.5609, -1015.9446, 682.2529, -1597.5217, -1371.1771, 673.1580, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][16] = CreateDynamicRaceCP(3, -1597.5217, -1371.1771, 673.1580, -1736.2453, -1726.8924, 618.9425, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][17] = CreateDynamicRaceCP(3, -1736.2453, -1726.8924, 618.9425, -2066.1813, -1912.3507, 561.7332, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][18] = CreateDynamicRaceCP(3, -2066.1813, -1912.3507, 561.7332, -2312.0825, -1707.6739, 551.4379, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][19] = CreateDynamicRaceCP(3, -2312.0825, -1707.6739, 551.4379, -2481.7495, -1401.5034, 514.5587, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][20] = CreateDynamicRaceCP(3, -2481.7495, -1401.5034, 514.5587, -2653.1840, -1038.2818, 451.1626, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][21] = CreateDynamicRaceCP(3, -2653.1840, -1038.2818, 451.1626, -2573.0493, -660.7384, 406.6000, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][22] = CreateDynamicRaceCP(3, -2573.0493, -660.7384, 406.6000, -2391.4433, -298.6039, 333.2171, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][23] = CreateDynamicRaceCP(3, -2391.4433, -298.6039, 333.2171, -2182.3535, 67.0687, 262.4259, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][24] = CreateDynamicRaceCP(3, -2182.3535, 67.0687, 262.4259, -1886.3737, 298.3109, 236.8541, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][25] = CreateDynamicRaceCP(3, -1886.3737, 298.3109, 236.8541, -1622.2294, 546.4017, 208.0858, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][26] = CreateDynamicRaceCP(3, -1622.2294, 546.4017, 208.0858, -1320.4873, 755.8296, 170.7363, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][27] = CreateDynamicRaceCP(3, -1320.4873, 755.8296, 170.7363, -1081.4721, 495.1511, 103.1472, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][28] = CreateDynamicRaceCP(3, -1081.4721, 495.1511, 103.1472, -888.8521, 220.9732, 96.0841, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][29] = CreateDynamicRaceCP(3, -888.8521, 220.9732, 96.0841, -595.5953, 258.7252, 71.9631, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][30] = CreateDynamicRaceCP(3, -595.5953, 258.7252, 71.9631, -598.7633, 564.4616, 51.8943, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][31] = CreateDynamicRaceCP(3, -598.7633, 564.4616, 51.8943, -893.3557, 618.5801, 40.7614, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][32] = CreateDynamicRaceCP(3, -893.3557, 618.5801, 40.7614, -1100.4595, 396.1115, 29.5490, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][33] = CreateDynamicRaceCP(3, -1100.4595, 396.1115, 29.5490, -1492.5261, 0.0213, 14.6285, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][34] = CreateDynamicRaceCP(3, -1492.5261, 0.0213, 14.6285, -1598.3479, -105.8283, 14.6241, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista5[playerid][35] = CreateDynamicRaceCP(4, -1598.3479, -105.8283, 14.6241, -1669.3297, -180.3710, 14.8684, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);

	Loop(o, 36)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista5[playerid][o]))
		{
			TogglePlayerDynamicRaceCP(playerid, RaceChecksPista5[playerid][o], false);
		}
	}
	return 1;
}

// Campeonato de Bike
stock DestroyVehiclesPista6()
{
	Loop(o, sizeof(VehiclesFixPista6))
	{
		DestroyVehicle(VehiclesFixPista6[o]);
		VehiclesFixPista6[o] = INVALID_VEHICLE_ID;
	}
	return 1;
}

stock AddVehiclesPista6()
{
	VehiclesFixPista6[0] = AddStaticVehicle(510, -2308.1005, -1661.8363, 483.2102, 207.1484, -1, -1);
	VehiclesFixPista6[1] = AddStaticVehicle(510, -2304.4758, -1660.5560, 483.2068, 204.3285, -1, -1);
	VehiclesFixPista6[2] = AddStaticVehicle(510, -2301.2431, -1667.2924, 483.2675, 206.3182, -1, -1);
	VehiclesFixPista6[3] = AddStaticVehicle(510, -2304.2236, -1668.7772, 483.2519, 206.0329, -1, -1);
	VehiclesFixPista6[4] = AddStaticVehicle(510, -2301.4433, -1674.4841, 483.3056, 206.0284, -1, -1);
	VehiclesFixPista6[5] = AddStaticVehicle(510, -2298.4570, -1673.0300, 483.2241, 206.6553, -1, -1);
	return 1;
}

stock DeletePlayerPistaRace6(playerid)
{
	Loop(o, 11)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista6[playerid][o]))
		{
			DestroyDynamicRaceCP(RaceChecksPista6[playerid][o]);
			RaceChecksPista6[playerid][o] = -1;
		}
	}
	return 1;
}

stock CreatePlayerPistaRace6(playerid)
{
	RaceChecksPista6[playerid][0] = CreateDynamicRaceCP(2, -2287.3432, -1700.1368, 478.4811, -2453.8747, -1721.3782, 430.3252, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista6[playerid][1] = CreateDynamicRaceCP(0, -2453.8747, -1721.3782, 430.3252, -2446.5361, -1811.9833, 409.8394, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista6[playerid][2] = CreateDynamicRaceCP(0, -2446.5361, -1811.9833, 409.8394, -2550.6477, -1663.1605, 399.6877, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista6[playerid][3] = CreateDynamicRaceCP(0, -2550.6477, -1663.1605, 399.6877, -2532.6477, -1803.5378, 375.7306, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista6[playerid][4] = CreateDynamicRaceCP(0, -2532.6477, -1803.5378, 375.7306, -2594.5007, -1628.8627, 343.5939, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista6[playerid][5] = CreateDynamicRaceCP(0, -2594.5007, -1628.8627, 343.5939, -2522.1889, -1889.4002, 294.9654, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista6[playerid][6] = CreateDynamicRaceCP(0, -2522.1889, -1889.4002, 294.9654, -2651.0314, -1732.4049, 257.4855, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista6[playerid][7] = CreateDynamicRaceCP(0, -2651.0314, -1732.4049, 257.4855, -2413.6711, -2092.7531, 120.4696, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista6[playerid][8] = CreateDynamicRaceCP(0, -2413.6711, -2092.7531, 120.4696, -2102.5759, -1883.6650, 110.1320, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista6[playerid][9] = CreateDynamicRaceCP(0, -2102.5759, -1883.6650, 110.1320, -2370.7817, -2193.6804, 33.0386, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista6[playerid][10] = CreateDynamicRaceCP(1, -2370.7817, -2193.6804, 33.0386, 0.0, 0.0, 0.0, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);

	Loop(o, 11)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista6[playerid][o]))
		{
			TogglePlayerDynamicRaceCP(playerid, RaceChecksPista6[playerid][o], false);
		}
	}
	return 1;
}

// Moto Cross
stock DestroyVehiclesPista7()
{
	Loop(o, sizeof(VehiclesFixPista7))
	{
		DestroyVehicle(VehiclesFixPista7[o]);
		VehiclesFixPista7[o] = INVALID_VEHICLE_ID;
	}
	return 1;
}

stock AddVehiclesPista7()
{
	VehiclesFixPista7[0] = AddStaticVehicle(468, -1119.7257, -1650.7763, 76.0442, 269.5847, -1, -1);
	VehiclesFixPista7[1] = AddStaticVehicle(468, -1114.7174, -1648.2440, 76.0360, 276.7113, -1, -1);
	VehiclesFixPista7[2] = AddStaticVehicle(468, -1114.3603, -1650.2233, 75.9569, 275.9147, -1, -1);
	VehiclesFixPista7[3] = AddStaticVehicle(468, -1119.9167, -1646.1334, 76.0362, 271.6878, -1, -1);
	VehiclesFixPista7[4] = AddStaticVehicle(468, -1119.9995, -1643.1785, 76.0366, 270.1105, -1, -1);
	VehiclesFixPista7[5] = AddStaticVehicle(468, -1114.9321, -1645.7495, 76.0363, 274.8730, -1, -1);
	VehiclesFixPista7[6] = AddStaticVehicle(468, -1115.0314, -1642.9506, 76.0352, 273.2244, -1, -1);
	VehiclesFixPista7[7] = AddStaticVehicle(468, -1120.0532, -1648.3682, 76.0360, 274.9119, -1, -1);
	return 1;
}

stock DeletePlayerPistaRace7(playerid)
{
	Loop(o, 30)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista7[playerid][o]))
		{
			DestroyDynamicRaceCP(RaceChecksPista7[playerid][o]);
			RaceChecksPista7[playerid][o] = -1;
		}
	}
	return 1;
}

stock CreatePlayerPistaRace7(playerid)
{
	RaceChecksPista7[playerid][0] = CreateDynamicRaceCP(2, -1075.9312, -1647.7534, 75.8352, -894.0790, -1728.1751, 76.7451, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][1] = CreateDynamicRaceCP(0, -894.0790, -1728.1751, 76.7451, -843.9198, -1840.6462, 90.9517, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][2] = CreateDynamicRaceCP(0, -843.9198, -1840.6462, 90.9517, -976.8526, -1928.2049, 79.9729, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][3] = CreateDynamicRaceCP(0, -976.8526, -1928.2049, 79.9729, -1080.1838, -2125.6193, 40.2108, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][4] = CreateDynamicRaceCP(0, -1080.1838, -2125.6193, 40.2108, -812.9376, -2172.1232, 21.7218, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][5] = CreateDynamicRaceCP(0, -812.9376, -2172.1232, 21.7218, -811.6752, -2061.0690, 24.8346, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][6] = CreateDynamicRaceCP(0, -811.6752, -2061.0690, 24.8346, -683.1791, -1862.5756, 13.3253, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][7] = CreateDynamicRaceCP(0, -683.1791, -1862.5756, 13.3253, -626.6577, -2025.2506, 33.4300, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][8] = CreateDynamicRaceCP(0, -626.6577, -2025.2506, 33.4300, -416.8654, -1920.2445, 6.4220, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][9] = CreateDynamicRaceCP(0, -416.8654, -1920.2445, 6.4220, -290.8780, -1947.9688, 24.0538, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][10] = CreateDynamicRaceCP(0, -290.8780, -1947.9688, 24.0538, -338.1653, -2137.8281, 41.7605, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][11] = CreateDynamicRaceCP(0, -338.1653, -2137.8281, 41.7605, -695.9284, -2353.2521, 39.0474, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][12] = CreateDynamicRaceCP(0, -695.9284, -2353.2521, 39.0474, -582.0550, -2368.3962, 27.3218, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][13] = CreateDynamicRaceCP(0, -582.0550, -2368.3962, 27.3218, -781.5469, -2686.8937, 83.2343, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][14] = CreateDynamicRaceCP(0, -781.5469, -2686.8937, 83.2343, -1476.4846, -2634.2043, 43.3461, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][15] = CreateDynamicRaceCP(0, -1476.4846, -2634.2043, 43.3461, -1892.8363, -2421.7363, 32.2854, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][16] = CreateDynamicRaceCP(0, -1892.8363, -2421.7363, 32.2854, -2020.1536, -2507.8725, 32.1578, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][17] = CreateDynamicRaceCP(0, -2020.1536, -2507.8725, 32.1578, -2208.5515, -2357.2878, 30.2936, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][18] = CreateDynamicRaceCP(0, -2208.5515, -2357.2878, 30.2936, -2343.3547, -2252.0161, 17.4335, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][19] = CreateDynamicRaceCP(0, -2343.3547, -2252.0161, 17.4335, -2078.9223, -2040.9357, 63.7055, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][20] = CreateDynamicRaceCP(0, -2078.9223, -2040.9357, 63.7055, -1919.1699, -2078.5395, 60.3648, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][21] = CreateDynamicRaceCP(0, -1919.1699, -2078.5395, 60.3648, -1464.3986, -2155.2487, 4.0851, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][22] = CreateDynamicRaceCP(0, -1464.3986, -2155.2487, 4.0851, -1258.1439, -2276.3051, 21.3842, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][23] = CreateDynamicRaceCP(0, -1258.1439, -2276.3051, 21.3842, -947.0906, -2342.3232, 59.6732, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][24] = CreateDynamicRaceCP(0, -947.0906, -2342.3232, 59.6732, -947.8795, -2168.2648, 34.0454, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][25] = CreateDynamicRaceCP(0, -947.8795, -2168.2648, 34.0454, -1089.5784, -2127.7438, 38.7915, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][26] = CreateDynamicRaceCP(0, -1089.5784, -2127.7438, 38.7915, -970.4613, -1908.1658, 80.0680, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][27] = CreateDynamicRaceCP(0, -970.4613, -1908.1658, 80.0680, -856.6467, -1833.2489, 91.1203, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][28] = CreateDynamicRaceCP(0, -856.6467, -1833.2489, 91.1203, -1079.5357, -1647.1275, 75.9749, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista7[playerid][29] = CreateDynamicRaceCP(1, -1079.5357, -1647.1275, 75.9749, 0.0, 0.0, 0.0, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);

	Loop(o, 30)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista7[playerid][o]))
		{
			TogglePlayerDynamicRaceCP(playerid, RaceChecksPista7[playerid][o], false);
		}
	}
	return 1;
}

// Racha em LS
stock DestroyVehiclesPista8()
{
	Loop(o, sizeof(VehiclesFixPista8))
	{
		DestroyVehicle(VehiclesFixPista8[o]);
		VehiclesFixPista8[o] = INVALID_VEHICLE_ID;
	}
	return 1;
}

stock AddVehiclesPista8()
{
	VehiclesFixPista8[0] = AddStaticVehicle(560, 157.810256, -1537.934570, 10.998129, 328.951446, 91,49);
	VehiclesFixPista8[1] = AddStaticVehicle(560, 162.0289, -1540.7535, 11.3209, 329.0349, 91,49);
	VehiclesFixPista8[2] = AddStaticVehicle(560, 170.235305, -1546.009643, 12.006350, 328.944763, 91,49);
	VehiclesFixPista8[3] = AddStaticVehicle(560, 165.745223, -1543.249877, 11.596120, 328.967681, 91,49);
	VehiclesFixPista8[4] = AddStaticVehicle(562, 163.960494, -1555.205688, 11.270006, 320.686828, 91,49);
	VehiclesFixPista8[5] = AddStaticVehicle(562, 160.137161, -1552.053222, 10.861559, 320.698120, 91,49);
	VehiclesFixPista8[6] = AddStaticVehicle(562, 156.505447, -1549.054077, 10.468168, 320.706848, 91,49);
	VehiclesFixPista8[7] = AddStaticVehicle(562, 153.007751, -1545.567504, 10.091636, 320.708435, 91,49);
	return 1;
}

stock DeletePlayerPistaRace8(playerid)
{
	Loop(o, 14)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista8[playerid][o]))
		{
			DestroyDynamicRaceCP(RaceChecksPista8[playerid][o]);
			RaceChecksPista8[playerid][o] = -1;
		}
	}
	return 1;
}

stock CreatePlayerPistaRace8(playerid)
{
	RaceChecksPista8[playerid][0] = CreateDynamicRaceCP(2, 168.0555, -1535.8660, 12.5697, 384.5766, -1360.6158, 14.5442, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista8[playerid][1] = CreateDynamicRaceCP(0, 384.5766, -1360.6158, 14.5442, 610.0898, -1217.1711, 18.1094, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista8[playerid][2] = CreateDynamicRaceCP(0, 610.0898, -1217.1711, 18.1094, 775.2840, -1053.2766, 24.3563, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista8[playerid][3] = CreateDynamicRaceCP(0, 775.2840, -1053.2766, 24.3563, 1117.4431, -951.1856, 42.6129, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista8[playerid][4] = CreateDynamicRaceCP(0, 1117.4431, -951.1856, 42.6129, 1364.2694, -943.4845, 34.1875, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista8[playerid][5] = CreateDynamicRaceCP(0, 1364.2694, -943.4845, 34.1875, 1342.9453, -1163.8099, 23.7486, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista8[playerid][6] = CreateDynamicRaceCP(0, 1342.9453, -1163.8099, 23.7486, 1335.6633, -1465.9672, 13.3828, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista8[playerid][7] = CreateDynamicRaceCP(0, 1335.6633, -1465.9672, 13.3828, 1288.4358, -1711.7964, 13.3828, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista8[playerid][8] = CreateDynamicRaceCP(0, 1288.4358, -1711.7964, 13.3828, 1037.4884, -1722.0990, 13.3906, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista8[playerid][9] = CreateDynamicRaceCP(0, 1037.4884, -1722.0990, 13.3906, 1024.6316, -1797.5770, 13.7389, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista8[playerid][10] = CreateDynamicRaceCP(0, 1024.6316, -1797.5770, 13.7389, 700.7156, -1749.7114, 13.6808, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista8[playerid][11] = CreateDynamicRaceCP(0, 700.7156, -1749.7114, 13.6808, 384.6374, -1702.6727, 7.7873, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista8[playerid][12] = CreateDynamicRaceCP(0, 384.6374, -1702.6727, 7.7873, 165.4908, -1574.5164, 12.4697, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista8[playerid][13] = CreateDynamicRaceCP(1, 165.4908, -1574.5164, 12.4697, 0.0, 0.0, 0.0, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);

	Loop(o, 14)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista8[playerid][o]))
		{
			TogglePlayerDynamicRaceCP(playerid, RaceChecksPista8[playerid][o], false);
		}
	}
	return 1;
}

// Infernal Race
stock DestroyVehiclesPista9()
{
	Loop(o, sizeof(VehiclesFixPista9))
	{
		DestroyVehicle(VehiclesFixPista9[o]);
		VehiclesFixPista9[o] = INVALID_VEHICLE_ID;
	}
	return 1;
}

stock AddVehiclesPista9()
{
	VehiclesFixPista9[0] = AddStaticVehicle(411,1346.659912,-2503.516113,13.102076,180.439697,91,49); //
    VehiclesFixPista9[1] = AddStaticVehicle(411,1346.680664,-2495.442871,13.102081,180.086242,91,49); //
    VehiclesFixPista9[2] = AddStaticVehicle(411,1346.683593,-2487.858886,13.102078,179.560302,91,49); //
    VehiclesFixPista9[3] = AddStaticVehicle(411,1346.780883,-2480.476318,13.102083,179.560745,91,49); //
    VehiclesFixPista9[4] = AddStaticVehicle(411,1346.768676,-2473.605712,13.103865,180.450195,91,49); //
    VehiclesFixPista9[5] = AddStaticVehicle(411,1346.716918,-2466.788085,13.105644,180.456726,91,49); //
    VehiclesFixPista9[6] = AddStaticVehicle(411,1331.558593,-2503.575439,13.102081,180.458435,91,49); //
    VehiclesFixPista9[7] = AddStaticVehicle(411,1331.605346,-2495.790771,13.102081,179.669555,91,49); //
    VehiclesFixPista9[8] = AddStaticVehicle(411,1331.645629,-2488.755126,13.102084,179.668960,91,49); //
    VehiclesFixPista9[9] = AddStaticVehicle(411,1331.695068,-2480.559082,13.103866,179.629577,91,49); //
    VehiclesFixPista9[10] = AddStaticVehicle(411,1331.739379,-2473.713378,13.105650,179.705902,91,49); //
    VehiclesFixPista9[11] = AddStaticVehicle(411,1331.770874,-2466.949462,13.105644,179.696731,91,49); //
	return 1;
}

stock DeletePlayerPistaRace9(playerid)
{
	Loop(o, 41)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista9[playerid][o]))
		{
			DestroyDynamicRaceCP(RaceChecksPista9[playerid][o]);
			RaceChecksPista9[playerid][o] = -1;
		}
	}
	return 1;
}

stock CreatePlayerPistaRace9(playerid)
{
	RaceChecksPista9[playerid][0] = CreateDynamicRaceCP(2, 1344.2445, -2574.7021, 13.3750, 1711.8547, -2671.5417, 5.6007, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][1] = CreateDynamicRaceCP(0, 1711.8547, -2671.5417, 5.6007, 2080.1643, -2665.0125, 13.0681, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][2] = CreateDynamicRaceCP(0, 2080.1643, -2665.0125, 13.0681, 2253.6746, -2300.5190, 13.1022, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][3] = CreateDynamicRaceCP(0, 2253.6746, -2300.5190, 13.1022, 2762.6316, -2146.3982, 10.6568, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][4] = CreateDynamicRaceCP(0, 2762.6316, -2146.3982, 10.6568, 2873.3230, -1599.9987, 10.6021, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][5] = CreateDynamicRaceCP(0, 2873.3230, -1599.9987, 10.6021, 2866.2546, -1336.6624, 10.6332, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][6] = CreateDynamicRaceCP(0, 2866.2546, -1336.6624, 10.6332, 2846.9172, -670.6479, 10.5487, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][7] = CreateDynamicRaceCP(0, 2846.9172, -670.6479, 10.5487, 2743.3416, -195.4727, 30.1529, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][8] = CreateDynamicRaceCP(0, 2743.3416, -195.4727, 30.1529, 2742.6438, 264.9278, 19.9928, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][9] = CreateDynamicRaceCP(0, 2742.6438, 264.9278, 19.9928, 2253.8088, 321.8128, 32.3912, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][10] = CreateDynamicRaceCP(0, 2253.8088, 321.8128, 32.3912, 1715.5648, 304.9291, 19.6275, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][11] = CreateDynamicRaceCP(0, 1715.5648, 304.9291, 19.6275, 1839.1746, 835.6332, 9.6890, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][12] = CreateDynamicRaceCP(0, 1839.1746, 835.6332, 9.6890, 2462.4856, 834.2734, 6.4632, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][13] = CreateDynamicRaceCP(0, 2462.4856, 834.2734, 6.4632, 2727.8335, 1263.3218, 6.4629, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][14] = CreateDynamicRaceCP(0, 2727.8335, 1263.3218, 6.4629, 2719.8982, 2353.3071, 6.4615, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][15] = CreateDynamicRaceCP(0, 2719.8982, 2353.3071, 6.4615, 1984.1606, 2554.6267, 6.5185, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][16] = CreateDynamicRaceCP(0, 1984.1606, 2554.6267, 6.5185, 1312.4852, 2475.0884, 7.0981, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][17] = CreateDynamicRaceCP(0, 1312.4852, 2475.0884, 7.0981, 1025.1074, 2547.5784, 10.3531, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][18] = CreateDynamicRaceCP(0, 1025.1074, 2547.5784, 10.3531, 725.3419, 2657.6089, 19.0809, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][19] = CreateDynamicRaceCP(0, 725.3419, 2657.6089, 19.0809, 330.9757, 2719.8594, 59.5678, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][20] = CreateDynamicRaceCP(0, 330.9757, 2719.8594, 59.5678, -172.3821, 2635.1924, 63.1667, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][21] = CreateDynamicRaceCP(0, -172.3821, 2635.1924, 63.1667, -535.3200, 2722.3352, 65.4957, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][22] = CreateDynamicRaceCP(0, -535.3200, 2722.3352, 65.4957, -804.4014, 2729.8582, 45.1167, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][23] = CreateDynamicRaceCP(0, -804.4014, 2729.8582, 45.1167, -1373.0294, 2606.7478, 54.0055, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][24] = CreateDynamicRaceCP(0, -1373.0294, 2606.7478, 54.0055, -1258.2981, 1919.4503, 42.7326, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][25] = CreateDynamicRaceCP(0, -1258.2981, 1919.4503, 42.7326, -1097.6488, 1748.4537 ,32.4857, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][26] = CreateDynamicRaceCP(0, -1097.6488, 1748.4537, 32.4857, -830.9801, 1388.1179, 13.3331, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][27] = CreateDynamicRaceCP(0, -830.9801, 1388.1179, 13.3331, -516.7405, 1076.5236, 10.7584, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][28] = CreateDynamicRaceCP(0, -516.7405, 1076.5236, 10.7584, -287.7097, 802.1874, 14.6414, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][29] = CreateDynamicRaceCP(0, -287.7097, 802.1874, 14.6414, -118.1253, 812.7781, 20.2660, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][30] = CreateDynamicRaceCP(0, -118.1253, 812.7781, 20.2660, -130.5109, 581.8444, 2.1796, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][31] = CreateDynamicRaceCP(0, -130.5109, 581.8444, 2.1796, -112.2174, 536.5966, 6.8809, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][32] = CreateDynamicRaceCP(0, -112.2174, 536.5966, 6.8809, 312.4136, 753.8065, 5.8610, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][33] = CreateDynamicRaceCP(0, 312.4136, 753.8065, 5.8610, 1169.8171, 821.9076, 9.6797, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][34] = CreateDynamicRaceCP(0, 1169.8171, 821.9076, 9.6797, 1790.7389, 812.0357, 10.6287, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][35] = CreateDynamicRaceCP(0, 1790.7389, 812.0357, 10.6287, 1634.7124, 224.0136, 30.4577, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][36] = CreateDynamicRaceCP(0, 1634.7124, 224.0136, 30.4577, 1697.4075, -678.6182, 44.4650, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][37] = CreateDynamicRaceCP(0, 1697.4075, -678.6182, 44.4650, 1596.3068, -1487.4028, 28.3131, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][38] = CreateDynamicRaceCP(0, 1596.3068, -1487.4028, 28.3131, 1557.6895, -2105.9548, 15.5000, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista9[playerid][39] = CreateDynamicRaceCP(0, 1557.6895, -2105.9548, 15.5000, 1334.0039, -2329.4714, 13.1099, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
 	RaceChecksPista9[playerid][40] = CreateDynamicRaceCP(1, 1334.0039, -2329.4714, 13.1099, 0.0, 0.0, 0.0, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);

	Loop(o, 41)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista9[playerid][o]))
		{
			TogglePlayerDynamicRaceCP(playerid, RaceChecksPista9[playerid][o], false);
		}
	}
	return 1;
}

// MOTO GP
stock DestroyVehiclesPista10()
{
	Loop(o, sizeof(VehiclesFixPista10))
	{
		DestroyVehicle(VehiclesFixPista10[o]);
		VehiclesFixPista10[o] = INVALID_VEHICLE_ID;
	}
	return 1;
}

stock AddVehiclesPista10()
{
	VehiclesFixPista10[0] = AddStaticVehicle(522,2183.836669,831.642883,6.296826,90.187911,91,49);
    VehiclesFixPista10[1] = AddStaticVehicle(522,2191.536376,831.668640,6.306749,90.187164,91,49);
    VehiclesFixPista10[2] = AddStaticVehicle(522,2198.234375,831.690856,6.306585,90.187118,91,49);
    VehiclesFixPista10[3] = AddStaticVehicle(522,2205.677246,831.670104,6.300476,88.638351,91,49);
    VehiclesFixPista10[4] = AddStaticVehicle(522,2212.375732,831.512451,6.306215,88.638427,91,49);
    VehiclesFixPista10[5] = AddStaticVehicle(522,2212.506591,836.969360,6.316684,88.646293,91,49);
    VehiclesFixPista10[6] = AddStaticVehicle(522,2205.803222,837.015930,6.313863,88.642196,91,49);
    VehiclesFixPista10[7] = AddStaticVehicle(522,2198.216796,837.067016,6.319556,90.183036,91,49);
    VehiclesFixPista10[8] = AddStaticVehicle(522,2191.516357,837.026611,6.315836,90.191101,91,49);
    VehiclesFixPista10[9] = AddStaticVehicle(522,2183.816894,837.131835,6.303168,90.192001,91,49);
	return 1;
}

stock DeletePlayerPistaRace10(playerid)
{
	Loop(o, 9)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista10[playerid][o]))
		{
			DestroyDynamicRaceCP(RaceChecksPista10[playerid][o]);
			RaceChecksPista10[playerid][o] = -1;
		}
	}
	return 1;
}

stock CreatePlayerPistaRace10(playerid)
{
	RaceChecksPista10[playerid][0] = CreateDynamicRaceCP(2, 2127.1228, 834.1328, 6.3041, 1416.6890, 834.4252, 6.3772, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista10[playerid][1] = CreateDynamicRaceCP(0, 1416.6890, 834.4252, 6.3772, 1208.1835, 1092.1682, 6.3775, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista10[playerid][2] = CreateDynamicRaceCP(0, 1208.1835, 1092.1682, 6.3775, 1208.9282, 2259.3203, 6.2993, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista10[playerid][3] = CreateDynamicRaceCP(0, 1208.9282, 2259.3203, 6.2993, 1450.0514, 2472.2407, 6.2991, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista10[playerid][4] = CreateDynamicRaceCP(0, 1450.0514, 2472.2407, 6.2991, 2357.0730, 2631.6741, 6.3071, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista10[playerid][5] = CreateDynamicRaceCP(0, 2357.0730, 2631.6741, 6.3071, 2726.9646, 2246.5457, 6.3106, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista10[playerid][6] = CreateDynamicRaceCP(0, 2726.9646, 2246.5457, 6.3106, 2726.4170, 1122.4783, 6.2992, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista10[playerid][7] = CreateDynamicRaceCP(0, 2726.4170, 1122.4783, 6.2992, 2398.7590, 834.0785, 6.2991, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
 	RaceChecksPista10[playerid][8] = CreateDynamicRaceCP(1, 2398.7590, 834.0785, 6.2991, 0.0, 0.0, 0.0, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);

	Loop(o, 9)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista10[playerid][o]))
		{
			TogglePlayerDynamicRaceCP(playerid, RaceChecksPista10[playerid][o], false);
		}
	}
	return 1;
}

// Formula Truck
stock DestroyVehiclesPista11()
{
	Loop(o, sizeof(VehiclesFixPista11))
	{
		DestroyVehicle(VehiclesFixPista11[o]);
		VehiclesFixPista11[o] = INVALID_VEHICLE_ID;
	}
	return 1;
}

stock AddVehiclesPista11()
{
	VehiclesFixPista11[0] = AddStaticVehicle(515,780.405090,-1392.895019,14.422080,269.945190,91,49);
	VehiclesFixPista11[1] = AddStaticVehicle(515,780.399475,-1397.910156,14.355103,269.944152,91,49);
	VehiclesFixPista11[2] = AddStaticVehicle(515,780.394409,-1403.011230,14.277550,269.945220,91,49);
	VehiclesFixPista11[3] = AddStaticVehicle(515,780.388854,-1408.204467,14.203279,269.942260,91,49);
	VehiclesFixPista11[4] = AddStaticVehicle(515,766.773132,-1408.191894,14.312294,269.943878,91,49);
	VehiclesFixPista11[5] = AddStaticVehicle(515,766.778137,-1403.056152,14.387212,269.945159,91,49);
	VehiclesFixPista11[6] = AddStaticVehicle(515,766.783325,-1397.999877,14.464141,269.944915,91,49);
	VehiclesFixPista11[7] = AddStaticVehicle(515,766.789062,-1392.988891,14.548913,269.945343,91,49);

	return 1;
}

stock DeletePlayerPistaRace11(playerid)
{
	Loop(o, 9)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista11[playerid][o]))
		{
			DestroyDynamicRaceCP(RaceChecksPista11[playerid][o]);
			RaceChecksPista11[playerid][o] = -1;
		}
	}
	return 1;
}

stock CreatePlayerPistaRace11(playerid)
{
	RaceChecksPista11[playerid][0] = CreateDynamicRaceCP(2, 879.7284, -1400.7217, 13.9752, 1357.9382, -1393.7971, 14.4299, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista11[playerid][1] = CreateDynamicRaceCP(0, 1357.9382, -1393.7971, 14.4299, 1359.2566, -1142.7795, 24.6872, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista11[playerid][2] = CreateDynamicRaceCP(0, 1359.2566, -1142.7795, 24.6872, 1848.2062, -1182.7682, 24.6601, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista11[playerid][3] = CreateDynamicRaceCP(0, 1848.2062, -1182.7682, 24.6601, 1848.8700, -1484.6895, 14.3828, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista11[playerid][4] = CreateDynamicRaceCP(0, 1848.8700, -1484.6895, 14.3828, 1821.3442, -1728.6941, 14.4021, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista11[playerid][5] = CreateDynamicRaceCP(0, 1821.3442, -1728.6941, 14.4021, 1822.7469, -1931.6405, 14.3897, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista11[playerid][6] = CreateDynamicRaceCP(0, 1822.7469, -1931.6405, 14.3897, 1960.7883, -1933.2446, 14.4006, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista11[playerid][7] = CreateDynamicRaceCP(0, 1960.7883, -1933.2446, 14.4006, 1962.3687, -2181.6094, 14.5778, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
 	RaceChecksPista11[playerid][8] = CreateDynamicRaceCP(1, 1962.3687, -2181.6094, 14.5778, 0.0, 0.0, 0.0, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);

	Loop(o, 9)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista11[playerid][o]))
		{
			TogglePlayerDynamicRaceCP(playerid, RaceChecksPista11[playerid][o], false);
		}
	}
	return 1;
}

// corrida infernus
stock DestroyVehiclesPista13()
{
	Loop(o, sizeof(VehiclesFixPista13))
	{
		DestroyVehicle(VehiclesFixPista13[o]);
		VehiclesFixPista13[o] = INVALID_VEHICLE_ID;
	}
	return 1;
}

stock AddVehiclesPista13()
{
	VehiclesFixPista13[0] = AddStaticVehicle(411, -1832.0468, -1727.3816, 28.8494, 303.8529, -1, -1);
	VehiclesFixPista13[1] = AddStaticVehicle(411, -1838.6924, -1731.8405, 28.8592, 303.8546, -1, -1);
	VehiclesFixPista13[2] = AddStaticVehicle(411, -1845.0254, -1736.0858, 28.8539, 303.8572, -1, -1);
	VehiclesFixPista13[3] = AddStaticVehicle(411, -1850.6865, -1739.9346, 28.8541, 302.7761, -1, -1);
	VehiclesFixPista13[4] = AddStaticVehicle(411, -1829.0568, -1732.2013, 28.8485, 303.8429, -1, -1);
	VehiclesFixPista13[5] = AddStaticVehicle(411, -1835.7180, -1736.5552, 28.8366, 301.8886, -1, -1);
	VehiclesFixPista13[6] = AddStaticVehicle(411, -1842.0306, -1740.4771, 28.8530, 301.8985, -1, -1);
	VehiclesFixPista13[7] = AddStaticVehicle(411, -1847.9828, -1744.2048, 28.8748, 300.9871, -1, -1);
	return 1;
}

stock DeletePlayerPistaRace13(playerid)
{
	Loop(o, 11)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista13[playerid][o]))
		{
			DestroyDynamicRaceCP(RaceChecksPista13[playerid][o]);
			RaceChecksPista13[playerid][o] = -1;
		}
	}
	return 1;
}

stock CreatePlayerPistaRace13(playerid)
{
	RaceChecksPista13[playerid][0] = CreateDynamicRaceCP(2, -1685.9236, -1646.0417, 35.9849, -1565.9668, -1522.5483, 37.4615, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista13[playerid][1] = CreateDynamicRaceCP(0, -1565.9668, -1522.5483, 37.4615, -2001.7262, -1281.6661, 36.8627, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista13[playerid][2] = CreateDynamicRaceCP(0, -2001.7262, -1281.6661, 36.8627, -2193.6055, -791.8249, 60.6643, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista13[playerid][3] = CreateDynamicRaceCP(0, -2193.6055, -791.8249, 60.6643, -2365.3694, -654.9935, 122.9656, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista13[playerid][4] = CreateDynamicRaceCP(0, -2365.3694, -654.9935, 122.9656, -2587.5593, -491.7860, 75.0263, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista13[playerid][5] = CreateDynamicRaceCP(0, -2587.5593, -491.7860, 75.0263, -2675.5806, -423.7051, 31.7354, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista13[playerid][6] = CreateDynamicRaceCP(0, -2675.5806, -423.7051, 31.7354, -2824.2559, -522.3536, 6.7739, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista13[playerid][7] = CreateDynamicRaceCP(0, -2824.2559, -522.3536, 6.7739, -2902.4170, -1126.0906, 9.2193, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista13[playerid][8] = CreateDynamicRaceCP(0, -2902.4170, -1126.0906, 9.2193, -2864.1089, -1828.0823, 38.0542, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista13[playerid][9] = CreateDynamicRaceCP(0, -2864.1089, -1828.0823, 38.0542, -2489.2888, -2282.0500, 28.8443, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPista13[playerid][10] = CreateDynamicRaceCP(1, -2489.2888, -2282.0500, 28.8443, 0.0, 0.0, 0.0, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);

	Loop(o, 11)
	{
		if(IsValidDynamicRaceCP(RaceChecksPista13[playerid][o]))
		{
			TogglePlayerDynamicRaceCP(playerid, RaceChecksPista13[playerid][o], false);
		}
	}
	return 1;
}

stock ResetVarsEditSamuGay(playerid)
{
	DeletePVar(playerid, "EditingXMode");
	DeletePVar(playerid, "EditingYMode");
	DeletePVar(playerid, "EditingZMode");
	DeletePVar(playerid, "EditingRXMode");
	DeletePVar(playerid, "EditingRYMode");
	DeletePVar(playerid, "EditingRZMode");
	DeletePVar(playerid, "objToEdit");
	DeletePVar(playerid, "pidToEdit");
	DeletePVar(playerid, "pidSalvo");
	return 0;
}

stock ResetVarsEditPortao(playerid)
{
	DeletePVar(playerid, "EditingXMode");
	DeletePVar(playerid, "EditingYMode");
	DeletePVar(playerid, "EditingZMode");
	DeletePVar(playerid, "EditingRXMode");
	DeletePVar(playerid, "EditingRYMode");
	DeletePVar(playerid, "EditingRZMode");
	DeletePVar(playerid, "objToEdit");
	DeletePVar(playerid, "pidToEdit");
	DeletePVar(playerid, "pidSalvo");
	return 0;
}

// Maquinista
stock DeletePlayerPistaRaceTrain(playerid)
{
	Loop(o, 6)
	{
		if(IsValidDynamicRaceCP(RaceChecksPistaTrain[playerid][o]))
		{
			DestroyDynamicRaceCP(RaceChecksPistaTrain[playerid][o]);
			RaceChecksPistaTrain[playerid][o] = -1;
		}
	}
	return 1;
}

stock CreatePlayerPistaRaceTrain(playerid)
{
	RaceChecksPistaTrain[playerid][0] = CreateDynamicRaceCP(2, 788.2229, -1342.7612, -0.1243, -1942.7958, 168.3988, 27.0006, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPistaTrain[playerid][1] = CreateDynamicRaceCP(2, -1942.7958, 168.3988, 27.0006, 1459.8220, 2632.2500, 12.1256, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPistaTrain[playerid][2] = CreateDynamicRaceCP(2, 1459.8220, 2632.2500, 12.1256, 2780.8750, 1731.1392, 12.1256, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPistaTrain[playerid][3] = CreateDynamicRaceCP(2, 2780.8750, 1731.1392, 12.1256, 2864.7500, 1252.3819, 12.1256, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPistaTrain[playerid][4] = CreateDynamicRaceCP(2, 2864.7500, 1252.3819, 12.1256, 1700.7648, -1953.6530, 14.8756, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	RaceChecksPistaTrain[playerid][5] = CreateDynamicRaceCP(2, 1700.7648, -1953.6530, 14.8756, 0.0, 0.0, 0.0, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE);
	return 1;
}

// Patrulha
stock DeletePlayerPistaRacePatrulha(playerid)
{
	Loop(o, 40)
	{
		if(IsValidDynamicRaceCP(RaceChecksPistaPatrulha[playerid][o]))
		{
			DestroyDynamicRaceCP(RaceChecksPistaPatrulha[playerid][o]);
			RaceChecksPistaPatrulha[playerid][o] = -1;
		}
	}
	return 1;
}

stock CreatePlayerPistaRacePatrulha(playerid)
{
	RaceChecksPistaPatrulha[playerid][0] = CreateDynamicRaceCP(1, 1537.4462,-1628.6965,13.3828, 1529.3234,-1608.9690,13.4505, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][1] = CreateDynamicRaceCP(0, 1571.8196,-1592.1144,13.3828, 1613.9723,-1592.1610,13.5469, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][2] = CreateDynamicRaceCP(0, 1729.2239,-1599.2432,13.3716, 1746.7689,-1603.6650,13.3793, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][3] = CreateDynamicRaceCP(0, 1821.6079,-1613.9443,13.3832, 1835.0055,-1614.3240,13.3828, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][4] = CreateDynamicRaceCP(0, 1940.1561,-1636.8992,13.3828, 1939.8955,-1648.9067,13.3828, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][5] = CreateDynamicRaceCP(0, 1939.9264,-1752.3013,13.3828, 1917.2352,-1752.2101,13.3828, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][6] = CreateDynamicRaceCP(0, 1821.4337,-1781.8269,13.3828, 1821.2206,-1800.6300,13.3889, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][7] = CreateDynamicRaceCP(0, 1769.3303,-1826.0439,13.3828, 1749.2605,-1820.6619,13.3860, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][8] = CreateDynamicRaceCP(0, 1672.8994,-1868.9783,13.3900, 1644.3319,-1872.5188,13.3828, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][9] = CreateDynamicRaceCP(0, 1572.5073,-1872.2421,13.3828, 1536.9825,-1872.4663,13.3906, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][10] = CreateDynamicRaceCP(0, 1392.5681,-1872.3229,13.3828, 1349.6038,-1861.6595,13.3828, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][11] = CreateDynamicRaceCP(0, 1258.4142,-1852.0708,13.3828, 1181.4838,-1851.5607,13.3984, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][12] = CreateDynamicRaceCP(0, 1181.4630,-1844.0433,13.4105, 1181.2628,-1801.7891,13.3984, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][13] = CreateDynamicRaceCP(0, 1150.3225,-1711.9619,13.7813, 1111.6471,-1710.8533,13.3828, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][14] = CreateDynamicRaceCP(0, 1037.4771,-1720.5538,13.3906, 1037.1416,-1774.4172,13.3886, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][15] = CreateDynamicRaceCP(0, 1031.6240,-1801.8633,13.6867, 944.2474,-1776.6738,13.8126, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][16] = CreateDynamicRaceCP(0, 811.5772,-1769.3984,13.3984, 674.6007,-1740.9082,13.4142, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][17] = CreateDynamicRaceCP(0, 632.5641,-1731.2374,13.7666, 499.5844,-1710.8846,11.8319, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][18] = CreateDynamicRaceCP(0, 470.7613,-1707.7618,11.1115, 211.9158,-1630.6614,13.9672, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	RaceChecksPistaPatrulha[playerid][19] = CreateDynamicRaceCP(1, 61.5997,-1525.3781,4.9322, 0.0, 0.0, 0.0, CHECK_RACER_SIZE, -1, -1, playerid, CHECK_RACER_DISTANCE); //LEMBRE-SE QUE O SEGUNDO CHECKPOINT ESTÁ BUGADO ENTAO N O UTILIZE UTILIZE SÓ O 1º
	return 1;
}

stock UncagePlayer(playerid)
{
	Loop(o, 8)
	{
		DestroyDynamicObject(CageObjects[playerid][o]);
	}
	return 1;
}


stock CagePlayer(playerid)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	CageObjects[playerid][0] = CreateDynamicObject(980, X, Y-2.7147386074066, Z+6.1405787467957, 0, 0, 180, -1, -1, -1, 75);
	CageObjects[playerid][1] = CreateDynamicObject(980, X+3, Y+3, Z+3.3905787467957, 270, 0, 270, -1, -1, -1, 75);
	CageObjects[playerid][2] = CreateDynamicObject(980, X+5.6999998092651, Y+3, Z+6.1405787467957, 0, 0, 270, -1, -1, -1, 75);
	CageObjects[playerid][3] = CreateDynamicObject(980, X-2.5, Y+3, Z+3.3905787467957, 270, 0, 270, -1, -1, -1, 75);
	CageObjects[playerid][4] = CreateDynamicObject(980, X, Y+8.6927900314331, Z+6.1405787467957, 0, 0, 0, -1, -1, -1, 75);
	CageObjects[playerid][5] = CreateDynamicObject(980, X-5.3052453994751, Y+3, Z+6.1405787467957, 0, 0, 90, -1, -1, -1, 75);
	CageObjects[playerid][6] = CreateDynamicObject(980, X-2.5, Y+3, Z+8.8905792236328, 90, 0, 270, -1, -1, -1, 75);
	CageObjects[playerid][7] = CreateDynamicObject(980, X+3, Y+3, Z+8.8905792236328, 90, 0, 270, -1, -1, -1, 75);
	return 1;
}


stock PlayerCreateHause(playerid, casapreco, casaint, Float:Xp, Float:Yp, Float:Zp, Ip)
{
	new year, month, day, data[128],
		msg[256], strc[128], strc2[128],
		casafile[128], pickupid, iconid;

	if(!(casaint <= proximoint))
	{
		format(msg, sizeof(msg), "Use um interior válido! | ID's = 0-%d", proximoint);
		SendClientMessage(playerid, Vermelho, msg);
		return 1;
	}
	for(new c = 0; c < MAX_CASAS; c++)
	{
		format(strc2, sizeof(strc2), PASTA_CASAS, c);
		if(DOF2_FileExists(strc2))
		{
			if(DOF2_GetInt(strc2, "TDono") == 3)
			{
				getdate(year, month, day);
				format(data, sizeof(data), "%d/%d/%d", day, month, year);

				DOF2_SetFloat(strc2, "PosX", Xp);
				DOF2_SetFloat(strc2, "PosY", Yp);
				DOF2_SetFloat(strc2, "PosZ", Zp);
				DOF2_SetInt(strc2, "Int", casaint);
				DOF2_SetInt(strc2, "IntID", Ip);
				DOF2_SetInt(strc2, "Mundo", c);
				DOF2_SetInt(strc2, "TDono", 0);
				DOF2_SetString(strc2, "Dono", "Ninguem");
				DOF2_SetInt(strc2, "Preco", casapreco);
				DOF2_SetInt(strc2, "Trancada", 0);
				DOF2_SetInt(strc2, "TMorador", 0);
				DOF2_SetString(strc2, "Morador", "Ninguem");
				DOF2_SetString(strc2, "DataSet", data);
				pickupid = CreateDynamicPickup(1273, 1, Xp, Yp, Zp, -1, -1, -1, 200.0);
				DOF2_SetInt(strc2, "Id", pickupid);
				iconid = CreateDynamicMapIcon(Xp, Yp, Zp, 31, 0, -1, -1, -1, 100.0);
				DOF2_SetInt(strc2, "IconId", iconid);
				format(STRX, sizeof(STRX), "{1E90FF}Casa ID: {FFFFFF}%d\n{1E90FF}Dono: {FFFFFF}Ninguem\n{1E90FF}Morador: {FFFFFF}Ninguem\n{1E90FF}Valor: {FFFFFF}$%d\n{1E90FF}Último uso: {FFFFFF}%s", c, casapreco, data);
				ctextoid[c] = CreateDynamic3DTextLabel(STRX, -1, Xp, Yp, Zp, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
				format(msg, sizeof(msg), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}criou uma casa. Local: {FFFFFF}%s, {6959CD}ID: {FFFFFF}%d", GetPlayerNameEx(playerid), GetPlayerArea(playerid), c);
				SendClientMessageToAll(Azul, msg);
				CasaLog(msg);
				return 1;
			}
		}
	}
	if(proximacasa >= MAX_CASAS-1)
	{
		format(STRX, sizeof(STRX), "O limite de %d casas foi atingido, não é possível criar mais.", MAX_CASAS);
		SendClientMessage(playerid, Vermelho, STRX);
		return 1;
	}
	format(strc, sizeof(strc), PASTA_CASAS, proximacasa);
	if(DOF2_FileExists(strc))
	{
		proximacasa++;
	}
	getdate(year, month, day);
	format(data, sizeof(data), "%d/%d/%d", day, month, year);
	format(casafile, sizeof(casafile), PASTA_CASAS, proximacasa);

	DOF2_CreateFile(casafile);
	DOF2_SetFloat(casafile, "PosX", Xp);
	DOF2_SetFloat(casafile, "PosY", Yp);
	DOF2_SetFloat(casafile, "PosZ", Zp);
	DOF2_SetInt(casafile, "Int", casaint);
	DOF2_SetInt(casafile, "IntID", Ip);
	DOF2_SetInt(casafile, "Mundo", proximacasa);
	DOF2_SetInt(casafile, "TDono", 0);
	DOF2_SetString(casafile, "Dono", "Ninguem");
	DOF2_SetInt(casafile, "Preco", casapreco);
	DOF2_SetInt(casafile, "Trancada", 0);
	DOF2_SetInt(casafile, "TMorador", 0);
	DOF2_SetString(casafile, "Morador", "Ninguem");
	DOF2_SetString(casafile, "DataSet", data);
	pickupid = CreateDynamicPickup(1273, 1, Xp, Yp, Zp, -1, -1, -1, 200.0);
	DOF2_SetInt(casafile, "Id", pickupid);
	iconid = CreateDynamicMapIcon(Xp, Yp, Zp, 31, 0, -1, -1, -1, 100.0);
	DOF2_SetInt(casafile, "IconId", iconid);
	format(STRX, sizeof(STRX), "{1E90FF}Casa ID: {FFFFFF}%d\n{1E90FF}Dono: {FFFFFF}Ninguem\n{1E90FF}Morador: {FFFFFF}Ninguem\n{1E90FF}Valor: {FFFFFF}$%d\n{1E90FF}Último uso: {FFFFFF}%s", proximacasa, casapreco, data);
	ctextoid[proximacasa] = CreateDynamic3DTextLabel(STRX, -1, Xp, Yp, Zp, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
	format(msg, sizeof(msg), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}criou uma casa. Local: {FFFFFF}%s, {6959CD}ID: {FFFFFF}%d", GetPlayerNameEx(playerid), GetPlayerArea(playerid), proximacasa);
	SendClientMessageToAll(Azul, msg);
	CasaLog(msg);
	proximacasa++;
	return 1;
}

stock PlayerCreateProp(playerid, proppreco, Float:Xp, Float:Yp, Float:Zp, Ip)
{
	new year, month, day, data[128],
		msg[256], strp[128], strp2[128], propFile[128],
		pickupid, iconid;

	for(new p = 0; p < MAX_PROPS; p++)
	{
		format(strp2, sizeof(strp2), PASTA_PROPS, p);
		if(DOF2_FileExists(strp2))
		{
			if(DOF2_GetInt(strp2, "TDono") == 3)
			{
				getdate(year, month, day);
				format(data, sizeof(data), "%d/%d/%d", day, month, year);

				DOF2_SetFloat(strp2, "PosX", Xp);
				DOF2_SetFloat(strp2, "PosY", Yp);
				DOF2_SetFloat(strp2, "PosZ", Zp);
				DOF2_SetInt(strp2, "Int", 0);
				DOF2_SetInt(strp2, "IntID", Ip);
				DOF2_SetFloat(strp2, "IntX", Xp);
				DOF2_SetFloat(strp2, "IntY", Yp);
				DOF2_SetFloat(strp2, "IntZ", Zp);
				DOF2_SetInt(strp2, "Mundo", p);
				DOF2_SetInt(strp2, "TDono", 0);
				DOF2_SetString(strp2, "Dono", "Ninguem");
				DOF2_SetInt(strp2, "Preco", proppreco);
				DOF2_SetString(strp2, "Nome", "Sem Nome");
				DOF2_SetString(strp2, "DataSet", data);
				pickupid = CreateDynamicPickup(1279, 1, Xp, Yp, Zp, -1, -1, -1, 200.0);
				DOF2_SetInt(strp2, "Id", pickupid);
				iconid = CreateDynamicMapIcon(Xp, Yp, Zp, 11, 0, -1, -1, -1, 100.0);
				DOF2_SetInt(strp2, "IconId", iconid);
				format(STRX, sizeof(STRX), "{00FF00}Sem Nome\n\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Dono: {696969}Ninguem\n{00FF00}Valor: {696969}$%d\n{00FF00}Último uso: {696969}%s", p, proppreco, data);
				ptextoid[p] = CreateDynamic3DTextLabel(STRX, -1, Xp, Yp, Zp, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
				format(msg, sizeof(msg), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}criou uma empresa. Local: {FFFFFF}%s, {6959CD}ID: {FFFFFF}%d", GetPlayerNameEx(playerid), GetPlayerArea(playerid), p);
				SendClientMessageToAll(Azul, msg);
				PropLog(msg);
				return 1;
			}
		}
	}
	if(proximaprop >= MAX_PROPS-1)
	{
		format(STRX, sizeof(STRX), "O limite de %d empresa foi atingido, não é possível criar mais.", MAX_PROPS);
		SendClientMessage(playerid, Vermelho, STRX);
		return 1;
	}
	format(strp, sizeof(strp), PASTA_PROPS, proximaprop);
	if(DOF2_FileExists(strp))
	{
		proximaprop++;
	}
	getdate(year, month, day);
	format(data, sizeof(data), "%d/%d/%d", day, month, year);
	format(propFile, sizeof(propFile), PASTA_PROPS, proximaprop);

	DOF2_CreateFile(propFile);
	DOF2_SetFloat(propFile, "PosX", Xp);
	DOF2_SetFloat(propFile, "PosY", Yp);
	DOF2_SetFloat(propFile, "PosZ", Zp);
 	DOF2_SetInt(propFile, "Int", 0);
	DOF2_SetInt(propFile, "IntID", Ip);
	DOF2_SetFloat(propFile, "IntX", Xp);
	DOF2_SetFloat(propFile, "IntY", Yp);
	DOF2_SetFloat(propFile, "IntZ", Zp);
	DOF2_SetInt(propFile, "Mundo", proximaprop);
	DOF2_SetInt(propFile, "TDono", 0);
	DOF2_SetString(propFile, "Dono", "Ninguem");
	DOF2_SetInt(propFile, "Preco", proppreco);
	DOF2_SetString(propFile, "Nome", "Sem Nome");
	DOF2_SetString(propFile, "DataSet", data);
	pickupid = CreateDynamicPickup(1279, 1, Xp, Yp, Zp, -1, -1, -1, 200.0);
	DOF2_SetInt(propFile, "Id", pickupid);
	iconid = CreateDynamicMapIcon(Xp, Yp, Zp, 11, 0, -1, -1, -1, 100.0);
	DOF2_SetInt(propFile, "IconId", iconid);
	format(STRX, sizeof(STRX), "{00FF00}Sem Nome\n\n{00FF00}Empresa ID: {696969}%d\n{00FF00}Dono: {696969}Ninguem\n{00FF00}Valor: {696969}$%d\n{00FF00}Último uso: {696969}%s", proximaprop, proppreco, data);
	ptextoid[proximaprop] = CreateDynamic3DTextLabel(STRX, -1, Xp, Yp, Zp, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);
	format(msg, sizeof(msg), "{6959CD}O(a) ADM {FFFFFF}%s {6959CD}criou uma empresa. Local: {FFFFFF}%s, {6959CD}ID: {FFFFFF}%d", GetPlayerNameEx(playerid), GetPlayerArea(playerid), proximaprop);
	SendClientMessageToAll(Azul, msg);
	PropLog(msg);
	proximaprop++;
	return 1;
}

stock PlayerCreateSamuGay(playerid, modelo, Float:Xp, Float:Yp, Float:Zp, Ip)
{
	new msg[256], strpt[128], strpt2[128], samufile[128],
		samuid;

	if(!(modelo == 969 || modelo == 971 || modelo == 980 || modelo ==975 || modelo ==976 || modelo ==988 || modelo ==989 || modelo ==2990 || modelo==8378 || modelo==16775 || modelo==10671 || modelo==13187 || modelo==16773))
	{
		SendClientMessage(playerid, Vermelho, "Use um modelo válido! | Modelos: 969, 971, 980, 975, 976, 988, 989, 2990, 8378, 16775, 10671, 13187, 16773");
		return 1;
	}
	for(new samu = 0; samu < MAX_SAMUGAY; samu++)
	{
		format(strpt2, sizeof(strpt2), PASTA_SAMUGAY, samu);
		if(DOF2_FileExists(strpt2))
		{
			if(DOF2_GetInt(strpt2, "TDono") == 3)
			{
				DOF2_SetInt(strpt2, "Modelo", modelo);
				DOF2_SetFloat(strpt2, "fCordX", Xp);
				DOF2_SetFloat(strpt2, "fCordY", Yp);
				DOF2_SetFloat(strpt2, "fCordZ", Zp);
				DOF2_SetFloat(strpt2, "fCordRX", 0.0000);
				DOF2_SetFloat(strpt2, "fCordRY", 0.0000);
				DOF2_SetFloat(strpt2, "fCordRZ", 0.0000);
				DOF2_SetFloat(strpt2, "aCordX", Xp);
				DOF2_SetFloat(strpt2, "aCordY", Yp);
				DOF2_SetFloat(strpt2, "aCordZ", Zp);
				DOF2_SetFloat(strpt2, "aCordRX", 0.0000);
				DOF2_SetFloat(strpt2, "aCordRY", 0.0000);
				DOF2_SetFloat(strpt2, "aCordRZ", 0.0000);
				DOF2_SetInt(strpt2, "IntID", Ip);
				samuid = CreateObject(modelo, Xp+5, Yp-5, Zp, 0.0000, 0.0000, 0.0000, 200.0);
				DOF2_SetInt(strpt2, "Id", samuid);
				DOF2_SetInt(strpt2, "TDono", 0);
				DOF2_SetString(strpt2, "Dono", "Ninguem");
				DOF2_SetString(strpt2, "Convidado1", "Ninguem");
				DOF2_SetString(strpt2, "Convidado2", "Ninguem");
				DOF2_SetString(strpt2, "Convidado3", "Ninguem");
				SetPVarInt(playerid, "pidToEdit", samu);
				SetPVarInt(playerid, "objToEdit", samuid);
				SetPVarInt(playerid, "pidSalvo", 0);
				ShowPlayerDialog(playerid, samugayeditor, DIALOG_STYLE_LIST, "Editando Portão", "Editar X Posição\nEditar Y Posição\nEditar Z Posição\nEditar RX Posição\nEditar RY Posição\nEditar RZ Posição\nDeletar Edição\nSalvar Edição", "OK", "Voltar");
				format(msg, sizeof(msg), "{6959CD}O(a) {FFFFFF}%s {6959CD}criou um chao: ID {FFFFFF}%d", GetPlayerNameEx(playerid), samu);
				SendClientMessageToAll(Azul, msg);
				SamuGayLog(msg);
				return 1;
			}
		}
	}
	if(proximosamugay >= MAX_SAMUGAY-1)
	{
		format(STRX, sizeof(STRX), "O limite de %d portões foi atingido, não é possível criar mais.", MAX_PORTOES);
		SendClientMessage(playerid, Vermelho, STRX);
		return 1;
	}
	format(strpt, sizeof(strpt), PASTA_SAMUGAY, proximosamugay);
	if(DOF2_FileExists(strpt))
	{
		proximosamugay++;
	}
	format(samufile, sizeof(samufile), PASTA_SAMUGAY, proximosamugay);
	DOF2_CreateFile(samufile);
	DOF2_SetInt(samufile, "Modelo", modelo);
	DOF2_SetFloat(samufile, "fCordX", Xp);
	DOF2_SetFloat(samufile, "fCordY", Yp);
	DOF2_SetFloat(samufile, "fCordZ", Zp);
	DOF2_SetFloat(samufile, "fCordRX", 0.0000);
	DOF2_SetFloat(samufile, "fCordRY", 0.0000);
	DOF2_SetFloat(samufile, "fCordRZ", 0.0000);
	DOF2_SetFloat(samufile, "aCordX", Xp);
	DOF2_SetFloat(samufile, "aCordY", Yp);
	DOF2_SetFloat(samufile, "aCordZ", Zp);
	DOF2_SetFloat(samufile, "aCordRX", 0.0000);
	DOF2_SetFloat(samufile, "aCordRY", 0.0000);
	DOF2_SetFloat(samufile, "aCordRZ", 0.0000);
	DOF2_SetInt(samufile, "IntID", Ip);
	samuid = CreateObject(modelo, Xp+5, Yp-5, Zp, 0.0000, 0.0000, 0.0000, 200.0);
	DOF2_SetInt(samufile, "Id", samuid);
	DOF2_SetInt(samufile, "TDono", 0);
	DOF2_SetString(samufile, "Dono", "Ninguem");
	DOF2_SetString(samufile, "Convidado1", "Ninguem");
	DOF2_SetString(samufile, "Convidado2", "Ninguem");
	DOF2_SetString(samufile, "Convidado3", "Ninguem");
	SetPVarInt(playerid, "pidToEdit", proximosamugay);
	SetPVarInt(playerid, "objToEdit", samuid);
	SetPVarInt(playerid, "pidSalvo", 0);
	ShowPlayerDialog(playerid, samugayeditor, DIALOG_STYLE_LIST, "Editando Portão", "Editar X Posição\nEditar Y Posição\nEditar Z Posição\nEditar RX Posição\nEditar RY Posição\nEditar RZ Posição\nDeletar Edição\nSalvar Edição", "OK", "Voltar");
	format(msg, sizeof(msg), "{6959CD}O(a) {FFFFFF}%s {6959CD}criou um chao. ID: {FFFFFF}%d", GetPlayerNameEx(playerid), proximosamugay);
	SendClientMessageToAll(Azul, msg);
	SamuGayLog(msg);
	proximosamugay++;
	return 1;
}


stock PlayerAddConceVehicle(playerid, carmodel, carpreco, Float:Xp, Float:Yp, Float:Zp, Float:anGp, cor1, cor2)
{
	new year, month, day, data[128],
		strcc[128], strcc2[128], fileconce[128];

	for(new carro = 0; carro < proximocarro; carro++)
	{
		format(strcc2, sizeof(strcc2), PASTA_CONCE, carro);
		if(DOF2_FileExists(strcc2))
		{
			if(DOF2_GetInt(strcc2, "TDono") == 3)
			{
				getdate(year, month, day);
				format(data, sizeof(data), "%d/%d/%d", day, month, year);

				DOF2_SetInt(strcc2, "Modelo", carmodel);
				DOF2_SetFloat(strcc2, "CordX", Xp);
				DOF2_SetFloat(strcc2, "CordY", Yp);
				DOF2_SetFloat(strcc2, "CordZ", Zp);
				DOF2_SetFloat(strcc2, "Angulo", anGp);
				DOF2_SetInt(strcc2, "Cor1", cor1);
				DOF2_SetInt(strcc2, "Cor2", cor2);
				DOF2_SetInt(strcc2, "TDono", 0);
				DOF2_SetString(strcc2, "Dono", "Ninguem");
				DOF2_SetInt(strcc2, "CarVIP", 0);
				DOF2_SetString(strcc2, "Convidado1", "Ninguem");
				DOF2_SetString(strcc2, "Convidado2", "Ninguem");
				DOF2_SetString(strcc2, "Convidado3", "Ninguem");
				DOF2_SetInt(strcc2, "Preco", carpreco);
				DOF2_SetInt(strcc2, "Combustivel", MAX_COMB);
				DOF2_SetString(strcc2, "DataSet", data);

				SetTimerEx("CriarVeiculo3", 5000, false, "ddffffdd", carro, carmodel, Xp, Yp, Zp, anGp, cor1, cor2);
				SendClientMessage(playerid, Azul, "Veículo criado com sucesso!");
				SendClientMessage(playerid, Amarelo, "O veículo aparecerá em instantes!");
				return 1;
			}
		}
	}
	if(proximocarro >= MAX_CONCES-1)
	{
		format(STRX, sizeof(STRX), "O limite de %d veículos foi atingido, não é possível criar mais.", MAX_CONCES);
		SendClientMessage(playerid, Vermelho, STRX);
		return 1;
	}
	format(strcc, sizeof(strcc), PASTA_CONCE, proximocarro);
	if(DOF2_FileExists(strcc))
	{
		proximocarro++;
	}
	getdate(year, month, day);
	format(data, sizeof(data), "%d/%d/%d", day, month, year);
	format(fileconce, sizeof(fileconce), PASTA_CONCE, proximocarro);

	DOF2_CreateFile(fileconce);
	DOF2_SetInt(fileconce, "Modelo", carmodel);
	DOF2_SetFloat(fileconce, "CordX", Xp);
	DOF2_SetFloat(fileconce, "CordY", Yp);
	DOF2_SetFloat(fileconce, "CordZ", Zp);
	DOF2_SetFloat(fileconce, "Angulo", anGp);
	DOF2_SetInt(fileconce, "Cor1", cor1);
	DOF2_SetInt(fileconce, "Cor2", cor2);
	DOF2_SetInt(fileconce, "TDono", 0);
	DOF2_SetString(fileconce, "Dono", "Ninguem");
	DOF2_SetInt(fileconce, "CarVIP", 0);
	DOF2_SetString(fileconce, "Convidado1", "Ninguem");
	DOF2_SetString(fileconce, "Convidado2", "Ninguem");
	DOF2_SetString(fileconce, "Convidado3", "Ninguem");
	DOF2_SetInt(fileconce, "Preco", carpreco);
	DOF2_SetInt(fileconce, "Combustivel", MAX_COMB);
	DOF2_SetString(fileconce, "DataSet", data);

	SetTimerEx("CriarVeiculo2", 5000, false, "dffffdd", carmodel, Xp, Yp, Zp, anGp, cor1, cor2);
	SendClientMessage(playerid, Azul, "Veículo criado com sucesso!");
	SendClientMessage(playerid, Amarelo, "O veículo aparecerá em instantes!");
	return 1;
}

stock PlayerAddConceVehicleForPlayer(playerid, carmodel, carpreco, Float:Xp, Float:Yp, Float:Zp, Float:anGp, cor1, cor2)
{
	new msg[256], strcc[128], strcc2[128], fileconce[128],
		carroid, limite = MAX_PLAYER_CONCE, strlabel[256];

	if(GetPlayerGrana(playerid) >= carpreco-1)
	{
		if(pAdmin[playerid] > 0)
		{
			limite = MAX_ADM_CONCE;
		}
		else if(IsPlayerVIPT(playerid))
		{
			limite = MAX_VIPT_CONCE;
		}
		else if(IsPlayerVIPMT(playerid))
		{
			limite = MAX_VIPMT_CONCE;
		}
		else if(IsPlayerDJ(playerid))
		{
			limite = MAX_DJ_CONCE;
		}
		else if(IsPlayerVIP(playerid))
		{
			limite = MAX_VIP_CONCE;
		}
		if(GetCarros(playerid) < limite)
		{
			for(new carro = 0; carro < proximocarro; carro++)
			{
				format(strcc2, sizeof(strcc2), PASTA_CONCE, carro);
				if(DOF2_FileExists(strcc2))
				{
					if(DOF2_GetInt(strcc2, "TDono") == 3)
					{
						DOF2_SetInt(strcc2, "Modelo", carmodel);
						DOF2_SetFloat(strcc2, "CordX", Xp);
						DOF2_SetFloat(strcc2, "CordY", Yp);
						DOF2_SetFloat(strcc2, "CordZ", Zp);
						DOF2_SetFloat(strcc2, "Angulo", anGp);
						DOF2_SetInt(strcc2, "Cor1", cor1);
						DOF2_SetInt(strcc2, "Cor2", cor2);
						DOF2_SetInt(strcc2, "TDono", 1);
						DOF2_SetString(strcc2, "Dono", GetPlayerNameEx(playerid));
						DOF2_SetString(strcc2, "Convidado1", "Ninguem");
						DOF2_SetString(strcc2, "Convidado2", "Ninguem");
						DOF2_SetString(strcc2, "Convidado3", "Ninguem");
						DOF2_SetInt(strcc2, "Preco", carpreco);
						DOF2_SetInt(strcc2, "Combustivel", MAX_COMB);
						DOF2_SetString(strcc2, "DataSet", "Novo");
						GivePlayerGrana(playerid, -carpreco);

						if(!IsPlayerVIP(playerid) || IsPlayerVIPT(playerid) || IsPlayerVIPMT(playerid))
						{
							DOF2_SetInt(strcc2, "CarVIP", 0);
							DOF2_SetInt(strcc2, "CarVIPT", 0);
							DOF2_SetInt(strcc2, "CarVIPMT", 0);
							format(msg, sizeof(msg), "{1E90FF}%s comprou um veiculo!", GetPlayerNameEx(playerid));
							SendClientMessageToAll(Azul, msg);
							ClearChatbox(playerid, 10);
							SendClientMessage(playerid, Azul, "  Veículo comprado com sucesso!");
							SendClientMessage(playerid, Azul, "  Para ver as ferramentas do veículo, use: /meucarro");
							SendClientMessage(playerid, LARANJA, "|___________________________________________________________|");
							SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Não esqueça de estacionar seu novo veículo fora da concessionaria!");
							SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Veículos deixados na concessionaria serão deletados, sem reembolso!");
						}
						else
						{
							DOF2_SetInt(strcc2, "CarVIP", 1);
							format(msg, sizeof(msg), "{1E90FF}%s comprou um veiculo com alarme explosivo.", GetPlayerNameEx(playerid));
							SendClientMessageToAll(Azul, msg);
							ClearChatbox(playerid, 10);
							SendClientMessage(playerid, Azul, "  Veículo comprado com sucesso!");
							SendClientMessage(playerid, Azul, "  Para ver as ferramentas do veículo, use: /meucarro");
							SendClientMessage(playerid, Amarelo, "  (VIP) Seu carro foi equipado com alarme explosivo.");
							SendClientMessage(playerid, LARANJA, "|___________________________________________________________|");
							SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Não esqueça de estacionar seu novo veículo fora da concessionaria!");
							SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Veículos deixados na concessionaria serão deletados, sem reembolso!");
						}
						carroid = AddStaticVehicle(carmodel, Xp, Yp, Zp, anGp, cor1, cor2);
						format(strlabel, sizeof(strlabel), STRTEXT3D_CONCE, GetPlayerNameEx(playerid), carpreco, carro, "Novo");
						ConceLabel[carro] = CreateDynamic3DTextLabel(strlabel, -1, 0.0, 0.0, 0.15, 60.0, INVALID_PLAYER_ID, carroid, 1, -1, -1, -1, 60.0);

						PutPlayerInVehicle(playerid, carroid, 0);
						DOF2_SetInt(strcc2, "Id", carroid);
						return 1;
					}
				}
			}
			if(proximocarro >= MAX_CONCES-1)
			{
				format(STRX, sizeof(STRX), "[ CONCE ] O limite de %d veículos foi atingido, não é possível criar mais.", MAX_CONCES);
				SendClientMessage(playerid, Vermelho, STRX);
				return 1;
			}
			format(strcc, sizeof(strcc), PASTA_CONCE, proximocarro);
			if(DOF2_FileExists(strcc))
			{
				proximocarro++;
			}
			format(fileconce, sizeof(fileconce), PASTA_CONCE, proximocarro);
			DOF2_CreateFile(fileconce);
			DOF2_SetInt(fileconce, "Modelo", carmodel);
			DOF2_SetFloat(fileconce, "CordX", Xp);
			DOF2_SetFloat(fileconce, "CordY", Yp);
			DOF2_SetFloat(fileconce, "CordZ", Zp);
			DOF2_SetFloat(fileconce, "Angulo", anGp);
			DOF2_SetInt(fileconce, "Cor1", cor1);
			DOF2_SetInt(fileconce, "Cor2", cor2);
			DOF2_SetInt(fileconce, "TDono", 1);
			DOF2_SetString(fileconce, "Dono", GetPlayerNameEx(playerid));
			DOF2_SetString(fileconce, "Convidado1", "Ninguem");
			DOF2_SetString(fileconce, "Convidado2", "Ninguem");
			DOF2_SetString(fileconce, "Convidado3", "Ninguem");
			DOF2_SetInt(fileconce, "Preco", carpreco);
			DOF2_SetInt(fileconce, "Combustivel", MAX_COMB);
			DOF2_SetString(fileconce, "DataSet", "Novo");
			GivePlayerGrana(playerid, -carpreco);

			if(!IsPlayerVIP(playerid))
			{
				DOF2_SetInt(fileconce, "CarVIP", 0);
				format(msg, sizeof(msg), "{1E90FF}%s comprou um veiculo", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Azul, msg);
				ClearChatbox(playerid, 10);
				SendClientMessage(playerid, Azul, "  Veículo comprado com sucesso!");
				SendClientMessage(playerid, Azul, "  Para ver as ferramentas do veículo, use: /meucarro");
				SendClientMessage(playerid, LARANJA, "|___________________________________________________________|");
				SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Não esqueça de estacionar seu novo veículo fora da concessionaria!");
				SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Veículos deixados na concessionaria serão deletados, sem reembolso!");
			}
			else
			{
				DOF2_SetInt(fileconce, "CarVIP", 1);
				format(msg, sizeof(msg), "{1E90FF}%s comprou um veiculo com alarme explosivo", GetPlayerNameEx(playerid));
				SendClientMessageToAll(Azul, msg);
				ClearChatbox(playerid, 10);
				SendClientMessage(playerid, Azul, "  Veículo comprado com sucesso!");
				SendClientMessage(playerid, Amarelo, "  (VIP) Seu carro foi equipado com alarme explosivo.");
				SendClientMessage(playerid, Azul, "  Para ver as ferramentas do veículo, use: /meucarro");
				SendClientMessage(playerid, LARANJA, "|___________________________________________________________|");
				SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Não esqueça de estacionar seu novo veículo fora da concessionaria!");
				SendClientMessage(playerid, 0x6495EDAA, "[ CONCE ] {FFFFFF}Veículos deixados na concessionaria serão deletados, sem reembolso!");
			}
			carroid = AddStaticVehicle(carmodel, Xp, Yp, Zp, anGp, cor1, cor2);
			format(strlabel, sizeof(strlabel), STRTEXT3D_CONCE, GetPlayerNameEx(playerid), carpreco, proximocarro, "Novo");
			ConceLabel[proximocarro] = CreateDynamic3DTextLabel(strlabel, -1, 0.0, 0.0, 0.15, 60.0, INVALID_PLAYER_ID, carroid, 1, -1, -1, -1, 60.0);

			PutPlayerInVehicle(playerid, carroid, 0);
			DOF2_SetInt(fileconce, "Id", carroid);
			proximocarro++;
		}
		else
		{
			format(msg, sizeof(msg), "[ CONCE ] Você só pode ter %d carros!", limite);
			SendClientMessage(playerid, Amarelo, msg);

			SendClientMessage(playerid, Vermelho, "[ CONCE ] Para comprar outro venda um!");
		}
	}
	else
	{
		SendClientMessage(playerid, Vermelho, "[ CONCE ] Você não tem dinheiro suficiente!");
	}
	return 1;
}

stock PointInRangeOfPoint(Float:hs_range, Float:x, Float:y, Float:z, Float:X, Float:Y, Float:Z)
{
	X -= x;
	Y -= y;
	Z -= z;
	return ((X * X) + (Y * Y) + (Z * Z)) < (hs_range * hs_range);
}


// =================================================================================

stock LoadTextDraws()
{
	drogas1 = TextDrawCreate(1.000000, -70.000000, "~n~");
	drogas2 = TextDrawCreate(-2.000000, 213.000000, "~n~");
	TextDrawUseBox(drogas1, 1);
	TextDrawBoxColor(drogas1, 0xFFFFFFAA);
	TextDrawTextSize(drogas1, 655.000000, 80.000000);
	TextDrawUseBox(drogas2, 1);
	TextDrawBoxColor(drogas2, 0xFFFFFFAA);
	TextDrawTextSize(drogas2, 665.000000, 240.000000);
	TextDrawAlignment(drogas1, 0);
	TextDrawAlignment(drogas2, 0);
	TextDrawBackgroundColor(drogas1, 0x000000ff);
	TextDrawBackgroundColor(drogas2, 0x000000ff);
	TextDrawFont(drogas1, 1);
	TextDrawLetterSize(drogas1, 1.000000, 31.000000);
	TextDrawFont(drogas2, 1);
	TextDrawLetterSize(drogas2, 1.000000, 24.000000);
	TextDrawColor(drogas1, -1);
	TextDrawColor(drogas2, -1);
	TextDrawSetOutline(drogas1, 1);
	TextDrawSetOutline(drogas2, 1);
	TextDrawSetProportional(drogas1, 1);
	TextDrawSetProportional(drogas2, 1);
	TextDrawSetShadow(drogas1, 1);
	TextDrawSetShadow(drogas2, 1);

	AfkText = TextDrawCreate(270.000000, 331.000000, "~w~voce esta ~r~/afk");
	TextDrawBackgroundColor(AfkText, 255);
	TextDrawFont(AfkText, 3);
	TextDrawLetterSize(AfkText, 0.519999, 2.200000);
	TextDrawColor(AfkText, -1);
	TextDrawSetOutline(AfkText, 1);
	TextDrawSetProportional(AfkText, 1);
	TextDrawSetSelectable(AfkText, 0);

	AfkBackText = TextDrawCreate(229.000000, 351.000000, "~w~digite ~b~/on ~w~para voltar");
	TextDrawBackgroundColor(AfkBackText, 255);
	TextDrawFont(AfkBackText, 3);
	TextDrawLetterSize(AfkBackText, 0.460000, 2.400001);
	TextDrawColor(AfkBackText, -1);
	TextDrawSetOutline(AfkBackText, 1);
	TextDrawSetProportional(AfkBackText, 1);
	TextDrawSetSelectable(AfkBackText, 0);

	Relogio = TextDrawCreate(605.0, 25.0, "~n~");
	TextDrawUseBox(Relogio, 0);
	TextDrawFont(Relogio, 3);
	TextDrawSetShadow(Relogio, 0);
	TextDrawSetOutline(Relogio, 2);
	TextDrawBackgroundColor(Relogio, 255);
	TextDrawColor(Relogio, -1);
	TextDrawAlignment(Relogio, 3);
	TextDrawLetterSize(Relogio, 0.5, 1.5);
	
    /*
    Facebook = TextDrawCreate(250.000000, 406.000000, "~w~Brasil ~r~Vida ~w~da ~r~Loucura");
	TextDrawBackgroundColor(Facebook, 255);
	TextDrawFont(Facebook, 3);
	TextDrawLetterSize(Facebook, 0.329999, 1.800000);
	TextDrawColor(Facebook, -1);
	TextDrawSetOutline(Facebook, 1);
	TextDrawSetProportional(Facebook, 1);
	TextDrawSetSelectable(Facebook, 0);

	IPTXT = TextDrawCreate(499.000000, 4.000000, "144.217.131.86:7070");
	TextDrawBackgroundColor(IPTXT, -16776961);
	TextDrawFont(IPTXT, 3);
	TextDrawLetterSize(IPTXT, 0.300000, 1.700000);
	TextDrawColor(IPTXT, 255);
	TextDrawSetOutline(IPTXT, 1);
	TextDrawSetProportional(IPTXT, 1);
	*/

	Registro[0] = TextDrawCreate(-10.000000, -3.000000, "_");
	TextDrawBackgroundColor(Registro[0], 255);
	TextDrawFont(Registro[0], 1);
	TextDrawLetterSize(Registro[0], 0.500000, 52.000000);
	TextDrawColor(Registro[0], -1);
	TextDrawSetOutline(Registro[0], 0);
	TextDrawSetProportional(Registro[0], 1);
	TextDrawSetShadow(Registro[0], 1);
	TextDrawUseBox(Registro[0], 1);
	TextDrawBoxColor(Registro[0], 331775);
	TextDrawTextSize(Registro[0], 650.000000, 0.000000);

	Registro[1] = TextDrawCreate(5.000000, 149.000000, "-~n~~n~~n~~n~-~n~~n~~n~~n~-~n~~n~~n~~n~-~n~~n~~n~~n~-~n~~n~~n~~n~-~n~~n~~n~~n~-~n~~n~~n~~n~-~n~~n~~n~~n~");
	TextDrawBackgroundColor(Registro[1], 0);
	TextDrawFont(Registro[1], 1);
	TextDrawLetterSize(Registro[1], 12.830009, 0.599999);
	TextDrawColor(Registro[1], -116);
	TextDrawSetOutline(Registro[1], 1);
	TextDrawSetProportional(Registro[1], 1);
	
	Registro[2] = TextDrawCreate(206.000000, 4.000000, "i");
	TextDrawBackgroundColor(Registro[2], 0);
	TextDrawFont(Registro[2], 2);
	TextDrawLetterSize(Registro[2], 0.200000, 46.500022);
	TextDrawColor(Registro[2], -116);
	TextDrawSetOutline(Registro[2], 1);
	TextDrawSetProportional(Registro[2], 1);
	
	Registro[3] = TextDrawCreate(295.000000, 58.000000, "~w~~h~Versao 5.6");
	TextDrawBackgroundColor(Registro[3], 255);
	TextDrawFont(Registro[3], 2);
	TextDrawLetterSize(Registro[3], 0.180000, 0.799999);
	TextDrawColor(Registro[3], -1);
	TextDrawSetOutline(Registro[3], 0);
	TextDrawSetProportional(Registro[3], 1);
	TextDrawSetShadow(Registro[3], 1);
	TextDrawSetSelectable(Registro[3], 0);

	Registro[4] = TextDrawCreate(210.000000, -18.000000, "loadsc9:loadsc9");
	TextDrawBackgroundColor(Registro[4], 255);
	TextDrawFont(Registro[4], 4);
	TextDrawLetterSize(Registro[4], 1.000000, 4.099998);
	TextDrawColor(Registro[4], 13172500);
	TextDrawSetOutline(Registro[4], 0);
	TextDrawSetProportional(Registro[4], 1);
	TextDrawSetShadow(Registro[4], 1);
	TextDrawUseBox(Registro[4], 1);
	TextDrawBoxColor(Registro[4], 255);
	TextDrawTextSize(Registro[4], 670.000000, 464.000000);

	Registro[5] = TextDrawCreate(31.000000, 179.000000, "Registrar no servidor");
	TextDrawBackgroundColor(Registro[5], 0);
	TextDrawFont(Registro[5], 2);
	TextDrawLetterSize(Registro[5], 0.250000, 1.200000);
	TextDrawColor(Registro[5], -116);
	TextDrawSetOutline(Registro[5], 1);
	TextDrawSetProportional(Registro[5], 1);
	TextDrawUseBox(Registro[5], 1);
	TextDrawBoxColor(Registro[5], 0);
	TextDrawTextSize(Registro[5], 162.000000, 10.000000);

	Registro[6] = TextDrawCreate(31.000000, 158.000000, "Logar no servidor");
	TextDrawBackgroundColor(Registro[6], 0);
	TextDrawFont(Registro[6], 2);
	TextDrawLetterSize(Registro[6], 0.250000, 1.200000);
	TextDrawColor(Registro[6], -116);
	TextDrawSetOutline(Registro[6], 1);
	TextDrawSetProportional(Registro[6], 1);
	TextDrawUseBox(Registro[6], 1);
	TextDrawBoxColor(Registro[6], 0);
	TextDrawTextSize(Registro[6], 143.000000, 10.000000);
	TextDrawSetSelectable(Registro[6], 1);

	Registro[7] = TextDrawCreate(31.000000, 266.000000, "Mais informacoes");
	TextDrawBackgroundColor(Registro[7], 0);
	TextDrawFont(Registro[7], 2);
	TextDrawLetterSize(Registro[7], 0.250000, 1.200000);
	TextDrawColor(Registro[7], -116);
	TextDrawSetOutline(Registro[7], 1);
	TextDrawSetProportional(Registro[7], 1);
	TextDrawUseBox(Registro[7], 1);
	TextDrawBoxColor(Registro[7], 0);
	TextDrawTextSize(Registro[7], 143.000000, 10.000000);
	
	Registro[8] = TextDrawCreate(31.000000, 287.000000, "Sair");
	TextDrawBackgroundColor(Registro[8], 0);
	TextDrawFont(Registro[8], 2);
	TextDrawLetterSize(Registro[8], 0.250000, 1.200000);
	TextDrawColor(Registro[8], -116);
	TextDrawSetOutline(Registro[8], 1);
	TextDrawSetProportional(Registro[8], 1);
	TextDrawUseBox(Registro[8], 1);
	TextDrawBoxColor(Registro[8], 0);
	TextDrawTextSize(Registro[8], 143.000000, 10.000000);

	Registro[9] = TextDrawCreate(31.000000, 201.000000, "Ver site");
	TextDrawBackgroundColor(Registro[9], 0);
	TextDrawFont(Registro[9], 2);
	TextDrawLetterSize(Registro[9], 0.250000, 1.200000);
	TextDrawColor(Registro[9], -116);
	TextDrawSetOutline(Registro[9], 1);
	TextDrawSetProportional(Registro[9], 1);
	TextDrawUseBox(Registro[9], 1);
	TextDrawBoxColor(Registro[9], 0);
	TextDrawTextSize(Registro[9], 95.000000, 10.000000);

	Registro[10] = TextDrawCreate(32.000000, 222.000000, "Ver regras");
	TextDrawBackgroundColor(Registro[10], 0);
	TextDrawFont(Registro[10], 2);
	TextDrawLetterSize(Registro[10], 0.250000, 1.200000);
	TextDrawColor(Registro[10], -116);
	TextDrawSetOutline(Registro[10], 1);
	TextDrawSetProportional(Registro[10], 1);
	TextDrawUseBox(Registro[10], 1);
	TextDrawBoxColor(Registro[10], 0);
	TextDrawTextSize(Registro[10], 100.000000, 10.000000);

	Registro[11] = TextDrawCreate(234.000000, 385.000000, "    ~w~~h~www.~r~~h~bvl~b~~h~rpgsamp~w~.x10.bz");
	TextDrawBackgroundColor(Registro[11], 255);
	TextDrawFont(Registro[11], 3);
	TextDrawLetterSize(Registro[11], 0.300000, 0.999999);
	TextDrawColor(Registro[11], -1);
	TextDrawSetOutline(Registro[11], 1);
	TextDrawSetProportional(Registro[11], 1);
	TextDrawSetSelectable(Registro[11], 0);

	Registro[12] = TextDrawCreate(32.000000, 244.000000, "Creditos do servidor");
	TextDrawBackgroundColor(Registro[12], 0);
	TextDrawFont(Registro[12], 2);
	TextDrawLetterSize(Registro[12], 0.250000, 1.200000);
	TextDrawColor(Registro[12], -116);
	TextDrawSetOutline(Registro[12], 1);
	TextDrawSetProportional(Registro[12], 1);
	TextDrawUseBox(Registro[12], 1);
	TextDrawBoxColor(Registro[12], 0);
	TextDrawTextSize(Registro[12], 161.000000, 10.000000);

/*	Registro[13] = TextDrawCreate(32.000000, 287.000000, "Organizacoes");
	TextDrawBackgroundColor(Registro[13], 0);
	TextDrawFont(Registro[13], 2);
	TextDrawLetterSize(Registro[13], 0.250000, 1.200000);
	TextDrawColor(Registro[13], -116);
	TextDrawSetOutline(Registro[13], 1);
	TextDrawSetProportional(Registro[13], 1);
	TextDrawUseBox(Registro[13], 1);
	TextDrawBoxColor(Registro[13], 0);
	TextDrawTextSize(Registro[13], 138.000000, 10.000000);
*/
	Registro[14] = TextDrawCreate(234.000000, 128.000000, "Ultimas atualizacoes");
	TextDrawBackgroundColor(Registro[14], 0);
	TextDrawFont(Registro[14], 1);
	TextDrawLetterSize(Registro[14], 0.719999, 2.900000);
	TextDrawColor(Registro[14], -1);
	TextDrawSetOutline(Registro[14], 1);
	TextDrawSetProportional(Registro[14], 1);

	new strcmd[1000];

	strcat(strcmd, "~y~19/03/2018~w~~h~~n~");
	strcat(strcmd, "- Sistema de dominio de territorio para clan~n~");

	strcat(strcmd, "~n~");

	strcat(strcmd, "~y~18/03/2018~w~~h~~n~");
	strcat(strcmd, "- Novo sistema de patrulha~n~");
	strcat(strcmd, "- Novo deposito~n~");
	strcat(strcmd, "- Melhoria no sistema de DJ~n~");
	strcat(strcmd, "- Melhoria nas areas de DM~n~");
	
	strcat(strcmd, "~n~");
    
	strcat(strcmd, "~y~17/03/2018~w~~h~~n~");
	strcat(strcmd, "- Bug do chat invisivel resolvido~n~");
	strcat(strcmd, "- Bug das caixas automaticas resolvido~n~");

	strcat(strcmd, "~n~");
	
	strcat(strcmd, "~y~14/03/2018~w~~h~~n~");
	strcat(strcmd, "- Novo sistema de clan - /ajuda~n~");
	strcat(strcmd, "- Caixas avancadas automaticamente as 09HRS/18HRS/22HRS~n~");
	strcat(strcmd, "- Adicionado veiculos das profissoes ~n~");
    strcat(strcmd, "- Correcoes visuais~n~");

	Registro[15] = TextDrawCreate(234.000000, 171.000000, strcmd);
	TextDrawBackgroundColor(Registro[15], 10);
	TextDrawFont(Registro[15], 1);
	TextDrawLetterSize(Registro[15], 0.259999, 1.100000);
	TextDrawColor(Registro[15], -1);
	TextDrawSetOutline(Registro[15], 0);
	TextDrawSetProportional(Registro[15], 1);
	TextDrawSetShadow(Registro[15], 1);
	TextDrawSetSelectable(Registro[15], 0);

	TextDrawBackgroundColor(Registro[16], 0);
	TextDrawFont(Registro[16], 3);
	TextDrawLetterSize(Registro[16], 0.520000, 1.299999);
	TextDrawColor(Registro[16], 16711935);
	TextDrawSetOutline(Registro[16], 1);
	TextDrawSetProportional(Registro[16], 1);
	TextDrawSetSelectable(Registro[16], 0);

	Registro[17] = TextDrawCreate(204.000000, 17.000000, "~w~~h~Brasil Vida da Loucura");
	TextDrawBackgroundColor(Registro[17], 255);
	TextDrawFont(Registro[17], 1);
	TextDrawLetterSize(Registro[17], 0.639999, 2.399999);
	TextDrawColor(Registro[17], -1);
	TextDrawSetOutline(Registro[17], 0);
	TextDrawSetProportional(Registro[17], 1);
	TextDrawSetShadow(Registro[17], 1);
	TextDrawSetSelectable(Registro[17], 0);

	Registro[18] = TextDrawCreate(263.000000, 46.000000, "      ~w~~h~Seja bem vindo");
	TextDrawBackgroundColor(Registro[18], 255);
	TextDrawFont(Registro[18], 2);
	TextDrawLetterSize(Registro[18], 0.220000, 0.899999);
	TextDrawColor(Registro[18], -1);
	TextDrawSetOutline(Registro[18], 0);
	TextDrawSetProportional(Registro[18], 1);
	TextDrawSetShadow(Registro[18], 1);
	TextDrawSetSelectable(Registro[18], 0);

	Registro[19] = TextDrawCreate(189.000000, 38.000000, "~w~~h~-");
	TextDrawBackgroundColor(Registro[19], 255);
	TextDrawFont(Registro[19], 2);
	TextDrawLetterSize(Registro[19], 21.410045, 1.000000);
	TextDrawColor(Registro[19], -1);
	TextDrawSetOutline(Registro[19], 1);
	TextDrawSetProportional(Registro[19], 1);
	TextDrawSetSelectable(Registro[19], 0);
	
	BoxCarregando = TextDrawCreate(1.000000, -1.000000, "loadsc9:loadsc9");
    TextDrawBackgroundColor(BoxCarregando, 255);
    TextDrawFont(BoxCarregando, 4);
    TextDrawLetterSize(BoxCarregando, 0.500000, 1.000000);
    TextDrawColor(BoxCarregando, -1);
    TextDrawSetOutline(BoxCarregando, 0);
    TextDrawSetProportional(BoxCarregando, 1);
    TextDrawSetShadow(BoxCarregando, 1);
    TextDrawUseBox(BoxCarregando, 1);
    TextDrawBoxColor(BoxCarregando, 255);
    TextDrawTextSize(BoxCarregando, 645.000000, 450.000000);
	
	WE_GAMES1 = TextDrawCreate(466.000000, 394.000000, "~b~carregando");
	TextDrawBackgroundColor(WE_GAMES1, 255);
	TextDrawFont(WE_GAMES1, 3);
	TextDrawLetterSize(WE_GAMES1, 0.629999, 2.600000);
	TextDrawColor(WE_GAMES1, 0x7B68EEFF);
	TextDrawSetOutline(WE_GAMES1, 1);
	TextDrawSetProportional(WE_GAMES1, 1);
	TextDrawSetSelectable(WE_GAMES1, 0);

	WE_GAMES2 = TextDrawCreate(505.000000, 417.000000, "~w~aguarde...");
	TextDrawBackgroundColor(WE_GAMES2, 255);
	TextDrawFont(WE_GAMES2, 3);
	TextDrawLetterSize(WE_GAMES2, 0.629999, 2.600000);
	TextDrawColor(WE_GAMES2, 0xFFFFFFFF);
	TextDrawSetOutline(WE_GAMES2, 1);
	TextDrawSetProportional(WE_GAMES2, 1);
	TextDrawSetSelectable(WE_GAMES2, 0);

	Banco[0] = TextDrawCreate(413.000000, 128.000000, "#");
	TextDrawBackgroundColor(Banco[0], 255);
	TextDrawFont(Banco[0], 2);
	TextDrawLetterSize(Banco[0], 0.400000, 26.199996);
	TextDrawColor(Banco[0], -1);
	TextDrawSetOutline(Banco[0], 0);
	TextDrawSetProportional(Banco[0], 1);
	TextDrawSetShadow(Banco[0], 1);
	TextDrawUseBox(Banco[0], 1);
	TextDrawBoxColor(Banco[0], 85);
	TextDrawTextSize(Banco[0], 621.000000, 20.000000);
	TextDrawSetSelectable(Banco[0], 0);

	Banco[1] = TextDrawCreate(413.000000, 128.000000, "       Banco do Brasil");
	TextDrawBackgroundColor(Banco[1], 255);
	TextDrawFont(Banco[1], 2);
	TextDrawLetterSize(Banco[1], 0.300000, 2.099999);
	TextDrawColor(Banco[1], -1);
	TextDrawSetOutline(Banco[1], 0);
	TextDrawSetProportional(Banco[1], 1);
	TextDrawSetShadow(Banco[1], 1);
	TextDrawUseBox(Banco[1], 1);
	TextDrawBoxColor(Banco[1], -16777165);
	TextDrawTextSize(Banco[1], 621.000000, 20.000000);
	TextDrawSetSelectable(Banco[1], 0);

	Banco[2] = TextDrawCreate(430.000000, 170.000000, "  Sacar");
	TextDrawBackgroundColor(Banco[2], 255);
	TextDrawFont(Banco[2], 1);
	TextDrawLetterSize(Banco[2], 0.460000, 2.800000);
	TextDrawColor(Banco[2], -1);
	TextDrawSetOutline(Banco[2], 1);
	TextDrawSetProportional(Banco[2], 1);
	TextDrawUseBox(Banco[2], 1);
	TextDrawBoxColor(Banco[2], 102);
	TextDrawTextSize(Banco[2], 506.000000, 20.000000);
	TextDrawSetSelectable(Banco[2], true);

	Banco[3] = TextDrawCreate(430.000000, 220.000000, "  Depositar");
	TextDrawBackgroundColor(Banco[3], 255);
	TextDrawFont(Banco[3], 1);
	TextDrawLetterSize(Banco[3], 0.460000, 2.800000);
	TextDrawColor(Banco[3], -1);
	TextDrawSetOutline(Banco[3], 1);
	TextDrawSetProportional(Banco[3], 1);
	TextDrawUseBox(Banco[3], 1);
	TextDrawBoxColor(Banco[3], 102);
	TextDrawTextSize(Banco[3], 535.000000, 20.000000);
	TextDrawSetSelectable(Banco[3], true);

	Banco[4] = TextDrawCreate(430.000000, 268.000000, "  Emprestimos");
	TextDrawBackgroundColor(Banco[4], 255);
	TextDrawFont(Banco[4], 1);
	TextDrawLetterSize(Banco[4], 0.460000, 2.800000);
	TextDrawColor(Banco[4], -1);
	TextDrawSetOutline(Banco[4], 1);
	TextDrawSetProportional(Banco[4], 1);
	TextDrawUseBox(Banco[4], 1);
	TextDrawBoxColor(Banco[4], 102);
	TextDrawTextSize(Banco[4], 557.000000, 20.000000);
	TextDrawSetSelectable(Banco[4], true);

	Banco[5] = TextDrawCreate(430.000000, 315.000000, "      Assaltar");
	TextDrawBackgroundColor(Banco[5], 255);
	TextDrawFont(Banco[5], 1);
	TextDrawLetterSize(Banco[5], 0.460000, 2.799999);
	TextDrawColor(Banco[5], -1);
	TextDrawSetOutline(Banco[5], 1);
	TextDrawSetProportional(Banco[5], 1);
	TextDrawUseBox(Banco[5], 1);
	TextDrawBoxColor(Banco[5], 102);
	TextDrawTextSize(Banco[5], 573.000000, 20.000000);
	TextDrawSetSelectable(Banco[5], true);

	Banco[6] = TextDrawCreate(530.000000, 170.000000, "  Saldo");
	TextDrawBackgroundColor(Banco[6], 255);
	TextDrawFont(Banco[6], 1);
	TextDrawLetterSize(Banco[6], 0.460000, 2.800000);
	TextDrawColor(Banco[6], -1);
	TextDrawSetOutline(Banco[6], 1);
	TextDrawSetProportional(Banco[6], 1);
	TextDrawUseBox(Banco[6], 1);
	TextDrawBoxColor(Banco[6], 102);
	TextDrawTextSize(Banco[6], 603.000000, 20.000000);
	TextDrawSetSelectable(Banco[6], true);

	Banco[7] = TextDrawCreate(540.000000, 170.000000, "New Textdraw");
	TextDrawBackgroundColor(Banco[7], 0);
	TextDrawFont(Banco[7], 5);
	TextDrawLetterSize(Banco[7], 0.500000, 1.000000);
	TextDrawColor(Banco[7], -1);
	TextDrawSetOutline(Banco[7], 0);
	TextDrawSetProportional(Banco[7], 1);
	TextDrawSetShadow(Banco[7], 1);
	TextDrawUseBox(Banco[7], 1);
	TextDrawBoxColor(Banco[7], 255);
	TextDrawTextSize(Banco[7], 90.000000, 130.000000);
	TextDrawSetPreviewModel(Banco[7], 1212);
	TextDrawSetPreviewRot(Banco[7], -16.000000, 0.000000, -55.000000, 1.000000);
	TextDrawSetSelectable(Banco[7], 0);

	Banco[8] = TextDrawCreate(600.000000, 128.000000, "X");
	TextDrawBackgroundColor(Banco[8], 255);
	TextDrawFont(Banco[8], 1);
	TextDrawLetterSize(Banco[8], 0.889999, 2.099999);
	TextDrawColor(Banco[8], -1);
	TextDrawSetOutline(Banco[8], 0);
	TextDrawSetProportional(Banco[8], 1);
	TextDrawSetShadow(Banco[8], 1);
	TextDrawUseBox(Banco[8], 1);
	TextDrawBoxColor(Banco[8], 255);
	TextDrawTextSize(Banco[8], 621.000000, 15.000000);
	TextDrawSetSelectable(Banco[8], true);
	
	TextDrawSetSelectable(Registro[5], 1);
	TextDrawSetSelectable(Registro[6], 1);
	TextDrawSetSelectable(Registro[7], 1);
	TextDrawSetSelectable(Registro[8], 1);
    TextDrawSetSelectable(Registro[9], 1);
    TextDrawSetSelectable(Registro[10], 1);
    TextDrawSetSelectable(Registro[12], 1);
    
	#if defined EventTextUser
	Stakline = TextDrawCreate(407.000000, 349.000000, "~n~");
	TextDrawFont(Stakline, 3);
	TextDrawColor(Stakline, -1);
	TextDrawLetterSize(Stakline, 0.509999, 2.199999);
	TextDrawSetOutline(Stakline, 1);
	#endif

	return 1;
}

stock DeleteTextDraws()
{
	TextDrawDestroy(drogas1);
	TextDrawDestroy(drogas2);
	TextDrawDestroy(AfkText);
	TextDrawDestroy(AfkBackText);
	TextDrawDestroy(Relogio);
	
	#if defined EventTextUser
	TextDrawDestroy(Stakline);
	#endif

   	return 1;
}

stock LoadPlayerTextDraws(playerid)
{
	#if defined gText1User
    PlayerInfo[playerid][gText1] = CreatePlayerTextDraw(playerid, 89.5000000, 427.000000, " ");
    PlayerTextDrawAlignment(playerid, PlayerInfo[playerid][gText1], 2);
    PlayerTextDrawBackgroundColor(playerid, PlayerInfo[playerid][gText1], 255);
    PlayerTextDrawFont(playerid, PlayerInfo[playerid][gText1], 2);
    PlayerTextDrawLetterSize(playerid, PlayerInfo[playerid][gText1], 0.210000, 1.100000);
    PlayerTextDrawColor(playerid, PlayerInfo[playerid][gText1], -1);
    PlayerTextDrawSetOutline(playerid, PlayerInfo[playerid][gText1], 1);
    PlayerTextDrawSetProportional(playerid, PlayerInfo[playerid][gText1], 1);
    PlayerTextDrawSetShadow(playerid, PlayerInfo[playerid][gText1], 0);
    PlayerTextDrawUseBox(playerid, PlayerInfo[playerid][gText1], 1);
    PlayerTextDrawBoxColor(playerid, PlayerInfo[playerid][gText1], 16);
    PlayerTextDrawTextSize(playerid, PlayerInfo[playerid][gText1], 11.000000, 175.000000);
    PlayerTextDrawSetSelectable(playerid, PlayerInfo[playerid][gText1], 0);
	#endif

	#if defined gText2User
	PlayerInfo[playerid][gText2] = CreatePlayerTextDraw(playerid, 243.000000, 423.000000, "~n~");
	PlayerTextDrawFont(playerid, PlayerInfo[playerid][gText2], 1);
	PlayerTextDrawLetterSize(playerid, PlayerInfo[playerid][gText2], 0.170000, 0.900000);
	PlayerTextDrawSetOutline(playerid, PlayerInfo[playerid][gText2], 1);
	PlayerTextDrawColor(playerid, PlayerInfo[playerid][gText2], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerInfo[playerid][gText2], 255);
	PlayerTextDrawSetProportional(playerid,PlayerInfo[playerid][gText2], 1);
	#endif
	
	#if defined gText3User
	PlayerInfo[playerid][gText3] = CreatePlayerTextDraw(playerid, 237.000000, 437.000000, "~n~");
	PlayerTextDrawBackgroundColor(playerid,PlayerInfo[playerid][gText3], 255);
	PlayerTextDrawFont(playerid,PlayerInfo[playerid][gText3], 2);
	PlayerTextDrawLetterSize(playerid,PlayerInfo[playerid][gText3], 0.210000, 1.100000);
	PlayerTextDrawColor(playerid,PlayerInfo[playerid][gText3], -1);
	PlayerTextDrawSetOutline(playerid,PlayerInfo[playerid][gText3], 1);
	PlayerTextDrawSetSelectable(playerid,PlayerInfo[playerid][gText3], 0);
	#endif
	
	CorridaInfo[playerid] = CreatePlayerTextDraw(playerid, 49.000000, 278.000000, " ");
	PlayerTextDrawBackgroundColor(playerid,CorridaInfo[playerid], 255);
	PlayerTextDrawFont(playerid,CorridaInfo[playerid], 1);
	PlayerTextDrawLetterSize(playerid,CorridaInfo[playerid], 0.239999, 1.400000);
	PlayerTextDrawColor(playerid,CorridaInfo[playerid], -1);
	PlayerTextDrawSetOutline(playerid,CorridaInfo[playerid], 1);
	PlayerTextDrawSetProportional(playerid,CorridaInfo[playerid], 1);
	PlayerTextDrawSetSelectable(playerid,CorridaInfo[playerid], 0);

	CorridaAn[playerid] = CreatePlayerTextDraw(playerid, 407.000000, 349.000000, "~W~corrida criada~n~  ~b~/ircorrida");
	PlayerTextDrawBackgroundColor(playerid,CorridaAn[playerid], 255);
	PlayerTextDrawFont(playerid,CorridaAn[playerid], 3);
	PlayerTextDrawLetterSize(playerid,CorridaAn[playerid], 0.509999, 2.199999);
	PlayerTextDrawColor(playerid,CorridaAn[playerid], -1);
	PlayerTextDrawSetOutline(playerid,CorridaAn[playerid], 1);
	PlayerTextDrawSetProportional(playerid,CorridaAn[playerid], 1);
	PlayerTextDrawSetSelectable(playerid,CorridaAn[playerid], 0);
	
	CarInfos1[playerid] = CreatePlayerTextDraw(playerid, 615.000000, 399.000000, " ");
	PlayerTextDrawBackgroundColor(playerid,CarInfos1[playerid], 0);
	PlayerTextDrawFont(playerid,CarInfos1[playerid], 2);
	PlayerTextDrawLetterSize(playerid,CarInfos1[playerid], 0.250000, 1.200000);
	PlayerTextDrawColor(playerid, CarInfos1[playerid], -1);
	PlayerTextDrawSetOutline(playerid, CarInfos1[playerid], 0);
	PlayerTextDrawSetProportional(playerid, CarInfos1[playerid], 1);
	PlayerTextDrawSetShadow(playerid, CarInfos1[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, CarInfos1[playerid], 0);
	PlayerTextDrawAlignment(playerid,CarInfos1[playerid], 3);

	CarInfos2[playerid] = CreatePlayerTextDraw(playerid, 615.000000, 385.000000, " ");
	PlayerTextDrawBackgroundColor(playerid,CarInfos2[playerid], 0);
	PlayerTextDrawFont(playerid,CarInfos2[playerid], 1);
	PlayerTextDrawLetterSize(playerid,CarInfos2[playerid], 0.330000, 1.299999);
	PlayerTextDrawColor(playerid, CarInfos2[playerid], -1);
	PlayerTextDrawSetOutline(playerid, CarInfos2[playerid], 0);
	PlayerTextDrawSetProportional(playerid, CarInfos2[playerid], 1);
	PlayerTextDrawSetShadow(playerid, CarInfos2[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, CarInfos2[playerid], 0);
	PlayerTextDrawAlignment(playerid,CarInfos2[playerid], 3);

	CarInfos3[playerid] = CreatePlayerTextDraw(playerid, 615.000000, 429.000000, " ");
	PlayerTextDrawBackgroundColor(playerid,CarInfos3[playerid], 0);
	PlayerTextDrawFont(playerid,CarInfos3[playerid], 1);
	PlayerTextDrawLetterSize(playerid,CarInfos3[playerid], 0.200000, 1.000000);
	PlayerTextDrawColor(playerid, CarInfos3[playerid], -1);
	PlayerTextDrawSetOutline(playerid, CarInfos3[playerid], 0);
	PlayerTextDrawSetProportional(playerid, CarInfos3[playerid], 1);
	PlayerTextDrawSetShadow(playerid, CarInfos3[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, CarInfos3[playerid], 0);
	PlayerTextDrawAlignment(playerid,CarInfos3[playerid], 3);

	CarInfos6[playerid] = CreatePlayerTextDraw(playerid, 615.000000, 413.000000, " ");
	PlayerTextDrawBackgroundColor(playerid,CarInfos6[playerid], 0);
	PlayerTextDrawFont(playerid,CarInfos6[playerid], 2);
	PlayerTextDrawLetterSize(playerid,CarInfos6[playerid], 0.250000, 1.200000);
	PlayerTextDrawColor(playerid, CarInfos6[playerid], -1);
	PlayerTextDrawSetOutline(playerid, CarInfos6[playerid], 0);
	PlayerTextDrawSetProportional(playerid, CarInfos6[playerid], 1);
	PlayerTextDrawSetShadow(playerid, CarInfos6[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, CarInfos6[playerid], 0);
	PlayerTextDrawAlignment(playerid,CarInfos6[playerid], 3);

	CarInfos5[playerid] = CreatePlayerTextDraw(playerid, 531.000000, 387.000000, "~w~~h~Carro~n~~n~Velocidade~n~~n~Combustivel~n~~n~Lataria");
	PlayerTextDrawBackgroundColor(playerid,CarInfos5[playerid], 0);
	PlayerTextDrawFont(playerid,CarInfos5[playerid], 2);
	PlayerTextDrawLetterSize(playerid,CarInfos5[playerid], 0.210000, 0.799999);
	PlayerTextDrawColor(playerid, CarInfos5[playerid], -1);
	PlayerTextDrawSetOutline(playerid, CarInfos5[playerid], 0);
	PlayerTextDrawSetProportional(playerid, CarInfos5[playerid], 1);
	PlayerTextDrawSetShadow(playerid, CarInfos5[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, CarInfos5[playerid], 0);
	PlayerTextDrawAlignment(playerid,CarInfos5[playerid], 3);

	CarInfos4[playerid] = CreatePlayerTextDraw(playerid, 379.000000, 378.000000, "i");
    PlayerTextDrawBackgroundColor(playerid,CarInfos4[playerid], 0);
    PlayerTextDrawFont(playerid,CarInfos4[playerid], 2);
    PlayerTextDrawLetterSize(playerid,CarInfos4[playerid], 28.800073, 2.600000);
    PlayerTextDrawColor(playerid,CarInfos4[playerid], 102);
    PlayerTextDrawSetOutline(playerid,CarInfos4[playerid], 0);
    PlayerTextDrawSetProportional(playerid,CarInfos4[playerid], 1);
    PlayerTextDrawSetShadow(playerid,CarInfos4[playerid], 1);
    PlayerTextDrawSetSelectable(playerid,CarInfos4[playerid], 0);

    CarInfos7[playerid] = CreatePlayerTextDraw(playerid, 379.000000, 392.000000, "i");
    PlayerTextDrawBackgroundColor(playerid,CarInfos7[playerid], 0);
    PlayerTextDrawFont(playerid,CarInfos7[playerid], 2);
    PlayerTextDrawLetterSize(playerid,CarInfos7[playerid], 28.800073, 2.600000);
    PlayerTextDrawColor(playerid,CarInfos7[playerid], 102);
    PlayerTextDrawSetOutline(playerid,CarInfos7[playerid], 0);
    PlayerTextDrawSetProportional(playerid,CarInfos7[playerid], 1);
    PlayerTextDrawSetShadow(playerid,CarInfos7[playerid], 1);
    PlayerTextDrawSetSelectable(playerid,CarInfos7[playerid], 0);

    CarInfos8[playerid] = CreatePlayerTextDraw(playerid, 379.000000, 406.000000, "i");
    PlayerTextDrawBackgroundColor(playerid,CarInfos8[playerid], 0);
    PlayerTextDrawFont(playerid,CarInfos8[playerid], 2);
    PlayerTextDrawLetterSize(playerid,CarInfos8[playerid], 28.800073, 2.600000);
    PlayerTextDrawColor(playerid,CarInfos8[playerid], 102);
    PlayerTextDrawSetOutline(playerid,CarInfos8[playerid], 0);
    PlayerTextDrawSetProportional(playerid,CarInfos8[playerid], 1);
    PlayerTextDrawSetShadow(playerid,CarInfos8[playerid], 1);
    PlayerTextDrawSetSelectable(playerid,CarInfos8[playerid], 0);

    CarInfos9[playerid] = CreatePlayerTextDraw(playerid, 379.000000, 420.000000, "i");
    PlayerTextDrawBackgroundColor(playerid,CarInfos9[playerid], 0);
    PlayerTextDrawFont(playerid,CarInfos9[playerid], 2);
    PlayerTextDrawLetterSize(playerid,CarInfos9[playerid], 28.800073, 2.600000);
    PlayerTextDrawColor(playerid,CarInfos9[playerid], 102);
    PlayerTextDrawSetOutline(playerid,CarInfos9[playerid], 0);
    PlayerTextDrawSetProportional(playerid,CarInfos9[playerid], 1);
    PlayerTextDrawSetShadow(playerid,CarInfos9[playerid], 1);
    PlayerTextDrawSetSelectable(playerid,CarInfos9[playerid], 0);
    
	return 1;
}

stock DeletePlayerTextDraws(playerid)
{
	#if defined gText1User
	PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][gText1]);
	PlayerInfo[playerid][gText1] = PlayerText:INVALID_TEXT_DRAW;
	#endif

	#if defined gText2User
	PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][gText2]);
	PlayerInfo[playerid][gText2] = PlayerText:INVALID_TEXT_DRAW;
	#endif

	#if defined gText3User
	PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][gText3]);
	PlayerInfo[playerid][gText3] = PlayerText:INVALID_TEXT_DRAW;
	#endif

 	#if defined CarInfosUser
	Loop(o, 4)
	{
		PlayerTextDrawDestroy(playerid, CarInfos1[playerid]);
		PlayerTextDrawDestroy(playerid, CarInfos2[playerid]);
		PlayerTextDrawDestroy(playerid, CarInfos3[playerid]);
		PlayerTextDrawDestroy(playerid, CarInfos4[playerid]);
		PlayerTextDrawDestroy(playerid, CarInfos5[playerid]);
		PlayerTextDrawDestroy(playerid, CarInfos6[playerid]);
		PlayerTextDrawDestroy(playerid, CarInfos7[playerid]);
		PlayerTextDrawDestroy(playerid, CarInfos8[playerid]);
		PlayerTextDrawDestroy(playerid, CarInfos9[playerid]);

		CarInfos1[playerid] = PlayerText:INVALID_TEXT_DRAW;
		CarInfos2[playerid] = PlayerText:INVALID_TEXT_DRAW;
		CarInfos3[playerid] = PlayerText:INVALID_TEXT_DRAW;
		CarInfos4[playerid] = PlayerText:INVALID_TEXT_DRAW;
		CarInfos5[playerid] = PlayerText:INVALID_TEXT_DRAW;
		CarInfos6[playerid] = PlayerText:INVALID_TEXT_DRAW;
		CarInfos7[playerid] = PlayerText:INVALID_TEXT_DRAW;
		CarInfos8[playerid] = PlayerText:INVALID_TEXT_DRAW;
		CarInfos9[playerid] = PlayerText:INVALID_TEXT_DRAW;
	}
	#endif

	return 1;
}

// =================================================================================
stock Destroy3DTextsFix()
{
	Loop(o, sizeof(TextsFix))
	{
		DestroyDynamic3DTextLabel(TextsFix[o]);
		TextsFix[o] = Text3D:INVALID_3DTEXT_ID;
	}
	return 1;
}

stock Load3DTextsFix()
{
	// TextsFix[0] = CreateDynamic3DTextLabel("{2EDBF6}Brasil Sem Limites\n{FFFFFF}Divirta-se no servidor!", -1, 1296.0050,-1873.5895,13.5762, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0); // Licenças (DP LS)
	TextsFix[0] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Delegacia\nAperte '{2EDBF6}Y{FFFFFF}' para abrir.", -1, 248.7789, 69.1560, 1003.6406, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Licenças (DP LS)
	TextsFix[4] = CreateDynamic3DTextLabel("{FFFFFF}Agência de Empregos\nAperte '{2EDBF6}Y{FFFFFF}' para abrir.", -1, 361.8300,173.5202,1008.3828, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Empregos (Pref)
//	TextsFix[6] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Caixa", -1, 822.3710,1.8718,1004.1797, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Caixa (Banco)
	TextsFix[7] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}AutoEscola\nTire Sua Habilitacao Aqui!", -1, 1081.0103, -1697.9812, 13.5469, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Faculdade (LS)
	TextsFix[8] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Viagens", -1, 1685.827392, -2238.218994, 13.546875, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Aeroporto de LS
	TextsFix[9] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Viagens", -1, -1423.490844, -285.481903, 14.148437, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Aeroporto de SF
	TextsFix[10] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Viagens", -1, 1672.991333, 1447.842285, 10.786764, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Aeroporto de LV
	TextsFix[11] = CreateDynamic3DTextLabel("{FFFFFF}ALT\nSubir", Blue, 1570.6644, -1635.5590, 13.9863, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Elevador DP (LS)
	TextsFix[12] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Utilidades\nAperte {2EDBF6}'Y' {FFFFFF}para usar", Blue, 1342.7427, -1763.8678, 13.5674, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Loja em LS
	TextsFix[13] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Utilidades", -1, 1833.7753, -1842.5490, 13.5781, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Segunda Loja em LS
	TextsFix[14] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Utilidades", -1, 613.0466, -494.9978, 16.3359, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Loja em LV
    TextsFix[16] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Cassino", -1, 2020.0604, 1007.7492, 10.8203, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Cassino
	TextsFix[17] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Clube", -1, 1836.8485,-1682.3907,13.5469, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Bar em LS
	TextsFix[18] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Academia", -1, -2270.3796, -155.8050, 35.3203, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Academia SF
	TextsFix[19] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Academia", -1, 2229.7070,-1721.7778,13.3496, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Academia LV
	TextsFix[20] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Academia", -1, -144.5538, 1078.8065, 20.4922, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Academia FC
	TextsFix[21] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Delegacia", -1, 1555.4916, -1675.6893, 16.1953, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // DP em LS
	TextsFix[24] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Delegacia", -1, -217.8244, 979.1748, 19.5040, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // DP rm FC
	TextsFix[25] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Loja de Roupas", -1, 1162.9867, -1694.0570, 14.1719, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Loja de Roupas LS
	TextsFix[26] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Loja de Roupas", -1, -1694.5627, 951.8869, 24.8906, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Loja de Roupas SF
	TextsFix[28] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Agência de Emprego\nPegue Sua Profissão Aqui!", -1, 1481.0127, -1771.4366, 18.7958, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Prefeitura em LS
	TextsFix[31] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Agência de Emprego\nPegue Sua Profissão Aqui!", -1, -205.7683, 1062.0795, 19.7422, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Prefeitura em FC
	TextsFix[32] = CreateDynamic3DTextLabel("{FFFFFF}Policial\nUse {FF0000}/equipar", -1, 243.5981,71.2242,1003.6406, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Equipamentos
	TextsFix[33] = CreateDynamic3DTextLabel("{FFFFFF}Jogadores Presos\nAperte {FF0000}'F' {FFFFFF}para ver", -1, 250.7371,63.4540,1003.6406, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // PRESOS
	TextsFix[34] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Banco", -1, -1881.1000, 822.7247, 35.1773, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Banco SF 1
	TextsFix[35] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Banco", -1, -2649.3630, 376.0701, 6.1592, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Banco SF 2
	TextsFix[36] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Banco", -1, 1930.4991, 1345.2598, 9.9687, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Banco LV 1
	TextsFix[38] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Boca De Fumo", -1, 2156.6140, -1072.0437, 39.9844, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Na Favela
	TextsFix[39] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Tunning", -1, -266.9475, 1541.9738, 75.3593, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Drift Tuning LV
	// Armas (Favela)
	TextsFix[40] = CreateDynamic3DTextLabel("{FFFF00}Colt 45\n{FFFFFF}$100,00", -1, 2157.2561, -996.0366, 62.9568, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[41] = CreateDynamic3DTextLabel("{FFFF00}Desert Eagle\n{FFFFFF}$200,00", -1, 2161.1899, -996.7966, 62.9597, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[42] = CreateDynamic3DTextLabel("{FFFF00}M4 Assault Rifle\n{FFFFFF}$300,00", -1, 2165.7866, -997.6691, 62.9630, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[43] = CreateDynamic3DTextLabel("{FFFF00}Tec-9\n{FFFFFF}$200,00", -1, 2170.7048, -998.6024, 62.9667, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	// Caixa2 (Banco)
	TextsFix[44] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Caixa\nAperte '{2EDBF6}Y{FFFFFF}' para abrir.", -1, 822.1501,1.9432,1004.1797, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	// Armas (OceanDM)
	TextsFix[45] = CreateDynamic3DTextLabel("{00FF00}Colt 45\n{FF0000}$100,00", -1, 2753.7021, -2437.1406, 13.6484, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[46] = CreateDynamic3DTextLabel("{FFFF00}Desert Eagle\n{FFFFFF}$200,00", -1, 2753.6967, -2439.8679, 13.6484, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[47] = CreateDynamic3DTextLabel("{00FF00}M4 Assault Rifle\n{FF0000}$300,00", -1, 2753.6699, -2443.0380, 13.6431, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[48] = CreateDynamic3DTextLabel("{FFFF00}Tec-9\n{FFFFFF}$200,00", -1, 2753.6694, -2446.5124, 13.6431, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	// Armas (SwatDM)
	TextsFix[49] = CreateDynamic3DTextLabel("{FFFF00}Colt 45\n{FFFFFF}$100,00", -1, 1117.4693, -2013.2746, 74.4296, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[50] = CreateDynamic3DTextLabel("{FFFF00}Desert Eagle\n{FFFFFF}$200,00", -1, 1117.3356, -2016.6213, 74.4296, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[51] = CreateDynamic3DTextLabel("{FFFF00}M4 Assault Rifle\n{FFFFFF}$300,00", -1, 1117.3225, -2019.6262, 74.4296, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[52] = CreateDynamic3DTextLabel("{FFFF00}Tec-9\n{FFFFFF}$200,00", -1, 1117.3601, -2022.7625, 74.4296, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	// Armas (NavioDM)
	TextsFix[53] = CreateDynamic3DTextLabel("{FFFF00}Colt 45\n{FFFFFF}$100,00", -1, -2366.9602, 1554.6499, 2.1231, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[54] = CreateDynamic3DTextLabel("{FFFF00}Desert Eagle\n{FFFFFF}$200,00", -1, -2369.7102, 1554.6767, 2.1171, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[55] = CreateDynamic3DTextLabel("{FFFF00}M4 Assault Rifle\n{FFFFFF}$300,00", -1, -2372.5908, 1554.7182, 2.1171, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[56] = CreateDynamic3DTextLabel("{FFFF00}Tec-9\n{FFFFFF}$200,00}$200,00", -1, -2375.5415, 1554.7687, 2.1171, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	// Armas (ArenaDM)
	TextsFix[57] = CreateDynamic3DTextLabel("{FFFF00}Colt 45\n{FFFFFF}$100,00", -1, 1346.6136, 2183.6079, 11.0234, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[58] = CreateDynamic3DTextLabel("{FFFF00}Desert Eagle\n{FFFFFF}$200,00", -1, 1359.5778, 2183.3540, 11.0156, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[59] = CreateDynamic3DTextLabel("{FFFF00}M4 Assault Rifle\n{FFFFFF}$300,00", -1, 1383.0432, 2184.9018, 11.0234, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[60] = CreateDynamic3DTextLabel("{FFFF00}Tec-9\n{FFFFFF}$200,00", -1, 1381.6883, 2150.0434, 11.0234, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	// Detran
	TextsFix[61] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Compre seu veiculo aqui\nNão deixe ele salvo dentro da conce.\nOu irá para o deposito!", Blue, 1770.9873,-1759.8169,13.5430, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	// Casamento
	TextsFix[62] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Igreja", Blue, 2232.8413,-1333.1550,23.9844, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	// Caminhoneiros
	TextsFix[63] = CreateDynamic3DTextLabel("{696969}Petroleiro\n{7AFF7A}Estacione o Caminhão e Use\n{FFFFFF}/pdescarregar", -1, 2130.8459,893.7231,10.8203, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Posto lv
	TextsFix[64] = CreateDynamic3DTextLabel("{696969}Petroleiro\n{7AFF7A}Estacione o Caminhão e Use\n{FFFFFF}/pdescarregar", -1, 636.2880,1676.1759,6.9922, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Posto perto hq
	TextsFix[65] = CreateDynamic3DTextLabel("{696969}Petroleiro\n{7AFF7A}Estacione o Caminhão e Use\n{FFFFFF}/pdescarregar", -1, 985.5629,-910.7003,42.1797, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Posto vinewood
	TextsFix[66] = CreateDynamic3DTextLabel("{696969}Petroleiro\n{7AFF7A}Estacione o Caminhão e Use\n{FFFFFF}/pdescarregar", -1, 1922.0194,-1791.1483,13, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Posto los santos
	TextsFix[67] = CreateDynamic3DTextLabel("{696969}Petroleiro\n{7AFF7A}Estacione o Caminhão e Use\n{FFFFFF}/Carregarp", -1, 211.1968,1382.8523,10.5859, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Polo LV
	TextsFix[68] = CreateDynamic3DTextLabel("{696969}Petroleiro\n{7AFF7A}Estacione o Caminhão e Use\n{FFFFFF}/Carregarp", -1, 210.8375,1369.1058,10.5859, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Polo LV
	//cartorio
	TextsFix[70] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Carteiras", -1, 823.010925, 3.171442, 974.179687, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[71] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Licenças", -1, 886.1000,5.5076,976.3118,88.9828, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
 	//auto escola
//	TextsFix[70] = CreateDynamic3DTextLabel("Auto Escola \n {0557F0}B{FF0000}C{FFFF00}R", -1, 1113.3108, -1836.3617, 16.9330, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
//	TextsFix[70] = CreateDynamic3DTextLabel("Auto Escola \n {0557F0}B{FF0000}C{FFFF00}R", -1, -2032.331787, -117.267738, 1005.171875, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);

	TextsFix[72] = CreateDynamic3DTextLabel("{FFFFFF}Aperte '{FF0000}H{FFFFFF}' para abrir!", -1, 1541.5398,-1627.6372,15.7765, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[73] = CreateDynamic3DTextLabel("{FFFFFF}Aperte '{FF0000}H{FFFFFF}' para abrir!", -1, 1588.4133,-1637.3062,14.0200, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);

	TextsFix[74] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Detran", -1, 1411.5443,-1699.5699,13.5395, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	TextsFix[75] = CreateDynamic3DTextLabel("{FFFFFF}Compre o seu veiculo aereo {FF0000}aqui!", -1, 1868.8373,-2279.9680,13.6291, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0); // Conce aerea

	TextsFix[76] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Loja de Cash", -1, 1310.1387, -1367.5245, 13.5374, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	//base
	TextsFix[77] = CreateDynamic3DTextLabel("{FFFFFF}Aperte '{FF0000}H{FFFFFF}' para abrir!", -1, 2813.551513, -1468.287353, 16.256467, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	// Concessionária de barcos
    // TextsFix[79] = CreateDynamic3DTextLabel("{FFFFFF}\nAperte '{2EDBF6}Y{FFFFFF}' para abrir sua caixa", -1, 1300.4492,-1864.7468,13.5668, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
	TextsFix[80] = CreateDynamic3DTextLabel("{696969}Petroleiro\n{7AFF7A}Estacione o Caminhão e Use\n{FFFFFF}/descarregar", -1, 1078.9364,1281.5105,10.8203, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Las venturas
	TextsFix[81] = CreateDynamic3DTextLabel("{696969}Petroleiro\n{7AFF7A}Estacione o Caminhão e Use\n{FFFFFF}/descarregar", -1, -2125.6699,-125.2245,35.3203, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // San fierro
	TextsFix[82] = CreateDynamic3DTextLabel("{696969}Petroleiro\n{7AFF7A}Estacione o Caminhão e Use\n{FFFFFF}/descarregar", -1, 2463.0308,-2089.1541,13.2740, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // los santos
	TextsFix[83] = CreateDynamic3DTextLabel("{696969}Petroleiro\n{7AFF7A}Estacione o Caminhão e Use\n{FFFFFF}/Carregar", -1, -1040.8118,-606.0070,32.0078, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Polo LV // Texto conce barco
	// TextsFix[84] = CreateDynamic3DTextLabel("{696969}Creditos\n{FFFFFF}Precione {2EDBF6}'Y'{FFFFFF} em minha frente", -1, 1287.9343,-1875.4918,13.6020, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); //SPAWN
	// TextsFix[85] = CreateDynamic3DTextLabel("{00BFFF}Aprenda como jogar no servidor\n{FFFFFF}Precione {2EDBF6}'Y'{FFFFFF} em minha frente", -1, 1288.0577,-1867.9619,13.6020, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); //AjudaNovato
	TextsFix[86] = CreateDynamic3DTextLabel("{FFFFFF}Menu Hacker\nAperte {FF0000}'Y' {FFFFFF}para usar", -1, 1198.7941,-1769.0587,13.5847, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Equipamentos
	TextsFix[87] = CreateDynamic3DTextLabel("{ff0000}Aperte {FFFFFF}H {ff0000}para pagar o pedagio!", -1, 71.9957,-1534.3894,5.2046, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // los santos
	TextsFix[88] = CreateDynamic3DTextLabel("{ff0000}Aperte {FFFFFF}H {ff0000}para pagar o pedagio!", -1, 59.5030,-1532.9253,5.2139, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Polo LV // Texto conce barco
	TextsFix[89] = CreateDynamic3DTextLabel("{ff0000}Aperte {FFFFFF}H {ff0000}para pagar o pedagio!", -1, 1740.2538,505.0170,28.8597, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); //SPAWN
	TextsFix[90] = CreateDynamic3DTextLabel("{ff0000}Aperte {FFFFFF}H {ff0000}para pagar o pedagio!", -1, 1728.5652,515.0717,28.5365, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); //AjudaNovato
	TextsFix[91] = CreateDynamic3DTextLabel("{ff0000}Aperte {FFFFFF}H {ff0000}para pagar o pedagio!", -1, -1404.3192,811.3879,47.3449, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Equipamentos
	TextsFix[92] = CreateDynamic3DTextLabel("{ff0000}Aperte {FFFFFF}H {ff0000}para pagar o pedagio!", -1, -1411.8649,822.5869,47.3678, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Equipamentos
	// Y
	TextsFix[93] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Faculdade\nAperte {2EDBF6}'Y' {FFFFFF}para usar", -1, 1219.2466,-1811.7041,16.6199, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // los santos
	TextsFix[94] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Menu de Armas\nAperte {2EDBF6}'Y' {FFFFFF}para usar", -1, 313.8173, -133.7504, 999.6016, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Polo LV // Texto conce barco
	TextsFix[95] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Multas\n{FFFFFF}Precione {2EDBF6}'Y'{FFFFFF} em minha frente", -1, 134.9372,1715.5566,1000.0667, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); //SPAWN
	TextsFix[96] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Loja Cash\nAperte {2EDBF6}'Y' {FFFFFF}para abrir!", -1, 2217.4761,-1147.2814,1025.7969, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); //AjudaNovato
	TextsFix[97] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Delegacia\nAperte '{2EDBF6}Y{FFFFFF}' para abrir.", -1, 325.2503, 307.0072, 999.1484, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Equipamentos
	TextsFix[98] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Auto escola\nAperte {2EDBF6}'Y' {FFFFFF}para usar", -1, -2160.3662, 640.9449, 1052.3817, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // Equipamentos
	TextsFix[99] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Cartorio\nAperte {2EDBF6}'Y' {FFFFFF}para usar", -1, 1378.3896, -1753.1204, 14.1406, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); //CARTORIO
	TextsFix[100] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Concessionária Terrestre\nPrecione {2EDBF6}'Y'{FFFFFF} em minha frente", -1, 1807.3605, -1772.5485, 13.5469, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); //CARTORIO
	TextsFix[101] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Loja de Bikes\nPrecione {2EDBF6}'Y'{FFFFFF} em minha frente", -1, 1116.7048,-1769.6554,14.6385, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); //CARTORIO
	TextsFix[102] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Concessionária Nautica\nPrecione {2EDBF6}'Y'{FFFFFF} em minha frente", -1, 152.2111, -1602.8928, 13.8311, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); //CARTORIO
	TextsFix[103] = CreateDynamic3DTextLabel("{FFFFFF}Bater Cartao P.M.\nAperte {FF0000}'/batercartao' {FFFFFF}Para BaterCartao",-1,257.0632,69.5435,1003.6406, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); //CARTORIO
	TextsFix[104] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Loja de Roupas\nAperte {2EDBF6}'Y' {FFFFFF}para usar", -1, 217.6061, -5.2586, 1001.2109, 60.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // roupasls
	TextsFix[105] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Loja de Roupas\nAperte {2EDBF6}'Y' {FFFFFF}para usar", -1, 207.0640, -129.7776, 1003.5078, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // roupassf
	TextsFix[106] = CreateDynamic3DTextLabel("{52FA46}B{2EDBF6}S{EFF537}L\n{FFFFFF}Loja de Roupas\n{FFFFFF}Precione {2EDBF6}'Y'{FFFFFF} em minha frente", -1, 207.5690, -98.7048 ,1005.2578, 60.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0); // roupaslv
	TextsFix[107] = CreateDynamic3DTextLabel("Cartório", 0x00FF00FF, 2310.24, -8.52, 26.74, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	TextsFix[108] = CreateDynamic3DTextLabel("Creditos do Servidor\n aperte Y (TESTE) ", -1, 1288.63,-1875.41,13.54, 60, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, 0);

}
// =================================================================================
stock DestroyCheckpointsFix()
{
	Loop(o, sizeof(CheckpointsFix))
	{
		DestroyDynamicCP(CheckpointsFix[o]);
	}
	return 1;
}

stock LoadCheckpointsFix()
{
	CheckpointsFix[0] = CreateDynamicCP(1685.827392, -2238.218994, 13.546875, 2.0, -1, -1, -1, 100.0); // checkaerols
	CheckpointsFix[1] = CreateDynamicCP(-1423.490844, -285.481903, 14.148437, 2.0, -1, -1, -1, 100.0); // checkaerosf
	CheckpointsFix[2] = CreateDynamicCP(1672.991333, 1447.842285, 10.786764, 2.0, -1, -1, -1, 100.0); // checkaerolv
	CheckpointsFix[3] = CreateDynamicCP(516.7604, -14.3393, 1001.5653, 2.0, -1, -1, -1, 100.0); // checkdroga
	CheckpointsFix[4] = CreateDynamicCP(-225.0073, 1404.3076, 27.7734, 2.0, -1, -1, -1, 100.0); // entrarb
	CheckpointsFix[9] = CreateDynamicCP(-29.3117, -184.4816, 1003.5468, 2.0, -1, -1, -1, 100.0); // utilidadeslv
	CheckpointsFix[12] = CreateDynamicCP(948.1397, -1383.5762, 13.3438, 2.0, -1, -1, -1, 100.0); // checkcarga
	CheckpointsFix[13] = CreateDynamicCP(2108.0981,-1789.5231,13.5608, 2.0, -1, -1, -1, 100.0); // checkcarga1
	CheckpointsFix[14] = CreateDynamicCP(1207.7822, -890.3722, 43.0200, 2.0, -1, -1, -1, 100.0); // checkcarga2
	CheckpointsFix[15] = CreateDynamicCP(809.4305, -1629.9131, 13.3828, 2.0, -1, -1, -1, 100.0); // checkcarga3
	CheckpointsFix[16] = CreateDynamicCP(2395.8599, -1915.5037, 13.5469, 2.0, -1, -1, -1, 100.0); // checkcarga4
	CheckpointsFix[17] = CreateDynamicCP(2403.8787, -1507.0851, 24.0068, 2.0, -1, -1, -1, 100.0); // checkcarga5
	CheckpointsFix[18] = CreateDynamicCP(2818.4600, -1620.4865, 11.0851, 2.0, -1, -1, -1, 100.0); // checkdescarga
	CheckpointsFix[19] = CreateDynamicCP(332.6451, -2005.7535, -0.5313, 2.0, -1, -1, -1, 100.0); // ppesca1
	CheckpointsFix[20] = CreateDynamicCP(324.0051, -2007.7056, -0.5985, 2.0, -1, -1, -1, 100.0); // ppesca2
	CheckpointsFix[21] = CreateDynamicCP(316.0611, -2007.8269, -0.6277, 2.0, -1, -1, -1, 100.0); // ppesca3
	CheckpointsFix[22] = CreateDynamicCP(309.0059, -2006.6016, -0.4698, 2.0, -1, -1, -1, 100.0); // ppesca4
	CheckpointsFix[23] = CreateDynamicCP(300.2521, -2005.5605, -0.4878, 2.0, -1, -1, -1, 100.0); // ppesca5
	CheckpointsFix[24] = CreateDynamicCP(202.4053, -1875.5461, 3.7082, 2.0, -1, -1, -1, 100.0); // vpesca
	CheckpointsFix[26] = CreateDynamicCP(-44.7421, -1232.7123, 6.1583, 2.0, -1, -1, -1, 100.0); // ccaca
	CheckpointsFix[27] = CreateDynamicCP(-39.1540, -1356.1106, 2.4084, 2.0, -1, -1, -1, 100.0); // vcaca
	CheckpointsFix[28] = CreateDynamicCP(312.3051, -165.6246, 999.6010, 2.0, -1, -1, -1, 100.0); // menuammu
	CheckpointsFix[32] = CreateDynamicCP(662.9959, -1864.0854, 5.4609, 1.0, -1, -1, -1, 100.0); // checkacademials
	CheckpointsFix[33] = CreateDynamicCP(768.2420, -37.1310, 1000.6864, 1.0, -1, -1, -1, 100.0); // checklutassf
	CheckpointsFix[34] = CreateDynamicCP(774.9961, -59.2069, 1000.7183, 1.0, -1, -1, -1, 100.0); // checklutaslv
	CheckpointsFix[35] = CreateDynamicCP(767.0895, -1.5332, 1000.7189, 1.0, -1, -1, -1, 100.0); // checkacademiafc
	// Caixas Eletrônicos
	CheckpointsFix[36] = CreateDynamicCP(2140.2858, -1169.5356, 23.9921, 2.0, -1, -1, -1, 100.0); // caixaeletronico1
	CheckpointsFix[37] = CreateDynamicCP(1690.8546, -2238.3508, 13.5396, 2.0, -1, -1, -1, 100.0); // caixaeletronico2
	CheckpointsFix[38] = CreateDynamicCP(-1420.2860, -288.8186, 14.1484, 2.0, -1, -1, -1, 100.0); // caixaeletronico3
	CheckpointsFix[39] = CreateDynamicCP(-2674.8896, 633.7269, 14.4531, 2.0, -1, -1, -1, 100.0); // caixaeletronico4
	CheckpointsFix[40] = CreateDynamicCP(1665.9318, 1483.0083, 10.7755, 2.0, -1, -1, -1, 100.0); // caixaeletronico5
	CheckpointsFix[41] = CreateDynamicCP(2019.4732, 1183.9390, 10.8203, 2.0, -1, -1, -1, 100.0); // caixaeletronico6
	CheckpointsFix[42] = CreateDynamicCP(-189.3441, 1209.9063, 19.7276, 2.0, -1, -1, -1, 100.0); // caixaeletronico7
	CheckpointsFix[43] = CreateDynamicCP(455.1850, -1484.9691, 31.0212, 2.0, -1, -1, -1, 100.0); // caixaeletronico8
	// PCs lan
	CheckpointsFix[44] = CreateDynamicCP(1418.8312, -1484.0288, 125.3672, 2.0, -1, -1, -1, 100.0); // pc1
	CheckpointsFix[45] = CreateDynamicCP(1423.7415, -1479.0685, 125.3672, 2.0, -1, -1, -1, 100.0); // pc2
	CheckpointsFix[46] = CreateDynamicCP(1428.6809, -1474.1244, 125.3672, 2.0, -1, -1, -1, 100.0); // pc3
	CheckpointsFix[47] = CreateDynamicCP(1433.0868, -1468.7441, 125.3672, 2.0, -1, -1, -1, 100.0); // pc4
	CheckpointsFix[48] = CreateDynamicCP(1425.5532, -1462.6206, 125.3672, 2.0, -1, -1, -1, 100.0); // pc5
	CheckpointsFix[49] = CreateDynamicCP(1420.7190, -1467.5155, 125.3672, 2.0, -1, -1, -1, 100.0); // pc6
	CheckpointsFix[50] = CreateDynamicCP(1415.1466, -1472.3024, 125.3672, 2.0, -1, -1, -1, 100.0); // pc7
	CheckpointsFix[51] = CreateDynamicCP(1410.7584, -1477.3362, 125.3672, 2.0, -1, -1, -1, 100.0); // pc8
	CheckpointsFix[53] = CreateDynamicCP(241.0865, 115.2853, 1003.2257, 2.0, -1, -1, -1, 100.0); // bancoDPSF
	CheckpointsFix[54] = CreateDynamicCP(289.6094, 187.9006, 1007.1794, 2.0, -1, -1, -1, 100.0); // bancoDPLV
	CheckpointsFix[55] = CreateDynamicCP(-218.0909, 974.2068, 19.4904, 2.0, -1, -1, -1, 100.0); // bancoDPFC
	// Lavajatos
	CheckpointsFix[57] = CreateDynamicCP(1911.3218, -1775.3804, 13.3828, 4.0, -1, -1, -1, 100.0); // lavajato1
	CheckpointsFix[58] = CreateDynamicCP(2458.9067, -1460.9100, 24.0000, 4.0, -1, -1, -1, 100.0); // lavajato2
	CheckpointsFix[59] = CreateDynamicCP(1017.6859, -917.2276, 42.1797, 4.0, -1, -1, -1, 100.0); // lavajato3
	CheckpointsFix[60] = CreateDynamicCP(-111.0689, 1130.1112, 19.7422, 4.0, -1, -1, -1, 100.0); // lavajato4
	// Menus
	CheckpointsFix[66] = CreateDynamicCP(1363.4012, -1649.7007, 13.3828, 2.0, -1, -1, -1, 100.0); // oficinals
	CheckpointsFix[67] = CreateDynamicCP(-266.9475, 1541.9738, 75.3593, 2.0, -1, -1, -1, 100.0); // ofdriftlv
	// Faculdades
	// Míssil Controle
	CheckpointsFix[79] = CreateDynamicCP(-1289.2860, 490.3437, 11.1953, 2.0, -1, -1, -1, 100.0); // Pier69
	CheckpointsFix[80] = CreateDynamicCP(213.4452, 1822.7591, 6.4140, 2.0, -1, -1, -1, 100.0); // Área51
	// Casamento
	CheckpointsFix[82] = CreateDynamicCP(2232.9312,-1333.1078,23.9815, 5.0, -1, -1, -1, 100.0);
	//Continuação
	CheckpointsFix[88] = CreateDynamicCP(304.5968,-1194.1870,80.9337, 1.0, -1, -1, -1, 100.0);
	// conce aerea e de barco e carretas
	CheckpointsFix[92] = CreateDynamicCP(1868.8373,-2279.9680,13.6291, 1.0, -1, -1, -1, 100.0);
	CheckpointsFix[124] = CreateDynamicCP(2687.1450,-1687.6886,9.4390, 1.0, -1, -1, -1, 100.0);
	CheckpointsFix[122] = CreateDynamicCP(-1663.6376,1208.2695,7.2546, 1.0, -1, -1, -1, 100.0);
	CheckpointsFix[121] = CreateDynamicCP(-1659.6881,1220.1345,7.2500, 1.0, -1, -1, -1, 100.0);

	CheckpointsFix[91] = CreateDynamicCP(1346.8441,205.4860,19.2818, 2.0, -1, -1, -1, 100.0); // fimauto
	CheckpointsFix[106] = CreateDynamicCP(2585.7415,-960.6851,81.3516, 2.0, -1, -1, -1, 100.0); // Descarregar
	CheckpointsFix[107] = CreateDynamicCP(991.7983,2101.2363,10.8203, 2.0, -1, -1, -1, 100.0); // Carregar Contrabando
	CheckpointsFix[109] = CreateDynamicCP(-2166.5186,249.2658,35.3203, 2.0, -1, -1, -1, 100.0); // Descarregar
	CheckpointsFix[108] = CreateDynamicCP(1230.4630,-1730.7435,13.6149, 2.0, -1, -1, -1, 100.0);
	CheckpointsFix[110] = CreateDynamicCP(1172.9928,1348.9263,10.9219, 2.0, -1, -1, -1, 100.0); // Descarregar
	CheckpointsFix[111] = CreateDynamicCP(2318.4585,-2074.9121,13.5469, 2.0, -1, -1, -1, 100.0); // Carregar Contrabando
}

// =================================================================================
stock DestroyGangZonesFix()
{
	Loop(o, sizeof(GangZonesFix))
	{
		GangZoneDestroy(GangZonesFix[o]);
	}
	return 1;
}

stock LoadGangZonesFix()
{
	GangZonesFix[1] = GangZoneCreate(2016.010, -1161.922, 2324.010, -923.518);
	GangZonesFix[2] = GangZoneCreate(-2545.777, 1483.09, -2230.474, 1623.225);
	GangZonesFix[3] = GangZoneCreate(1267.535, 2084.409, 1408.109, 2235.263);
	GangZonesFix[5] = GangZoneCreate(2649.73, -2593.79, 2794.238, -2337.187);
	GangZonesFix[6] = GangZoneCreate(1821.749, -1483.09, 2113.696, -1331.278);
	GangZonesFix[7] = GangZoneCreate(1383.386, -1772.66, 1596.345, -1583.168); // pref
	GangZonesFix[8] = GangZoneCreate(1048.736, -1745.026, 1189.441, -1693.705); // bi
	GangZonesFix[9] = GangZoneCreate(1178.033, -1875.301, 1345.357, -1705.548); // facul
	return 1;
}

// =================================================================================
stock DestroyMapIconsFix()
{
	Loop(o, sizeof(MapIconsFix))
	{
		DestroyDynamicMapIcon(MapIconsFix[o]);
	}
	return 1;
}

stock LoadMapIconsFix()
{
	MapIconsFix[0] = CreateDynamicMapIcon(70.4469, 1218.4811, 18.8124, 55, 0, -1, -1, -1, 100.0); // Posto 1
	MapIconsFix[1] = CreateDynamicMapIcon(1942.0170, -1775.6377, 13.6406, 55, 0, -1, -1, -1, 100.0); // Posto 2
	MapIconsFix[2] = CreateDynamicMapIcon(1006.5010, -936.5832, 42.3281, 55, 0, -1, -1, -1, 100.0); // Posto 3
	MapIconsFix[3] = CreateDynamicMapIcon(-90.9854, -1170.5535, 2.3909, 55, 0, -1, -1, -1, 100.0); // Posto 4
	MapIconsFix[4] = CreateDynamicMapIcon(-1675.9628, 411.4728, 6.7439, 55, 0, -1, -1, -1, 100.0); // Posto 5
	MapIconsFix[5] = CreateDynamicMapIcon(-2410.6328, 978.8200, 45.4609, 55, 0, -1, -1, -1, 100.0); // Posto 6
	MapIconsFix[6] = CreateDynamicMapIcon(2202.2441, 2475.3787, 10.8203, 55, 0, -1, -1, -1, 100.0); // Posto 7
	MapIconsFix[7] = CreateDynamicMapIcon(2112.8740, 920.8792, 10.8203, 55, 0, -1, -1, -1, 100.0); // Posto 8
	MapIconsFix[8] = CreateDynamicMapIcon(1596.6265, 2198.6599, 10.7254, 55, 0, -1, -1, -1, 100.0); // Posto 9
	MapIconsFix[9] = CreateDynamicMapIcon(615.7462, 1689.9661, 6.9922, 55, 0, -1, -1, -1, 100.0); // Posto 10
	MapIconsFix[10] = CreateDynamicMapIcon(2638.4482, 1100.8029, 10.9609, 55, 0, -1, -1, -1, 100.0); // Posto 11
	MapIconsFix[11] = CreateDynamicMapIcon(1382.3641, 459.0780, 20.3452, 55, 0, -1, -1, -1, 100.0); // Posto 12
	MapIconsFix[12] = CreateDynamicMapIcon(655.5922, -565.3943, 16.3359, 55, 0, -1, -1, -1, 100.0); // Posto 13
	// Lavajatos
	MapIconsFix[13] = CreateDynamicMapIcon(1911.3218, -1775.3804, 13.3828, 56, 0, -1, -1, -1, 100.0); // Lava Jato 1
	MapIconsFix[14] = CreateDynamicMapIcon(2458.9067, -1460.9100, 24.0000, 56, 0, -1, -1, -1, 100.0); // Lava Jato 2
	MapIconsFix[15] = CreateDynamicMapIcon(1017.6859, -917.2276, 42.1797, 56, 0, -1, -1, -1, 100.0); // Lava Jato 3
	MapIconsFix[16] = CreateDynamicMapIcon(-111.0689, 1130.1112, 19.7422, 56, 0, -1, -1, -1, 100.0); // Lava Jato 4
	// Públicos
	MapIconsFix[17] = CreateDynamicMapIcon(1481.0127, -1771.4366, 18.7958, 23, 0, -1, -1, -1, 100.0); // Prefeitura LS
	MapIconsFix[21] = CreateDynamicMapIcon(1555.4916, -1675.6893, 16.1953, 30, 0, -1, -1, -1, 100.0); // DP LS
	MapIconsFix[22] = CreateDynamicMapIcon(-1605.6397, 711.1011, 13.8671, 30, 0, -1, -1, -1, 100.0); // DP SF
	MapIconsFix[23] = CreateDynamicMapIcon(2287.1032, 2431.6791, 10.8203, 30, 0, -1, -1, -1, 100.0); // DP LV
	MapIconsFix[24] = CreateDynamicMapIcon(-217.8244, 979.1748, 19.5040, 30, 0, -1, -1, -1, 100.0); // DP FC
//	MapIconsFix[25] = CreateDynamicMapIcon(1464.9319, -1010.5063, 26.8438, 52, 0, -1, -1, -1, 100.0); // Banco LS 1
//	MapIconsFix[26] = CreateDynamicMapIcon(1208.9629, -1752.1616, 13.5935, 52, 0, -1, -1, -1, 100.0); // Banco LS 2
	MapIconsFix[27] = CreateDynamicMapIcon(-1881.1000, 822.7247, 35.1773, 52, 0, -1, -1, -1, 100.0); // Banco SF 1
	MapIconsFix[28] = CreateDynamicMapIcon(-2649.3630, 376.0701, 6.1592, 52, 0, -1, -1, -1, 100.0); // Banco SF 2
	MapIconsFix[29] = CreateDynamicMapIcon(1930.4991, 1345.2598, 9.9687, 52, 0, -1, -1, -1, 100.0); // Banco LV 1
	MapIconsFix[31] = CreateDynamicMapIcon(2140.2858, -1169.5356, 23.9921, 52, 0, -1, -1, -1, 100.0); // Caixa Eletrônico 1
	MapIconsFix[32] = CreateDynamicMapIcon(1690.8546, -2238.3508, 13.5396, 52, 0, -1, -1, -1, 100.0); // Caixa Eletrônico 2
	MapIconsFix[33] = CreateDynamicMapIcon(-1420.2860, -288.8186, 14.1484, 52, 0, -1, -1, -1, 100.0); // Caixa Eletrônico 3
	MapIconsFix[34] = CreateDynamicMapIcon(-2674.8896, 633.7269, 14.4531, 52, 0, -1, -1, -1, 100.0); // Caixa Eletrônico 4
	MapIconsFix[35] = CreateDynamicMapIcon(1665.9318, 1483.0083, 10.7755, 52, 0, -1, -1, -1, 100.0); // Caixa Eletrônico 5
	MapIconsFix[36] = CreateDynamicMapIcon(2019.5732, 1183.8106, 10.8203, 52, 0, -1, -1, -1, 100.0); // Caixa Eletrônico 6
	MapIconsFix[37] = CreateDynamicMapIcon(-188.8505, 1209.7543, 19.7179, 52, 0, -1, -1, -1, 100.0); // Caixa Eletrônico 7
	MapIconsFix[38] = CreateDynamicMapIcon(455.1850, -1484.9691, 31.0212, 52, 0, -1, -1, -1, 100.0); // Caixa Eletrônico 8
	// Novos Bairros
	MapIconsFix[41] = CreateDynamicMapIcon(1081.0103, -1697.9812, 13.5469, 2, 0, -1, -1, -1, 100.0); // Faculdade LS
	MapIconsFix[42] = CreateDynamicMapIcon(662.9959, -1864.0854, 5.4609, 54, 0, -1, -1, -1, 100.0); // Academia LS
	MapIconsFix[43] = CreateDynamicMapIcon(1352.3578, -1758.7310, 13.4808, 40, 0, -1, -1, -1, 100.0); // Utilidades
	MapIconsFix[44] = CreateDynamicMapIcon(1568.0254, -1896.3612, 13.5605, 23, 0, -1, -1, -1, 100.0); // Bar Vip LS
	MapIconsFix[45] = CreateDynamicMapIcon(-2155.2612, 645.3902, 52.3672, 23, 0, -1, -1, -1, 100.0); // Bar Vip SF
	MapIconsFix[46] = CreateDynamicMapIcon(2489.9238, 2063.7310, 10.8203, 23, 0, -1, -1, -1, 100.0); // Bar Vip LV
	MapIconsFix[47] = CreateDynamicMapIcon(-315.8872, 829.8916, 14.2422, 6, 0, -1, -1, -1, 100.0); // Ammunation
	MapIconsFix[48] = CreateDynamicMapIcon(1368.2213, -1279.7192, 13.5469, 6, 0, -1, -1, -1, 100.0); // Ammunation LS
	MapIconsFix[49] = CreateDynamicMapIcon(2033.7764, -1402.7045, 17.2910, 22, 0, -1, -1, -1, 100.0); // Jefferson
	MapIconsFix[50] = CreateDynamicMapIcon(1160.4045, -1693.9617, 14.0507, 45, 0, -1, -1, -1, 100.0); // Shop LS
	MapIconsFix[51] = CreateDynamicMapIcon(1804.5730, -1711.6149, 13.5415, 17, 0, -1, -1, -1, 100.0); // Bar LS
	MapIconsFix[53] = CreateDynamicMapIcon(1363.4012, -1649.7007, 13.3828, 27, 0, -1, -1, -1, 100.0); // Oficina
	MapIconsFix[55] = CreateDynamicMapIcon(2020.0604, 1007.7492, 10.8203, 43, 0, -1, -1, -1, 100.0); // Cassino
	MapIconsFix[56] = CreateDynamicMapIcon(316.0611, -2007.8269, -0.6277, 9, 0, -1, -1, -1, 100.0); // Area de Pesca
	MapIconsFix[57] = CreateDynamicMapIcon(202.4053, -1875.5461, 3.7082, 20, 0, -1, -1, -1, 100.0); // Vender Pesca
	MapIconsFix[58] = CreateDynamicMapIcon(-44.7421, -1232.7123, 6.1583, 16, 0, -1, -1, -1, 100.0); // Area de Caça
	MapIconsFix[59] = CreateDynamicMapIcon(-39.1540, -1356.1106, 2.4084, 62, 0, -1, -1, -1, 100.0); // Vender Caça
	MapIconsFix[60] = CreateDynamicMapIcon(2818.4600, -1620.4865, 11.0851, 50, 0, -1, -1, -1, 100.0); // Vender Carga
	MapIconsFix[61] = CreateDynamicMapIcon(369.8319, -1670.0024, 32.7266, 19, 0, -1, -1, -1, 100.0); // Autoescola Fim
	MapIconsFix[62] = CreateDynamicMapIcon(2156.6140, -1072.0437, 39.9844, 59, 0, -1, -1, -1, 100.0); // Boca de Fumo
	MapIconsFix[65] = CreateDynamicMapIcon(1833.7753, -1842.5490, 13.5781, 40, 0, -1, -1, -1, 100.0); // Utilidades LS
	MapIconsFix[66] = CreateDynamicMapIcon(613.0466, -494.9978, 16.3359, 40, 0, -1, -1, -1, 100.0); // Utilidades LV
	MapIconsFix[67] = CreateDynamicMapIcon(2229.4968, -1721.5026, 13.5634, 54, 0, -1, -1, -1, 100.0); // Academia LS
	MapIconsFix[70] = CreateDynamicMapIcon(1219.2316, -1813.5012, 16.5937, 36, 0, -1, -1, -1, 100.0); // Faculdade LS
	MapIconsFix[72] = CreateDynamicMapIcon(2256.0452, -1333.3635, 23.9816, 21, 0, -1, -1, -1, 100.0); // Casamento
	MapIconsFix[73] = CreateDynamicMapIcon(-1328.8868, 2677.6269, 50.0625, 55, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[74] = CreateDynamicMapIcon(1480.47510, -1732.30713, 11.35400, 34, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[75] = CreateDynamicMapIcon(1200.97949, -1332.25720, 11.53391, 34, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[76] = CreateDynamicMapIcon(1963.29590, -1463.40820, 10.42508, 34, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[77] = CreateDynamicMapIcon(1114.57629, -1712.28540, 11.05800, 34, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[78] = CreateDynamicMapIcon(1707.2424, -516.2195, 34.4411, 34, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[79] = CreateDynamicMapIcon(2765.63379, 6.36700, 31.74532, 34, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[80] = CreateDynamicMapIcon(1306.90417, -1550.52576, 12.56001, 34, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[81] = CreateDynamicMapIcon(1248.75818, -933.03961, 41.35783, 34, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[82] = CreateDynamicMapIcon(563.03339, -1235.99146, 16.03483, 34, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[83] = CreateDynamicMapIcon(370.30112, -1709.43250, 6.28527, 34, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[84] = CreateDynamicMapIcon(1054.26978, -1897.21594, 11.76965, 34, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[85] = CreateDynamicMapIcon(2877.96460, -1112.87000, 9.56086, 34, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[86] = CreateDynamicMapIcon(2057.82764, 1297.54260, 10.91371, 34, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[87] = CreateDynamicMapIcon(1217.12634, 1277.53394, 5.69550, 34, 0, -1, -1, -1, 100.0); // Posto TR
	MapIconsFix[88] = CreateDynamicMapIcon(-295.64572, -9.97037, -0.06910, 34, 0, -1, -1, -1, 100.0); // Posto TR
	return 1;
}

// =================================================================================
stock DestroyPickupsFix()
{
	Loop(o, sizeof(PickupsFix))
	{
		DestroyDynamicPickup(PickupsFix[o]);
	}
	return 1;
}

stock LoadPickupsFix()
{
	PickupsFix[0] = CreateDynamicPickup(1239, 1, 322.209899, 302.915252, 999.148437, -1, -1, -1, 200.0); // DPDentro
	PickupsFix[1] = CreateDynamicPickup(1247, 1, -217.8244, 979.1748, 19.5040, -1, -1, -1, 200.0); // DPFora
//	PickupsFix[2] = CreateDynamicPickup(1276, 1, 1352.3578, -1758.7310, 13.4808, -1, -1, -1, 200.0); // UtlDentro
//	PickupsFix[3] = CreateDynamicPickup(1276, 1, -31.1494, -91.2671, 1003.5469, -1, -1, -1, 200.0); // UtlFora
	PickupsFix[4] = CreateDynamicPickup(1241, 1, 2156.6140, -1072.0437, 39.9844, -1, -1, -1, 200.0); // entrarboca
	PickupsFix[5] = CreateDynamicPickup(1241, 1, 513.9041, -7.5897, 1001.5653, -1, -1, -1, 200.0); // sairboca
	PickupsFix[7] = CreateDynamicPickup(1239, 1, 389.2030, 173.7325, 1008.3828, -1, -1, -1, 200.0); // sairpref
	PickupsFix[8] = CreateDynamicPickup(1239, 1, 1162.9867, -1694.0570, 14.1719, -1, -1, -1, 200.0); // entrarroupas
	PickupsFix[9] = CreateDynamicPickup(1239, 1, 207.7206,-110.4449,1005.1328, -1, -1, -1, 200.0); // sairroupas
	PickupsFix[10] = CreateDynamicPickup(1239, 1, 2020.0604, 1007.7492, 10.8203, -1, -1, -1, 200.0); // cassinoentrar
	PickupsFix[11] = CreateDynamicPickup(1239, 1, 2018.9744, 1017.8521, 996.8750, -1, -1, -1, 200.0); // cassinosair
	PickupsFix[12] = CreateDynamicPickup(1239, 1, -144.0466, 1224.7881, 19.8992, -1, -1, -1, 200.0); // entrarbar
	PickupsFix[13] = CreateDynamicPickup(1239, 1, 493.2599,-24.4744,1000.6797, -1, -1, -1, 200.0); // sairbar
	PickupsFix[14] = CreateDynamicPickup(1239, 1, -144.5538, 1078.8065, 20.4922, -1, -1, -1, 200.0); // entrargny
	PickupsFix[15] = CreateDynamicPickup(1239, 1, 772.3262, -5.1436, 1000.7287, -1, -1, -1, 200.0); // sairgny
	PickupsFix[16] = CreateDynamicPickup(1239, 1, 366.7318, 188.4142, 1008.3828, -1, -1, -1, 200.0); // entrarentv
	PickupsFix[17] = CreateDynamicPickup(1239, 1, 366.3933, 197.1831, 1008.3828, -1, -1, -1, 200.0); // sairentv
	PickupsFix[18] = CreateDynamicPickup(1239, 1, -315.8872, 829.8916, 14.2422, -1, -1, -1, 200.0); // entrarammu
	PickupsFix[19] = CreateDynamicPickup(1239, 1, 316.3784, -170.0223, 999.5938, -1, -1, -1, 200.0); // sairammu
	PickupsFix[20] = CreateDynamicPickup(1247, 1, 1555.4916, -1675.6893, 16.1953, -1, -1, -1, 200.0); // entrardpls
	PickupsFix[21] = CreateDynamicPickup(1247, 1, 246.9346, 62.4051, 1003.6406, -1, -1, -1, 200.0); // sairdpls
	PickupsFix[26] = CreateDynamicPickup(1239, 1, 613.0466, -494.9978, 16.3359, -1, -1, -1, 200.0); // entrarutllv
	PickupsFix[27] = CreateDynamicPickup(1239, 1, -25.8294, -187.8489, 1003.5469, -1, -1, -1, 200.0); // sairutllv
	PickupsFix[32] = CreateDynamicPickup(1239, 1, -2214.5374, 198.1041, 35.3203, -1, -1, -1, 200.0); // entrarbarsf
	PickupsFix[33] = CreateDynamicPickup(1239, 1, -2442.6272, 755.3217, 35.1786, -1, -1, -1, 200.0); // entrarutlsf
	PickupsFix[34] = CreateDynamicPickup(1239, 1, 6.0895, -31.3284, 1003.5494, -1, -1, -1, 200.0); // sairutlsf
	PickupsFix[35] = CreateDynamicPickup(1239, 1, -1694.5627, 951.8869, 24.8906, -1, -1, -1, 200.0); // entrarroupassf
	PickupsFix[36] = CreateDynamicPickup(1239, 1, 206.9726, -139.6745, 1003.5078, -1, -1, -1, 200.0); // sairroupassf
	PickupsFix[37] = CreateDynamicPickup(1239, 1, 2369.0422, 1984.4071, 10.8203, -1, -1, -1, 200.0); // entrarbarlv
	PickupsFix[40] = CreateDynamicPickup(1239, 1, 1481.0127, -1771.4366, 18.7958, -1, -1, -1, 200.0); // entrarprefls
	PickupsFix[43] = CreateDynamicPickup(1239, 1, 1836.5889, -1682.5416, 13.3417, -1, -1, -1, 200.0); // entrarbarls
	PickupsFix[44] = CreateDynamicPickup(1239, 1, 1833.7753, -1842.5490, 13.5781, -1, -1, -1, 200.0); // entrarutlls
	PickupsFix[45] = CreateDynamicPickup(1313, 1, 1368.2213, -1279.7192, 13.5469, -1, -1, -1, 200.0); // entrarammuls
	PickupsFix[46] = CreateDynamicPickup(1318, 1, 315.6995, -143.8061, 999.6016, -1, -1, -1, 200.0); // sairammuls
	PickupsFix[49] = CreateDynamicPickup(1274, 1, 1464.9319,-1010.5063,26.8438, -1, -1, -1, 200.0); // Banco LS 1
	PickupsFix[50] = CreateDynamicPickup(1274, 1, 1208.9629, -1752.1616, 13.5935, -1, -1, -1, 200.0); // Banco LS 2
	PickupsFix[51] = CreateDynamicPickup(1274, 1, -1881.1000, 822.7247, 35.1773, -1, -1, -1, 200.0); // Banco SF 1
	PickupsFix[52] = CreateDynamicPickup(1274, 1, -2649.3630, 376.0701, 6.1592, -1, -1, -1, 200.0); // Banco SF 2
	PickupsFix[53] = CreateDynamicPickup(1274, 1, 1930.4991, 1345.2598, 9.9687, -1, -1, -1, 200.0); // Banco LV 1
	PickupsFix[55] = CreateDynamicPickup(1318, 1, 834.0955, 7.3674, 1004.1870, -1, -1, -1, 200.0); // sairbanco
	// Armas (Favela)
	PickupsFix[56] = CreateDynamicPickup(346, 1, 2157.2561, -996.0366, 62.9568, -1, -1, -1, 200.0); // Colt 45 Pistol
	PickupsFix[56] = CreateDynamicPickup(346, 1, 2157.2561, -996.0366, 62.9568, -1, -1, -1, 200.0); // Colt 45 Pistol
	PickupsFix[57] = CreateDynamicPickup(348, 1, 2161.1899, -996.7966, 62.9597, -1, -1, -1, 200.0); // Desert Eagle
	PickupsFix[58] = CreateDynamicPickup(356, 1, 2165.7866, -997.6691, 62.9630, -1, -1, -1, 200.0); // M4 Assault Rifle
	PickupsFix[59] = CreateDynamicPickup(372, 1, 2170.7048, -998.6024, 62.9667, -1, -1, -1, 200.0); // Tec-9
	// Armas (OceanDM)
	PickupsFix[60] = CreateDynamicPickup(346, 1, 2753.7021, -2437.1406, 13.6484, -1, -1, -1, 200.0); // Colt 45 Pistol
	PickupsFix[61] = CreateDynamicPickup(348, 1, 2753.6967, -2439.8679, 13.6484, -1, -1, -1, 200.0); // Desert Eagle
	PickupsFix[62] = CreateDynamicPickup(356, 1, 2753.6699, -2443.0380, 13.6431, -1, -1, -1, 200.0); // M4 Assault Rifle
	PickupsFix[63] = CreateDynamicPickup(372, 1, 2753.6694, -2446.5124, 13.6431, -1, -1, -1, 200.0); // Tec-9
	// Armas (SwatDM)
	// Armas (ArenaDM)
	PickupsFix[72] = CreateDynamicPickup(346, 1, 1346.6136, 2183.6079, 11.0234, -1, -1, -1, 200.0); // Colt 45 Pistol
	PickupsFix[73] = CreateDynamicPickup(348, 1, 1359.5778, 2183.3540, 11.0156, -1, -1, -1, 200.0); // Desert Eagle
	PickupsFix[74] = CreateDynamicPickup(356, 1, 1383.0432, 2184.9018, 11.0234, -1, -1, -1, 200.0); // M4 Assault Rifle
	PickupsFix[75] = CreateDynamicPickup(372, 1, 1381.6883, 2150.0434, 11.0234, -1, -1, -1, 200.0); // Tec-9
	// Continuação Das Pickups
	PickupsFix[78] = CreateDynamicPickup(1239, 1, 2228.0017, -1150.7673, 1025.7969, -1, -1, -1, 200.0); // sair loja Cash
 	PickupsFix[79] = CreateDynamicPickup(1239, 1, 1310.1387, -1367.5245, 13.5374, -1, -1, -1, 200.0); // loja Cash
    PickupsFix[81] = CreateDynamicPickup(1581, 1, 1081.2511,-1696.7842,13.5524, -1, -1, -1, 200.0); // Entrar AutoEscola
    PickupsFix[82] = CreateDynamicPickup(1581, 1, -2170.3000, 640.0547, 1052.3817, -1, -1, -1, 200.0); // Sair AutoEscola
	PickupsFix[83] = CreateDynamicPickup(1314, 1, 1378.3896, -1753.1204, 14.1406, -1, -1, -1, 200.0); // Entrar Cartorio
    PickupsFix[84] = CreateDynamicPickup(1314, 1, 2305.4429, -16.0606, 26.7496, -1, -1, -1, 200.0); // Sair Cartorio
    PickupsFix[85] = CreateDynamicPickup(1239, 1, 2229.4968, -1721.5026, 13.5634, -1, -1, -1, 200.0); // entrar academia
    PickupsFix[86] = CreateDynamicPickup(1239, 1, 774.1005, -50.2805, 1000.5859, -1, -1, -1, 200.0); // Sair academia

	PickupsFix[89] = CreateDynamicPickup(1239, 1, 1411.5443,-1699.5699,13.5395, -1, -1, -1, 200.0); // EntrarLotérica
	PickupsFix[90] = CreateDynamicPickup(1318, 1, 135.1424,1696.3915,1000.0667, -1, -1, -1, 200.0); // EntrarLotérica
	PickupsFix[91] = CreateDynamicPickup(1314, 1, 361.9277,173.5505,1008.3828, -1, -1, -1, 200.0); // EntrarLotérica
    PickupsFix[92] = CreateDynamicPickup(1210, 1, 250.7371,63.4540,1003.6406); //PRESOS
    PickupsFix[95] = CreateDynamicPickup(19130, 1, 1198.7941,-1769.0587,13.5847, -1, -1, -1, 100.0); // Hacker
    PickupsFix[96] = CreateDynamicPickup(356, 1, 243.5981,71.2242,1003.6406); //COPS
        //PEDAGIO
    PickupsFix[97] = CreateDynamicPickup(1239, 1, 71.9957,-1534.3894,5.2046, -1, -1, -1, 200.0); // PEDAGIO
	PickupsFix[98] = CreateDynamicPickup(1239, 1, 59.5030,-1532.9253,5.2139, -1, -1, -1, 200.0); // PEDAGIO
	PickupsFix[99] = CreateDynamicPickup(1239, 1, 1740.2538,505.0170,28.8597, -1, -1, -1, 200.0); // PEDAGIO
    PickupsFix[100] = CreateDynamicPickup(1239, 1, 1728.5652,515.0717,28.5365); //PEDAGIO
   	PickupsFix[101] = CreateDynamicPickup(1239, 1, -1404.3192,811.3879,47.3449, -1, -1, -1, 100.0);//PEDAGIO
   	PickupsFix[102] = CreateDynamicPickup(1239, 1, -1411.8649,822.5869,47.3678, -1, -1, -1, 100.0);//PEDAGIO
	//NOVAS COM Y
	PickupsFix[103] = CreateDynamicPickup(1210, 1, 1219.2466,-1811.7041,16.6199, -1, -1, -1, 100.0); // BibliotecaLS
	PickupsFix[104] = CreateDynamicPickup(362, 1, 312.3051, -165.6246, 999.6010, -1, -1, -1, 100.0); // menuammu
	PickupsFix[105] = CreateDynamicPickup(362, 1, 313.8173, -133.7504, 999.6016, -1, -1, -1, 100.0); // ammuls
	PickupsFix[107] = CreateDynamicPickup(1247, 1, 246.3500, 117.6079, 1003.2187, -1, -1, -1, 100.0); // menudpSF
	PickupsFix[108] = CreateDynamicPickup(1247, 1, 248.7789, 69.1560, 1003.6406, -1, -1, -1, 100.0); // menudp
	PickupsFix[109] = CreateDynamicPickup(19058, 1, 1300.4492,-1864.7468,13.5668, -1, -1, -1, 100.0); // Abrir Caixa
	PickupsFix[110] = CreateDynamicPickup(1318, 1, 2217.4761,-1147.2814,1025.7969, -1, -1, -1, 100.0); // Cash
	PickupsFix[112] = CreateDynamicPickup(1239, 1, 325.2503, 307.0072, 999.1484, -1, -1, -1, 100.0); // habs
	PickupsFix[113] = CreateDynamicPickup(1581, 1, -2160.3662, 640.9449, 1052.3817, -1, -1, -1, 100.0); // Menu Auto Escola
	PickupsFix[114] = CreateDynamicPickup(1277, 1, 2310.1650, -8.5256, 26.7422, -1, -1, -1, 100.0); // Menu Cartorio
	PickupsFix[115] = CreateDynamicPickup(1277, 1, 1352.2468, -1758.2993, 13.5078, -1, -1, -1, 100.0); // Utilidades
	PickupsFix[119] = CreateDynamicPickup(1242, 1, 257.0632,69.5435,1003.6406, -1, -1, -1, 100.0);//BaterCartao - Policia Militar
    PickupsFix[120] = CreateDynamicPickup(1275, 1, 217.6061, -5.2586, 1001.2109, -1, -1, -1, 100.0); // lojaderoupas
    PickupsFix[121] = CreateDynamicPickup(1275, 1, 207.0640, -129.7776, 1003.5078, -1, -1, -1, 100.0); // lojaderoupassf
	
}


// =================================================================================
stock DestroyObjectsFix()
{
	Loop(o, sizeof(ObjectsFix))
	{
		DestroyDynamicObject(ObjectsFix[o]);
	}
	return 1;
}

stock LoadObjectsFix()
{
	// Grove
	ObjectsFix[0] = CreateDynamicObject(986, 666.637, -1215.689, 17.622, 0.0, 0.0, 67.500, -1, -1, -1, 200.0);
	// DP LS
	ObjectsFix[1] = CreateDynamicObject(3749, 1542.689, -1627.642, 18.241, 0.0, 0.0, -90.000, -1, -1, -1, 200.0);
	// Oficina LS
	ObjectsFix[2] = CreateDynamicObject(3359, 1362.994, -1650.849, 12.384, 0.0, 0.0, 90.000, -1, -1, -1, 200.0);
	ObjectsFix[3] = CreateDynamicObject(11393, 1362.560, -1655.080, 13.830, 0.0, 0.0, -180.000, -1, -1, -1, 200.0);
	ObjectsFix[4] = CreateDynamicObject(14826, 1368.999, -1658.191, 13.147, 0.0, 0.0, -90.000, -1, -1, -1, 200.0);
	// Caixas Eletrônicos nas Ruas
	ObjectsFix[5] = CreateDynamicObject(2942, 2139.3821, -1169.5771, 23.6351, 0.0000, 0.0000, 90.0000, -1, -1, -1, 200.0); // 1
	ObjectsFix[6] = CreateDynamicObject(2942, 1690.8522, -2237.4712, 13.1825, 0.0000, 0.0000, 0.0000, -1, -1, -1, 200.0); // 2
	ObjectsFix[7] = CreateDynamicObject(2942, -1419.7765, -288.1626, 13.7913, 0.0000, 0.0000, 320.0000, -1, -1, -1, 200.0); // 3
	ObjectsFix[8] = CreateDynamicObject(2942, -2674.9651, 634.6716, 14.0960, 0.0000, 0.0000, 359.9988, -1, -1, -1, 200.0); // 4
	ObjectsFix[9] = CreateDynamicObject(2942, 1665.0559, 1482.9249, 10.4189, 0.0000, 0.0000, 89.9945, -1, -1, -1, 200.0); // 5
	ObjectsFix[10] = CreateDynamicObject(2942, 2018.9330, 1184.6599, 10.4632, 0.0000, 0.0000, 32.0000, -1, -1, -1, 200.0); // 6
	ObjectsFix[11] = CreateDynamicObject(2942, -189.4092, 1210.7380, 19.3851, 0.0000, 0.0000, 0.0000, -1, -1, -1, 200.0); // 7
	ObjectsFix[12] = CreateDynamicObject(2942, 456.1587, -1484.6182, 30.6635, 0.0000, 0.0000, 287.9977, -1, -1, -1, 200.0); // 8
	// Caixas Eletrônicos nas DP's e Pref's
	ObjectsFix[13] = CreateDynamicObject(2942, 243.8501, 62.6744, 1003.2835, 0.0000, 0.0000, 180.0000, -1, -1, -1, 200.0);
	ObjectsFix[14] = CreateDynamicObject(2942, 240.1574, 115.2575, 1002.8616, 0.0000, 0.0000, 90.0000, -1, -1, -1, 200.0);
	ObjectsFix[15] = CreateDynamicObject(2942, 289.5603, 188.9028, 1006.8223, 0.0000, 0.0000, 0.0000, -1, -1, -1, 200.0);
	ObjectsFix[16] = CreateDynamicObject(2942, -219.2955, 974.1413, 19.1327, 0.0000, 0.0000, 90.0000, -1, -1, -1, 200.0);
	ObjectsFix[17] = CreateDynamicObject(2942, 379.9217, 177.6636, 1008.0257, 0.0000, 0.0000, 0.0000, -1, -1, -1, 200.0);
	// Elevador e Portões
	ObjectsFix[18] = CreateDynamicObject(2927, 1570.8325195313, -1635.4766845703, 12.728549957275, 90.0, 0.0, 0.0, -1, -1, -1, 200.0);
	ObjectsFix[19] = CreateDynamicObject(980, 1541.9384765625, -1627.7314453125, 15.156204223633, 0.0, 0.0, 90.0, -1, -1, -1, 200.0);
	ObjectsFix[20] = CreateDynamicObject(980, 1588.0791015625, -1638.140625, 15.172611236572, 0.0, 0.0, 0.0, -1, -1, -1, 200.0);
	// Detran
	ObjectsFix[23] = CreateDynamicObject(3749, 1067.3000488281, 1359.1999511719, 15.60000038147, 0.0, 0.0, 0.0, -1, -1, -1, 200.0);
	ObjectsFix[25] = CreateDynamicObject(989, 1058.928344, 1290.362426, 10.020320, 16.999996, 90.000015, 0.599999, -1, -1, -1, 200.0); // elevador
	return 1;
}

// =================================================================================
stock LoadDynamicObjectsFromFile(filename[])
{
    new File:file_ptr, line[256], modelid,
		Float:SpawnX, Float:SpawnY, Float:SpawnZ, Float:SpawnRotX, Float:SpawnRotY, Float:SpawnRotZ,
		objects_loaded;

    file_ptr = fopen(filename, io_read);
    if(!file_ptr)
	{
		return printf("ERRO! Falha ao carregar objetos do arquivo %s (O arquivo não existe no diretório scriptfiles)!", filename);
	}
	while(fread(file_ptr, line) > 0)
    {
        if(!sscanf(line, "p<,>'('dfffffp<)>f", modelid, SpawnX, SpawnY, SpawnZ, SpawnRotX, SpawnRotY, SpawnRotZ))
        {
			if(CountAllLoadedObjects != MAX_LOAD_OBJECTS)
			{
				ObjectsLoaded[CountAllLoadedObjects] = CreateDynamicObject(modelid, SpawnX, SpawnY, SpawnZ, SpawnRotX, SpawnRotY, SpawnRotZ, -1, -1, -1, 200.0);
				CountAllLoadedObjects++;
				objects_loaded++;
			}
        }
    }
	if(CountAllLoadedObjects == MAX_LOAD_OBJECTS)
	{
		printf("ERRO! O limite de %d objetos carregados chegou ao fim.", MAX_LOAD_OBJECTS);
	}
    fclose(file_ptr);
    return printf("Objetos: %d carregado(s) de %s", objects_loaded, filename);
}

stock UnloadAllDynamicObjects()
{
	Loop(o, CountAllLoadedObjects)
	{
		if(IsValidDynamicObject(ObjectsLoaded[o]))
		{
			DestroyDynamicObject(ObjectsLoaded[o]);
			ObjectsLoaded[o] = INVALID_OBJECT_ID;
		}
	}
	CountAllLoadedObjects = 0;
	return 1;
}
// =================================================================================
stock DestroyVehiclesFix()
{
	Loop(o, sizeof(VehiclesFix))
	{
		DestroyVehicle(VehiclesFix[o]);
		VehiclesFix[o] = INVALID_VEHICLE_ID;
	}
	return 1;
}

stock LoadVehiclesFix()
{
	// Novatos LS
	VehiclesFix[0] = AddStaticVehicle(481, 688.1968, -476.7924, 15.8489, 179.4085, 3, 3);
	VehiclesFix[1] = AddStaticVehicle(481, 689.0359, -476.7025, 15.8509, 178.9824, 6, 6);
	VehiclesFix[2] = AddStaticVehicle(481, 690.1825, -476.7715, 15.8533, 183.0578, 46, 46);
	VehiclesFix[3] = AddStaticVehicle(481, 691.1677, -477.0065, 15.8517, 190.8689, 65, 9);
	VehiclesFix[4] = AddStaticVehicle(481, 691.9894, -476.9124, 15.8513, 188.6692, 14, 1);
	// Novatos SF
	VehiclesFix[9] = AddStaticVehicle(481, -2695.845703, 361.910614, 3.932306, 0.733456, 3, 3);
	VehiclesFix[10] = AddStaticVehicle(481, -2694.043701, 361.883422, 3.930196, 355.029296, 3, 3);
	VehiclesFix[11] = AddStaticVehicle(481, -2692.166015, 361.937103, 3.929703, 1.443031, 46, 46);
	VehiclesFix[12] = AddStaticVehicle(481, -2690.344482, 361.994537, 3.931268, 358.547363, 46, 46);
	// Novatos LV
	VehiclesFix[13] = AddStaticVehicle(481, 2340.038330, 2351.181884, 10.335412, 321.851867, 3, 3);
	VehiclesFix[14] = AddStaticVehicle(481, 2341.805908, 2351.125732, 10.338060, 324.170166, 3, 3);
	VehiclesFix[15] = AddStaticVehicle(481, 2343.612548, 2351.175537, 10.335776, 327.803405, 7, 7);
	VehiclesFix[16] = AddStaticVehicle(481, 2345.392822, 2351.270019, 10.337895, 334.068450, 7, 7);
	// Pesca
	VehiclesFix[17] = AddStaticVehicle(453, 299.4774, -1907.1052, -0.1853, 173.0878, 56, 56);
	VehiclesFix[18] = AddStaticVehicle(453, 314.1102, -1911.2313, -0.3427, 174.2807, 56, 56);
	VehiclesFix[19] = AddStaticVehicle(453, 324.6967, -1912.6243, -0.2595, 176.0881, 56, 56);
	VehiclesFix[20] = AddStaticVehicle(453, 341.2373, -1914.4210, -0.1548, 176.9595, 56, 56);
	VehiclesFix[21] = AddStaticVehicle(453, 279.8211, -1906.6147, -0.1838, 180.7906, 56, 56);
	// Pizzarias
	VehiclesFix[22] = AddStaticVehicle(448, 782.1902, -1637.1254, 12.9761, 267.3216, 3, 6);
	VehiclesFix[23] = AddStaticVehicle(448, 782.2314, -1633.8530, 12.9840, 267.2000, 3, 6);
	VehiclesFix[24] = AddStaticVehicle(448, 783.4991, -1630.0377, 12.9824, 266.4239, 3, 6);
	VehiclesFix[25] = AddStaticVehicle(448, 782.7540, -1626.6001, 12.9819, 270.2620, 3, 6);
	VehiclesFix[26] = AddStaticVehicle(448, 783.3331, -1623.3042, 12.9800, 264.2143, 3, 6);
	VehiclesFix[27] = AddStaticVehicle(448, 951.1185, -1353.9312, 12.9435, 185.9032, 3, 6);
	VehiclesFix[28] = AddStaticVehicle(448, 954.4941, -1353.8339, 12.9431, 177.1419, 3, 6);
	VehiclesFix[29] = AddStaticVehicle(448, 959.1927, -1354.2557, 12.9433, 173.4076, 3, 6);
	VehiclesFix[30] = AddStaticVehicle(448, 965.3804, -1354.0242, 12.9460, 175.6907, 3, 6);
	VehiclesFix[31] = AddStaticVehicle(448, 1219.7954, -871.9604, 42.4963, 96.7396, 3, 6);
	VehiclesFix[32] = AddStaticVehicle(448, 1220.8403, -876.6669, 42.4911, 98.4534, 3, 6);
	VehiclesFix[33] = AddStaticVehicle(448, 1222.0574, -880.9310, 42.4937, 98.3314, 3, 6);
	VehiclesFix[34] = AddStaticVehicle(448, 1224.1505, -890.3927, 42.4925, 100.2291, 3, 6);
	VehiclesFix[35] = AddStaticVehicle(448, 2399.7251, -1927.0524, 12.9824, 355.2851, 3, 6);
	VehiclesFix[36] = AddStaticVehicle(448, 2396.3977, -1927.6677, 12.9823, 356.9011, 3, 6);
	VehiclesFix[37] = AddStaticVehicle(448, 2393.2600, -1928.0347, 12.9832, 354.6181, 3, 6);
	VehiclesFix[38] = AddStaticVehicle(448, 2389.8535, -1927.6488, 12.9791, 355.2060, 3, 6);
	VehiclesFix[39] = AddStaticVehicle(448, 2386.8105, -1928.1200, 12.9821, 355.3882, 3, 6);
	VehiclesFix[40] = AddStaticVehicle(448, 2383.5359, -1927.7382, 12.9797, 351.9924, 3, 6);
	VehiclesFix[41] = AddStaticVehicle(448, 2391.4792, -1510.4580, 23.4340, 269.9120, 3, 6);
	VehiclesFix[42] = AddStaticVehicle(448, 2391.7864, -1507.4435, 23.4344, 259.9006, 3, 6);
	VehiclesFix[43] = AddStaticVehicle(448, 2391.5024, -1503.8405, 23.4343, 268.1087, 3, 6);
	VehiclesFix[44] = AddStaticVehicle(448, 2391.9729, -1500.6611, 23.4322, 261.1125, 3, 6);
	VehiclesFix[45] = AddStaticVehicle(448, 2391.5256, -1497.3875, 23.4359, 268.4741, 3, 6);
	// Diversos
	VehiclesFix[51] = AddStaticVehicle(562, 1062.9713, -1752.0845, 13.1024, 89.4533, 35, 1);
	VehiclesFix[53] = AddStaticVehicle(487, 1180.9705, -1360.2562, 14.3758, 124.6010, 1, 3);
	VehiclesFix[54] = AddStaticVehicle(560, 1191.1891, -1332.4547, 13.1677, 1.6184, 1, 1);
	VehiclesFix[55] = AddStaticVehicle(560, 1190.2255, -1315.1104, 13.1832, 2.1980, 1, 1);
	VehiclesFix[56] = AddStaticVehicle(400, 1099.2617, -1775.4307, 13.4370, 91.3508, 123, 1);
	VehiclesFix[57] = AddStaticVehicle(560, 1099.5881, -1754.8317, 13.0536, 270.9626, 151, 151);
	VehiclesFix[58] = AddStaticVehicle(522, 1100.0924, -1760.6233, 12.9077, 270.2411, 3, 8);
	VehiclesFix[59] = AddStaticVehicle(451, 1061.8156, -1766.7231, 13.0897, 89.4208, 0, 0);
	VehiclesFix[60] = AddStaticVehicle(411, 1062.3027, -1737.3207, 13.3344, 91.0134, 6, 6);
	VehiclesFix[63] = AddStaticVehicle(560, 2041.4503, -1411.5532, 16.8728, 87.1014, 1, 1);
	VehiclesFix[64] = AddStaticVehicle(560, 2041.3579, -1415.8104, 16.8726, 89.3850, 1, 1);
	VehiclesFix[65] = AddStaticVehicle(522, 1864.1053, -1397.2374, 13.0527, 264.3358, 6, 25);
	VehiclesFix[66] = AddStaticVehicle(522, 1864.2628, -1398.7808, 13.0442, 265.9897, 7, 79);
	VehiclesFix[67] = AddStaticVehicle(522, 1864.0701, -1400.4785, 13.0513, 269.7195, 8, 82);
	VehiclesFix[68] = AddStaticVehicle(522, 1864.1141, -1401.9966, 13.0501, 270.5911, 36, 105);
	VehiclesFix[69] = AddStaticVehicle(522, 1864.1313, -1403.9852, 13.0484, 271.9888, 39, 106);
	VehiclesFix[70] = AddStaticVehicle(596, 611.9989, -597.0789, 17.0138, 267.9804, 0, 1);
	VehiclesFix[71] = AddStaticVehicle(596, 611.8342, -601.4930, 17.0109, 268.1334, 0, 1);
	VehiclesFix[72] = AddStaticVehicle(411, 667.7022, -580.1765, 16.1894, 272.9611, 154, 154);
	VehiclesFix[73] = AddStaticVehicle(422, 658.1651, -559.4146, 16.3233, 359.3752, 97, 25);
	VehiclesFix[74] = AddStaticVehicle(445, 695.3232, -460.8219, 15.9858, 270.2324, 0, 0);
	VehiclesFix[75] = AddStaticVehicle(560, 708.1064, -464.5726, 16.0407, 89.8470, 21, 1);
	VehiclesFix[76] = AddStaticVehicle(567, 2147.7327, -1203.3367, 23.6602, 262.7780, 6, 6);
	VehiclesFix[77] = AddStaticVehicle(492, 2147.2471, -1198.9424, 23.5698, 271.2524, 0, 0);
	// GARI
	VehiclesFix[112] = AddStaticVehicle(408,2077.9717,-2006.0527,14.0875,359.8838,2,29); // Heli news 2
	VehiclesFix[113] = AddStaticVehicle(408,2077.9387,-2021.9828,14.0823,359.8838,2,29); // Heli news 2
	VehiclesFix[114] = AddStaticVehicle(408,2077.8914,-2042.4220,14.0866,359.8837,2,29); // Heli news 2
	// Fim GARI
	// Auto Escola
	VehiclesFix[101] = AddStaticVehicle(411,1075.4813,-1700.2540,13.2520,179.6433,6,6); // car Auto 1
	VehiclesFix[102] = AddStaticVehicle(541,1069.9902,-1700.2200,13.2521,179.6433,6,0); // car Auto 2
	// Caminhoneiros
	VehiclesFix[99] = AddStaticVehicle(591, 2308.537597, 2812.552978, 11.477627, 179.935882, -1, -1);
	VehiclesFix[100] = AddStaticVehicle(584, 2391.049804, 2816.832519, 12.006543, 94.858627, -1, -1);
	VehiclesFix[115] = AddStaticVehicle(497,1566.7051,-1649.9094,28.5926,89.1143,0,1); // Heli Dp 1
	VehiclesFix[116] = AddStaticVehicle(497,1566.5114,-1662.4454,28.5367,89.1143,0,1); // Heli Dp 2
	VehiclesFix[117] = AddStaticVehicle(497,1566.0862,-1689.9099,28.4142,89.1143,0,1); // Heli Dp 3
	VehiclesFix[118] = AddStaticVehicle(497,1565.7958,-1708.7119,28.6590,89.1143,0,1); // Heli Dp 4
	VehiclesFix[119] = AddStaticVehicle(438,1807.9825,-1858.8142,13.4173,270.7603,6,76); // Taxi Spawn
	VehiclesFix[120] = AddStaticVehicle(420,1797.0045,-1858.9878,13.1937,268.7439,6,1); // Taxi Spawn
	VehiclesFix[121] = AddStaticVehicle(420,1784.7859,-1858.7195,13.1924,268.7439,6,1); // Taxi Spawn
	VehiclesFix[122] = AddStaticVehicle(582,901.5616,-1206.2883,17.0392,178.5237,41,20); // News Van 1
	VehiclesFix[123] = AddStaticVehicle(582,866.7104,-1206.1487,17.0362,181.0882,41,20); // News Van 2
	VehiclesFix[124] = AddStaticVehicle(582,831.4496,-1205.9000,17.0315,179.4490,41,20); // News Van 3
	VehiclesFix[125] = AddStaticVehicle(488,873.4022,-1240.6588,15.6677,276.4922,2,29); // Heli news 1
	VehiclesFix[126] = AddStaticVehicle(488,860.3575,-1284.5955,14.1935,281.4999,2,29); // Heli news 21);
	//////////veiculos das profissoes
	VehiclesFix[127] = AddStaticVehicle(525,1643.9918,-1524.4220,13.4309,179.2871,22,30); // POSITION MECANICO
	VehiclesFix[128] = AddStaticVehicle(525,1637.7008,-1524.9233,13.4698,177.2045,22,30); // POSITION MECANICO02
	VehiclesFix[129] = AddStaticVehicle(525,1632.9708,-1524.6063,13.4859,177.4874,22,30); // POSITION MECANICO03
	VehiclesFix[130] = AddStaticVehicle(498,2338.2065,-2074.6277,13.6169,91.1487,6,6); // position
	VehiclesFix[131] = AddStaticVehicle(498,2338.3574,-2068.0195,13.6192,88.6903,6,6); // position 02
	VehiclesFix[132] = AddStaticVehicle(498,2337.8904,-2084.8030,13.6149,89.9858,6,6); // position 03
	VehiclesFix[133] = AddStaticVehicle(498,2338.6743,-2092.2136,13.6149,86.2813,6,6); // position 04
	VehiclesFix[134] = AddStaticVehicle(588,2391.9968,-1493.8092,23.7349,270.1018,1,1); // position hotdog01
	VehiclesFix[135] = AddStaticVehicle(588,2391.3193,-1487.3213,23.7303,268.7614,1,1); // position hotdog02
	VehiclesFix[136] = AddStaticVehicle(588,2393.2537,-1483.0408,23.8364,268.5016,1,1); // position hotdog03
	VehiclesFix[137] = AddStaticVehicle(584,2132.313964,932.075073,11.426692,175.776962,74,49); //
	VehiclesFix[138] = AddStaticVehicle(584,279.986602,1381.282226,11.191390,92.983955,74,49); //
	VehiclesFix[139] = AddStaticVehicle(403,268.799835,1380.552490,11.191141,92.880683,74,49); //
	VehiclesFix[140] = AddStaticVehicle(584,278.610168,1373.953125,11.191417,94.911491,74,49); //
	VehiclesFix[141] = AddStaticVehicle(403,268.062591,1373.080200,11.191819,95.469955,74,49); //
	VehiclesFix[142] = AddStaticVehicle(584,277.919708,1366.788208,11.192131,93.332008,74,49); //
	VehiclesFix[143] = AddStaticVehicle(584,277.309295,1358.605346,11.192155,91.069572,74,49); //
	VehiclesFix[144] = AddStaticVehicle(584,276.489105,1351.058471,11.191679,90.798645,74,49); //
	VehiclesFix[145] = AddStaticVehicle(584,274.530395,1342.243164,11.192420,88.697044,74,49); //
	VehiclesFix[146] = AddStaticVehicle(403,263.558349,1342.492187,11.192852,88.694976,74,49); //
	VehiclesFix[147] = AddStaticVehicle(403,265.878601,1350.996582,11.191452,88.133796,74,49); //
	VehiclesFix[148] = AddStaticVehicle(403,266.742034,1358.625976,11.191974,89.446647,74,49); //
	VehiclesFix[149] = AddStaticVehicle(403,267.192047,1366.179931,11.191537,93.200897,74,49); //
	VehiclesFix[150] = AddStaticVehicle(428,1525.532470,-1459.853271,9.624921,182.557128,74,49); //
	VehiclesFix[151] = AddStaticVehicle(428,1522.315063,-1460.039428,9.625119,181.270278,74,49); //
	VehiclesFix[152] = AddStaticVehicle(428,1519.074829,-1459.943237,9.623863,181.684478,74,49); //
	VehiclesFix[153] = AddStaticVehicle(428,1514.654663,-1459.609252,9.625630,181.118743,74,49); //
	VehiclesFix[154] = AddStaticVehicle(515,-1003.749389,-630.647521,32.981815,88.296409,74,49); //
	VehiclesFix[155] = AddStaticVehicle(515,-1003.100097,-638.485595,33.023597,89.326606,74,49); //
	VehiclesFix[156] = AddStaticVehicle(515,-1002.811035,-642.963317,33.029346,92.194129,74,49); //
	VehiclesFix[157] = AddStaticVehicle(515,-1002.409118,-647.475341,33.028064,90.612915,74,49); //
	VehiclesFix[158] = AddStaticVehicle(515,-1002.747253,-652.096069,33.027450,89.891624,74,49); //
	VehiclesFix[159] = AddStaticVehicle(435,-984.319091,-631.212951,33.025699,88.360656,74,49); //
	VehiclesFix[160] = AddStaticVehicle(435,-986.397399,-638.475097,33.031333,90.045417,74,49); //
	VehiclesFix[161] = AddStaticVehicle(435,-985.989135,-642.777160,33.027042,89.526527,74,49); //
	VehiclesFix[162] = AddStaticVehicle(435,-986.638488,-652.087768,33.027393,90.035911,74,49); //
	VehiclesFix[163] = AddStaticVehicle(435,-986.420654,-647.300109,33.026943,90.620262,76,49); //
	// Patrulha
    VehiclesFix[164] = AddStaticVehicle(596,1570.2437,-1710.5646,5.6125,0.5278,0,1);
	VehiclesFix[165] = AddStaticVehicle(596,1578.5850,-1710.8516,5.6106,0.1126,0,1);

	VRC[0] = AddStaticVehicle(510,1304.3899,-1860.5615,13.1553,0.2171,6,6); //Sanchez
	VRC[1] = AddStaticVehicle(510,1301.1552,-1860.5740,13.1553,0.2171,6,6); //Sanchez
	VRC[2] = AddStaticVehicle(510,1298.5619,-1860.5837,13.1553,0.2171,6,6); //Sanchez

	new string[256];
	for(new rcv; rcv < MAX_VEHICLES; rcv++)
	{
	    if(rcv >= VRC[0] && rcv <= VRC[sizeof(VRC)-1])
	    {
			format(string, sizeof string, "{FFFFFF}%s\n{6EB47D}Para Novatos", veehName[GetVehicleModel(rcv)-400]);
			new Text3D:d3d = Create3DTextLabel(string, 0xFFFFFFFF, 0.0, 0.0, 0.0, 10.0, 0);
			Attach3DTextLabelToVehicle(d3d, rcv, 0.0, 0.0, 0.0);
	    }
	}

	
	return 1;
}

// =================================================================================
stock LoadStaticVehiclesFromFile(filename[])
{
	new File:file_ptr, line[256], Color1, Color2, modelid,
		Float:SpawnX, Float:SpawnY, Float:SpawnZ, Float:SpawnRot,
		vehicles_loaded;

	file_ptr = fopen(filename, io_read);
	if(!file_ptr)
	{
		return printf("ERRO! Falha ao carregar veículos do arquivo %s (O arquivo não existe no diretório scriptfiles)!", filename);
	}
	while(fread(file_ptr, line) > 0)
	{
		if(!sscanf(line, "p<,>dffffdd", modelid, SpawnX, SpawnY, SpawnZ, SpawnRot, Color1, Color2))
		{
			if(CountAllLoadedVehicles != MAX_LOAD_VEHICLES)
			{
				VehiclesLoaded[CountAllLoadedVehicles] = AddStaticVehicleEx(modelid, SpawnX, SpawnY, SpawnZ, SpawnRot, Color1, Color2, 30);
				CountAllLoadedVehicles++;
				vehicles_loaded++;
			}
		}
	}
	if(CountAllLoadedVehicles == MAX_LOAD_VEHICLES)
	{
		printf("ERRO! O limite de %d veículos carregados chegou ao fim.", MAX_LOAD_VEHICLES);
	}
	fclose(file_ptr);
	return printf("Veículos: %d carregado(s) de %s", vehicles_loaded, filename);
}

stock UnloadAllStaticVehicles()
{
	Loop(o, CountAllLoadedVehicles)
	{
		if(VehiclesLoaded[o] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(VehiclesLoaded[o]);
			VehiclesLoaded[o] = INVALID_VEHICLE_ID;
		}
	}
	CountAllLoadedVehicles = 0;
	return 1;
}
// =================================================================================
stock LoadPlayerRemovedBuildings(playerid, filename[])
{
	new File:file_ptr, line[256], modelid,
		Float:SpawnX, Float:SpawnY, Float:SpawnZ, Float:Radius,
		buildings_loaded;

	file_ptr = fopen(filename, io_read);
	if(!file_ptr)
	{
		return printf("ERRO! Falha ao remover buildings do arquivo %s para %s (O arquivo não existe no diretório scriptfiles)!\n", filename, GetPlayerNameEx(playerid));
	}
	while(fread(file_ptr, line) > 0)
	{
		if(!sscanf(line, "p<,>dffff", modelid, SpawnX, SpawnY, SpawnZ, Radius))
		{
			RemoveBuildingForPlayer(playerid, modelid, SpawnX, SpawnY, SpawnZ, Radius);
			buildings_loaded++;
		}
	}
	fclose(file_ptr);
	return printf("Buildings: %d removidos(s) de %s para %s\n", buildings_loaded, filename, GetPlayerNameEx(playerid));
}

stock KickNPCs()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerNPC(i))
		{
			Kick(i);
		}
	}
	return 1;
}

stock LoadNPCs()
{
	ConnectNPC("Samanta_Oliveira", "garconete");
	ConnectNPC("Tiago_Meneses", "prefeito");
	ConnectNPC("Ronildo_Buarque", "professor");
	ConnectNPC("Cezar_Camargo", "delegado");
	return 1;
}

// =================================================================================
stock IsPlayerInWater(playerid)
{
	new Float:x, Float:y, Float:pz;
	GetPlayerPos(playerid, x, y, pz);
	new anim = GetPlayerAnimationIndex(playerid);
	if((IsPlayerInArea(playerid, 2032.1371, 1841.2656, 1703.1653, 1467.1099) && pz <= 9.0484) // lv piratenschiff
		|| (IsPlayerInArea(playerid, 2109.0725, 2065.8232, 1962.5355, 10.8547) && pz <= 10.0792) // lv visage
		|| (IsPlayerInArea(playerid, -492.5810, -1424.7122, 2836.8284, 2001.8235) && pz <= 41.06) // lv staucamm
		|| (IsPlayerInArea(playerid, -2675.1492, -2762.1792, -413.3973, -514.3894) && pz <= 4.24) // sf südwesten kleiner teich
		|| (IsPlayerInArea(playerid, -453.9256, -825.7167, -1869.9600, -2072.8215) && pz <= 5.72) // sf gammel teich
		|| (IsPlayerInArea(playerid, 1281.0251, 1202.2368, -2346.7451, -2414.4492) && pz <= 9.3145) // ls neben dem airport
		|| (IsPlayerInArea(playerid, 2012.6154, 1928.9028, -1178.6207, -1221.4043) && pz <= 18.45) // ls mitte teich
		|| (IsPlayerInArea(playerid, 2326.4858, 2295.7471, -1400.2797, -1431.1266) && pz <= 22.615) // ls weiter südöstlich
		|| (IsPlayerInArea(playerid, 2550.0454, 2513.7588, 1583.3751, 1553.0753) && pz <= 9.4171) // lv pool östlich
		|| (IsPlayerInArea(playerid, 1102.3634, 1087.3705, -663.1653, -682.5446) && pz <= 112.45) // ls pool nordwestlich
		|| (IsPlayerInArea(playerid, 1287.7906, 1270.4369, -801.3882, -810.0527) && pz <= 87.123) // pool bei maddog's haus oben
		|| (pz < 1.5)
		|| (anim >=  1538) && (anim <= 1542)
		|| (anim == 1544)
		|| (anim == 1250)
		|| (anim == 1062))
	{
		return 1;
	}
	return 0;
}

stock IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	if (x > minx && x < maxx && y > miny && y < maxy) return 1;
	return 0;
}

stock IsPlayerAiming(playerid)
{
	new anim = GetPlayerAnimationIndex(playerid);
	if(((anim >= 1160) && (anim <= 1163)) || (anim == 1167) || (anim == 1365) ||
		(anim == 1643) || (anim == 1453) || (anim == 220)) return 1;
	return 0;
}

stock PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	tempposx = (oldposx -x);
	tempposy = (oldposy -y);
	tempposz = (oldposz -z);
	if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
	{
		return 1;
	}
	return 0;
}

stock IsPlayerInPlace(playerid, Float:XMin, Float:YMin, Float:XMax, Float:YMax)
{
	new RetValue = 0;
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);

	if(X >= XMin && Y >= YMin && X < XMax && Y < YMax)
	{
		RetValue = 1;
	}
	return RetValue;
}

stock GetDistanceBetweenPlayers(playerid, playerid2)
{
	new Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2;
	new Float:tmpdis;
	GetPlayerPos(playerid, x1, y1, z1);
	GetPlayerPos(playerid2, x2, y2, z2);
	tmpdis = floatsqroot(floatpower(floatabs(floatsub(x2, x1)), 2) +floatpower(floatabs(floatsub(y2, y1)), 2)+floatpower(floatabs(floatsub(z2, z1)), 2));
	return floatround(tmpdis);
}

stock GetPlayerArea(playerid)
{
	new str[130];
	format(str,sizeof(str), "%s", Zones[GetPlayerZone(playerid)][zone_name]);
	return str;
}

stock GetPlayerZone(playerid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	for(new i = 0; i<sizeof(Zones); i++)
	{
		if(x > Zones[i][zone_minx] && y > Zones[i][zone_miny] && z > Zones[i][zone_minz] && x < Zones[i][zone_maxx] && y < Zones[i][zone_maxy] && z < Zones[i][zone_maxz])
			return i;
	}
	return false;
}

stock strrest(const string[], &index)
{
	new length = strlen(string);
	while((index < length) && (string[index] <= ' '))
	{
		index++;
	}
	new offset = index;
	new result[128];
	while((index < length) && ((index-offset) < (sizeof(result)-1)))
	{
		result[index-offset] = string[index];
		index++;
	}
	result[index-offset] = EOS;
	return result;
}

stock IsKeyJustDown(key, newkeys, oldkeys)
{
	if((newkeys & key) && !(oldkeys & key)) return 1;
	return 0;
}

stock IsABike(vehicleid)
{
	new result;
	new model = GetVehicleModel(vehicleid);
	switch(model)
	{
		case 509, 481, 510, 462, 448, 581, 522, 461, 521, 523, 463, 586, 468, 471: result = model;
		default: result = 0;
	}
	return result;
}

stock IsAElegy(vehicleid)
{
	new result;
	new model = GetVehicleModel(vehicleid);
	switch(model)
	{
		case 562: result = model;
		default: result = 0;
	}
	return result;
}

stock IsAPlane(vehicleid)
{
	new result;
	new model = GetVehicleModel(vehicleid);
	switch(model)
	{
		case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553, 563, 577, 592, 593: result = model;
		default: result = 0;
	}
	return result;
}

stock IsATruk(vehicleid)
{
	new result;
	new model = GetVehicleModel(vehicleid);
	switch(model)
	{
		case 499, 482, 498, 609, 524, 578, 455, 403, 414, 582, 443, 514, 413, 515, 440, 459, 531, 408, 478, 456, 433, 416, 427, 528, 407, 544, 432, 601: result = model;
		default: result = 0;
	}
	return result;
}

stock IsABus(vehicleid)
{
	new result;
	new model = GetVehicleModel(vehicleid);
	switch(model)
	{
		case 431, 437: result = model;
		default: result = 0;
	}
	return result;
}

stock chrfind(needle, haystack[], start = 0)
{
	while(haystack[start])
	{
		if(haystack[start++] == needle)
		{
			return start-1;
		}
	}
	return -1;
}

stock GetCarros(playerid)
{
	new carros, strcarro[256];
	new pname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pname, sizeof(pname));
	for(new p = 0; p < MAX_CONCES; p++)
	{
		format(strcarro, sizeof(strcarro), PASTA_CONCE, p);
		if(DOF2_GetInt(strcarro, "TDono") == 1)
		{
			if(strcmp(DOF2_GetString(strcarro, "Dono"), pname, false) == 0)
			{
				carros = carros+1;
			}
		}
	}
	return carros;
}

stock GetProps(playerid)
{
	new props, strprop[256];
	new pname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pname, sizeof (pname));
	for(new p = 0; p < MAX_PROPS; p++)
	{
		format(strprop, sizeof(strprop), PASTA_PROPS, p);
		if(DOF2_GetInt(strprop, "TDono") == 1)
		{
			if(strcmp(DOF2_GetString(strprop, "Dono"), pname, false) == 0)
			{
				props = props+1;
			}
		}
	}
	return props;
}

stock GetEmpresas(playerid)
{
	new empresas, strEmpresa[256];
	new pname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pname, sizeof (pname));
	for(new Emp = 0; Emp < MAX_Emp; Emp++)
	{
		format(strEmpresa, sizeof(strEmpresa), PASTA_Emp, Emp);
		if(DOF2_GetInt(strEmpresa, "TDono") == 1)
		{
			if(strcmp(DOF2_GetString(strEmpresa, "Dono"), pname, false) == 0)
			{
				empresas = empresas+1;
			}
		}
	}
	return empresas;
}

stock GetCasas(playerid)
{
	new casas, strcasa[256];
	new pname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pname, sizeof (pname));
	for(new p = 0; p < MAX_CASAS; p++)
	{
		format(strcasa, sizeof(strcasa), PASTA_CASAS, p);
		if(DOF2_GetInt(strcasa, "TDono") == 1)
		{
			if(strcmp(DOF2_GetString(strcasa, "Dono"), pname, false) == 0)
			{
				casas = casas+1;
			}
		}
	}
	return casas;
}

IsPlayerInCircle(playerid, Float:x, Float:y, Float:z, radius)
{
	if(GetPlayerDistanceToPoint(playerid, x, y, z) < radius)
	{
		return 1;
	}
	return 0;
}

stock GetPlayerDistanceToPoint(playerid, Float:x, Float:y, Float:z)
{
	new Float:tmpdis;
	new Float:px, Float:py, Float:pz;

	if(!IsPlayerInAnyVehicle(playerid))
	{
		GetPlayerPos(playerid, px, py, pz);
	}
	else
	{
		GetVehiclePos(GetPlayerVehicleID(playerid), px, py, pz);
	}
	tmpdis = floatsqroot(floatpower(floatabs(floatsub(x, px)), 2)+floatpower(floatabs(floatsub(y, py)), 2)+floatpower(floatabs(floatsub(z, pz)), 2));
	return floatround(tmpdis);
}

stock VBanID(playerid, giveid, motivo[])
{
	format(NICKBAN, 20, VBPlayer(giveid));
	if(playerid > -1)
	{
		format(Vstring, 128, "O(A) jogador(a) %s foi banido(a) por %s. Motivo: %s", VBPlayer(giveid), VBPlayer(playerid), motivo);
		SendClientMessageToAll(CorBan, Vstring);
		GetPlayerIp(giveid, VIP, sizeof(VIP));
		format(Vnewban, 32, BanDir, VIP);
		DOF2_CreateFile(Vnewban);
		VBanSaveInfo(playerid, Vnewban, motivo);
		format(Vnewban, 32, BanDir, VBPlayer(giveid));
		DOF2_CreateFile(Vnewban);
		VBanSaveInfo(playerid, Vnewban, motivo);
	}
	else
	{
		format(Vstring, 128, "O(A) jogador(a) %s foi banido(a) por [BSL]Filho_Da_Puta. Motivo: %s", VBPlayer(giveid), motivo);
		SendClientMessageToAll(CorBan, Vstring);
		format(Vnewban, 32, BanDir, VBPlayer(giveid));
		DOF2_CreateFile(Vnewban);
		VBanSaveInfo(-1, Vnewban, motivo);
	}
	if(IsPlayerConnected(giveid))
	{
		if(IsPlayerNPC(giveid))
		{
			Ban(giveid);
		}
		else
		{
			VBanLoadInfo(giveid, Vnewban);
			Ban(giveid);
		}
	}
	return 1;
}

stock VBanNick(playerid, nick[], motivo[])
{
	format(Vnewban, 32, BanDir, nick);
	if(DOF2_FileExists(Vnewban))
	{
		return SendClientMessage(playerid, CorErro, "Este nick já está banido!");
	}
	new giveid = VBReturnUser(nick);
	if(!IsPlayerConnected(giveid))
	{
		format(NICKBAN, 20, nick);
		format(Vstring, 128, "O nick %s foi banido por %s. Motivo: %s", nick, VBPlayer(playerid), motivo);
		SendClientMessageToAll(CorBan, Vstring);
		DOF2_CreateFile(Vnewban);
		return VBanSaveInfo(playerid, Vnewban, motivo);
	}
	else
	{
		return VBanID(playerid, giveid, motivo);
	}
}

stock VBanIP(playerid, IP2[], motivo[])
{
	format(Vnewban, 32, BanDir, IP2);
	if(DOF2_FileExists(Vnewban))
	{
		return SendClientMessage(playerid, CorErro, "Este IP já está banido!");
	}
	if(playerid > -1)
	{
		new ban;
		for(new i=0, j = MAX_PLAYERS; i < j; i++)
		{
			if(IsPlayerConnected(i))
			{
				GetPlayerIp(i, VIP, sizeof(VIP));
				if(!strcmp(VIP, IP2))
				{
				ban++;
				VBanID(playerid, i, motivo);
				}
			}
			if(ban == 0)
			{
				DOF2_CreateFile(Vnewban);
				format(Vstring, 128, "O IP %s foi banido por %s. Motivo: %s", IP2, VBPlayer(playerid), motivo);
				SendClientMessageToAll(CorBan, Vstring);
				VBanSaveInfo(playerid, Vnewban, motivo);
			}
		}
	}
	else
	{
		format(Vnewban, 32, BanDir, IP2);
		DOF2_CreateFile(Vnewban);
		format(Vstring, 128, "O IP %s foi banido por [BSL]Filho_Da_Puta. Motivo: Ban Evade", IP2);
		SendClientMessageToAll(CorBan, Vstring);
		VBanSaveInfo(-1, Vnewban, "Ban Evade");
	}
	return 1;
}

stock VUnBan(playerid, Arq[])
{
	format(Vnewban, 32, BanDir, Arq);
	if(!DOF2_FileExists(Vnewban))
	{
		return SendClientMessage(playerid, CorErro, "Ban inexistente!");
	}
	new BANNEDIP[32];
	new RCONUNBANIP[128];
	format(BANNEDIP, 32, BanDir, DOF2_GetString(Vnewban, "IP"));
	format(RCONUNBANIP, 128, "unbanip %s", DOF2_GetString(Vnewban, "IP"));
	if(DOF2_FileExists(BANNEDIP))
	{
		new BANNEDACC[32];
		if(VBIsIP(Arq))
		{
			format(Vstring, 128, "O IP %s(%s) foi desbanido por %s.", Arq, DOF2_GetString(Vnewban, "Nick"), VBPlayer(playerid));
		}
		else
		{
			format(Vstring, 128, "A conta %s(%s) foi desbanida por %s.", Arq, DOF2_GetString(Vnewban, "IP"), VBPlayer(playerid));
		}
		format(BANNEDACC, 32, BanDir, DOF2_GetString(Vnewban, "Nick"));
		SendRconCommand(RCONUNBANIP);
		DOF2_RemoveFile(BANNEDACC);
		DOF2_RemoveFile(BANNEDIP);
	}
	else
	{
		format(Vstring, 128, "A conta %s foi desbanida por %s.", Arq, VBPlayer(playerid));
	}
	SendClientMessageToAll(0x10B4EEAA, Vstring);
	DOF2_RemoveFile(Vnewban);
	return 1;
}

stock VBanCheck(playerid)
{
	format(Vnewban, 32, BanDir, VBPlayer(playerid));
	if(DOF2_FileExists(Vnewban))
	{
		VBanLoadInfo(playerid, Vnewban);
		GetPlayerIp(playerid, VIP, sizeof(VIP));
		VBanIP(-1, VIP, DOF2_GetString(Vnewban, "Motivo"));
		return Ban(playerid);
	}
	GetPlayerIp(playerid, VIP, sizeof(VIP));
	format(Vnewban, 32, BanDir, VIP);
	if(DOF2_FileExists(Vnewban))
	{
		VBanLoadInfo(playerid, Vnewban);
		format(NICKBAN, 20, VBPlayer(playerid));
		DOF2_SetString(Vnewban, "Nick", NICKBAN);
		VBanID(-1, playerid, DOF2_GetString(Vnewban, "Motivo"));
		return Ban(playerid);
	}
	return 1;
}

stock VBanLoadInfo(playerid, Varq[])
{
	if(!DOF2_FileExists(Varq))
	{
		return SendClientMessage(playerid, CorErro, "Ban inexistente!");
	}
	new InfoString[256];
	SendClientMessage(playerid, -1, "......:::::: Banido ::::::......");
	format(InfoString, 256, "{FFFFFF}Nick: {00FF00}%s {FFFFFF}- IP: {00FF00}%s", DOF2_GetString(Varq, "Nick"), DOF2_GetString(Varq, "IP"));
	SendClientMessage(playerid, -1, InfoString);
	format(InfoString, 256, "{FFFFFF}Admin: {00FF00}%s {FFFFFF}- Motivo: {00FF00}%s", DOF2_GetString(Varq, "Admin"), DOF2_GetString(Varq, "Motivo"));
	SendClientMessage(playerid, -1, InfoString);
	format(InfoString, 256, "{FFFFFF}Data: {00FF00}%s {FFFFFF}- Horário: {00FF00}%s", DOF2_GetString(Varq, "Data"), DOF2_GetString(Varq, "Hora"));
	SendClientMessage(playerid, -1, InfoString);
	SendClientMessage(playerid, -1, "......:::::: Banido ::::::......");
	return 1;
}

stock VBanSaveInfo(playerid, Varq[], motivo[])
{
	new Vano, Vmes, Vdia, Vhora, Vminuto, Vsegundo;
	getdate(Vano, Vmes, Vdia);
	gettime(Vhora, Vminuto, Vsegundo);
	DOF2_SetString(Varq, "IP", VIP);
	DOF2_SetString(Varq, "Nick", NICKBAN);
	if(playerid > -1)
	{
		DOF2_SetString(Varq, "Admin", VBPlayer(playerid));
	}
	else
	{
		DOF2_SetString(Varq, "Admin", "DtenBot Admin");
	}
	format(Vstring, 32, "%02d:%02d:%02d", Vhora, Vminuto, Vsegundo);
	DOF2_SetString(Varq, "Hora", Vstring);
	format(Vstring, 32, "%02d/%02d/%d", Vdia, Vmes, Vano);
	DOF2_SetString(Varq, "Data", Vstring);
	DOF2_SetString(Varq, "Motivo", motivo);
	return 1;
}

stock VBPlayer(playerid)
{
	new pname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	return pname;
}

stock VBReturnUser(PlayerName[])
{
	if(VBIsNumeric(PlayerName))
	{
		return strval(PlayerName);
	}
	else
	{
		new found=0, id;
		for(new i=0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				new foundname[MAX_PLAYER_NAME];
				GetPlayerName(i, foundname, MAX_PLAYER_NAME);
				new namelen = strlen(foundname);
				new bool:searched = false;
				for(new pos=0; pos <= namelen; pos++)
				{
					if(searched != true)
					{
						if(strfind(foundname, PlayerName, true) == pos)
						{
							found++;
							id = i;
						}
					}
				}
			}
		}
		if(found == 1)
		{
			return id;
		}
		else
		{
			return INVALID_PLAYER_ID;
		}
	}
}

stock VBIsIP(const string[])
{
	new count;
	for(new i = 0, j = strlen(string); i < j; i++)
	{
		if(string[i] > 47 && string[i] < 58)
		{
			count++;
		}
		if(count > 5)
		{
			return 1;
		}
	}
	return 0;
}

stock VBIsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if(string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}

stock PlayerSetPlayerAdmin(playerid, plid, lvl)
{
	new strfile[128], string[256];

	format(strfile, sizeof(strfile), PASTA_CONTAS, GetPlayerNameEx(plid));
	if(playerid != -1)
	{
		if(lvl >= 1)
		{
			admin[plid] = 1;
			pAdmin[plid] = lvl;
			DOF2_SetInt(strfile, "Admin", lvl);
			DOF2_SetInt(strfile, "aAdmin", 1);
			format(string, sizeof(string), "{6959CD}O(a) ADM RCON {FFFFFF}%s {6959CD}te promoveu para ADM level: {FFFFFF}%d", GetPlayerNameEx(playerid), lvl);
			SendClientMessage(plid, tcadm, string);
			AntiFake = 0;
    		ShowPlayerDialog(plid, STAFF, DIALOG_STYLE_INPUT, "{00EAF6} {FFFFFF}Senha da Administração", "Digite a senha correta da Administração!", "Confirmar","Cancelar");
		}
		if(lvl == 0)
		{
			admin[plid] = 0;
			pAdmin[plid] = 0;
			DOF2_SetInt(strfile, "Admin", 0);
			DOF2_SetInt(strfile, "aAdmin", 0);
			format(string, sizeof(string), "{6959CD}O(a) ADM RCON {FFFFFF}%s {6959CD}retirou seu ADM.", GetPlayerNameEx(playerid));
			SendClientMessage(plid, tcadm, string);
		}
	}
	else
	{
		if(lvl >= 1)
		{
			admin[plid] = 1;
			pAdmin[plid] = lvl;
			DOF2_SetInt(strfile, "Admin", lvl);
			DOF2_SetInt(strfile, "aAdmin", 1);
			format(string, sizeof(string), "{6959CD}O(a) ADM RCON {FFFFFF}[BSL]Admin {6959CD}te promoveu para ADM level: {FFFFFF}%d", lvl);
			SendClientMessage(plid, tcadm, string);
			AntiFake = 0;
    		ShowPlayerDialog(plid, STAFF, DIALOG_STYLE_INPUT, "{00EAF6} {FFFFFF}Senha da Administração", "Digite a senha correta da Administração!", "Confirmar","Cancelar");
  		}
		if(lvl == 0)
		{
			admin[plid] = 0;
			pAdmin[plid] = 0;
			DOF2_SetInt(strfile, "Admin", 0);
			DOF2_SetInt(strfile, "aAdmin", 0);
			format(string, sizeof(string), "{6959CD}O(a) ADM RCON {FFFFFF}[BSL]Admin {6959CD}retirou seu ADM.");
			SendClientMessage(plid, tcadm, string);
		}
	}
	return 1;
}

stock GetPlayerNameEx(playerid)
{
	new PlayerNameLevel[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerNameLevel, MAX_PLAYER_NAME);
	return PlayerNameLevel;
}

stock GetPlayerIPEx(playerid)
{
	new PlayerIPLevel[20];
	GetPlayerIp(playerid, PlayerIPLevel, sizeof(PlayerIPLevel));
	return PlayerIPLevel;
}

stock ReconnectPlayer(playerid)
{
	OnPlayerDisconnect(playerid, 3);
	SetTimerEx("OnPlayerConnect", 1000, false, "e", playerid);
	return 0;
}

stock CreateFileAccount(newfile[], passx[])
{
	DOF2_CreateFile(newfile);
	DOF2_SetString(newfile, "Senha", passx);
	DOF2_SetInt(newfile, "Skin", 0);
	DOF2_SetInt(newfile, "Profissao", 0);
	DOF2_SetInt(newfile, "ContaBancaria", 0);
	DOF2_SetInt(newfile, "SaldoBancario", 0);
	DOF2_SetInt(newfile, "Dinheiro", 100000);
	DOF2_SetInt(newfile, "Combustivel", 0);
	DOF2_SetInt(newfile, "Celular", 0);
	DOF2_SetInt(newfile, "CartaoTelefonico", 0);
	DOF2_SetInt(newfile, "Concerto", 0);
	DOF2_SetInt(newfile, "MP3", 0);
	DOF2_SetInt(newfile, "LaserP", 0);
	DOF2_SetInt(newfile, "TCapacete", 0);
	DOF2_SetInt(newfile, "AntiHS", 0);
	DOF2_SetInt(newfile, "Sexo", 0);
	DOF2_SetInt(newfile, "HabTerrestre", 0);
	DOF2_SetInt(newfile, "HabAerea", 0);
	DOF2_SetInt(newfile, "HabNautica", 0);
	DOF2_SetInt(newfile, "Matou", 0);
	DOF2_SetInt(newfile, "Morreu", 0);
	DOF2_SetInt(newfile, "Preso", 0);
	DOF2_SetInt(newfile, "Bloco", 0);
	DOF2_SetInt(newfile, "Casa", 0);
	DOF2_SetInt(newfile, "Prop", 0);
	DOF2_SetInt(newfile, "Carta", 0);
	DOF2_SetString(newfile, "Lembrete", "Nada");
	DOF2_SetInt(newfile, "Casado", 0);
	DOF2_SetString(newfile, "CasouCom", "Ninguem");
	DOF2_SetInt(newfile, "Continuar", 0);
	DOF2_SetInt(newfile, "novato", 1);
	DOF2_SetInt(newfile, "Porte", 0);
	DOF2_SetInt(newfile, "Carteira", 0);
	DOF2_SetInt(newfile, "Level", 50);
	DOF2_SetInt(newfile, "Faculdade", 30);
	DOF2_SetInt(newfile, "UsouConce", 0);
	DOF2_SetInt(newfile, "VIP", 1);
	DOF2_SetInt(newfile, "aAdmin", 0);
	DOF2_SetInt(newfile, "Admin", 0);
	DOF2_SetInt(newfile, "Mute", 0);
	DOF2_SetInt(newfile, "cortag", 0);
	DOF2_SetInt(newfile, "Tag", 0);
	DOF2_SetInt(newfile, "VIP", 0);
	DOF2_SetInt(newfile, "VIPT", 0);
	DOF2_SetInt(newfile, "VIPMT", 0);
	DOF2_SetInt(newfile, "musica", 0);
	DOF2_SetInt(newfile, "SGang", 0);
	DOF2_SetInt(newfile, "DJ", 0);
	return 0;
}

stock RenameFileAccount(oldfile[], newfile[])
{
	new mnsenha[256];
	new mnskin;
	new mnprocurado;
	new mnlutas;
	new mnpreso;
	new mnentrevista;
	new mnsaldobancario;
	new mndinheiro;
	new mncombustivel;
	new mnprof;
	new mncel;
	new mnbloco;
	new mnlevel;
	new mntempo;
	new mnexp;
	new mnmp3;
	new mnlaser;
	new mncapacete;
	new mnantihs;
	new mnsexo;
	new mnporte;
	new mncarteira;
	new mnhabt;
	new mnhabn;
	new mnhaba;
	new mncontabancaria;
	new mndm;
	new mnmatou;
	new mnmorreu;
	new mncasa;
	new Float:mncasax;
	new Float:mncasay;
	new Float:mncasaz;
	new mnprop;
	new Float:mnpropx;
	new Float:mnpropy;
	new Float:mnpropz;
	new mnlembrete[256];
	new mncasado;
	new mncasoucom[256];
	new mnfacul;
	new mnroubobanco;
	new mnhotel;
	new mnluta;
	new mnusouconce;
	new mnvip;
	new mnaadmin;
	new mnadmin;
	new mnmute;
	new mntag;
	new mncortag;
	new mnvipt;
	new mnvipmt;
	new mncash;
 	new mnmusica;
	new mnsgang;
	new mndj;

	mnsenha = DOF2_GetString(oldfile, "Senha");
	mnskin = DOF2_GetInt(oldfile, "Skin");
	mnprocurado = DOF2_GetInt(oldfile, "Procurado");
	mnlutas = DOF2_GetInt(oldfile, "Lutas");
	mnpreso = DOF2_GetInt(oldfile, "Preso");
	mnentrevista = DOF2_GetInt(oldfile, "Entrevista");
	mnsaldobancario = DOF2_GetInt(oldfile, "SaldoBancario");
	mndinheiro = DOF2_GetInt(oldfile, "Dinheiro");
	mncombustivel = DOF2_GetInt(oldfile, "Combustivel");
	mnprof = DOF2_GetInt(oldfile, "Profissao");
	mncel = DOF2_GetInt(oldfile, "Celular");
	mnbloco = DOF2_GetInt(oldfile, "Bloco");
	mnlevel = DOF2_GetInt(oldfile, "Level");
	mntempo = DOF2_GetInt(oldfile, "Tempo");
	mnexp = DOF2_GetInt(oldfile, "EXP");
	mnmp3 = DOF2_GetInt(oldfile, "MP3");
	mnlaser = DOF2_GetInt(oldfile, "LaserP");
	mncapacete = DOF2_GetInt(oldfile, "TCapacete");
	mnantihs = DOF2_GetInt(oldfile, "AntiHS");
	mnsexo = DOF2_GetInt(oldfile, "Sexo");
	mnporte = DOF2_GetInt(oldfile, "Porte");
	mncarteira = DOF2_GetInt(oldfile, "Carteira");
	mnhabt = DOF2_GetInt(oldfile, "HabTerrestre");
	mnhabn = DOF2_GetInt(oldfile, "HabNautica");
	mnhaba = DOF2_GetInt(oldfile, "HabAerea");
	mncontabancaria = DOF2_GetInt(oldfile, "ContaBancaria");
	mndm = DOF2_GetInt(oldfile, "DM");
	mnmatou = DOF2_GetInt(oldfile, "Matou");
	mnmorreu = DOF2_GetInt(oldfile, "Morreu");
	mncasa = DOF2_GetInt(oldfile, "Casa");
	mncasax = DOF2_GetFloat(oldfile, "CasaX");
	mncasay = DOF2_GetFloat(oldfile, "CasaY");
	mncasaz = DOF2_GetFloat(oldfile, "CasaZ");
	mnprop = DOF2_GetInt(oldfile, "Prop");
	mnpropx = DOF2_GetFloat(oldfile, "PropX");
	mnpropy = DOF2_GetFloat(oldfile, "PropY");
	mnpropz = DOF2_GetFloat(oldfile, "PropZ");
	mnlembrete = DOF2_GetString(oldfile, "Lembrete");
	mncasado = DOF2_GetInt(oldfile, "Casado");
	mncasoucom = DOF2_GetString(oldfile, "CasouCom");
	mnfacul = DOF2_GetInt(oldfile, "Faculdade");
	mnroubobanco = DOF2_GetInt(oldfile, "rouboubanco");
	mnhotel = DOF2_GetInt(oldfile, "Hotel");
	mnluta = DOF2_GetInt(oldfile, "Luta");
	mnusouconce = DOF2_GetInt(oldfile, "UsouConce");
	mnvip = DOF2_GetInt(oldfile, "VIP");
	mnaadmin = DOF2_GetInt(oldfile, "aAdmin");
	mnadmin = DOF2_GetInt(oldfile, "Admin");
	mnmute = DOF2_GetInt(oldfile, "Mute");
	mntag = DOF2_GetInt(oldfile, "Tag");
	mncortag = DOF2_GetInt(oldfile, "cortag");
	mnvipt = DOF2_GetInt(oldfile, "VIPT");
	mnvipmt = DOF2_GetInt(oldfile, "VIPMT");
	mncash = DOF2_GetInt(oldfile, "Cash");
	mnmusica = DOF2_GetInt(oldfile, "musica");
	mnsgang = DOF2_GetInt(oldfile, "SGang");
	mnsgang = DOF2_GetInt(oldfile, "DJ");
	DOF2_RemoveFile(oldfile);

	DOF2_CreateFile(newfile);
	DOF2_SetString(newfile, "Senha", mnsenha);
	DOF2_SetInt(newfile, "Skin", mnskin);
	DOF2_SetInt(newfile, "Procurado", mnprocurado);
	DOF2_SetInt(newfile, "Lutas", mnlutas);
	DOF2_SetInt(newfile, "Preso", mnpreso);
	DOF2_SetInt(newfile, "Entrevista", mnentrevista);
	DOF2_SetInt(newfile, "SaldoBancario", mnsaldobancario);
	DOF2_SetInt(newfile, "Dinheiro", mndinheiro);
	DOF2_SetInt(newfile, "Combustivel", mncombustivel);
	DOF2_SetInt(newfile, "Profissao", mnprof);
	DOF2_SetInt(newfile, "Celular", mncel);
	DOF2_SetInt(newfile, "Bloco", mnbloco);
	DOF2_SetInt(newfile, "Level", mnlevel);
	DOF2_SetInt(newfile, "Tempo", mntempo);
	DOF2_SetInt(newfile, "EXP", mnexp);
	DOF2_SetInt(newfile, "MP3", mnmp3);
	DOF2_SetInt(newfile, "LaserP", mnlaser);
	DOF2_SetInt(newfile, "TCapacete", mncapacete);
	DOF2_SetInt(newfile, "AntiHS", mnantihs);
	DOF2_SetInt(newfile, "Sexo", mnsexo);
	DOF2_SetInt(newfile, "Porte", mnporte);
	DOF2_SetInt(newfile, "Carteira", mncarteira);
	DOF2_SetInt(newfile, "HabTerrestre", mnhabt);
	DOF2_SetInt(newfile, "HabNautica", mnhabn);
	DOF2_SetInt(newfile, "HabAerea", mnhaba);
	DOF2_SetInt(newfile, "ContaBancaria", mncontabancaria);
	DOF2_SetInt(newfile, "DM", mndm);
	DOF2_SetInt(newfile, "Matou", mnmatou);
	DOF2_SetInt(newfile, "Morreu", mnmorreu);
	DOF2_SetInt(newfile, "Casa", mncasa);
	DOF2_SetFloat(newfile, "CasaX", mncasax);
	DOF2_SetFloat(newfile, "CasaY", mncasay);
	DOF2_SetFloat(newfile, "CasaZ", mncasaz);
	DOF2_SetInt(newfile, "Prop", mnprop);
	DOF2_SetFloat(newfile, "PropX", mnpropx);
	DOF2_SetFloat(newfile, "PropY", mnpropy);
	DOF2_SetFloat(newfile, "PropZ", mnpropz);
	DOF2_SetString(newfile, "Lembrete", mnlembrete);
	DOF2_SetInt(newfile, "Casado", mncasado);
	DOF2_SetString(newfile, "CasouCom", mncasoucom);
	DOF2_SetInt(newfile, "Faculdade", mnfacul);
	DOF2_SetInt(newfile, "rouboubanco", mnroubobanco);
	DOF2_SetInt(newfile, "Hotel", mnhotel);
	DOF2_SetInt(newfile, "Luta", mnluta);
	DOF2_SetInt(newfile, "MN", 0);
	DOF2_SetInt(newfile, "UsouConce", mnusouconce);
	DOF2_SetInt(newfile, "VIP", mnvip);
	DOF2_SetInt(newfile, "aAdmin", mnaadmin);
	DOF2_SetInt(newfile, "Admin", mnadmin);
	DOF2_SetInt(newfile, "Mute", mnmute);
	DOF2_SetInt(newfile, "Tag", mntag);
	DOF2_SetInt(newfile, "cortag", mncortag);
	DOF2_SetInt(newfile, "VIPT", mnvipt);
	DOF2_SetInt(newfile, "VIPMT", mnvipmt);
	DOF2_SetInt(newfile, "Cash", mncash);
	DOF2_SetInt(newfile, "musica", mnmusica);
	DOF2_SetInt(newfile, "SGang", mnsgang);
	DOF2_SetInt(newfile, "DJ", mndj);
	return 0;
}

stock SoltarPlayer(presoid)
{
	format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(presoid));

	preso[presoid] = 0;
	PresoTempo[presoid] = 0;
	algemado[presoid] = 0;
	infratores[presoid] = 0;
	Procurados[presoid] = 0;

	DOF2_SetInt(file2, "Procurado", 0);
	DOF2_SetInt(file2, "Preso", 0);

	DOF2_SetInt(file2, "ofmaconha", 0);
	DOF2_SetInt(file2, "ofcocaina", 0);
	DOF2_SetInt(file2, "ofcrack", 0);
	DOF2_SetInt(file2, "tmaconha", 0);
	DOF2_SetInt(file2, "tcrack", 0);
	DOF2_SetInt(file2, "tcocaina", 0);
	DOF2_SetInt(file2, "Maconha", 0);
	DOF2_SetInt(file2, "Crack", 0);
	DOF2_SetInt(file2, "Cocaina", 0);

	SetPlayerWantedLevel(presoid, 0);
	SetPlayerHealth(presoid, 100.0);

	if(presonadp[presoid] == 0)
	{
		presonadp[presoid] = -1;
		SetPlayerInterior(presoid, 0);
		SetPlayerPos(presoid, 1538.7277, -1675.6129, 13.5468); // DPExLS
	}
	else if(presonadp[presoid] == 1)
	{
		presonadp[presoid] = -1;
		SetPlayerInterior(presoid, 0);
		SetPlayerPos(presoid, -1605.3535, 718.0169, 11.9474); // DPExSF
	}
	else if(presonadp[presoid] == 2)
	{
		presonadp[presoid] = -1;
		SetPlayerInterior(presoid, 0);
		SetPlayerPos(presoid, 2287.0131, 2421.5007, 10.8203); // DPExLV
	}
	else if(presonadp[presoid] == 3)
	{
		presonadp[presoid] = -1;
		SetPlayerInterior(presoid, 0);
		SetPlayerPos(presoid, -204.9153, 979.9788, 19.0849); // DPExFC
	}
	return 1;
}

stock PrenderPlayer(presoid)
{
	format(file2, sizeof(file2), PASTA_CONTAS, GetPlayerNameEx(presoid));

	preso[presoid] = 1;
	Procurados[presoid] = 0;
	infratores[presoid] = 0;
	DOF2_SetInt(file2, "Preso", 1);
	DOF2_SetInt(file2, "Procurado", 0);

	ResetPlayerWeapons(presoid);
	SetPlayerHealth(presoid, 999999.0);
	SetPlayerWantedLevel(presoid, 0);
	SetPlayerInterior(presoid, 6);
	TogglePlayerControllable(presoid, 1);

	// Prisão
	presonadp[presoid] = SetTimerEx("presonadp", 1500, 0, "d", presoid);

	if(GetClosestDelegacia(presoid) == 0)
	{
		presonadp[presoid] = 0;
		PRAND[presoid] = random(sizeof CadeiasSF);

		SetPlayerInterior(presoid, 10);
		SetPlayerPos(presoid, CadeiasSF[PRAND[presoid]][prX], CadeiasSF[PRAND[presoid]][prY], CadeiasSF[PRAND[presoid]][prZ]); // DPExSF Prisão
	}
	else if(GetClosestDelegacia(presoid) == 1)
	{
		presonadp[presoid] = 1;
		PRAND[presoid] = random(sizeof CadeiasSF);

		SetPlayerInterior(presoid, 10);
		SetPlayerPos(presoid, CadeiasSF[PRAND[presoid]][prX], CadeiasSF[PRAND[presoid]][prY], CadeiasSF[PRAND[presoid]][prZ]); // DPExSF Prisão
	}
	else if(GetClosestDelegacia(presoid) == 2)
	{
		presonadp[presoid] = 2;
		PRAND[presoid] = random(sizeof CadeiasSF);

		SetPlayerInterior(presoid, 10);
		SetPlayerPos(presoid, CadeiasSF[PRAND[presoid]][prX], CadeiasSF[PRAND[presoid]][prY], CadeiasSF[PRAND[presoid]][prZ]); // DPExSF Prisão
	}
	else if(GetClosestDelegacia(presoid) == 3)
	{
		presonadp[presoid] = 3;
		SetPlayerInterior(presoid, 6);
		SetPlayerPos(presoid, 263.8820, 77.4002, 1001.0391); // DPExLS Prisão
	}
	return 1;
}

stock ChangeVehicleNeon(vehicleid, neonid)
{
	if(neonid == 0)
	{
		if(NeonALready[vehicleid][0] == false)
		{
			NeonALready[vehicleid][0] = true;
			NeonALready[vehicleid][1] = false;
			NeonALready[vehicleid][2] = false;
			NeonALready[vehicleid][3] = false;
			NeonALready[vehicleid][4] = false;
			NeonALready[vehicleid][5] = false;

			if(IsValidDynamicObject(Neon[vehicleid][2]) &&
				IsValidDynamicObject(Neon[vehicleid][3]))
			{
				DestroyDynamicObject(Neon[vehicleid][2]);
				DestroyDynamicObject(Neon[vehicleid][3]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][4]) &&
				IsValidDynamicObject(Neon[vehicleid][5]))
			{
				DestroyDynamicObject(Neon[vehicleid][4]);
				DestroyDynamicObject(Neon[vehicleid][5]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][6]) &&
				IsValidDynamicObject(Neon[vehicleid][7]))
			{
				DestroyDynamicObject(Neon[vehicleid][6]);
				DestroyDynamicObject(Neon[vehicleid][7]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][8]) &&
				IsValidDynamicObject(Neon[vehicleid][9]))
			{
				DestroyDynamicObject(Neon[vehicleid][8]);
				DestroyDynamicObject(Neon[vehicleid][9]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][10]) &&
				IsValidDynamicObject(Neon[vehicleid][11]))
			{
				DestroyDynamicObject(Neon[vehicleid][10]);
				DestroyDynamicObject(Neon[vehicleid][11]);
			}
			Neon[vehicleid][0] = CreateDynamicObject(18648, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0);
			Neon[vehicleid][1] = CreateDynamicObject(18648, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0);
			AttachDynamicObjectToVehicle(Neon[vehicleid][0], vehicleid, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(Neon[vehicleid][1], vehicleid, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		}
	}
	if(neonid == 1)
	{
		if(NeonALready[vehicleid][1] == false)
		{
			NeonALready[vehicleid][0] = false;
			NeonALready[vehicleid][1] = true;
			NeonALready[vehicleid][2] = false;
			NeonALready[vehicleid][3] = false;
			NeonALready[vehicleid][4] = false;
			NeonALready[vehicleid][5] = false;

			if(IsValidDynamicObject(Neon[vehicleid][0]) &&
				IsValidDynamicObject(Neon[vehicleid][1]))
			{
				DestroyDynamicObject(Neon[vehicleid][0]);
				DestroyDynamicObject(Neon[vehicleid][1]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][4]) &&
				IsValidDynamicObject(Neon[vehicleid][5]))
			{
				DestroyDynamicObject(Neon[vehicleid][4]);
				DestroyDynamicObject(Neon[vehicleid][5]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][6]) &&
				IsValidDynamicObject(Neon[vehicleid][7]))
			{
				DestroyDynamicObject(Neon[vehicleid][6]);
				DestroyDynamicObject(Neon[vehicleid][7]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][8]) &&
				IsValidDynamicObject(Neon[vehicleid][9]))
			{
				DestroyDynamicObject(Neon[vehicleid][8]);
				DestroyDynamicObject(Neon[vehicleid][9]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][10]) &&
				IsValidDynamicObject(Neon[vehicleid][11]))
			{
				DestroyDynamicObject(Neon[vehicleid][10]);
				DestroyDynamicObject(Neon[vehicleid][11]);
			}
			Neon[vehicleid][2] = CreateDynamicObject(18649, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0);
			Neon[vehicleid][3] = CreateDynamicObject(18649, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0);
			AttachDynamicObjectToVehicle(Neon[vehicleid][2], vehicleid, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(Neon[vehicleid][3], vehicleid, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		}
	}
	if(neonid == 2)
	{
		if(NeonALready[vehicleid][2] == false)
		{
			NeonALready[vehicleid][0] = false;
			NeonALready[vehicleid][1] = false;
			NeonALready[vehicleid][2] = true;
			NeonALready[vehicleid][3] = false;
			NeonALready[vehicleid][4] = false;
			NeonALready[vehicleid][5] = false;

			if(IsValidDynamicObject(Neon[vehicleid][0]) &&
				IsValidDynamicObject(Neon[vehicleid][1]))
			{
				DestroyDynamicObject(Neon[vehicleid][0]);
				DestroyDynamicObject(Neon[vehicleid][1]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][2]) &&
				IsValidDynamicObject(Neon[vehicleid][3]))
			{
				DestroyDynamicObject(Neon[vehicleid][2]);
				DestroyDynamicObject(Neon[vehicleid][3]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][6]) &&
				IsValidDynamicObject(Neon[vehicleid][7]))
			{
				DestroyDynamicObject(Neon[vehicleid][6]);
				DestroyDynamicObject(Neon[vehicleid][7]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][8]) &&
				IsValidDynamicObject(Neon[vehicleid][9]))
			{
				DestroyDynamicObject(Neon[vehicleid][8]);
				DestroyDynamicObject(Neon[vehicleid][9]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][10]) &&
				IsValidDynamicObject(Neon[vehicleid][11]))
			{
				DestroyDynamicObject(Neon[vehicleid][10]);
				DestroyDynamicObject(Neon[vehicleid][11]);
			}
			Neon[vehicleid][4] = CreateDynamicObject(18647, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0);
			Neon[vehicleid][5] = CreateDynamicObject(18647, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0);
			AttachDynamicObjectToVehicle(Neon[vehicleid][4], vehicleid, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(Neon[vehicleid][5], vehicleid, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		}
	}
	if(neonid == 3)
	{
		if(NeonALready[vehicleid][3] == false)
		{
			NeonALready[vehicleid][0] = false;
			NeonALready[vehicleid][1] = false;
			NeonALready[vehicleid][2] = false;
			NeonALready[vehicleid][3] = true;
			NeonALready[vehicleid][4] = false;
			NeonALready[vehicleid][5] = false;

			if(IsValidDynamicObject(Neon[vehicleid][0]) &&
				IsValidDynamicObject(Neon[vehicleid][1]))
			{
				DestroyDynamicObject(Neon[vehicleid][0]);
				DestroyDynamicObject(Neon[vehicleid][1]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][2]) &&
				IsValidDynamicObject(Neon[vehicleid][3]))
			{
				DestroyDynamicObject(Neon[vehicleid][2]);
				DestroyDynamicObject(Neon[vehicleid][3]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][4]) &&
				IsValidDynamicObject(Neon[vehicleid][5]))
			{
				DestroyDynamicObject(Neon[vehicleid][4]);
				DestroyDynamicObject(Neon[vehicleid][5]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][8]) &&
				IsValidDynamicObject(Neon[vehicleid][9]))
			{
				DestroyDynamicObject(Neon[vehicleid][8]);
				DestroyDynamicObject(Neon[vehicleid][9]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][10]) &&
				IsValidDynamicObject(Neon[vehicleid][11]))
			{
				DestroyDynamicObject(Neon[vehicleid][10]);
				DestroyDynamicObject(Neon[vehicleid][11]);
			}
			Neon[vehicleid][6] = CreateDynamicObject(18650, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0);
			Neon[vehicleid][7] = CreateDynamicObject(18650, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0);
			AttachDynamicObjectToVehicle(Neon[vehicleid][6], vehicleid, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(Neon[vehicleid][7], vehicleid, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		}
	}
	if(neonid == 4)
	{
		if(NeonALready[vehicleid][4] == false)
		{
			NeonALready[vehicleid][0] = false;
			NeonALready[vehicleid][1] = false;
			NeonALready[vehicleid][2] = false;
			NeonALready[vehicleid][3] = false;
			NeonALready[vehicleid][4] = true;
			NeonALready[vehicleid][5] = false;

			if(IsValidDynamicObject(Neon[vehicleid][0]) &&
				IsValidDynamicObject(Neon[vehicleid][1]))
			{
				DestroyDynamicObject(Neon[vehicleid][0]);
				DestroyDynamicObject(Neon[vehicleid][1]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][2]) &&
				IsValidDynamicObject(Neon[vehicleid][3]))
			{
				DestroyDynamicObject(Neon[vehicleid][2]);
				DestroyDynamicObject(Neon[vehicleid][3]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][4]) &&
				IsValidDynamicObject(Neon[vehicleid][5]))
			{
				DestroyDynamicObject(Neon[vehicleid][4]);
				DestroyDynamicObject(Neon[vehicleid][5]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][6]) &&
				IsValidDynamicObject(Neon[vehicleid][7]))
			{
				DestroyDynamicObject(Neon[vehicleid][6]);
				DestroyDynamicObject(Neon[vehicleid][7]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][10]) &&
				IsValidDynamicObject(Neon[vehicleid][11]))
			{
				DestroyDynamicObject(Neon[vehicleid][10]);
				DestroyDynamicObject(Neon[vehicleid][11]);
			}
			Neon[vehicleid][8] = CreateDynamicObject(18652, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0);
			Neon[vehicleid][9] = CreateDynamicObject(18652, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0);
			AttachDynamicObjectToVehicle(Neon[vehicleid][8], vehicleid, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(Neon[vehicleid][9], vehicleid, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		}
	}
	if(neonid == 5)
	{
		if(NeonALready[vehicleid][5] == false)
		{
			NeonALready[vehicleid][0] = false;
			NeonALready[vehicleid][1] = false;
			NeonALready[vehicleid][2] = false;
			NeonALready[vehicleid][3] = false;
			NeonALready[vehicleid][4] = false;
			NeonALready[vehicleid][5] = true;

			if(IsValidDynamicObject(Neon[vehicleid][0]) &&
				IsValidDynamicObject(Neon[vehicleid][1]))
			{
				DestroyDynamicObject(Neon[vehicleid][0]);
				DestroyDynamicObject(Neon[vehicleid][1]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][2]) &&
				IsValidDynamicObject(Neon[vehicleid][3]))
			{
				DestroyDynamicObject(Neon[vehicleid][2]);
				DestroyDynamicObject(Neon[vehicleid][3]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][4]) &&
				IsValidDynamicObject(Neon[vehicleid][5]))
			{
				DestroyDynamicObject(Neon[vehicleid][4]);
				DestroyDynamicObject(Neon[vehicleid][5]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][6]) &&
				IsValidDynamicObject(Neon[vehicleid][7]))
			{
				DestroyDynamicObject(Neon[vehicleid][6]);
				DestroyDynamicObject(Neon[vehicleid][7]);
			}
			if(IsValidDynamicObject(Neon[vehicleid][8]) &&
				IsValidDynamicObject(Neon[vehicleid][9]))
			{
				DestroyDynamicObject(Neon[vehicleid][8]);
				DestroyDynamicObject(Neon[vehicleid][9]);
			}
			Neon[vehicleid][10] = CreateDynamicObject(18651, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0);
			Neon[vehicleid][11] = CreateDynamicObject(18651, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0);
			AttachDynamicObjectToVehicle(Neon[vehicleid][10], vehicleid, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(Neon[vehicleid][11], vehicleid, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		}
	}
	if(neonid == 6)
	{
		if(IsValidDynamicObject(Neon[vehicleid][0]) &&
			IsValidDynamicObject(Neon[vehicleid][1]))
		{
			DestroyDynamicObject(Neon[vehicleid][0]);
			DestroyDynamicObject(Neon[vehicleid][1]);
		}
		if(IsValidDynamicObject(Neon[vehicleid][2]) &&
			IsValidDynamicObject(Neon[vehicleid][3]))
		{
			DestroyDynamicObject(Neon[vehicleid][2]);
			DestroyDynamicObject(Neon[vehicleid][3]);
		}
		if(IsValidDynamicObject(Neon[vehicleid][4]) &&
			IsValidDynamicObject(Neon[vehicleid][5]))
		{
			DestroyDynamicObject(Neon[vehicleid][4]);
			DestroyDynamicObject(Neon[vehicleid][5]);
		}
		if(IsValidDynamicObject(Neon[vehicleid][6]) &&
			IsValidDynamicObject(Neon[vehicleid][7]))
		{
			DestroyDynamicObject(Neon[vehicleid][6]);
			DestroyDynamicObject(Neon[vehicleid][7]);
		}
		if(IsValidDynamicObject(Neon[vehicleid][8]) &&
			IsValidDynamicObject(Neon[vehicleid][9]))
		{
			DestroyDynamicObject(Neon[vehicleid][8]);
			DestroyDynamicObject(Neon[vehicleid][9]);
		}
		if(IsValidDynamicObject(Neon[vehicleid][10]) &&
			IsValidDynamicObject(Neon[vehicleid][11]))
		{
			DestroyDynamicObject(Neon[vehicleid][10]);
			DestroyDynamicObject(Neon[vehicleid][11]);
		}
	}
	return 1;
}

stock AutoTunningRun(vehicleid)
{
	if(GetVehicleModel(vehicleid) == 562)
	{
		AddVehicleComponent(vehicleid, 1046);
		AddVehicleComponent(vehicleid, 1171);
		AddVehicleComponent(vehicleid, 1149);
		AddVehicleComponent(vehicleid, 1035);
		AddVehicleComponent(vehicleid, 1147);
		AddVehicleComponent(vehicleid, 1036);
		AddVehicleComponent(vehicleid, 1040);
		AddVehicleComponent(vehicleid, nitro);
		AddVehicleComponent(vehicleid, rodawire);
		AddVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 2);
	}
	if(GetVehicleModel(vehicleid) == 560)
	{
		AddVehicleComponent(vehicleid, 1028);
		AddVehicleComponent(vehicleid, 1169);
		AddVehicleComponent(vehicleid, 1141);
		AddVehicleComponent(vehicleid, 1032);
		AddVehicleComponent(vehicleid, 1138);
		AddVehicleComponent(vehicleid, 1026);
		AddVehicleComponent(vehicleid, 1027);
		AddVehicleComponent(vehicleid, nitro);
		AddVehicleComponent(vehicleid, rodawire);
		AddVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 2);
	}
	if(GetVehicleModel(vehicleid) == 565)
	{
		AddVehicleComponent(vehicleid, 1046);
		AddVehicleComponent(vehicleid, 1153);
		AddVehicleComponent(vehicleid, 1150);
		AddVehicleComponent(vehicleid, 1054);
		AddVehicleComponent(vehicleid, 1049);
		AddVehicleComponent(vehicleid, 1047);
		AddVehicleComponent(vehicleid, 1051);
		AddVehicleComponent(vehicleid, nitro);
		AddVehicleComponent(vehicleid, rodawire);
		AddVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 2);
	}
	if(GetVehicleModel(vehicleid) == 559)
	{
		AddVehicleComponent(vehicleid, 1065);
		AddVehicleComponent(vehicleid, 1160);
		AddVehicleComponent(vehicleid, 1159);
		AddVehicleComponent(vehicleid, 1067);
		AddVehicleComponent(vehicleid, 1162);
		AddVehicleComponent(vehicleid, 1069);
		AddVehicleComponent(vehicleid, 1071);
		AddVehicleComponent(vehicleid, nitro);
		AddVehicleComponent(vehicleid, rodawire);
		AddVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 1);
	}
	if(GetVehicleModel(vehicleid) == 561)
	{
		AddVehicleComponent(vehicleid, 1064);
		AddVehicleComponent(vehicleid, 1155);
		AddVehicleComponent(vehicleid, 1154);
		AddVehicleComponent(vehicleid, 1055);
		AddVehicleComponent(vehicleid, 1158);
		AddVehicleComponent(vehicleid, 1056);
		AddVehicleComponent(vehicleid, 1062);
		AddVehicleComponent(vehicleid, nitro);
		AddVehicleComponent(vehicleid, rodawire);
		AddVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 2);
	}
	if(GetVehicleModel(vehicleid) == 558)
	{
		AddVehicleComponent(vehicleid, 1089);
		AddVehicleComponent(vehicleid, 1166);
		AddVehicleComponent(vehicleid, 1168);
		AddVehicleComponent(vehicleid, 1088);
		AddVehicleComponent(vehicleid, 1164);
		AddVehicleComponent(vehicleid, 1090);
		AddVehicleComponent(vehicleid, 1094);
		AddVehicleComponent(vehicleid, nitro);
		AddVehicleComponent(vehicleid, rodawire);
		AddVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 2);
	}
	if(GetVehicleModel(vehicleid) == 575)
	{
		AddVehicleComponent(vehicleid, 1044);
		AddVehicleComponent(vehicleid, 1174);
		AddVehicleComponent(vehicleid, 1176);
		AddVehicleComponent(vehicleid, 1042);
		AddVehicleComponent(vehicleid, 1099);
		AddVehicleComponent(vehicleid, nitro);
		AddVehicleComponent(vehicleid, rodawire);
		AddVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 0);
	}
	if(GetVehicleModel(vehicleid) == 534)
	{
		AddVehicleComponent(vehicleid, 1126);
		AddVehicleComponent(vehicleid, 1179);
		AddVehicleComponent(vehicleid, 1180);
		AddVehicleComponent(vehicleid, 1122);
		AddVehicleComponent(vehicleid, 1101);
		AddVehicleComponent(vehicleid, 1125);
		AddVehicleComponent(vehicleid, 1123);
		AddVehicleComponent(vehicleid, 1100);
		AddVehicleComponent(vehicleid, nitro);
		AddVehicleComponent(vehicleid, rodawire);
		AddVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 2);
	}
	if(GetVehicleModel(vehicleid) == 536)
	{
		AddVehicleComponent(vehicleid, 1104);
		AddVehicleComponent(vehicleid, 1182);
		AddVehicleComponent(vehicleid, 1184);
		AddVehicleComponent(vehicleid, 1108);
		AddVehicleComponent(vehicleid, 1107);
		AddVehicleComponent(vehicleid, nitro);
		AddVehicleComponent(vehicleid, rodawire);
		AddVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 1);
	}
	if(GetVehicleModel(vehicleid) == 567)
	{
		AddVehicleComponent(vehicleid, 1129);
		AddVehicleComponent(vehicleid, 1189);
		AddVehicleComponent(vehicleid, 1187);
		AddVehicleComponent(vehicleid, 1102);
		AddVehicleComponent(vehicleid, 1133);
		AddVehicleComponent(vehicleid, nitro);
		AddVehicleComponent(vehicleid, rodawire);
		AddVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 2);
	}
	if(GetVehicleModel(vehicleid) == 420)
	{
		AddVehicleComponent(vehicleid, 1010);
		AddVehicleComponent(vehicleid, 1087);
		AddVehicleComponent(vehicleid, 1081);
		AddVehicleComponent(vehicleid, 1139);
	}
	if(GetVehicleModel(vehicleid) == 400)
	{
		AddVehicleComponent(vehicleid, 1010);
		AddVehicleComponent(vehicleid, 1087);
		AddVehicleComponent(vehicleid, 1018);
		AddVehicleComponent(vehicleid, 1013);
		AddVehicleComponent(vehicleid, 1081);
		AddVehicleComponent(vehicleid, 1086);
	}
	if(GetVehicleModel(vehicleid) == 401)
	{
		AddVehicleComponent(vehicleid, 1086);
		AddVehicleComponent(vehicleid, 1139);
		AddVehicleComponent(vehicleid, 1081);
		AddVehicleComponent(vehicleid, 1010);
		AddVehicleComponent(vehicleid, 1087);
		AddVehicleComponent(vehicleid, 1012);
		AddVehicleComponent(vehicleid, 1013);
		AddVehicleComponent(vehicleid, 1042);
		AddVehicleComponent(vehicleid, 1043);
		AddVehicleComponent(vehicleid, 1018);
		AddVehicleComponent(vehicleid, 1006);
		AddVehicleComponent(vehicleid, 1007);
		AddVehicleComponent(vehicleid, 1017);
	}
	if(GetVehicleModel(vehicleid) == 576)
	{
		AddVehicleComponent(vehicleid, 1191);
		AddVehicleComponent(vehicleid, 1193);
		AddVehicleComponent(vehicleid, 1010);
		AddVehicleComponent(vehicleid, 1018);
		AddVehicleComponent(vehicleid, 1081);
		AddVehicleComponent(vehicleid, 1087);
		AddVehicleComponent(vehicleid, 1134);
		AddVehicleComponent(vehicleid, 1137);
		ChangeVehiclePaintjob(vehicleid, 2);
	}
	else
	{
		AddVehicleComponent(vehicleid, nitro);
		AddVehicleComponent(vehicleid, rodawire);
		AddVehicleComponent(vehicleid, suspensao);
	}
	return 1;
}

stock AutoTunningRemove(vehicleid)
{
	if(GetVehicleModel(vehicleid) == 562)
	{
		RemoveVehicleComponent(vehicleid, 1046);
		RemoveVehicleComponent(vehicleid, 1171);
		RemoveVehicleComponent(vehicleid, 1149);
		RemoveVehicleComponent(vehicleid, 1035);
		RemoveVehicleComponent(vehicleid, 1147);
		RemoveVehicleComponent(vehicleid, 1036);
		RemoveVehicleComponent(vehicleid, 1040);
		RemoveVehicleComponent(vehicleid, nitro);
		RemoveVehicleComponent(vehicleid, rodawire);
		RemoveVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 3);
	}
	if(GetVehicleModel(vehicleid) == 560)
	{
		RemoveVehicleComponent(vehicleid, 1028);
		RemoveVehicleComponent(vehicleid, 1169);
		RemoveVehicleComponent(vehicleid, 1141);
		RemoveVehicleComponent(vehicleid, 1032);
		RemoveVehicleComponent(vehicleid, 1138);
		RemoveVehicleComponent(vehicleid, 1026);
		RemoveVehicleComponent(vehicleid, 1027);
		RemoveVehicleComponent(vehicleid, nitro);
		RemoveVehicleComponent(vehicleid, rodawire);
		RemoveVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 3);
	}
	if(GetVehicleModel(vehicleid) == 565)
	{
		RemoveVehicleComponent(vehicleid, 1046);
		RemoveVehicleComponent(vehicleid, 1153);
		RemoveVehicleComponent(vehicleid, 1150);
		RemoveVehicleComponent(vehicleid, 1054);
		RemoveVehicleComponent(vehicleid, 1049);
		RemoveVehicleComponent(vehicleid, 1047);
		RemoveVehicleComponent(vehicleid, 1051);
		RemoveVehicleComponent(vehicleid, nitro);
		RemoveVehicleComponent(vehicleid, rodawire);
		RemoveVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 3);
	}
	if(GetVehicleModel(vehicleid) == 559)
	{
		RemoveVehicleComponent(vehicleid, 1065);
		RemoveVehicleComponent(vehicleid, 1160);
		RemoveVehicleComponent(vehicleid, 1159);
		RemoveVehicleComponent(vehicleid, 1067);
		RemoveVehicleComponent(vehicleid, 1162);
		RemoveVehicleComponent(vehicleid, 1069);
		RemoveVehicleComponent(vehicleid, 1071);
		RemoveVehicleComponent(vehicleid, nitro);
		RemoveVehicleComponent(vehicleid, rodawire);
		RemoveVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 3);
	}
	if(GetVehicleModel(vehicleid) == 561)
	{
		RemoveVehicleComponent(vehicleid, 1064);
		RemoveVehicleComponent(vehicleid, 1155);
		RemoveVehicleComponent(vehicleid, 1154);
		RemoveVehicleComponent(vehicleid, 1055);
		RemoveVehicleComponent(vehicleid, 1158);
		RemoveVehicleComponent(vehicleid, 1056);
		RemoveVehicleComponent(vehicleid, 1062);
		RemoveVehicleComponent(vehicleid, nitro);
		RemoveVehicleComponent(vehicleid, rodawire);
		RemoveVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 3);
	}
	if(GetVehicleModel(vehicleid) == 558)
	{
		RemoveVehicleComponent(vehicleid, 1089);
		RemoveVehicleComponent(vehicleid, 1166);
		RemoveVehicleComponent(vehicleid, 1168);
		RemoveVehicleComponent(vehicleid, 1088);
		RemoveVehicleComponent(vehicleid, 1164);
		RemoveVehicleComponent(vehicleid, 1090);
		RemoveVehicleComponent(vehicleid, 1094);
		RemoveVehicleComponent(vehicleid, nitro);
		RemoveVehicleComponent(vehicleid, rodawire);
		RemoveVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 3);
	}
	if(GetVehicleModel(vehicleid) == 575)
	{
		RemoveVehicleComponent(vehicleid, 1044);
		RemoveVehicleComponent(vehicleid, 1174);
		RemoveVehicleComponent(vehicleid, 1176);
		RemoveVehicleComponent(vehicleid, 1042);
		RemoveVehicleComponent(vehicleid, 1099);
		RemoveVehicleComponent(vehicleid, nitro);
		RemoveVehicleComponent(vehicleid, rodawire);
		RemoveVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 3);
	}
	if(GetVehicleModel(vehicleid) == 534)
	{
		RemoveVehicleComponent(vehicleid, 1126);
		RemoveVehicleComponent(vehicleid, 1179);
		RemoveVehicleComponent(vehicleid, 1180);
		RemoveVehicleComponent(vehicleid, 1122);
		RemoveVehicleComponent(vehicleid, 1101);
		RemoveVehicleComponent(vehicleid, 1125);
		RemoveVehicleComponent(vehicleid, 1123);
		RemoveVehicleComponent(vehicleid, 1100);
		RemoveVehicleComponent(vehicleid, nitro);
		RemoveVehicleComponent(vehicleid, rodawire);
		RemoveVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 3);
	}
	if(GetVehicleModel(vehicleid) == 536)
	{
		RemoveVehicleComponent(vehicleid, 1104);
		RemoveVehicleComponent(vehicleid, 1182);
		RemoveVehicleComponent(vehicleid, 1184);
		RemoveVehicleComponent(vehicleid, 1108);
		RemoveVehicleComponent(vehicleid, 1107);
		RemoveVehicleComponent(vehicleid, nitro);
		RemoveVehicleComponent(vehicleid, rodawire);
		RemoveVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 3);
	}
	if(GetVehicleModel(vehicleid) == 567)
	{
		RemoveVehicleComponent(vehicleid, 1129);
		RemoveVehicleComponent(vehicleid, 1189);
		RemoveVehicleComponent(vehicleid, 1187);
		RemoveVehicleComponent(vehicleid, 1102);
		RemoveVehicleComponent(vehicleid, 1133);
		RemoveVehicleComponent(vehicleid, nitro);
		RemoveVehicleComponent(vehicleid, rodawire);
		RemoveVehicleComponent(vehicleid, suspensao);
		ChangeVehiclePaintjob(vehicleid, 3);
	}
	if(GetVehicleModel(vehicleid) == 420)
	{
		RemoveVehicleComponent(vehicleid, 1010);
		RemoveVehicleComponent(vehicleid, 1087);
		RemoveVehicleComponent(vehicleid, 1081);
		RemoveVehicleComponent(vehicleid, 1139);
	}
	if(GetVehicleModel(vehicleid) == 400)
	{
		RemoveVehicleComponent(vehicleid, 1010);
		RemoveVehicleComponent(vehicleid, 1087);
		RemoveVehicleComponent(vehicleid, 1018);
		RemoveVehicleComponent(vehicleid, 1013);
		RemoveVehicleComponent(vehicleid, 1081);
		RemoveVehicleComponent(vehicleid, 1086);
	}
	if(GetVehicleModel(vehicleid) == 401)
	{
		RemoveVehicleComponent(vehicleid, 1086);
		RemoveVehicleComponent(vehicleid, 1139);
		RemoveVehicleComponent(vehicleid, 1081);
		RemoveVehicleComponent(vehicleid, 1010);
		RemoveVehicleComponent(vehicleid, 1087);
		RemoveVehicleComponent(vehicleid, 1012);
		RemoveVehicleComponent(vehicleid, 1013);
		RemoveVehicleComponent(vehicleid, 1042);
		RemoveVehicleComponent(vehicleid, 1043);
		RemoveVehicleComponent(vehicleid, 1018);
		RemoveVehicleComponent(vehicleid, 1006);
		RemoveVehicleComponent(vehicleid, 1007);
		RemoveVehicleComponent(vehicleid, 1017);
	}
	if(GetVehicleModel(vehicleid) == 576)
	{
		RemoveVehicleComponent(vehicleid, 1191);
		RemoveVehicleComponent(vehicleid, 1193);
		RemoveVehicleComponent(vehicleid, 1010);
		RemoveVehicleComponent(vehicleid, 1018);
		RemoveVehicleComponent(vehicleid, 1081);
		RemoveVehicleComponent(vehicleid, 1087);
		RemoveVehicleComponent(vehicleid, 1134);
		RemoveVehicleComponent(vehicleid, 1137);
		ChangeVehiclePaintjob(vehicleid, 3);
	}
	else
	{
		RemoveVehicleComponent(vehicleid, nitro);
		RemoveVehicleComponent(vehicleid, rodawire);
		RemoveVehicleComponent(vehicleid, suspensao);
	}
	return 1;
}

stock SetPlayerVIP(playerid, days)
{
	if(IsPlayerConnected(playerid))
	{
		new VIPS[128], ACCS[128], STRV[128];

		new year, month, day;
		getdate(year, month, day);

		format(VIPS, sizeof(VIPS), PASTA_VIPS, GetPlayerNameEx(playerid));
		if(!DOF2_FileExists(VIPS))
		{
			DOF2_CreateFile(VIPS);
		}
		DOF2_SetInt(VIPS, "Dias", DOF2_GetInt(VIPS, "Dias")+days);
		format(STRV, sizeof(STRV), "%d/%d/%d", day, month, year);
		DOF2_SetString(VIPS, "DataSet", STRV);

		format(ACCS, sizeof(ACCS), PASTA_CONTAS, GetPlayerNameEx(playerid));
		DOF2_SetInt(ACCS, "UsouConce", 0);
		DOF2_SetInt(ACCS, "VIP", 1);
		vip[playerid] = 1;
	}
	return 1;
}

stock RenameFileVIP(oldfile[], newfile[])
{
	new mndias;
	new mndataset[256];
	new mnusouconce;
	new mnvip;

	mndias = DOF2_GetInt(oldfile, "Dias");
	mndataset = DOF2_GetString(oldfile, "DataSet");
	mnusouconce = DOF2_GetInt(oldfile, "UsouConce");
	mnvip = DOF2_GetInt(oldfile, "VIP");
	DOF2_RemoveFile(oldfile);

	DOF2_CreateFile(newfile);
	DOF2_SetInt(newfile, "Dias", mndias);
	DOF2_SetString(newfile, "DataSet", mndataset);
	DOF2_SetInt(newfile, "UsouConce", mnusouconce);
	DOF2_SetInt(newfile, "VIP", mnvip);
	return 1;
}

stock UnsetPlayerVIP(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new VIPS[128], ACCS[128];

		format(VIPS, sizeof(VIPS), PASTA_VIPS, GetPlayerNameEx(playerid));
		if(DOF2_FileExists(VIPS))
		{
			DOF2_RemoveFile(VIPS);
		}
		format(ACCS, sizeof(ACCS), PASTA_CONTAS, GetPlayerNameEx(playerid));
		DOF2_SetInt(ACCS, "VIP", 0);
		vip[playerid] = 0;
	}
	return 1;
}

stock CheckPlayerVIP(playerid)
{
	new VIPS[128], ACCS[128], STRV[128];

	new year, month, day;
	getdate(year, month, day);

	format(ACCS, sizeof(ACCS), PASTA_CONTAS, GetPlayerNameEx(playerid));
	if(DOF2_FileExists(ACCS))
	{
		format(VIPS, sizeof(VIPS), PASTA_VIPS, GetPlayerNameEx(playerid));
		if(DOF2_FileExists(VIPS))
		{
			format(STRV, sizeof(STRV), "%d/%d/%d", day, month, year);
			if(strcmp(DOF2_GetString(VIPS, "DataSet"), STRV, true) != 0)
			{
				DOF2_SetString(VIPS, "DataSet", STRV);
				DOF2_SetInt(VIPS, "Dias", DOF2_GetInt(VIPS, "Dias")-1);
			}
			if(DOF2_GetInt(VIPS, "Dias") > 0)
			{
				#if defined AntiCheatUser
				CheckSet(0, playerid, false);
				SetWeaponAllowed(playerid, 38, true);
				SetWeaponAllowed(playerid, 35, true);
				SetWeaponAllowed(playerid, 36, true);
				SetWeaponAllowed(playerid, 37, true);
				SetWeaponAllowed(playerid, 39, true);
				SetWeaponAllowed(playerid, 40, true);
				#endif

				DOF2_SetInt(ACCS, "VIP", 1);
				vip[playerid] = 1;
			}
			else
			{
				#if defined AntiCheatUser
				CheckSet(0, playerid, true);
				SetWeaponAllowed(playerid, 38, false);
				SetWeaponAllowed(playerid, 35, false);
				SetWeaponAllowed(playerid, 36, false);
				SetWeaponAllowed(playerid, 37, false);
				SetWeaponAllowed(playerid, 39, false);
				SetWeaponAllowed(playerid, 40, false);
				#endif

				UnsetPlayerVIP(playerid);
			}
		}
		else
		{
			#if defined AntiCheatUser
			CheckSet(0, playerid, true);
			SetWeaponAllowed(playerid, 38, false);
			SetWeaponAllowed(playerid, 35, false);
			SetWeaponAllowed(playerid, 36, false);
			SetWeaponAllowed(playerid, 37, false);
			SetWeaponAllowed(playerid, 39, false);
			SetWeaponAllowed(playerid, 40, false);
			#endif

			DOF2_SetInt(ACCS, "VIP", 0);
			vip[playerid] = 0;
		}
	}
	return 1;
}

stock CheckPlayerVIPMT(playerid)
{
	new VIPMTS[128], ACCS[128], STRV[128];

	new year, month, day;
	getdate(year, month, day);

	format(ACCS, sizeof(ACCS), PASTA_CONTAS, GetPlayerNameEx(playerid));
	if(DOF2_FileExists(ACCS))
	{
		format(VIPMTS, sizeof(VIPMT), PASTA_VIPMTS, GetPlayerNameEx(playerid));
		if(DOF2_FileExists(VIPMTS))
		{
			format(STRV, sizeof(STRV), "%d/%d/%d", day, month, year);
			if(strcmp(DOF2_GetString(VIPMTS, "DataSet"), STRV, true) != 0)
			{
				DOF2_SetString(VIPMTS, "DataSet", STRV);
				DOF2_SetInt(VIPMTS, "Dias", DOF2_GetInt(VIPMTS, "Dias")-1);
			}
			if(DOF2_GetInt(VIPMTS, "Dias") > 0)
			{
				#if defined AntiCheatUser
				CheckSet(0, playerid, false);
				SetWeaponAllowed(playerid, 38, true);
				SetWeaponAllowed(playerid, 35, true);
				SetWeaponAllowed(playerid, 36, true);
				SetWeaponAllowed(playerid, 37, true);
				SetWeaponAllowed(playerid, 39, true);
				SetWeaponAllowed(playerid, 40, true);
				#endif

				DOF2_SetInt(ACCS, "VIPMT", 1);
				VIPMT[playerid] = 1;

				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você é um jogador VIP $Prestige$, aproveite!");
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Veja os comandos em /comandosprestige");
			}
			else
			{
				#if defined AntiCheatUser
				CheckSet(0, playerid, true);
				SetWeaponAllowed(playerid, 38, false);
				SetWeaponAllowed(playerid, 35, false);
				SetWeaponAllowed(playerid, 36, false);
				SetWeaponAllowed(playerid, 37, false);
				SetWeaponAllowed(playerid, 39, false);
				SetWeaponAllowed(playerid, 40, false);
				#endif

				UnsetPlayerVIPMT(playerid);

				SendClientMessage(playerid, Azul, "Seus dias de VIP $Prestige$  acabaram!");
				SendClientMessage(playerid, Azul, "x Compre mais e divirta-se.");
				SendClientMessage(playerid, Azul, "x Em Construção");
			}
		}
		else
		{
			#if defined AntiCheatUser
			CheckSet(0, playerid, true);
			SetWeaponAllowed(playerid, 38, false);
			SetWeaponAllowed(playerid, 35, false);
			SetWeaponAllowed(playerid, 36, false);
			SetWeaponAllowed(playerid, 37, false);
			SetWeaponAllowed(playerid, 39, false);
			SetWeaponAllowed(playerid, 40, false);
			#endif

			DOF2_SetInt(ACCS, "VIPMT", 0);
			VIPMT[playerid] = 0;
		}
	}
	return 1;
}

stock CheckPlayerVIPT(playerid)
{
	new VIPTS[128], ACCS[128], STRV[128];

	new year, month, day;
	getdate(year, month, day);

	format(ACCS, sizeof(ACCS), PASTA_CONTAS, GetPlayerNameEx(playerid));
	if(DOF2_FileExists(ACCS))
	{
		format(VIPTS, sizeof(VIPT), PASTA_VIPTS, GetPlayerNameEx(playerid));
		if(DOF2_FileExists(VIPTS))
		{
			format(STRV, sizeof(STRV), "%d/%d/%d", day, month, year);
			if(strcmp(DOF2_GetString(VIPTS, "DataSet"), STRV, true) != 0)
			{
				DOF2_SetString(VIPTS, "DataSet", STRV);
				DOF2_SetInt(VIPTS, "Dias", DOF2_GetInt(VIPTS, "Dias")-1);
			}
			if(DOF2_GetInt(VIPTS, "Dias") > 0)
			{
				#if defined AntiCheatUser
				CheckSet(0, playerid, false);
				SetWeaponAllowed(playerid, 38, true);
				SetWeaponAllowed(playerid, 35, true);
				SetWeaponAllowed(playerid, 36, true);
				SetWeaponAllowed(playerid, 37, true);
				SetWeaponAllowed(playerid, 39, true);
				SetWeaponAllowed(playerid, 40, true);
				#endif

				DOF2_SetInt(ACCS, "VIPT", 1);
				VIPT[playerid] = 1;

				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você é um jogador VIP PREMIUM, aproveite!");
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Veja os comandos em /comandospremium");
			}
			else
			{
				#if defined AntiCheatUser
				CheckSet(0, playerid, true);
				SetWeaponAllowed(playerid, 38, false);
				SetWeaponAllowed(playerid, 35, false);
				SetWeaponAllowed(playerid, 36, false);
				SetWeaponAllowed(playerid, 37, false);
				SetWeaponAllowed(playerid, 39, false);
				SetWeaponAllowed(playerid, 40, false);
				#endif

				UnsetPlayerVIPT(playerid);

				SendClientMessage(playerid, Azul, "Seus dias de VIP PREMIUM  acabaram!");
				SendClientMessage(playerid, Azul, "x Compre mais e divirta-se.");
				SendClientMessage(playerid, Azul, "x Em Construção");
			}
		}
		else
		{
			#if defined AntiCheatUser
			CheckSet(0, playerid, true);
			SetWeaponAllowed(playerid, 38, false);
			SetWeaponAllowed(playerid, 35, false);
			SetWeaponAllowed(playerid, 36, false);
			SetWeaponAllowed(playerid, 37, false);
			SetWeaponAllowed(playerid, 39, false);
			SetWeaponAllowed(playerid, 40, false);
			#endif

			DOF2_SetInt(ACCS, "VIPT", 0);
			VIPT[playerid] = 0;
		}
	}
	return 1;
}

// DJ COMEÇO


stock CheckPlayerDJ(playerid)
{
	new DJS[128], ACCS[128], STRV[128];

	new year, month, day;
	getdate(year, month, day);

	format(ACCS, sizeof(ACCS), PASTA_CONTAS, GetPlayerNameEx(playerid));
	if(DOF2_FileExists(ACCS))
	{
		format(DJS, sizeof(DJ), PASTA_DJS, GetPlayerNameEx(playerid));
		if(DOF2_FileExists(DJS))
		{
			format(STRV, sizeof(STRV), "%d/%d/%d", day, month, year);
			if(strcmp(DOF2_GetString(DJS, "DataSet"), STRV, true) != 0)
			{
				DOF2_SetString(DJS, "DataSet", STRV);
				DOF2_SetInt(DJS, "Dias", DOF2_GetInt(DJS, "Dias")-1);
			}
			if(DOF2_GetInt(DJS, "Dias") > 0)
			{
				#if defined AntiCheatUser
				CheckSet(0, playerid, false);
				SetWeaponAllowed(playerid, 38, true);
				SetWeaponAllowed(playerid, 35, true);
				SetWeaponAllowed(playerid, 36, true);
				SetWeaponAllowed(playerid, 37, true);
				SetWeaponAllowed(playerid, 39, true);
				SetWeaponAllowed(playerid, 40, true);
				#endif

				DOF2_SetInt(ACCS, "DJ", 1);
				DJ[playerid] = 1;

				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Você é um DJ, aproveite!");
				SendClientMessage(playerid, Vermelho, "[ATENÇÃO] {FFFFFF}Caso queira comprar mais dias informe um administrador(a).");
			}
			else
			{
				#if defined AntiCheatUser
				CheckSet(0, playerid, true);
				SetWeaponAllowed(playerid, 38, false);
				SetWeaponAllowed(playerid, 35, false);
				SetWeaponAllowed(playerid, 36, false);
				SetWeaponAllowed(playerid, 37, false);
				SetWeaponAllowed(playerid, 39, false);
				SetWeaponAllowed(playerid, 40, false);
				#endif

				UnsetPlayerDJ(playerid);

				SendClientMessage(playerid, Azul, "Seus dias de DJ acabaram!");
				SendClientMessage(playerid, Azul, "x Compre mais e divirta-se.");
				SendClientMessage(playerid, Azul, "x Em Construção");
			}
		}
		else
		{
			#if defined AntiCheatUser
			CheckSet(0, playerid, true);
			SetWeaponAllowed(playerid, 38, false);
			SetWeaponAllowed(playerid, 35, false);
			SetWeaponAllowed(playerid, 36, false);
			SetWeaponAllowed(playerid, 37, false);
			SetWeaponAllowed(playerid, 39, false);
			SetWeaponAllowed(playerid, 40, false);
			#endif

			DOF2_SetInt(ACCS, "DJ", 0);
			DJ[playerid] = 0;
		}
	}
	return 1;
}

stock SetPlayerDJ(playerid, days)
{
	if(IsPlayerConnected(playerid))
	{
		new DJS[128], ACCS[128], STRV[128];

		new year, month, day;
		getdate(year, month, day);

		format(DJS, sizeof(DJS), PASTA_DJS, GetPlayerNameEx(playerid));
		if(!DOF2_FileExists(DJS))
		{
			DOF2_CreateFile(DJS);
		}
		DOF2_SetInt(DJS, "Dias", DOF2_GetInt(DJS, "Dias")+days);
		format(STRV, sizeof(STRV), "%d/%d/%d", day, month, year);
		DOF2_SetString(DJS, "DataSet", STRV);

		format(ACCS, sizeof(ACCS), PASTA_CONTAS, GetPlayerNameEx(playerid));
		DOF2_SetInt(ACCS, "UsouConce", 0);
		DOF2_SetInt(ACCS, "DJ", 1);
		DJ[playerid] = 1;
	}
	return 1;
}

stock RenameFileDJ(oldFile[], newFile[])
{
	new mndias;
	new mndataset[256];
	new mnusouconce;
	new mndj;

	mndias = DOF2_GetInt(oldFile, "Dias");
	mndataset = DOF2_GetString(oldFile, "DataSet");
	mnusouconce = DOF2_GetInt(oldFile, "UsouConce");
	mndj = DOF2_GetInt(oldFile, "DJ");
	DOF2_RemoveFile(oldFile);

	DOF2_CreateFile(newFile);
	DOF2_SetInt(newFile, "Dias", mndias);
	DOF2_SetString(newFile, "DataSet", mndataset);
	DOF2_SetInt(newFile, "UsouConce", mnusouconce);
	DOF2_SetInt(newFile, "DJ", mndj);
	return 1;
}

stock UnsetPlayerDJ(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new DJS[128], ACCS[128];

		format(DJS, sizeof(DJS), PASTA_DJS, GetPlayerNameEx(playerid));
		if(DOF2_FileExists(DJS))
		{
			DOF2_RemoveFile(DJS);
		}
		format(ACCS, sizeof(ACCS), PASTA_CONTAS, GetPlayerNameEx(playerid));
		DOF2_SetInt(ACCS, "DJ", 0);
		DJ[playerid] = 0;
	}
	return 1;
}

//FIM
stock GetDJDays(playerid)
{
	new DJS[128];

	format(DJS, sizeof(DJS), PASTA_DJS, GetPlayerNameEx(playerid));
	if(DOF2_FileExists(DJS))
	{
		return DOF2_GetInt(DJS, "Dias");
	}
	else
	{
		return 0;
	}
}

stock SetPlayerVIPT(playerid, days)
{
	if(IsPlayerConnected(playerid))
	{
		new VIPTS[128], ACCS[128], STRV[128];

		new year, month, day;
		getdate(year, month, day);

		format(VIPTS, sizeof(VIPTS), PASTA_VIPTS, GetPlayerNameEx(playerid));
		if(!DOF2_FileExists(VIPTS))
		{
			DOF2_CreateFile(VIPTS);
		}
		DOF2_SetInt(VIPTS, "Dias", DOF2_GetInt(VIPTS, "Dias")+days);
		format(STRV, sizeof(STRV), "%d/%d/%d", day, month, year);
		DOF2_SetString(VIPTS, "DataSet", STRV);

		format(ACCS, sizeof(ACCS), PASTA_CONTAS, GetPlayerNameEx(playerid));
		DOF2_SetInt(ACCS, "UsouConce", 0);
		DOF2_SetInt(ACCS, "VIPT", 1);
		VIPT[playerid] = 1;
	}
	return 1;
}

stock RenameFileVIPT(oldFile[], newFile[])
{
	new mndias;
	new mndataset[256];
	new mnusouconce;
	new mnvipt;

	mndias = DOF2_GetInt(oldFile, "Dias");
	mndataset = DOF2_GetString(oldFile, "DataSet");
	mnusouconce = DOF2_GetInt(oldFile, "UsouConce");
	mnvipt = DOF2_GetInt(oldFile, "VIPT");
	DOF2_RemoveFile(oldFile);

	DOF2_CreateFile(newFile);
	DOF2_SetInt(newFile, "Dias", mndias);
	DOF2_SetString(newFile, "DataSet", mndataset);
	DOF2_SetInt(newFile, "UsouConce", mnusouconce);
	DOF2_SetInt(newFile, "VIPT", mnvipt);
	return 1;
}

stock UnsetPlayerVIPT(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new VIPTS[128], ACCS[128];

		format(VIPTS, sizeof(VIPTS), PASTA_VIPTS, GetPlayerNameEx(playerid));
		if(DOF2_FileExists(VIPTS))
		{
			DOF2_RemoveFile(VIPTS);
		}
		format(ACCS, sizeof(ACCS), PASTA_CONTAS, GetPlayerNameEx(playerid));
		DOF2_SetInt(ACCS, "VIPT", 0);
		VIPT[playerid] = 0;
	}
	return 1;
}

//FIM
stock GetVIPTDays(playerid)
{
	new VIPTS[128];

	format(VIPTS, sizeof(VIPTS), PASTA_VIPTS, GetPlayerNameEx(playerid));
	if(DOF2_FileExists(VIPTS))
	{
		return DOF2_GetInt(VIPTS, "Dias");
	}
	else
	{
		return 0;
	}
}

stock SetPlayerVIPMT(playerid, days)
{
	if(IsPlayerConnected(playerid))
	{
		new VIPMTS[128], ACCS[128], STRV[128];

		new year, month, day;
		getdate(year, month, day);

		format(VIPMTS, sizeof(VIPMTS), PASTA_VIPMTS, GetPlayerNameEx(playerid));
		if(!DOF2_FileExists(VIPMTS))
		{
			DOF2_CreateFile(VIPMTS);
		}
		DOF2_SetInt(VIPMTS, "Dias", DOF2_GetInt(VIPMTS, "Dias")+days);
		format(STRV, sizeof(STRV), "%d/%d/%d", day, month, year);
		DOF2_SetString(VIPMTS, "DataSet", STRV);

		format(ACCS, sizeof(ACCS), PASTA_CONTAS, GetPlayerNameEx(playerid));
		DOF2_SetInt(ACCS, "UsouConce", 0);
		DOF2_SetInt(ACCS, "VIPMT", 1);
		VIPMT[playerid] = 1;
	}
	return 1;
}

stock RenameFileVIPMT(oldFile[], newFile[])
{
	new mndias;
	new mndataset[256];
	new mnusouconce;
	new mnvipmt;

	mndias = DOF2_GetInt(oldFile, "Dias");
	mndataset = DOF2_GetString(oldFile, "DataSet");
	mnusouconce = DOF2_GetInt(oldFile, "UsouConce");
	mnvipmt = DOF2_GetInt(oldFile, "VIPMT");
	DOF2_RemoveFile(oldFile);

	DOF2_CreateFile(newFile);
	DOF2_SetInt(newFile, "Dias", mndias);
	DOF2_SetString(newFile, "DataSet", mndataset);
	DOF2_SetInt(newFile, "UsouConce", mnusouconce);
	DOF2_SetInt(newFile, "VIPMT", mnvipmt);
	return 1;
}

stock UnsetPlayerVIPMT(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new VIPMTS[128], ACCS[128];

		format(VIPMTS, sizeof(VIPMTS), PASTA_VIPMTS, GetPlayerNameEx(playerid));
		if(DOF2_FileExists(VIPMTS))
		{
			DOF2_RemoveFile(VIPMTS);
		}
		format(ACCS, sizeof(ACCS), PASTA_CONTAS, GetPlayerNameEx(playerid));
		DOF2_SetInt(ACCS, "VIPMT", 0);
		VIPMT[playerid] = 0;
	}
	return 1;
}

//FIM
stock GetVIPMTDays(playerid)
{
	new VIPMTS[128];

	format(VIPMTS, sizeof(VIPMTS), PASTA_VIPMTS, GetPlayerNameEx(playerid));
	if(DOF2_FileExists(VIPMTS))
	{
		return DOF2_GetInt(VIPMTS, "Dias");
	}
	else
	{
		return 0;
	}
}

stock GetVIPDays(playerid)
{
	new VIPS[128];

	format(VIPS, sizeof(VIPS), PASTA_VIPS, GetPlayerNameEx(playerid));
	if(DOF2_FileExists(VIPS))
	{
		return DOF2_GetInt(VIPS, "Dias");
	}
	else
	{
		return 0;
	}
}

stock IsPlayerVIP(playerid)
{
	return vip[playerid];
}
stock IsPlayerVIPT(playerid)
{
	return VIPT[playerid];
}
stock IsPlayerDJ(playerid)
{
	return DJ[playerid];
}
stock IsPlayerVIPMT(playerid)
{
	return VIPMT[playerid];
}
stock GetSpeedKM(playerid)
{
    new Float:PosX,Float:PosY,Float:PosZ,Float:PlayerSpeedDistance;
    GetVehicleVelocity(GetPlayerVehicleID(playerid), PosX, PosY, PosZ);
    PlayerSpeedDistance = floatmul(floatsqroot(floatadd(floatadd(floatpower( PosX, 2), floatpower(PosY, 2)), floatpower(PosZ, 2))), 170.0);
    new spe = floatround(PlayerSpeedDistance * 1);
    return spe;
}
stock GetVehicleSpeedK(playerid) { //criador Desconhecido!
    new Float: x,
    Float: y,
    Float: z;
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);
    else GetPlayerVelocity(playerid, x, y, z);
    return floatround(floatsqroot(x * x + y * y + z * z) * 159);
}

// Radar
stock UpdateSpeed(playerid)
{
	new Float:distance, value;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	distance = floatsqroot(floatpower(floatabs(floatsub(x, SaveDtenPlayerPos[playerid][LastX])), 2)+floatpower(floatabs(floatsub(y, SaveDtenPlayerPos[playerid][LastY])), 2)+floatpower(floatabs(floatsub(z, SaveDtenPlayerPos[playerid][LastZ])), 2));
	value = floatround(distance*3600);
	if(UpdateSeconds > 1)
	{
		value = floatround(value/UpdateSeconds*1000);
	}
	distance1[playerid] = floatround(value/1600);
	SaveDtenPlayerPos[playerid][LastX] = x;
	SaveDtenPlayerPos[playerid][LastY] = y;
	SaveDtenPlayerPos[playerid][LastZ] = z;

	// Radares LS
	AddFlitsPaal(playerid, 18880, 1480.47510, -1732.30713, 11.35400, 0, 20, 90); // Prefeitura
	AddFlitsPaal(playerid, 18880, 1200.97949, -1332.25720, 11.53391, 0, 20, 90); // Hospital 1
	AddFlitsPaal(playerid, 18880, 1963.29590, -1463.40820, 10.42508, 0, 20, 90); // Hospital 2
	AddFlitsPaal(playerid, 18880, 1114.57629, -1712.28540, 11.05800, 0, 20, 90); // Biblioteca
	AddFlitsPaal(playerid, 18880, 1707.2424, -516.2195, 34.4411, 0, 20, 110); // AvenidaLS 1
	AddFlitsPaal(playerid, 18880, 2765.63379, 6.36700, 31.74532, 0, 20, 110); // AvenidaLS 2
	AddFlitsPaal(playerid, 18880, 1306.90417, -1550.52576, 12.56001, 0, 20, 80); //
	AddFlitsPaal(playerid, 18880, 1248.75818, -933.03961, 41.35783, 0, 20, 90); //
	AddFlitsPaal(playerid, 18880, 563.03339, -1235.99146, 16.03483, 0, 20, 90); //
	AddFlitsPaal(playerid, 18880, 370.30112, -1709.43250, 6.28527, 0, 20, 100); //
	AddFlitsPaal(playerid, 18880, 1054.26978, -1897.21594, 11.76965, 0, 20, 100); //
	AddFlitsPaal(playerid, 18880, 2877.96460, -1112.87000, 9.56086, 0, 20, 110); //
	AddFlitsPaal(playerid, 18880, 2057.82764, 1297.54260, 10.91371, 0, 20, 110); //
	AddFlitsPaal(playerid, 18880, 1217.12634, 1277.53394, 5.69550, 0, 20, 120); //
	AddFlitsPaal(playerid, 18880, -295.64572, -9.97037, -0.06910, 0, 20, 95); //

	return 0;
}

stock AddFlitsPaal(playerid, modelid, Float:xx, Float:yy, Float:zz, Float:rr, radius, speed)
{
	new str[128];
	new file[128];
	new fine[MAX_PLAYERS];
	if(radarobject != maxradar)
	{
		CreateDynamicObject(modelid, xx, yy, zz, 0.0, 0.0, rr, -1, -1, -1, 200.0);
		format(str, sizeof(str), "{ffffff}Radar de Velocidade\n{FF0000}Limite: {FFFFFF}%d {FF0000}KM/h", speed);
		CreateDynamic3DTextLabel(str, -1, xx, yy, zz,70.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
		radarobject++;
	}
	if(GetSpeedKM(playerid) > speed && NaCorrida[playerid] == false)
	{
		if(IsPlayerInCircle(playerid, xx, yy, zz, radius) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
			if(DOF2_GetInt(file, "QM") == 7)
			{
				incar[playerid] = 1;
				TogglePlayerControllable(playerid, 0);
				SendClientMessage(playerid, Vermelho, "{FF4500}Você perdeu sua habilitação terrestre por ter 8 pontos na carteira{FFFFFF}.");
				DOF2_SetInt(file, "HabTerrestre", 0);
			}
			else
			{
			    infratores[playerid] = 1;
		    	fine[playerid] = GetSpeedKM(playerid);
				DOF2_SetInt(file, "QM", DOF2_GetInt(file, "QM")+1), DOF2_SetInt(file, "VM", DOF2_GetInt(file, "VM")+250);

				format(str, sizeof(str), "~w~velocidade ~r~registrada ~w~%d", fine[playerid]);
				GameTextForPlayer(playerid, str, 1000, 1);

				format(str, sizeof(str), "{90EE90}O limite de velocidade é %d KM/H você passou a %d KM/H e cometeu uma infração!", speed, fine[playerid], fine[playerid]);
				SendClientMessage(playerid, -1, str);

				PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);

				SendClientMessage(playerid, 0x6495EDAA, "{90EE90}(RADAR) {FFFFFF} Ao Chegar em {FF4500}7 {FFFFFF}Multas você perde sua habilitação{FF4500}!");
				format(str, sizeof(str), "{FFFFFF}Você tem {90EE90}%d {FFFFFF}pontos na carteira, e {90EE90}%d {FFFFFF}de multas a pagar!", DOF2_GetInt(file, "QM"), DOF2_GetInt(file, "VM"));
				SendClientMessage(playerid, VERDEFRACO, str);
			}
		}
	}
	return 1;
}

forward UpdateCarInfos();
public UpdateCarInfos()
{
	foreach(Player, playerid)
 	{
		new file[128];
	    new string[128];
	    new Float: Lataria;
	    format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
	    GetVehicleHealth(GetPlayerVehicleID(playerid), Lataria);
	    if(CarInfos1[playerid] != PlayerText: INVALID_TEXT_DRAW)
		{
	        format(string, sizeof(string), "%d KM/H", GetSpeedKM(playerid));
	        PlayerTextDrawSetString(playerid, CarInfos1[playerid], string);
	    }
        if(Lataria >= 551)
		{
			format(string, sizeof(string),"~w~~h~%0.0f%%", Lataria/10);
			PlayerTextDrawSetString(playerid, CarInfos3[playerid], string);
 		}
 		else if(Lataria >= 361)
 		{
    		format(string, sizeof(string),"~w~~h~%0.0f%%", Lataria/10);
			PlayerTextDrawSetString(playerid, CarInfos3[playerid], string);
 		}
 		else
 		{
    		format(string, sizeof(string),"~r~~h~%0.0f%%", Lataria/10);
			PlayerTextDrawSetString(playerid, CarInfos3[playerid], string);
 		}
	    if(cCarro[playerid] == -1) {
	        if(CarInfos6[playerid] != PlayerText: INVALID_TEXT_DRAW)
			{
	            format(string, sizeof(string), "INDISPONIVEL", cCarro[playerid]);
	            PlayerTextDrawSetString(playerid, CarInfos6[playerid], string);
	        }
	    } else {
	        if(CarInfos6[playerid] != PlayerText: INVALID_TEXT_DRAW)
			{
	            format(string, sizeof(string), "~w~%d LITROS", cCarro[playerid]);
	            PlayerTextDrawSetString(playerid, CarInfos6[playerid], string);
    		}
	    }
	}
  	return 0;
}


stock GetVehicleSpeed(vehicleid)
{
    new Float:xPos[3];
    GetVehicleVelocity(vehicleid, xPos[0], xPos[1], xPos[2]);
    return floatround(floatsqroot(xPos[0] * xPos[0] + xPos[1] * xPos[1] + xPos[2] * xPos[2]) * 170.00);
}

stock GetVehicleSpeed2(playerid) { //criador Desconhecido!
    new Float: x,
    Float: y,
    Float: z;
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);
    else GetPlayerVelocity(playerid, x, y, z);
    return floatround(floatsqroot(x * x + y * y + z * z) * 159);
}

stock DesbugPlayer(playerid)
{
	new filer[128];
	format(filer, sizeof(filer), PASTA_CONTAS, GetPlayerNameEx(playerid));
	SetPlayerSkin(playerid, DOF2_GetInt(filer, "Skin"));
	if(DOF2_GetInt(filer, "Lutas") == 1)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
	}
	if(DOF2_GetInt(filer, "Lutas") == 2)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
	}
	if(DOF2_GetInt(filer, "Lutas") == 3)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
	}
	if(DOF2_GetInt(filer, "Lutas") == 4)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
	}
	if(DOF2_GetInt(filer, "Lutas") == 5)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
	}
	if(DOF2_GetInt(filer, "Lutas") == 6)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
		RemovePlayerFromVehicle(playerid);
		jasequestro[playerid] = 0;
		order[playerid] = 0;
		nautlls[playerid] = 0;
		nautllv[playerid] = 0;
		preso[playerid] = 0;
		algemado[playerid] = 0;
		sequestro[playerid] = 0;
		xsequestrado[playerid] = 0;
		gmod[playerid] = 0;
		amod[playerid] = 0;
		autoescola[playerid] = 0;
		PresoTempo[playerid] = 0;
		noevento[playerid] = 0;
		prefsf[playerid] = 0;
		preflv[playerid] = 0;
		xprefls[playerid] = 0;
		nobanco[playerid] = 0;
		patrulhap[playerid]= 0;
		NaFaculdade[playerid] = 0;
		casar[playerid] = 0;
		pedidode[playerid] = INVALID_PLAYER_ID;
	}
	else
	{
		jasequestro[playerid] = 0;
		order[playerid] = 0;
		nautlls[playerid] = 0;
		nautllv[playerid] = 0;
		preso[playerid] = 0;
		algemado[playerid] = 0;
		sequestro[playerid] = 0;
		xsequestrado[playerid] = 0;
		gmod[playerid] = 0;
		amod[playerid] = 0;
		autoescola[playerid] = 0;
		PresoTempo[playerid] = 0;
		noevento[playerid] = 0;
		prefsf[playerid] = 0;
		preflv[playerid] = 0;
		xprefls[playerid] = 0;
		nobanco[playerid] = 0;
		NaFaculdade[playerid] = 0;
		casar[playerid] = 0;
		patrulhap[playerid]= 0;
		pedidode[playerid] = INVALID_PLAYER_ID;
		SpawnPlayer(playerid);
	}
	return 0;
}

stock GetOnLinePlayers()
{
	new OnLine;
	for(new i, g = GetMaxPlayers(); i < g; i++)
		if(IsPlayerConnected(i))
			OnLine++;
	return OnLine;
}

forward antifakekill2(playerid);
public antifakekill2(playerid)
{
    antifakekill[playerid]--;
    if(antifakekill[playerid] > 2)
    {
		Ban(playerid);
	}
    return 1;
}

strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

stock StrToInt(string[])
{
    return strval(string);
}

stock IsACop(playerid)
{
	new arq[90];
	format(arq, 90, PASTA_CONTAS, GetPlayerNameEx(playerid));
	if(DOF2_GetInt(arq, "Profissao") == Policial_M || DOF2_GetInt(arq, "Profissao") == Policial_C || DOF2_GetInt(arq, "Profissao") == Policial_F || DOF2_GetInt(arq, "Profissao") == Delegado || DOF2_GetInt(arq, "Profissao") == Bope || DOF2_GetInt(arq, "Profissao") == Swat || DOF2_GetInt(arq, "Profissao") == Narcoticos || DOF2_GetInt(arq, "Profissao") == FBI
	|| DOF2_GetInt(arq, "Profissao") == Interpol || DOF2_GetInt(arq, "Profissao") == Exercito || DOF2_GetInt(arq, "Profissao") == ExercitoMilitar || DOF2_GetInt(arq, "Profissao") == ExercitoAero || DOF2_GetInt(arq, "Profissao") == FuzileiroMilitar || DOF2_GetInt(arq, "Profissao") == General || DOF2_GetInt(arq, "Profissao") == Major
	|| DOF2_GetInt(arq, "Profissao") == Marechal || DOF2_GetInt(arq, "Profissao") == Policial_R || DOF2_GetInt(arq, "Profissao") == Tenente || DOF2_GetInt(arq, "aAdmin") == 1) return 1;
	return 0;
}

stock SairCorrida(playerid)
{
	if(NaCorrida[playerid] == true)
	{
		JoinCount--;
		NaCorrida[playerid] = false;
		DestroyVehicle(CriarVehCorrida[playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		PlayerTextDrawHide(playerid, CorridaInfo[playerid]);
		CPProgesso[playerid] = 0;
		KillTimer(InfoTimer[playerid]);
		#if defined RACE_IN_OTHER_WORLD
		SetPlayerVirtualWorld(playerid, 0);
		#endif
	}
	SpawnPlayer(playerid);
	DisableRemoteVehicleCollisions(playerid, 0);
	if(ConstruindoCorrida == playerid+1) ConstruindoCorrida = 0;
	return 1;
}

function LoadRace(playerid, rName[])
{
	new arquivo[256], string[256];

	format(arquivo, sizeof(arquivo), DIRETORIO_CORRIDAS, rName);
	if(!DOF2_FileExists(arquivo)) return SendClientMessage(playerid, VERMELHO, "-> Corrida Inexistente.");
	strmid(NomeCorrida, rName, 0, strlen(rName), sizeof(NomeCorrida));
	VeiculoCorrida = DOF2_GetInt(arquivo, "Modelo");
	CorridaTipo = DOF2_GetInt(arquivo, "Tipo");
	TotalCP = DOF2_GetInt(arquivo, "TotalCP");

 	foreach(Player, i) PlayerTextDrawShow(i, CorridaAn[i]);
	SetTimer("Destruir", 30000, false);

	#if DEBUG_CORRIDA == 1
	printf("ModeloVeiculo: %d", VeiculoCorrida);
	printf("CorridaTipo: %d", CorridaTipo);
	printf("TotalCheckpoints: %d", TotalCP);
	#endif

	Loop(x, 2)
	{
		format(string, sizeof(string), "PosX_%d", x), CoordVehCorrida[x][0] = DOF2_GetFloat(arquivo, string);
		format(string, sizeof(string), "PosY_%d", x), CoordVehCorrida[x][1] = DOF2_GetFloat(arquivo, string);
		format(string, sizeof(string), "PosZ_%d", x), CoordVehCorrida[x][2] = DOF2_GetFloat(arquivo, string);
		format(string, sizeof(string), "Angulo_%d", x), CoordVehCorrida[x][3] = DOF2_GetFloat(arquivo, string);
		#if DEBUG_CORRIDA == 1
		printf("VeiculoPos %d: %f, %f, %f, %f", x, CoordVehCorrida[x][0], CoordVehCorrida[x][1], CoordVehCorrida[x][2], CoordVehCorrida[x][3]);
		#endif
	}
	Loop(x, TotalCP)
	{
		format(string, sizeof(string), "CP_%d_PosX", x), CPCoords[x][0] = DOF2_GetFloat(arquivo, string);
		format(string, sizeof(string), "CP_%d_PosY", x), CPCoords[x][1] = DOF2_GetFloat(arquivo, string);
		format(string, sizeof(string), "CP_%d_PosZ", x), CPCoords[x][2] = DOF2_GetFloat(arquivo, string);
		#if DEBUG_CORRIDA == 1
		printf("RaceCheckPoint %d: %f, %f, %f", x, CPCoords[x][0], CPCoords[x][1], CPCoords[x][2]);
		#endif
	}
	Posicao = 0;
	FinishCount = 0;
	JoinCount = 0;
	Loop(x, 2) PlayersCount[x] = 0;
	NaCorrida[playerid] = true;
	CountAmount = CONTAGEM_START;
	CorridaTempo = MAX_CORRIDA_TEMPO;
	RaceBusy = 0x01;
	TempoProgresso = 0;
	SetupRaceForPlayer(playerid);
	CountTimer = SetTimer("CountTillRace", 999, 1);
	return 1;
}

function SetCP(playerid, PrevCP, NextCP, MaxCP, Type)
{
	if(Type == 0)
	{
		if(NextCP == MaxCP) SetPlayerRaceCheckpoint(playerid, 1, CPCoords[PrevCP][0], CPCoords[PrevCP][1], CPCoords[PrevCP][2], CPCoords[NextCP][0], CPCoords[NextCP][1], CPCoords[NextCP][2], TAMANHO_CHECKPOINTS);
		else SetPlayerRaceCheckpoint(playerid, 0, CPCoords[PrevCP][0], CPCoords[PrevCP][1], CPCoords[PrevCP][2], CPCoords[NextCP][0], CPCoords[NextCP][1], CPCoords[NextCP][2], TAMANHO_CHECKPOINTS);
	}
	else if(Type == 3)
	{
		if(NextCP == MaxCP) SetPlayerRaceCheckpoint(playerid, 4, CPCoords[PrevCP][0], CPCoords[PrevCP][1], CPCoords[PrevCP][2], CPCoords[NextCP][0], CPCoords[NextCP][1], CPCoords[NextCP][2], TAMANHO_CHECKPOINTS);
		else SetPlayerRaceCheckpoint(playerid, 3, CPCoords[PrevCP][0], CPCoords[PrevCP][1], CPCoords[PrevCP][2], CPCoords[NextCP][0], CPCoords[NextCP][1], CPCoords[NextCP][2], TAMANHO_CHECKPOINTS);
	}
	return 1;
}

function SetupRaceForPlayer(playerid)
{
	CPProgesso[playerid] = 0;
	TogglePlayerControllable(playerid, false);
	CPCoords[playerid][3] = 0;
	SetCP(playerid, CPProgesso[playerid], CPProgesso[playerid]+1, TotalCP, CorridaTipo);
	if(IsOdd(playerid)) Index = 1;
	else Index = 0;

	SetPlayerColor(playerid, 0xDDA0DDAA);

	switch(Index)
	{
		case 0:
		{
			if(PlayersCount[0] == 1)
			{
				CoordVehCorrida[0][0] -= (6 * floatsin(-CoordVehCorrida[0][3], degrees));
				CoordVehCorrida[0][1] -= (6 * floatcos(-CoordVehCorrida[0][3], degrees));

				CriarVehCorrida[playerid] = CreateVehicle(VeiculoCorrida, CoordVehCorrida[0][0], CoordVehCorrida[0][1], CoordVehCorrida[0][2]+2, CoordVehCorrida[0][3], random(126), random(126), (60 * 60));
				SetPlayerPos(playerid, CoordVehCorrida[0][0], CoordVehCorrida[0][1], CoordVehCorrida[0][2]+2);
				SetPlayerFacingAngle(playerid, CoordVehCorrida[0][3]);
				PutPlayerInVehicle(playerid, CriarVehCorrida[playerid], 0);
				SetVehicleHealth(GetPlayerVehicleID(playerid),99999);
				Camera(playerid, CoordVehCorrida[0][0], CoordVehCorrida[0][1], CoordVehCorrida[0][2], CoordVehCorrida[0][3], 20);
			}
		}
		case 1:
		{
			if(PlayersCount[1] == 1)
			{
				CoordVehCorrida[1][0] -= (6 * floatsin(-CoordVehCorrida[1][3], degrees));
				CoordVehCorrida[1][1] -= (6 * floatcos(-CoordVehCorrida[1][3], degrees));
				CriarVehCorrida[playerid] = CreateVehicle(VeiculoCorrida, CoordVehCorrida[1][0], CoordVehCorrida[1][1], CoordVehCorrida[1][2]+2, CoordVehCorrida[1][3], random(126), random(126), (60 * 60));
				SetPlayerPos(playerid, CoordVehCorrida[1][0], CoordVehCorrida[1][1], CoordVehCorrida[1][2]+2);
				SetPlayerFacingAngle(playerid, CoordVehCorrida[1][3]);

				PutPlayerInVehicle(playerid, CriarVehCorrida[playerid], 0);
				SetVehicleHealth(GetPlayerVehicleID(playerid),99999);

				Camera(playerid, CoordVehCorrida[1][0], CoordVehCorrida[1][1], CoordVehCorrida[1][2], CoordVehCorrida[1][3], 20);
			}
		}
	}
	switch(Index)
	{
		case 0:
		{
			if(PlayersCount[0] != 1)
			{
				CriarVehCorrida[playerid] = CreateVehicle(VeiculoCorrida, CoordVehCorrida[0][0], CoordVehCorrida[0][1], CoordVehCorrida[0][2]+2, CoordVehCorrida[0][3], random(126), random(126), (60 * 60));
				SetPlayerPos(playerid, CoordVehCorrida[0][0], CoordVehCorrida[0][1], CoordVehCorrida[0][2]+2);
				SetPlayerFacingAngle(playerid, CoordVehCorrida[0][3]);
				PutPlayerInVehicle(playerid, CriarVehCorrida[playerid], 0);

				SetVehicleHealth(GetPlayerVehicleID(playerid),99999);
				Camera(playerid, CoordVehCorrida[0][0], CoordVehCorrida[0][1], CoordVehCorrida[0][2], CoordVehCorrida[0][3], 20);
				PlayersCount[0] = 1;
			}
		}
		case 1:
		{
			if(PlayersCount[1] != 1)
			{
				CriarVehCorrida[playerid] = CreateVehicle(VeiculoCorrida, CoordVehCorrida[1][0], CoordVehCorrida[1][1], CoordVehCorrida[1][2]+2, CoordVehCorrida[1][3], random(126), random(126), (60 * 60));
				SetPlayerPos(playerid, CoordVehCorrida[1][0], CoordVehCorrida[1][1], CoordVehCorrida[1][2]+2);
				SetVehicleHealth(GetPlayerVehicleID(playerid),99999);
				SetPlayerFacingAngle(playerid, CoordVehCorrida[1][3]);
				PutPlayerInVehicle(playerid, CriarVehCorrida[playerid], 0);
				Camera(playerid, CoordVehCorrida[1][0], CoordVehCorrida[1][1], CoordVehCorrida[1][2], CoordVehCorrida[1][3], 20);
				PlayersCount[1] = 1;
			}
		}
	}

	#if defined RACE_IN_OTHER_WORLD
	SetPlayerVirtualWorld(playerid, 10);
	#endif

	DisableRemoteVehicleCollisions(playerid, 1);

    new string[128];
	InfoTimer[playerid] = SetTimerEx("TextInfo", 500, 1, "e", playerid);
	if(JoinCount == 1) format(string, sizeof(string), "Corrida: ~w~%s~n~~p~~h~Checkpoint: ~w~%d/%d~n~~b~~h~Tempo Corrida: ~w~%s~n~~y~Posicao: ~w~1/1~n~ ", NomeCorrida, CPProgesso[playerid], TotalCP, TempoConvertido(CorridaTempo));
	else format(string, sizeof(string), "Corrida: ~w~%s~n~~p~~h~Checkpoint: ~w~%d/%d~n~~b~~h~Tempo Corrida: ~w~%s~n~~y~Posicao: ~w~%d/%d~n~ ", NomeCorrida, CPProgesso[playerid], TotalCP, TempoConvertido(CorridaTempo), Colocacao[playerid], JoinCount);
	PlayerTextDrawSetString(playerid, CorridaInfo[playerid], string);
	PlayerTextDrawShow(playerid, CorridaInfo[playerid]);

	JoinCount++;
	return 1;
}

function CountTillRace()
{
	switch(CountAmount)
	{
		case 0:
		{
			foreach(Player, i)
			{
				if(NaCorrida[i] == false)
				{
					new string[128];
					format(string, sizeof(string), ">> Você pode participar da corrida: %s, junte-se o mais rápido possivel!!! /ircorrida.", NomeCorrida);
					SendClientMessage(i, VERMELHO, string);
				}
			}
			StartRace();
		}
		case 1..5:
		{
			new string[10];
			format(string, sizeof(string), "~b~%d", CountAmount);
			foreach(Player, i)
			{
				if(NaCorrida[i] == true)
				{
					GameTextForPlayer(i, string, 999, 5);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				}
			}
		}
		case 60, 50, 40, 30, 20, 10:
		{
			SendClientMessageToAll(LARANJA, "--> Uma Corrida foi iniciada!!! use: /ircorrida.");
			SendClientMessageToAll(LARANJA, "--> A corrida irá começar automaticamente em 30 segundos.");
			SendClientMessageToAll(Azul, "--> Não perca! venha o mais rápido possivel!");
		}
	}
	return CountAmount--;
}

function StartRace()
{
	foreach(Player, i)
	{
		if(NaCorrida[i] == true)
		{
			TogglePlayerControllable(i, true);
			PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
			GameTextForPlayer(i, "~g~GO GO GO", 2000, 5);
			SetCameraBehindPlayer(i);
			SetVehicleHealth(GetPlayerVehicleID(i),99999);
			RepairVehicle(GetPlayerVehicleID(i));
			DisableRemoteVehicleCollisions(i, 1);
		}
	}
	rCounter = SetTimer("RaceCounter", 900, 1);
	CorridaTick = GetTickCount();
	CorridaIniciada = 1;
	KillTimer(CountTimer);
	SendClientMessageToAll(VERMELHO, ">> O Administrador {FFFFFF}[BSL]Filho_Da_Puta {FF0000}começou a corrida!");
	return 1;
}

function StopRace()
{
	KillTimer(rCounter);
	CorridaIniciada = 0;
	CorridaTick = 0;
	RaceBusy = 0x00;
	JoinCount = 0;
	FinishCount = 0;
	TempoProgresso = 0;

	foreach(Player, i)
	{
		if(NaCorrida[i] == true)
		{
			DisablePlayerRaceCheckpoint(i);
			DestroyVehicle(CriarVehCorrida[i]);
			NaCorrida[i] = false;
			PlayerTextDrawHide(i, CorridaInfo[i]);
			CPProgesso[i] = 0;
			KillTimer(InfoTimer[i]);
			DisableRemoteVehicleCollisions(i, 0);
			SpawnPlayer(i);
		}
	}
	return 1;
}

function RaceCounter()
{
	if(CorridaIniciada == 1)
	{
		CorridaTempo--;
		if(JoinCount <= 0) {
			StopRace();
			SendClientMessageToAll(Vermelho, "O Administrador {FFFFFF}[BSL]Filho_Da_Puta {FF0000}fechou a corrida por não haver competidores.");
		}
	}
	if(CorridaTempo <= 0) StopRace(), SendClientMessageToAll(VERMELHO, ">> O Administrador {FFFFFF}[BSL]Filho_Da_Puta {FF0000}fechou a corrida pois o tempo se esgotou.");
	return 1;
}

function TextInfo(playerid)
{
	new string[128];
	if(JoinCount == 1) format(string, sizeof(string), "~r~Corrida: ~w~%s~n~~p~~h~Checkpoint: ~w~%d/%d~n~~b~~h~Tempo Corrida: ~w~%s~n~~y~Posicao: ~w~1/1~n~", NomeCorrida, CPProgesso[playerid], TotalCP, TempoConvertido(CorridaTempo));
	else format(string, sizeof(string), "~r~Corrida: ~w~%s~n~~p~~h~Checkpoint: ~w~%d/%d~n~~b~~h~Tempo Corrida: ~w~%s~n~~y~Posicao: ~w~%d/%d~n~", NomeCorrida, CPProgesso[playerid], TotalCP, TempoConvertido(CorridaTempo), Colocacao[playerid], JoinCount);
	PlayerTextDrawSetString(playerid, CorridaInfo[playerid], string);
	PlayerTextDrawShow(playerid, CorridaInfo[playerid]);
}

function Camera(playerid, Float:X, Float:Y, Float:Z, Float:A, Mul)
{
	SetPlayerCameraLookAt(playerid, X, Y, Z);
	SetPlayerCameraPos(playerid, X + (Mul * floatsin(-A, degrees)), Y + (Mul * floatcos(-A, degrees)), Z+6);
}

function IsPlayerInRace(playerid)
{
	if(NaCorrida[playerid] == true) return true;
	else return false;
}

CreateCaption(arguments[])
{
	new string[128 char];
	format(string, sizeof(string), "{03FF5F}» {F50000}Corrida", arguments);
	return string;
}

ReturnVehicleID(vName[])
{
	Loop(x, 213)
	{
		if(strfind(vNames[x], vName, true) != -1)
		return x + 400;
	}
	return -1;
}

TempoConvertido(seconds)
{
	new tmp[16];
	new minutes = floatround(seconds/60);
	seconds -= minutes*60;
	format(tmp, sizeof(tmp), "%d:%02d", minutes, seconds);
	return tmp;
}

forward GodModEvento();
public GodModEvento()
{
    for(new i; i < MAX_VEHICLES; ++i) RepairVehicle(i), SetVehicleHealth(i, 1000.0);
    return 1;
}

forward imortal(playerid);

public imortal(playerid)
{

    SetPlayerHealth(playerid, 100);

    SendClientMessage(playerid, -1, "{FFFF00}[{FFFFFF} ATENÇÃO {FFFF00}] {FFFFFF}Tempo Imortal foi esgotado !.");
    return 1;
}

forward Destruir();
public Destruir()
{
	foreach(Player, i) PlayerTextDrawHide(i, CorridaAn[i]);
	return 1;
}
stock ShowDialogCorrida(playerid)
{
	ShowPlayerDialog(playerid, CorridaNome, DIALOG_STYLE_INPUT, CreateCaption("Nova Corrida (Etapa 1/4)"), "\
	{FF0000}Etapa 1:\n\
	\n\
	{FFFFFF}Seja Bem vindo ao modo construção de corrida\n\
	Aqui você irá iniciar uma construção de uma corrida com um tutorial\n\n\
	>> Primeiramente insira um nome para sua corrida, logo em seguida de 'Continuar'", "Continuar", "Sair");
	return 1;
}
stock IsValidVehicle(vehicleid)
{
	if(vehicleid < 400 || vehicleid > 611) return false;
	else return true;
}
stock GivePlayerLevel(playerid, cont) {
	new Arq[90];
	format(Arq, sizeof(Arq), PASTA_CONTAS, GetPlayerNameEx(playerid));
	DOF2_SetInt(Arq, "Level", DOF2_GetInt(Arq, "Level") + cont);
	return 0;
}
forward CxTopper(playerid);

public CxTopper(playerid)
{
	new file[128];
	format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(playerid));
	DOF2_SetInt(file, "CxTopper", 0);

    SendClientMessage(playerid, -1, "{FFFF00}[{FFFFFF} ATENÇÃO {FFFF00}] {FFFFFF}Você Ja pode abrir sua caixa diaria novamente !.");
    return 1;
}
stock AtualizarItensJogador(playerid)
{
	new Arq[90], ano, mes, dia, line[120];
	getdate(ano, mes, dia);
	format(line, sizeof(line), "%d/%d/%d", dia, mes, ano);

	for(new c; c < MAX_CASAS; c++)
	{
		format(Arq, sizeof(Arq), PASTA_CASAS, c);
		if(!DOF2_FileExists(Arq)) continue;
		if(strcmp(DOF2_GetString(Arq, "Dono"), GetPlayerNameEx(playerid))) continue;
		DOF2_SetString(Arq, "DataSet", line);
		DOF2_SetString(Arq, "LiberacaoSet", line);
		DOF2_SetInt(Arq, "DiasInativo", 0);
		break;
	}

	for(new v; v < MAX_CONCES; v++)
	{
		format(Arq, sizeof(Arq), PASTA_CONCE, v);
		if(!DOF2_FileExists(Arq)) continue;
		if(strcmp(DOF2_GetString(Arq, "Dono"), GetPlayerNameEx(playerid))) continue;

		DOF2_SetString(Arq, "DataSet", line);
		DOF2_SetString(Arq, "LiberacaoSet", line);
		DOF2_SetInt(Arq, "DiasInativo", 0);
	}

	for(new p; p < MAX_PROPS; p++) {
		format(Arq, sizeof(Arq), PASTA_PROPS, p);
		if(!DOF2_FileExists(Arq)) continue;
		if(strcmp(DOF2_GetString(Arq, "Dono"), GetPlayerNameEx(playerid))) continue;

		DOF2_SetString(Arq, "DataSet", line);
		DOF2_SetString(Arq, "LiberacaoSet", line);
		DOF2_SetInt(Arq, "DiasInativo", 0);
	}
	return 1;
}

stock LiberarVeiculo(c)
{
 	new string[70];
	format(string, 64, PASTA_CONCE, c);
	new vehicleid = DOF2_GetInt(string, "Id");

	DOF2_SetInt(string, "TDono", 3);
	DOF2_SetString(string, "Dono", "Ninguem");
	DOF2_SetInt(string, "CarVIP", 0);
	DOF2_SetInt(string, "CarVIPT", 0);
	DOF2_SetInt(string, "CarVIPMT", 0);

	DOF2_SetString(string, "Convidado1", "Ninguem");
	DOF2_SetString(string, "Convidado2", "Ninguem");
	DOF2_SetString(string, "Convidado3", "Ninguem");

	DestroyDynamic3DTextLabel(ConceLabel[c]);
	ConceLabel[c] = Text3D: INVALID_3DTEXT_ID;
	DestroyVehicle(vehicleid);
	DOF2_SetInt(string, "Id", INVALID_VEHICLE_ID);
	return 1;
}

stock LiberarCasa(casaid)
{
    new pickupid, iconid, string[65];
	format(string, sizeof(string), PASTA_CASAS, casaid);

	DestroyDynamicPickup(DOF2_GetInt(string, "Id"));
	DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));
	DestroyDynamic3DTextLabel(ctextoid[casaid]);
	ctextoid[casaid] = Text3D:INVALID_3DTEXT_ID;

	DOF2_SetInt(string, "TDono", 0);
	DOF2_SetString(string, "Dono", "Ninguem");

	pickupid = CreateDynamicPickup(1273, 1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), -1, -1, -1, 200.0);
	DOF2_SetInt(string, "Id", pickupid);

	iconid = CreateDynamicMapIcon(DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 31, 0, -1, -1, -1, 100.0);
	DOF2_SetInt(string, "IconId", iconid);

	format(STRX, sizeof(STRX), "{00FF00}Casa ID: {696969}%d\n{00FF00}Dono: {696969}%s\n{00FF00}Morador: {696969}%s\n{00FF00}Valor: {696969}$%d\n\n{00FF00}Último uso: {696969}%s", casaid, DOF2_GetString(string, "Dono"), DOF2_GetString(string, "Morador"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
	ctextoid[casaid] = CreateDynamic3DTextLabel(STRX, -1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);

	format(string, sizeof(string), "A casa ID: %d foi liberada por ficar 7 dias sem uso.", casaid);
	SendClientMessageToAll(Verde, string);
	return 1;
}

stock LiberarProp(c)
{
	new string[90], file[128], pickupid, iconid;
	format(string, sizeof(string), PASTA_PROPS, c);

	format(file, sizeof(file), PASTA_CONTAS, DOF2_GetString(string, "Dono"));
	DOF2_SetInt(file, "Prop", 0);

	DOF2_SetInt(string, "TDono", 0);
	DOF2_SetInt(string, "Grana", 0);
	DOF2_SetString(string, "Dono", "Ninguem");
	DOF2_SetInt(file, "SaldoBancario", DOF2_GetInt(file, "SaldoBancario") + DOF2_GetInt(string, "Preco"));
	DestroyDynamicPickup(DOF2_GetInt(string, "Id"));
	pickupid = CreateDynamicPickup(1279, 1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), -1, -1, -1, 200.0);
	DOF2_SetInt(string, "Id", pickupid);
	DestroyDynamicMapIcon(DOF2_GetInt(string, "IconId"));
	iconid = CreateDynamicMapIcon(DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 11, 0, -1, -1, -1, 35.0);
	DOF2_SetInt(string, "IconId", iconid);
	format(STRX, sizeof(STRX), "{FFFFFF}%s\n\n{9E3EFF} ID: {FFFFFF}%d\n{9E3EFF}Dono: {FFFFFF}%s\n{9E3EFF}Valor: {FFFFFF}$%d\n{9E3EFF}Último uso: {FFFFFF}%s", DOF2_GetString(string, "Nome"), c, DOF2_GetString(string, "Dono"), DOF2_GetInt(string, "Preco"), DOF2_GetString(string, "DataSet"));
	ptextoid[c] = CreateDynamic3DTextLabel(STRX, -1, DOF2_GetFloat(string, "PosX"), DOF2_GetFloat(string, "PosY"), DOF2_GetFloat(string, "PosZ"), 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 200.0);

    format(string, sizeof(string), "A Empresa ID: %d foi liberada por ficar 7 dias sem uso.", c);
	SendClientMessageToAll(Azul, string);
	return 1;
}

stock ReiniciarServidor()
{
	CreateCountdown(10, 1);
	PrepTimer = SetTimer("AutoRestart", 12000, 1);
	foreach(Player, i) ClearChatbox(i, 160);
	return 1;
}

stock CaixaPorHora()
{
    new string[256];
	new file[128];
	foreach(Player, i)
	{
		if(IsPlayerConnected(i))
		{
			format(file, sizeof(file), PASTA_CONTAS, GetPlayerNameEx(i));
			DOF2_SetInt(file, "Caixaa", 1);

			format(string, sizeof(string), "{6959CD}O ADM {FFFFFF}[BSL]Filho_Da_Puta{6959CD} deu uma caixa avançada para todos!");
			SendClientMessage(i, Verde, string);
		}
	}
}

stock HpPorTempo()
{
    new string[256];
	format(string, sizeof(string), "{6959CD}[BSL] Vida e Coletes Recuperados!");
	SendClientMessageToAll(tcadm, string);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerArmour(i, 100.0);
			SetPlayerHealth(i, 100.0);
		}
	}
}

stock isRcon(playerid)
{ // RCONS
	if(strcmp("Archer", GetPlayerNameEx(playerid)) == 0 || strcmp("Big_Chief", GetPlayerNameEx(playerid)) == 0 || strcmp("Samu", GetPlayerNameEx(playerid)) == 0) return 1;
	return 0;
}

stock islucio(playerid)
{ // RCONS
	if(strcmp("LucioDuarte", GetPlayerNameEx(playerid)) == 0) return 1;
	return 0;
}

stock GetVehicleDistanceFromVehicle(vehicleid, vid)
{
 	new Float:Distance[3];
 	GetVehiclePos(vid, Distance[0], Distance[1], Distance[2]);
 	return floatround(GetVehicleDistanceFromPoint(vehicleid, Distance[0], Distance[1], Distance[2]));
}
// P.
public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	if(GetPVarInt(playerid, "CriandoPortao") == 1 || GetPVarInt(playerid, "EditandoPortao") == 1)
	{
		new id = GetPVarInt(playerid, "PortaoID");
	    new FromF[90];
	    format(FromF, sizeof(FromF), PASTA_PORTOES, id);
		if(!DOF2_FileExists(FromF)) DOF2_CreateFile(FromF);
		if(response == EDIT_RESPONSE_FINAL)
		{
			if(GetPVarInt(playerid, "SalvandoF") == 1)
			{
				DOF2_SetFloat(FromF, "PosX", x);
				DOF2_SetFloat(FromF, "PosY", y);
				DOF2_SetFloat(FromF, "PosZ", z);
				DOF2_SetFloat(FromF, "PosXr", rx);
				DOF2_SetFloat(FromF, "PosYr", ry);
				DOF2_SetFloat(FromF, "PosZr", rz);
				DeletePVar(playerid, "SalvandoF");
				SendClientMessage(playerid, -1, "x Posições de portão fechado salvas com sucesso.");
				ShowPlayerDialog(playerid, MenuPortao, DIALOG_STYLE_LIST, "Edições Portão", "{FFFFFF}Salvar portão fechado\nSalvar portão aberto\nAlterar Velocidade\nAssociar Portão\nTerminar edição\nDeletar edição\n", "Selecionar", "Fechar");
				return 1;
			}
			DOF2_SetFloat(FromF, "PosAX", x);
			DOF2_SetFloat(FromF, "PosAY", y);
			DOF2_SetFloat(FromF, "PosAZ", z);
			DOF2_SetFloat(FromF, "PosAXr", rx);
			DOF2_SetFloat(FromF, "PosAYr", ry);
			DOF2_SetFloat(FromF, "PosAZr", rz);
			SendClientMessage(playerid, -1, "x Posições de portão aberto salvas com sucesso.");
			ShowPlayerDialog(playerid, MenuPortao, DIALOG_STYLE_LIST, "Edições Portão", "{FFFFFF}Salvar portão fechado\nSalvar portão aberto\nAlterar Velocidade\nAssociar Portão\nTerminar edição\nDeletar edição\n", "Selecionar", "Fechar");
		}
		if(response == EDIT_RESPONSE_CANCEL)
		{
			if(DOF2_FileExists(FromF)) DOF2_RemoveFile(FromF);
			DestroyDynamicObject(_Portao[GetPVarInt(playerid, "PortaoID")]);
			SendClientMessage(playerid, Vermelho, "x Portão deletado.");
			DestroyDynamic3DTextLabel(_TextPortao[GetPVarInt(playerid, "PortaoID")]);
			DeletePVar(playerid, "PortaoID");
	        DeletePVar(playerid, "ObjetoID");
         	DeletePVar(playerid, "CriandoPortao");
          	DeletePVar(playerid, "EditandoPortao");
		}
	}
	return 1;
}

forward FecharPortao(id);
public FecharPortao(id)
{
	new FromF[90];
	format(FromF, sizeof(FromF), PASTA_PORTOES, id);
	if(!DOF2_FileExists(FromF)) return 1;
	MoveDynamicObject(_Portao[id], DOF2_GetFloat(FromF, "PosX"), DOF2_GetFloat(FromF, "PosY"), DOF2_GetFloat(FromF, "PosZ"), DOF2_GetFloat(FromF, "Velocidade"), DOF2_GetFloat(FromF, "PosXr"), DOF2_GetFloat(FromF, "PosYr"), DOF2_GetFloat(FromF, "PosZr"));
	DOF2_SetBool(FromF, "PortaoEstado", false);
	return 0;
}

stock GetNextPortao()
{
	new F[90];
	for(new P; P < MAX_PORTOES; P++)
	{
		format(F, sizeof(F), PASTA_PORTOES, P);
		if(!DOF2_FileExists(F) && P != 0) return P;
	}
	return -1;
}

stock CarregarPortoes()
{
	new F[90];
	for(new P; P < MAX_PORTOES; P++)
	{
	    format(F, sizeof(F), PASTA_PORTOES, P);
	    if(!DOF2_FileExists(F)) continue;
	    _Portao[DOF2_GetInt(F, "ID")] = CreateDynamicObject(DOF2_GetInt(F, "Modelo"), DOF2_GetFloat(F, "PosX"), DOF2_GetFloat(F, "PosY"), DOF2_GetFloat(F, "PosZ"), DOF2_GetFloat(F, "PosXr"), DOF2_GetFloat(F, "PosYr"), DOF2_GetFloat(F, "PosZr"), -1, -1, -1, 200.0);
	    new label[90];
		format(label, sizeof(label), "{FFFFFF}ID: {FF0000}%d\n{FFFFFF}Aperte {FF0000}H {FFFFFF}Para Abrir", DOF2_GetInt(F, "ID"));
	    _TextPortao[DOF2_GetInt(F, "ID")] = CreateDynamic3DTextLabel(label, -1, DOF2_GetFloat(F, "PosX"), DOF2_GetFloat(F, "PosY"), DOF2_GetFloat(F, "PosZ"), 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);

	}
	print("Portões carregados com sucesso!");
	return 1;
}

stock DestruirPortoes()
{
	for(new P; P < MAX_PORTOES; P++)
	{
	    DestroyDynamicObject(_Portao[P]);
	    DestroyDynamic3DTextLabel(_TextPortao[P]);
	}
	print("Portões destruidos com sucesso!");
	return 1;
}

stock LiberarPortao(playerid, id)
{
	if(playerid != -1)
	{
		new msg[100];
		format(msg, sizeof(msg), "-> O(A) Administrador %s liberou o portão ID: %d", GetPlayerNameEx(playerid), id);
		SendClientMessageToAll(Azul, msg);
	}
	new F[90];
	format(F, sizeof(F), PASTA_PORTOES, id);
	DOF2_SetString(F, "Dono", "Ninguem");
	DOF2_SetString(F, "Chave1", "Ninguem");
	DOF2_SetString(F, "Chave2", "Ninguem");
	DOF2_SetString(F, "Chave3", "Ninguem");
	DOF2_SetString(F, "Chave4", "Ninguem");
	DOF2_SetString(F, "Chave5", "Ninguem");
	DestroyDynamicObject(_Portao[id]);
	DestroyDynamic3DTextLabel(_TextPortao[id]);
	_Portao[DOF2_GetInt(F, "ID")] = CreateDynamicObject(DOF2_GetInt(F, "Modelo"), DOF2_GetFloat(F, "PosX"), DOF2_GetFloat(F, "PosY"), DOF2_GetFloat(F, "PosZ"), DOF2_GetFloat(F, "PosXr"), DOF2_GetFloat(F, "PosYr"), DOF2_GetFloat(F, "PosZr"), -1, -1, -1, 200.0);
	new label[90];
	format(label, sizeof(label), "{FFFFFF}ID: {FF0000}%d\n{FFFFFF}Aperte {FF0000}H {FFFFFF}Para Abrir", DOF2_GetInt(F, "ID"));
	_TextPortao[DOF2_GetInt(F, "ID")] = CreateDynamic3DTextLabel(label, -1, DOF2_GetFloat(F, "PosX"), DOF2_GetFloat(F, "PosY"), DOF2_GetFloat(F, "PosZ"), 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 200.0);
	return 1;
}

stock UpdateHP(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;

	new Float:HP, veh = GetPlayerVehicleID(playerid);
	GetVehicleHealth(veh, HP);

	if(HP != OldHealth[playerid])
	{
		OldDamage[playerid] = OldHealth[playerid]-HP;
		OldHealth[playerid] = HP;
		if(OldDamage[playerid] > 0)
		{
			if(vmod[playerid] == 1)
			{
				RepairVehicle(veh);
			}
		}
	}
	return 1;
}

forward DinheiroTerris();
public DinheiroTerris()
{
	new Din[MAX_GANGS];
	for(new terrid=1;terrid<MAX_TERRIS;terrid++)
	    if(fexist(FormatTerri(terrid)))
	    {
		    new gangid = DOF2_GetInt(FormatTerri(terrid),"Gang");
		    if(gangid!=0)
		        Din[gangid]+=DOF2_GetInt(FormatTerri(terrid),"Grana");
		}
	new str[128];
	for(new e=1;e<MAX_GANGS;e++)
	    if(Din[e]!=0)
	    {
	        CallRemoteFunction("AtualizarBanco","dd",e,Din[e]);
	        format(str,128,"[CLAN] Seu clan recebeu R$%d dos lucros dos territórios!",Din[e]);
	        for(new id=0;id<MAX_PLAYERS;id++)
	            if(IsPlayerConnected(id))
	            	if(GetGang(id)==e)
	                    SendClientMessage(id,verde,str);
		}
}

forward AtualizarGG(gangid,n,cor[]);
public AtualizarGG(gangid,n,cor[])
{
	if(n==0)
	{
	    for(new e=1;e<MAX_TERRIS;e++)
			if(DOF2_GetInt(FormatTerri(e),"Gang")==gangid)
   			{
    			GangZoneHideForAll(TerrisID[e]);
     			GangZoneShowForAll(TerrisID[e],HexToInt(cor));
			}
	}
	if(n==1)
	{
	    for(new e=1;e<MAX_TERRIS;e++)
   			if(DOF2_GetInt(FormatTerri(e),"Gang")==gangid)
   			{
     			DOF2_SetInt(FormatTerri(e),"Gang",0);
     			GangZoneHideForAll(TerrisID[e]);
     			GangZoneShowForAll(TerrisID[e],HexToInt(TERRI_NO_GANG));
          	}
		DOF2_SaveFile();
	}
}

forward CheckGuerra();
public CheckGuerra()
{
	new Gangs[MAX_GANGS]=0;
	for(new terrid=1;terrid<MAX_TERRIS;terrid++)
	{
	    if(TerriOk[terrid]==1)
		    if(TerriGuerra[terrid]==0)
		    {
			    for(new g=1;g<MAX_GANGS;g++)
			        Gangs[g]=0;
				for(new i=0;i<MAX_PLAYERS;i++)
				{
				    if(IsPlayerConnected(i))
						if(GetGang(i)!=0)
						{
							new ter=GetPlayerTerri(i);
							if(ter==terrid)
							    Gangs[GetGang(i)]+=1;
						}
				}
				for(new g2=1;g2<MAX_GANGS;g2++)
			        if(Gangs[g2]>=MIN_MEMBROS_D)
			        {
				        if(DOF2_GetInt(FormatTerri(terrid),"Gang")!=g2)
				        {
				            TempoCheck[terrid][g2]-=1;
				            if(TempoCheck[terrid][g2]==0)
				            {
				                if(TerriGuerra[terrid]==0)
				                {
					                TerriGuerra[terrid]=g2;
					                Pontos[terrid][0]=0;
					                Pontos[terrid][1]=PONTOS_DEFESA;
					                TempoR[terrid]=TEMPO_GUERRA;
					                if(DOF2_GetInt(FormatTerri(terrid),"Gang")!=0)
			    					{
						                TxtGuerra[terrid]=TextDrawCreate(88.0,290.0,"~w~== GUERRA DE CLANS ==~n~~w~Iniciando...");
										TextDrawLetterSize(TxtGuerra[terrid],0.2,1.1);
										TextDrawSetShadow(TxtGuerra[terrid],1);
										TextDrawSetOutline(TxtGuerra[terrid],1);
										TextDrawFont(TxtGuerra[terrid],1);
										TextDrawUseBox(TxtGuerra[terrid],1);
										TextDrawBoxColor(TxtGuerra[terrid],0x00000088);
										TextDrawAlignment(TxtGuerra[terrid],2);
										TextDrawTextSize(TxtGuerra[terrid], 50.0, 90.0);
									}
									new cor[11];
									format(cor,11,"%s",DOF2_GetString(FormatGang(g2),"Cor"));
									strdel(cor,strlen(cor)-2,strlen(cor));
									strcat(cor,"66");
									GangZoneFlashForAll(TerrisID[terrid],HexToInt(cor));
				                }
				            }
						}
					}
					else
					    if(TempoCheck[terrid][g2]!=TEMPO_CHECK)
					        TempoCheck[terrid][g2]=TEMPO_CHECK;
			}
			else
			{
			    for(new i=1;i<MAX_GANGS;i++)
			        TempoCheck[terrid][i]=TEMPO_CHECK;
			    if(DOF2_GetInt(FormatTerri(terrid),"Gang")==0)
			    {
			        new gangid=TerriGuerra[terrid];
			        DOF2_SetInt(FormatTerri(terrid),"Gang",gangid);
			        new ter=DOF2_GetInt(FormatGang(gangid),"Territorios")+1;
					DOF2_SetInt(FormatGang(gangid),"Territorios",ter);
					CallRemoteFunction("AtualizarTerris","dd",gangid,ter);
					DOF2_SaveFile();
					GangZoneStopFlashForAll(TerrisID[terrid]);
					GangZoneHideForAll(TerrisID[terrid]);
					new cor[11];
					format(cor,11,"%s",DOF2_GetString(FormatGang(gangid),"Cor"));
					strdel(cor,strlen(cor)-2,strlen(cor));
					strcat(cor,"66");
					GangZoneShowForAll(TerrisID[terrid],HexToInt(cor));
					TerriGuerra[terrid]=0;
					new fg[128];
					format(fg,128,"[CLAN] Seu clan dominou o território: %s!",DOF2_GetString(FormatTerri(terrid),"Nome"));
					for(new i=0;i<MAX_PLAYERS;i++)
					    if(IsPlayerConnected(i))
					        if(GetGang(i)==gangid)
					            SendClientMessage(i,verde,fg);
			    }
				else
				{
				    new ataque=TerriGuerra[terrid];
				    new defesa=DOF2_GetInt(FormatTerri(terrid),"Gang");
				    for(new i=0;i<MAX_PLAYERS;i++)
				    	if(IsPlayerConnected(i))
        					if(GetGang(i)==ataque)
        					    if(GetPlayerTerri(i)==terrid)
        					    	Pontos[terrid][0]++;
                    for(new i=0;i<MAX_PLAYERS;i++)
				    	if(IsPlayerConnected(i))
        					if(GetGang(i)==defesa)
        					    if(GetPlayerTerri(i)==terrid)
        					    	Pontos[terrid][1]++;
					TempoR[terrid]--;
					if(TempoR[terrid]==0)
					{
					    TextDrawDestroy(TxtGuerra[terrid]);
					    GangZoneStopFlashForAll(TerrisID[terrid]);
					    TerriGuerra[terrid]=0;
					    new fd[128];
					    if(Pontos[terrid][0]>Pontos[terrid][1])
					    {
					        format(fd,128,"[CLAN] Seu clan falhou ao defender o território %s do clan %s!",DOF2_GetString(FormatTerri(terrid),"Nome"),DOF2_GetString(FormatGang(ataque),"Nome"));
					        for(new i=0;i<MAX_PLAYERS;i++)
						    	if(IsPlayerConnected(i))
		        					if(GetGang(i)==defesa)
		        					    SendClientMessage(i,vermelho,fd);
					        format(fd,128,"[CLAN] Seu clan dominou o território %s do clan %s!",DOF2_GetString(FormatTerri(terrid),"Nome"),DOF2_GetString(FormatGang(defesa),"Nome"));
					        for(new i=0;i<MAX_PLAYERS;i++)
						    	if(IsPlayerConnected(i))
		        					if(GetGang(i)==ataque)
		        					    SendClientMessage(i,verde,fd);
      					    new ter=DOF2_GetInt(FormatGang(ataque),"Territorios")+1;
							DOF2_SetInt(FormatGang(ataque),"Territorios",ter);
							CallRemoteFunction("AtualizarTerris","dd",ataque,ter);
							ter=DOF2_GetInt(FormatGang(defesa),"Territorios")-1;
							DOF2_SetInt(FormatGang(defesa),"Territorios",ter);
							CallRemoteFunction("AtualizarTerris","dd",defesa,ter);
							DOF2_SetInt(FormatTerri(terrid),"Gang",ataque);
							DOF2_SaveFile();
							GangZoneHideForAll(TerrisID[terrid]);
							new cor[11];
							format(cor,11,"%s",DOF2_GetString(FormatGang(ataque),"Cor"));
							strdel(cor,strlen(cor)-2,strlen(cor));
							strcat(cor,"66");
							GangZoneShowForAll(TerrisID[terrid],HexToInt(cor));
					    }
					    else
					    {
					        format(fd,128,"[CLAN] Seu clan defendeu o território %s do clan %s!",DOF2_GetString(FormatTerri(terrid),"Nome"),DOF2_GetString(FormatGang(ataque),"Nome"));
					        for(new i=0;i<MAX_PLAYERS;i++)
						    	if(IsPlayerConnected(i))
		        					if(GetGang(i)==defesa)
		        					    SendClientMessage(i,verde,fd);
					        format(fd,128,"[CLAN] Seu clan falhou ao atacar ao território %s do clan %s!",DOF2_GetString(FormatTerri(terrid),"Nome"),DOF2_GetString(FormatGang(defesa),"Nome"));
					        for(new i=0;i<MAX_PLAYERS;i++)
						    	if(IsPlayerConnected(i))
		        					if(GetGang(i)==ataque)
		        					    SendClientMessage(i,vermelho,fd);
					    }
					}
					else
					{
					    new tempom,tempos;
					    tempom = TempoR[terrid]/60;
					    tempos = TempoR[terrid]-tempom*60;
					    new ff[128];
						if(tempos<10) format(ff,128,"~w~== GUERRA DE CLANS ==~n~~b~%s ~w~x ~r~%s~n~~y~%d ~w~x ~y~%d~n~~g~%d:0%d",DOF2_GetString(FormatGang(ataque),"Nome"),DOF2_GetString(FormatGang(defesa),"Nome"),Pontos[terrid][0],Pontos[terrid][1],tempom,tempos);
						else  format(ff,128,"~w~== GUERRA DE CLANS ==~n~~b~%s ~w~x ~r~%s~n~~y~%d ~w~x ~y~%d~n~~g~%d:%d",DOF2_GetString(FormatGang(ataque),"Nome"),DOF2_GetString(FormatGang(defesa),"Nome"),Pontos[terrid][0],Pontos[terrid][1],tempom,tempos);
						TextDrawSetString(TxtGuerra[terrid],ff);
					}
				}
			}
	}
}

forward Textdraw();
public Textdraw()
{
	new txt[128],nomegg[32];
	for(new i=0;i<MAX_PLAYERS;i++)
	    if(IsPlayerConnected(i))
	    {
	        new terrid=GetPlayerTerri(i);
	        new gangid=DOF2_GetInt(FormatTerri(terrid),"Gang");
	        if(gangid==0) nomegg="Nenhum";
	        else format(nomegg,32,"%s",DOF2_GetString(FormatGang(gangid),"Nome"));
	        format(txt,128,"~b~Territorio: ~w~%s~n~~b~Clan dominante: ~w~%s~n~~b~Dinheiro: ~w~R$%d",DOF2_GetString(FormatTerri(terrid),"Nome"),nomegg,DOF2_GetInt(FormatTerri(terrid),"Grana"));
	        TextDrawSetString(TxtTerri[i],txt);
	        if(terrid!=-1)
	        {
		        TextDrawHideForPlayer(i,TxtTerri[i]);
		    	TextDrawShowForPlayer(i,TxtTerri[i]);
		    	if(TerriGuerra[terrid]!=0)
				{
	   				TextDrawHideForPlayer(i,TxtGuerra[terrid]);
					TextDrawShowForPlayer(i,TxtGuerra[terrid]);
				}
			}
			else
			{
			    TextDrawHideForPlayer(i,TxtTerri[i]);
			    for(new e=1;e<MAX_TERRIS;e++)
			    	TextDrawHideForPlayer(i,TxtGuerra[e]);
			}
	    }
}
